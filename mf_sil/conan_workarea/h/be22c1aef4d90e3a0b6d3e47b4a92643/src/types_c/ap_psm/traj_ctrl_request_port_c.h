//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef AP_PSM_TRAJ_CTRL_REQUEST_PORT_C_H_
#define AP_PSM_TRAJ_CTRL_REQUEST_PORT_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "ap_psm/driving_mode_trc_c.h"
#include "Platform_Types.h"
#include "ap_psm/motion_control_request_type_c.h"
#include "ap_psm/driver_in_out_request_type_c.h"
#include "eco/memset_c.h"

/// Control commands from Parking State Machine to Trajectory Control.
typedef struct
{
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ECO_SignalHeader sSigHeader;
    ///@range{0,3}
    ///Define the requested driving mode. Only in the modeÂ "FOLLOW_TRAJ" the requested trajectory will be used as input for the trajectory control.
    AP_PSM_DrivingModeTRC drivingModeReq_nu;
    ///Control command for the activation/deactivation of the trajectory control (automatic vehicle guidance).
    boolean trajCtrlActive_nu;
    ///@unit{boolean}
    ///Triggers an emergency braking intervention.
    boolean emergencyBrakeRequest;
    ///Type of requests to the Motion Controller .
    AP_PSM_MotionControlRequestType MotionControlRequestType_nu;
    ///Type of requests based on driver Inside or outside.
    AP_PSM_DriverInOutRequestType driverInOutRequestType_nu;
} AP_PSM_TrajCtrlRequestPort;

inline AP_PSM_TrajCtrlRequestPort create_AP_PSM_TrajCtrlRequestPort(void)
{
  AP_PSM_TrajCtrlRequestPort m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  return m;
}

#endif // AP_PSM_TRAJ_CTRL_REQUEST_PORT_C_H_
