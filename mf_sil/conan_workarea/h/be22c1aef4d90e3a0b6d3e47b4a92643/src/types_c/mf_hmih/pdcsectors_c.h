//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef MF_HMIH_PDCSECTORS_C_H_
#define MF_HMIH_PDCSECTORS_C_H_

#include "mf_hmih/pdcsector_info_c.h"
#include "Platform_Types.h"
#include "eco/memset_c.h"

/// Information for the PDC sectors
typedef struct
{
    ///@unit{0}
    ///Information for the PDC sectors from the left side (numbering is done from front towards rear)
    MF_HMIH_PDCSectorInfo left[4];
    ///@unit{0}
    ///Information for the PDC sectors from the right side (numbering is done from front towards rear)
    MF_HMIH_PDCSectorInfo right[4];
    ///@unit{0}
    ///Information for the PDC sectors from the front (numbering is done from left side towards right side)
    MF_HMIH_PDCSectorInfo front[4];
    ///@unit{0}
    ///Information for the PDC sectors from the rear (numbering is done from left side towards right side)
    MF_HMIH_PDCSectorInfo rear[4];
    ///The x coordinates of the inner sectors contour
    float32 PDC_P_SECTOR_INNER_COORDS_X_M[16];
    ///The y coordinates of the inner sectors contour
    float32 PDC_P_SECTOR_INNER_COORDS_Y_M[16];
    ///The x coordinates of the outer sectors contour
    float32 PDC_P_SECTOR_OUTER_COORDS_X_M[16];
    ///The y coordinates of the outer sectors contour
    float32 PDC_P_SECTOR_OUTER_COORDS_Y_M[16];
} MF_HMIH_PDCSectors;

inline MF_HMIH_PDCSectors create_MF_HMIH_PDCSectors(void)
{
  MF_HMIH_PDCSectors m;
  (void) ECO_memset (&m, 0, sizeof(m));
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.left) / sizeof(m.left[0])); ++i)
    {
      m.left[i] = create_MF_HMIH_PDCSectorInfo();
    }
  }
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.right) / sizeof(m.right[0])); ++i)
    {
      m.right[i] = create_MF_HMIH_PDCSectorInfo();
    }
  }
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.front) / sizeof(m.front[0])); ++i)
    {
      m.front[i] = create_MF_HMIH_PDCSectorInfo();
    }
  }
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.rear) / sizeof(m.rear[0])); ++i)
    {
      m.rear[i] = create_MF_HMIH_PDCSectorInfo();
    }
  }
  return m;
}

#endif // MF_HMIH_PDCSECTORS_C_H_
