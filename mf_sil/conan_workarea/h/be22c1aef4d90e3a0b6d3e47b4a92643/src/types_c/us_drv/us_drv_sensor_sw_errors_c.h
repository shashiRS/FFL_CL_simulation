//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef US_DRV_US_DRV_SENSOR_SW_ERRORS_C_H_
#define US_DRV_US_DRV_SENSOR_SW_ERRORS_C_H_

#include "us_drv/us_drv_error_status_c.h"
#include "Platform_Types.h"
#include "eco/memset_c.h"

typedef struct
{
    US_DRV_UsDrvErrorStatus sensorInitTimeout;
    uint8 sensorInitTimeoutDetails;
    US_DRV_UsDrvErrorStatus sensorFwVersionIncompatible;
    US_DRV_UsDrvErrorStatus sensorHwVersionIncompatible;
    US_DRV_UsDrvErrorStatus sensorInitFiringSchemeSendFail;
    US_DRV_UsDrvErrorStatus sensorInitReceivingSchemeSendFail;
    US_DRV_UsDrvErrorStatus sensorInitBusError;
    US_DRV_UsDrvErrorStatus sensorInitScodeIncorrect;
    US_DRV_UsDrvErrorStatus sensorPdcmCommTimeout;
    US_DRV_UsDrvErrorStatus unexpectedMeasModeRecfg;
} US_DRV_UsDrvSensorSwErrors;

inline US_DRV_UsDrvSensorSwErrors create_US_DRV_UsDrvSensorSwErrors(void)
{
  US_DRV_UsDrvSensorSwErrors m;
  (void) ECO_memset (&m, 0, sizeof(m));
  return m;
}

#endif // US_DRV_US_DRV_SENSOR_SW_ERRORS_C_H_
