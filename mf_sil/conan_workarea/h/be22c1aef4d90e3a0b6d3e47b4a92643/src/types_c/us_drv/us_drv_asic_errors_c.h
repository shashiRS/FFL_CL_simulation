//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef US_DRV_US_DRV_ASIC_ERRORS_C_H_
#define US_DRV_US_DRV_ASIC_ERRORS_C_H_

#include "us_drv/us_drv_asic_status_errors_c.h"
#include "us_drv/us_drv_spi_comm_errors_c.h"
#include "us_drv/us_drv_dsi_comm_errors_c.h"
#include "us_drv/us_drv_crm_mode_errors_c.h"
#include "us_drv/us_drv_pdcm_frame_format_errors_c.h"
#include "us_drv/us_drv_dsi_packet_errors_c.h"
#include "eco/memset_c.h"

typedef struct
{
    US_DRV_UsDrvAsicStatusErrors asicStatusErrors;
    US_DRV_UsDrvSpiCommErrors spiCommErrors;
    US_DRV_UsDrvDsiCommErrors dsiCommErrors[2];
    US_DRV_UsDrvCrmModeErrors crmModeErrors[2];
    US_DRV_UsDrvPdcmFrameFormatErrors pdcmFrameFormatErrors[2];
    US_DRV_UsDrvDsiPacketErrors dsiPacketErrors[2];
} US_DRV_UsDrvAsicErrors;

inline US_DRV_UsDrvAsicErrors create_US_DRV_UsDrvAsicErrors(void)
{
  US_DRV_UsDrvAsicErrors m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.asicStatusErrors = create_US_DRV_UsDrvAsicStatusErrors();
  m.spiCommErrors = create_US_DRV_UsDrvSpiCommErrors();
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.dsiCommErrors) / sizeof(m.dsiCommErrors[0])); ++i)
    {
      m.dsiCommErrors[i] = create_US_DRV_UsDrvDsiCommErrors();
    }
  }
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.crmModeErrors) / sizeof(m.crmModeErrors[0])); ++i)
    {
      m.crmModeErrors[i] = create_US_DRV_UsDrvCrmModeErrors();
    }
  }
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.pdcmFrameFormatErrors) / sizeof(m.pdcmFrameFormatErrors[0])); ++i)
    {
      m.pdcmFrameFormatErrors[i] = create_US_DRV_UsDrvPdcmFrameFormatErrors();
    }
  }
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.dsiPacketErrors) / sizeof(m.dsiPacketErrors[0])); ++i)
    {
      m.dsiPacketErrors[i] = create_US_DRV_UsDrvDsiPacketErrors();
    }
  }
  return m;
}

#endif // US_DRV_US_DRV_ASIC_ERRORS_C_H_
