//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef AP_TP_PARKING_BOX_DEBUG_INFO_C_H_
#define AP_TP_PARKING_BOX_DEBUG_INFO_C_H_

#include "ap_tp/simple_debug_parking_box_c.h"
#include "ap_tp/delimiter_distances_c.h"
#include "Platform_Types.h"
#include "eco/memset_c.h"

/// 
typedef struct
{
    ///@unit{nu}
    ///Max parking box (minimal distance to surroundings) @min: 0 @max: 0 @unit: nu
    AP_TP_SimpleDebugParkingBox maxParkingBox;
    ///@unit{nu}
    ///Comfort parking box (greater distance to surroundings) @min: 0 @max: 0 @unit: nu
    AP_TP_SimpleDebugParkingBox comfParkingBox;
    ///@unit{nu}
    ///Distances to keep from each delimiter @min: 0 @max: 0 @unit: nu
    AP_TP_DelimiterDistances delimiterDistances;
    ///@range{-3.14,3.14}
    ///@unit{Radian}
    ///Yaw angle of the target pose @min: -3.14 @max: 3.14 @unit: Radian
    float32 yawAngle_rad;
    ///@unit{m}
    ///X-position of the target pose @min: 0 @max: 0 @unit: m
    float32 targetPosX_m;
    ///@unit{m}
    ///Y-position of the target pose @min: 0 @max: 0 @unit: m
    float32 targetPosY_m;
    ///@range{0,1}
    ///@unit{boolean}
    ///Whether the left parking box edge is the front edge (depends on road side, traffic side and wether street is a one-way road) @min: 0 @max: 1 @unit: boolean
    boolean leftEdgeIsFront_nu;
    ///@range{0,1}
    ///@unit{boolean}
    ///Whether the parking box was resized successfully into a max- and comfParkingBox @min: 0 @max: 1 @unit: boolean
    boolean isResized_nu;
    ///@range{0,1}
    ///@unit{boolean}
    ///Whether the yaw angle was defined successfully @min: 0 @max: 1 @unit: boolean
    boolean hasAngle_nu;
    ///@range{0,1}
    ///@unit{boolean}
    ///Whether the position was defined successfully @min: 0 @max: 1 @unit: boolean
    boolean hasPosition_nu;
} AP_TP_ParkingBoxDebugInfo;

inline AP_TP_ParkingBoxDebugInfo create_AP_TP_ParkingBoxDebugInfo(void)
{
  AP_TP_ParkingBoxDebugInfo m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.maxParkingBox = create_AP_TP_SimpleDebugParkingBox();
  m.comfParkingBox = create_AP_TP_SimpleDebugParkingBox();
  m.delimiterDistances = create_AP_TP_DelimiterDistances();
  return m;
}

#endif // AP_TP_PARKING_BOX_DEBUG_INFO_C_H_
