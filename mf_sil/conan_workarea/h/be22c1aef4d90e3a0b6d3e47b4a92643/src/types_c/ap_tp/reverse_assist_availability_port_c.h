//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef AP_TP_REVERSE_ASSIST_AVAILABILITY_PORT_C_H_
#define AP_TP_REVERSE_ASSIST_AVAILABILITY_PORT_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "Platform_Types.h"
#include "eco/memset_c.h"

/// 
typedef struct
{
    ///@unit{eco.AlgoInterfaceVersionNumber}
    ///
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ///@unit{eco.SignalHeader}
    ///
    ECO_SignalHeader sSigHeader;
    ///@range{0,1}
    ///@unit{nu}
    ///indicator signalizing whether a Reverse Assist path is available @min: 0 @max: 1 @unit: nu
    boolean pathAvailable;
    ///@range{0,150}
    ///@unit{m}
    ///length of the currently stored Reverse Assist path @min: 0 @max: 150 @unit: m
    float32 pathLength_m;
} AP_TP_ReverseAssistAvailabilityPort;

inline AP_TP_ReverseAssistAvailabilityPort create_AP_TP_ReverseAssistAvailabilityPort(void)
{
  AP_TP_ReverseAssistAvailabilityPort m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  m.pathAvailable = 0;
  return m;
}

#endif // AP_TP_REVERSE_ASSIST_AVAILABILITY_PORT_C_H_
