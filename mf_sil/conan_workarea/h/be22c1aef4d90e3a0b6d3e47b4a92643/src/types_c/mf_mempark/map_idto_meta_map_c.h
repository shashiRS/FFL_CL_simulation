//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef MF_MEMPARK_MAP_IDTO_META_MAP_C_H_
#define MF_MEMPARK_MAP_IDTO_META_MAP_C_H_

#include "Platform_Types.h"
#include "mf_mempark/meta_map_c.h"
#include "eco/memset_c.h"

/// This structure represents a key-value pair where a Map ID is associated with its corresponding MetaMap.
typedef struct
{
    uint8 mapID;
    MF_MEMPARK_MetaMap metaMap;
} MF_MEMPARK_MapIDToMetaMap;

inline MF_MEMPARK_MapIDToMetaMap create_MF_MEMPARK_MapIDToMetaMap(void)
{
  MF_MEMPARK_MapIDToMetaMap m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.metaMap = create_MF_MEMPARK_MetaMap();
  return m;
}

#endif // MF_MEMPARK_MAP_IDTO_META_MAP_C_H_
