//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef MF_MEMPARK_SYSTEM_DEFINED_POSE_PORT_C_H_
#define MF_MEMPARK_SYSTEM_DEFINED_POSE_PORT_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "Platform_Types.h"
#include "lsm_geoml/pose_pod_c.h"
#include "mf_mempark/system_defined_pose_side_c.h"
#include "mf_mempark/system_defined_pose_type_c.h"
#include "eco/memset_c.h"

/// Port containing the information of a pose with was saved by the system. This information can be used to park to this pose using the AUP stack
typedef struct
{
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ECO_SignalHeader sSigHeader;
    boolean valid;
    uint8 targetPoseID;
    LSM_GEOML_Pose_POD currentEgoInReference;
    LSM_GEOML_Pose_POD targetPoseInReference;
    float32 curvature_1pm;
    MF_MEMPARK_SystemDefinedPoseSide side;
    MF_MEMPARK_SystemDefinedPoseType type;
} MF_MEMPARK_SystemDefinedPosePort;

inline MF_MEMPARK_SystemDefinedPosePort create_MF_MEMPARK_SystemDefinedPosePort(void)
{
  MF_MEMPARK_SystemDefinedPosePort m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  m.currentEgoInReference = create_LSM_GEOML_Pose_POD();
  m.targetPoseInReference = create_LSM_GEOML_Pose_POD();
  return m;
}

#endif // MF_MEMPARK_SYSTEM_DEFINED_POSE_PORT_C_H_
