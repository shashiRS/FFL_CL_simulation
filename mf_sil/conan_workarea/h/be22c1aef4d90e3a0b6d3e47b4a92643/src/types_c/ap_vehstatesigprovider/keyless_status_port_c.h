//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef AP_VEHSTATESIGPROVIDER_KEYLESS_STATUS_PORT_C_H_
#define AP_VEHSTATESIGPROVIDER_KEYLESS_STATUS_PORT_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "ap_vehstatesigprovider/key_fob_user_action_c.h"
#include "Platform_Types.h"
#include "ap_vehstatesigprovider/key_fob_in_range_c.h"
#include "eco/memset_c.h"

/// Signals from Keyless Go (VW: Kessy) ECU
typedef struct
{
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ECO_SignalHeader sSigHeader;
    ///User action from the key fob
    AP_VEHSTATESIGPROVIDER_KeyFobUserAction keyFobUserAction;
    ///@unit{nu}
    ///@range{0,15}
    ///Will be increased by one each time the key communicates with HFM ( when the key is in the range)
    uint8 keyFobButtonAliveCounter;
    ///@range{0,1}
    ///information regarding the location of the key
    AP_VEHSTATESIGPROVIDER_KeyFobInRange keyFobInRange;
    ///@range{0,15}
    ///Will be increased with each can message  (has to be dropped because it will be checked and abstracted on higher level)
    uint8 keylessStatusPortCANAlive_nu;
} AP_VEHSTATESIGPROVIDER_KeylessStatusPort;

inline AP_VEHSTATESIGPROVIDER_KeylessStatusPort create_AP_VEHSTATESIGPROVIDER_KeylessStatusPort(void)
{
  AP_VEHSTATESIGPROVIDER_KeylessStatusPort m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  return m;
}

#endif // AP_VEHSTATESIGPROVIDER_KEYLESS_STATUS_PORT_C_H_
