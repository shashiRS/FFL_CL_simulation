//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef MF_WHLPROTECTPROC_WHPPROC_OUTPUT_PORT_C_H_
#define MF_WHLPROTECTPROC_WHPPROC_OUTPUT_PORT_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "mf_whlprotectproc/whl_warning_level_c.h"
#include "Platform_Types.h"
#include "eco/memset_c.h"

/// Signals from Wheel Protection Processing containg the information about wheels warning levels
typedef struct
{
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ECO_SignalHeader sSigHeader;
    ///@range{0,4}
    ///Wheel warning level for each wheel. Positions front left: 0, front right: 1, rear left: 2; rear right: 3, to be defined in an enum.
    MF_WHLPROTECTPROC_WhlWarningLevel whlWarningLevel_nu[4];
    ///true - warnings (any wheel) present; false - warnings (any wheel) not present
    boolean whlWarningPresent_nu;
    ///PDCP error information
    boolean processingError_nu;
} MF_WHLPROTECTPROC_WHPProcOutputPort;

inline MF_WHLPROTECTPROC_WHPProcOutputPort create_MF_WHLPROTECTPROC_WHPProcOutputPort(void)
{
  MF_WHLPROTECTPROC_WHPProcOutputPort m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  return m;
}

#endif // MF_WHLPROTECTPROC_WHPPROC_OUTPUT_PORT_C_H_
