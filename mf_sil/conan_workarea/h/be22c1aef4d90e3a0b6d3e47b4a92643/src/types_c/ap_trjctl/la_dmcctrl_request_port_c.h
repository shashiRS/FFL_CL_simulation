//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef AP_TRJCTL_LA_DMCCTRL_REQUEST_PORT_C_H_
#define AP_TRJCTL_LA_DMCCTRL_REQUEST_PORT_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "Platform_Types.h"
#include "ap_trjctl/la_dmcctrl_request_interface_type_c.h"
#include "ap_trjctl/la_dmcctrl_request_source_type_c.h"
#include "eco/memset_c.h"

/// Request to underlaid Lateral Dynamic Motion Control (LaDMC).
typedef struct
{
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ECO_SignalHeader sSigHeader;
    ///@unit{rad}
    ///@range{-15,15}
    ///Requested value for the steering wheel angle.
    float32 steerWheelAngReq_rad;
    ///@unit{rad}
    ///@range{-0.8,0.8}
    ///Requested value for the front steer angle.
    float32 frontSteerAngReq_rad;
    ///@unit{rad}
    ///@range{-0.8,0.8}
    ///Requested value for the rear steer angle.
    float32 rearSteerAngReq_rad;
    ///@unit{Nm}
    ///@range{-8,8}
    ///Requested value for the front steer torque
    float32 frontSteerTorqueReq_Nm;
    ///@unit{Nm}
    ///@range{-8,8}
    ///Requested value for the rear steer torque
    float32 rearSteerTorqueReq_Nm;
    ///@unit{1/m}
    ///@range{-0.3,0.3}
    ///Requested value for the curvature at the middle of the rear axle. (*used as reference value in case of curvature control)
    float32 curvatureReq_1pm;
    ///@range{0,8}
    ///Type of the LaDMC control request: Used to select control signal of laDMCCtrlRequestPort (torque, steer wheel angle, curvature,...) in receiving component.
    AP_TRJCTL_LaDMCCtrlRequestInterfaceType laDMCCtrlRequestInterface_nu;
    ///@range{0,7}
    ///Source of the LaDMC control request
    AP_TRJCTL_LaDMCCtrlRequestSourceType laDMCCtrlRequestSource_nu;
    ///Control command for the activation/deactivation of the Lateral dynamic motion control. (true==activate; false==deactivate)
    boolean laDMCCtrlRequest_nu;
} AP_TRJCTL_LaDMCCtrlRequestPort;

inline AP_TRJCTL_LaDMCCtrlRequestPort create_AP_TRJCTL_LaDMCCtrlRequestPort(void)
{
  AP_TRJCTL_LaDMCCtrlRequestPort m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  m.laDMCCtrlRequestInterface_nu = AP_TRJCTL_LA_DMCCTRL_REQUEST_INTERFACE_TYPE_MAX_NUM_LADMC_REQUEST_INTERFACE_TYPE;
  return m;
}

#endif // AP_TRJCTL_LA_DMCCTRL_REQUEST_PORT_C_H_
