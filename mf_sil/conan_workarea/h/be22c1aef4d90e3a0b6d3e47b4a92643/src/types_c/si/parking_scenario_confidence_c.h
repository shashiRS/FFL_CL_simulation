//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef SI_PARKING_SCENARIO_CONFIDENCE_C_H_
#define SI_PARKING_SCENARIO_CONFIDENCE_C_H_

#include "Platform_Types.h"
#include "eco/memset_c.h"

/// @brief The confidence values for the different parking scenarios. The sum of the different confidence might not add up to 100%.
typedef struct
{
    ///@range{0,100}
    ///@unit{%}
    ///@brief Defines the confidence in the parking scenario being perpendicular.
    uint8 perpendicular_perc;
    ///@range{0,100}
    ///@unit{%}
    ///@brief Defines the confidence in the parking scenario being parallel.
    uint8 parallel_perc;
    ///@range{0,100}
    ///@unit{%}
    ///@brief Defines the confidence in the parking scenario being angled.
    uint8 angled_perc;
} SI_ParkingScenarioConfidence;

inline SI_ParkingScenarioConfidence create_SI_ParkingScenarioConfidence(void)
{
  SI_ParkingScenarioConfidence m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.perpendicular_perc = 0U;
  m.parallel_perc = 0U;
  m.angled_perc = 0U;
  return m;
}

#endif // SI_PARKING_SCENARIO_CONFIDENCE_C_H_
