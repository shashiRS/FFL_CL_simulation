//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef US_PROCESSING_US_PROCESSING_POINT_C_H_
#define US_PROCESSING_US_PROCESSING_POINT_C_H_

#include "Platform_Types.h"
#include "eco/memset_c.h"

typedef struct
{
    ///@range{0,18446744073709551615}
    ///@unit{us}
    ///Timestamp when point detection occurred
    uint64 timestamp_us;
    ///@range{-20,20}
    ///@unit{m}
    ///X position of point, cartesian coordinate system DIN 8855 middle of rear axix XY plane parallel to road surface
    float32 xPosition_m;
    ///@range{-20,20}
    ///@unit{m}
    ///Y position of point, cartesian coordinate system DIN 8855 middle of rear axix XY plane parallel to road surface
    float32 yPosition_m;
    ///@range{0.0F,400.0F}
    ///@unit{m^2}
    ///Variance of X position
    float32 varXposition_m;
    ///@range{0.0F,400.0F}
    ///@unit{m^2}
    ///Variance of Y position
    float32 varYposition_m;
    ///@range{-400.0F,400.0F}
    ///@unit{m^2}
    ///cross-covariance XY
    float32 xyPositionCovar_m;
    ///@range{0,2Π}
    ///@unit{Radians}
    ///Reflection Point Direction
    float32 direction;
    ///@range{0,2Π^2}
    ///@unit{Radians^2}
    ///Variance of Reflection Point Direction
    float32 directionVariance;
    ///@range{0.0,1000.0}
    ///@unit{nu}
    ///Track curvature at this point
    float32 trackCurvature;
    ///@range{0.0,1000.0}
    ///@unit{nu}
    ///Track curvature variance
    float32 varTrackCurvature;
    ///@range{0.0F,1.0F}
    ///@unit{nu}
    ///Probability that this point belongs to High Object
    float32 probabilityHigh;
    ///@range{0.0F,1.0F}
    ///@unit{nu}
    ///Confidence about the height information
    float32 heightConfidence;
    ///@range{-20,20}
    ///@unit{m}
    ///Sensor location in X Direction in world coordindefines at the measurement time
    float32 xSensorPos_m;
    ///@range{-20,20}
    ///@unit{m}
    ///Sensor location in Y Direction in world coordindefines at the measurement time
    float32 ySensorPos_m;
    ///@range{0,2Π}
    ///@unit{rad}
    ///Sensor direction in world coordinates defined at the measurement time
    float32 sensorDirection;
    ///@range{0,3584}
    ///@unit{nu}
    ///Sensor Mask defines which sensors contributed in this point generation
    uint32 sensorMask;
    ///@range{0,14}
    ///@unit{m}
    ///Raw measured range from sensor to the reflection point of the object
    float32 rawMeasRange_m;
    ///@range{0,4294967295}
    ///@unit{nu}
    ///Track id which this point associated to
    uint32 trackId;
    ///@range{0,4294967295}
    ///@unit{nu}
    ///Point iterator in tracker
    uint32 pointCountInTrack;
} US_PROCESSING_UsProcessingPoint;

inline US_PROCESSING_UsProcessingPoint create_US_PROCESSING_UsProcessingPoint(void)
{
  US_PROCESSING_UsProcessingPoint m;
  (void) ECO_memset (&m, 0, sizeof(m));
  return m;
}

#endif // US_PROCESSING_US_PROCESSING_POINT_C_H_
