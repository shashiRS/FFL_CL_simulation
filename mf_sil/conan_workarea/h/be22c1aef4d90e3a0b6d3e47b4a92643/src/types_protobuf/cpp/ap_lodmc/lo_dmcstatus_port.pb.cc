// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_lodmc/lo_dmcstatus_port.proto

#include "ap_lodmc/lo_dmcstatus_port.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoDMCStatusPort_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsignal_5fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto;
namespace pb {
namespace ap_lodmc {
namespace lo_dmcstatus_port {
class LoDMCStatusPortDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoDMCStatusPort> _instance;
} _LoDMCStatusPort_default_instance_;
class LoDMCStatusPort_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoDMCStatusPort_array_port> _instance;
} _LoDMCStatusPort_array_port_default_instance_;
}  // namespace lo_dmcstatus_port
}  // namespace ap_lodmc
}  // namespace pb
static void InitDefaultsscc_info_LoDMCStatusPort_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_lodmc::lo_dmcstatus_port::_LoDMCStatusPort_default_instance_;
    new (ptr) ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoDMCStatusPort_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LoDMCStatusPort_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto}, {
      &scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto.base,}};

static void InitDefaultsscc_info_LoDMCStatusPort_array_port_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_lodmc::lo_dmcstatus_port::_LoDMCStatusPort_array_port_default_instance_;
    new (ptr) ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoDMCStatusPort_array_port_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LoDMCStatusPort_array_port_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto}, {
      &scc_info_LoDMCStatusPort_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, uiversionnumber_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, ssigheader_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, dynamicslope_perc_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, dynamicslopeaccuracy_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, lodmcsystemstate_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, maneuveringfinished_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, longitudinalcontrolactivestatus_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, standstillholdcur_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort, standstillsecurecur_nu_),
  4,
  0,
  2,
  8,
  3,
  7,
  1,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort)},
  { 23, 29, sizeof(::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_lodmc::lo_dmcstatus_port::_LoDMCStatusPort_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_lodmc::lo_dmcstatus_port::_LoDMCStatusPort_array_port_default_instance_),
};

const char descriptor_table_protodef_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n ap_lodmc/lo_dmcstatus_port.proto\022\035pb.a"
  "p_lodmc.lo_dmcstatus_port\032\027eco/signal_he"
  "ader.proto\032\035ap_lodmc/slope_accuracy.prot"
  "o\032!ap_lodmc/lo_dmcsystem_state.proto\032#ap"
  "_lodmc/maneuvering_finished.proto\0321ap_lo"
  "dmc/longitudinal_control_active_status.p"
  "roto\"\263\004\n\017LoDMCStatusPort\022\030\n\017uiVersionNum"
  "ber\030\314\020 \001(\r\0227\n\nsSigHeader\030\211\010 \001(\0132\".pb.eco"
  ".signal_header.SignalHeader\022\032\n\021dynamicSl"
  "ope_perc\030\256\005 \001(\002\022K\n\027dynamicSlopeAccuracy_"
  "nu\030\223\033 \001(\0162).pb.ap_lodmc.slope_accuracy.S"
  "lopeAccuracy\022N\n\023loDMCSystemState_nu\030\307\n \001"
  "(\01620.pb.ap_lodmc.lo_dmcsystem_state.LoDM"
  "CSystemState\022V\n\026maneuveringFinished_nu\030\313"
  "\031 \001(\01625.pb.ap_lodmc.maneuvering_finished"
  ".maneuveringFinished\022|\n\"longitudinalCont"
  "rolActiveStatus_nu\030\346\033 \001(\0162O.pb.ap_lodmc."
  "longitudinal_control_active_status.longi"
  "tudinalControlActiveStatus\022\035\n\024standstill"
  "HoldCur_nu\030\341\022 \001(\010\022\037\n\026standstillSecureCur"
  "_nu\030\343\031 \001(\010\"[\n\032LoDMCStatusPort_array_port"
  "\022=\n\004data\030\203\027 \003(\0132..pb.ap_lodmc.lo_dmcstat"
  "us_port.LoDMCStatusPort"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto_deps[5] = {
  &::descriptor_table_ap_5flodmc_2flo_5fdmcsystem_5fstate_2eproto,
  &::descriptor_table_ap_5flodmc_2flongitudinal_5fcontrol_5factive_5fstatus_2eproto,
  &::descriptor_table_ap_5flodmc_2fmaneuvering_5ffinished_2eproto,
  &::descriptor_table_ap_5flodmc_2fslope_5faccuracy_2eproto,
  &::descriptor_table_eco_2fsignal_5fheader_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto_sccs[2] = {
  &scc_info_LoDMCStatusPort_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto.base,
  &scc_info_LoDMCStatusPort_array_port_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto_once;
static bool descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto = {
  &descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto_initialized, descriptor_table_protodef_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto, "ap_lodmc/lo_dmcstatus_port.proto", 903,
  &descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto_once, descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto_sccs, descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto_deps, 2, 5,
  schemas, file_default_instances, TableStruct_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto::offsets,
  file_level_metadata_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto, 2, file_level_enum_descriptors_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto, file_level_service_descriptors_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto), true);
namespace pb {
namespace ap_lodmc {
namespace lo_dmcstatus_port {

// ===================================================================

void LoDMCStatusPort::InitAsDefaultInstance() {
  ::pb::ap_lodmc::lo_dmcstatus_port::_LoDMCStatusPort_default_instance_._instance.get_mutable()->ssigheader_ = const_cast< ::pb::eco::signal_header::SignalHeader*>(
      ::pb::eco::signal_header::SignalHeader::internal_default_instance());
}
class LoDMCStatusPort::_Internal {
 public:
  using HasBits = decltype(std::declval<LoDMCStatusPort>()._has_bits_);
  static void set_has_uiversionnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::pb::eco::signal_header::SignalHeader& ssigheader(const LoDMCStatusPort* msg);
  static void set_has_ssigheader(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dynamicslope_perc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_dynamicslopeaccuracy_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_lodmcsystemstate_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_maneuveringfinished_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_longitudinalcontrolactivestatus_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_standstillholdcur_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_standstillsecurecur_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::pb::eco::signal_header::SignalHeader&
LoDMCStatusPort::_Internal::ssigheader(const LoDMCStatusPort* msg) {
  return *msg->ssigheader_;
}
void LoDMCStatusPort::clear_ssigheader() {
  if (ssigheader_ != nullptr) ssigheader_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
LoDMCStatusPort::LoDMCStatusPort()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
}
LoDMCStatusPort::LoDMCStatusPort(const LoDMCStatusPort& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_ssigheader()) {
    ssigheader_ = new ::pb::eco::signal_header::SignalHeader(*from.ssigheader_);
  } else {
    ssigheader_ = nullptr;
  }
  ::memcpy(&longitudinalcontrolactivestatus_nu_, &from.longitudinalcontrolactivestatus_nu_,
    static_cast<size_t>(reinterpret_cast<char*>(&dynamicslopeaccuracy_nu_) -
    reinterpret_cast<char*>(&longitudinalcontrolactivestatus_nu_)) + sizeof(dynamicslopeaccuracy_nu_));
  // @@protoc_insertion_point(copy_constructor:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
}

void LoDMCStatusPort::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoDMCStatusPort_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto.base);
  ::memset(&ssigheader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dynamicslopeaccuracy_nu_) -
      reinterpret_cast<char*>(&ssigheader_)) + sizeof(dynamicslopeaccuracy_nu_));
}

LoDMCStatusPort::~LoDMCStatusPort() {
  // @@protoc_insertion_point(destructor:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
  SharedDtor();
}

void LoDMCStatusPort::SharedDtor() {
  if (this != internal_default_instance()) delete ssigheader_;
}

void LoDMCStatusPort::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoDMCStatusPort& LoDMCStatusPort::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoDMCStatusPort_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto.base);
  return *internal_default_instance();
}


void LoDMCStatusPort::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(ssigheader_ != nullptr);
    ssigheader_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&longitudinalcontrolactivestatus_nu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&maneuveringfinished_nu_) -
        reinterpret_cast<char*>(&longitudinalcontrolactivestatus_nu_)) + sizeof(maneuveringfinished_nu_));
  }
  dynamicslopeaccuracy_nu_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* LoDMCStatusPort::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional float dynamicSlope_perc = 686;
      case 686:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 117)) {
          _Internal::set_has_dynamicslope_perc(&has_bits);
          dynamicslope_perc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_ssigheader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_lodmc.lo_dmcsystem_state.LoDMCSystemState loDMCSystemState_nu = 1351;
      case 1351:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState_IsValid(val))) {
            _internal_set_lodmcsystemstate_nu(static_cast<::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1351, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 uiVersionNumber = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_uiversionnumber(&has_bits);
          uiversionnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool standstillHoldCur_nu = 2401;
      case 2401:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_standstillholdcur_nu(&has_bits);
          standstillholdcur_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_lodmc.maneuvering_finished.maneuveringFinished maneuveringFinished_nu = 3275;
      case 3275:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_lodmc::maneuvering_finished::maneuveringFinished_IsValid(val))) {
            _internal_set_maneuveringfinished_nu(static_cast<::pb::ap_lodmc::maneuvering_finished::maneuveringFinished>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3275, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bool standstillSecureCur_nu = 3299;
      case 3299:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_standstillsecurecur_nu(&has_bits);
          standstillsecurecur_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_lodmc.slope_accuracy.SlopeAccuracy dynamicSlopeAccuracy_nu = 3475;
      case 3475:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_lodmc::slope_accuracy::SlopeAccuracy_IsValid(val))) {
            _internal_set_dynamicslopeaccuracy_nu(static_cast<::pb::ap_lodmc::slope_accuracy::SlopeAccuracy>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3475, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_lodmc.longitudinal_control_active_status.longitudinalControlActiveStatus longitudinalControlActiveStatus_nu = 3558;
      case 3558:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus_IsValid(val))) {
            _internal_set_longitudinalcontrolactivestatus_nu(static_cast<::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3558, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoDMCStatusPort::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float dynamicSlope_perc = 686;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(686, this->_internal_dynamicslope_perc(), target);
  }

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::ssigheader(this), target, stream);
  }

  // optional .pb.ap_lodmc.lo_dmcsystem_state.LoDMCSystemState loDMCSystemState_nu = 1351;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1351, this->_internal_lodmcsystemstate_nu(), target);
  }

  // optional uint32 uiVersionNumber = 2124;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2124, this->_internal_uiversionnumber(), target);
  }

  // optional bool standstillHoldCur_nu = 2401;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2401, this->_internal_standstillholdcur_nu(), target);
  }

  // optional .pb.ap_lodmc.maneuvering_finished.maneuveringFinished maneuveringFinished_nu = 3275;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3275, this->_internal_maneuveringfinished_nu(), target);
  }

  // optional bool standstillSecureCur_nu = 3299;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3299, this->_internal_standstillsecurecur_nu(), target);
  }

  // optional .pb.ap_lodmc.slope_accuracy.SlopeAccuracy dynamicSlopeAccuracy_nu = 3475;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3475, this->_internal_dynamicslopeaccuracy_nu(), target);
  }

  // optional .pb.ap_lodmc.longitudinal_control_active_status.longitudinalControlActiveStatus longitudinalControlActiveStatus_nu = 3558;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3558, this->_internal_longitudinalcontrolactivestatus_nu(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
  return target;
}

size_t LoDMCStatusPort::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ssigheader_);
    }

    // optional .pb.ap_lodmc.longitudinal_control_active_status.longitudinalControlActiveStatus longitudinalControlActiveStatus_nu = 3558;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_longitudinalcontrolactivestatus_nu());
    }

    // optional float dynamicSlope_perc = 686;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 4;
    }

    // optional .pb.ap_lodmc.lo_dmcsystem_state.LoDMCSystemState loDMCSystemState_nu = 1351;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lodmcsystemstate_nu());
    }

    // optional uint32 uiVersionNumber = 2124;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uiversionnumber());
    }

    // optional bool standstillHoldCur_nu = 2401;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 + 1;
    }

    // optional bool standstillSecureCur_nu = 3299;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3 + 1;
    }

    // optional .pb.ap_lodmc.maneuvering_finished.maneuveringFinished maneuveringFinished_nu = 3275;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_maneuveringfinished_nu());
    }

  }
  // optional .pb.ap_lodmc.slope_accuracy.SlopeAccuracy dynamicSlopeAccuracy_nu = 3475;
  if (cached_has_bits & 0x00000100u) {
    total_size += 3 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_dynamicslopeaccuracy_nu());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoDMCStatusPort::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
  GOOGLE_DCHECK_NE(&from, this);
  const LoDMCStatusPort* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoDMCStatusPort>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
    MergeFrom(*source);
  }
}

void LoDMCStatusPort::MergeFrom(const LoDMCStatusPort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_ssigheader()->::pb::eco::signal_header::SignalHeader::MergeFrom(from._internal_ssigheader());
    }
    if (cached_has_bits & 0x00000002u) {
      longitudinalcontrolactivestatus_nu_ = from.longitudinalcontrolactivestatus_nu_;
    }
    if (cached_has_bits & 0x00000004u) {
      dynamicslope_perc_ = from.dynamicslope_perc_;
    }
    if (cached_has_bits & 0x00000008u) {
      lodmcsystemstate_nu_ = from.lodmcsystemstate_nu_;
    }
    if (cached_has_bits & 0x00000010u) {
      uiversionnumber_ = from.uiversionnumber_;
    }
    if (cached_has_bits & 0x00000020u) {
      standstillholdcur_nu_ = from.standstillholdcur_nu_;
    }
    if (cached_has_bits & 0x00000040u) {
      standstillsecurecur_nu_ = from.standstillsecurecur_nu_;
    }
    if (cached_has_bits & 0x00000080u) {
      maneuveringfinished_nu_ = from.maneuveringfinished_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_dynamicslopeaccuracy_nu(from._internal_dynamicslopeaccuracy_nu());
  }
}

void LoDMCStatusPort::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoDMCStatusPort::CopyFrom(const LoDMCStatusPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoDMCStatusPort::IsInitialized() const {
  return true;
}

void LoDMCStatusPort::InternalSwap(LoDMCStatusPort* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ssigheader_, other->ssigheader_);
  swap(longitudinalcontrolactivestatus_nu_, other->longitudinalcontrolactivestatus_nu_);
  swap(dynamicslope_perc_, other->dynamicslope_perc_);
  swap(lodmcsystemstate_nu_, other->lodmcsystemstate_nu_);
  swap(uiversionnumber_, other->uiversionnumber_);
  swap(standstillholdcur_nu_, other->standstillholdcur_nu_);
  swap(standstillsecurecur_nu_, other->standstillsecurecur_nu_);
  swap(maneuveringfinished_nu_, other->maneuveringfinished_nu_);
  swap(dynamicslopeaccuracy_nu_, other->dynamicslopeaccuracy_nu_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoDMCStatusPort::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoDMCStatusPort_array_port::InitAsDefaultInstance() {
}
class LoDMCStatusPort_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<LoDMCStatusPort_array_port>()._has_bits_);
};

LoDMCStatusPort_array_port::LoDMCStatusPort_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
}
LoDMCStatusPort_array_port::LoDMCStatusPort_array_port(const LoDMCStatusPort_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
}

void LoDMCStatusPort_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoDMCStatusPort_array_port_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto.base);
}

LoDMCStatusPort_array_port::~LoDMCStatusPort_array_port() {
  // @@protoc_insertion_point(destructor:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
  SharedDtor();
}

void LoDMCStatusPort_array_port::SharedDtor() {
}

void LoDMCStatusPort_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoDMCStatusPort_array_port& LoDMCStatusPort_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoDMCStatusPort_array_port_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto.base);
  return *internal_default_instance();
}


void LoDMCStatusPort_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* LoDMCStatusPort_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort data = 2947;
      case 2947:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoDMCStatusPort_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort data = 2947;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2947, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
  return target;
}

size_t LoDMCStatusPort_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort data = 2947;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoDMCStatusPort_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const LoDMCStatusPort_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoDMCStatusPort_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
    MergeFrom(*source);
  }
}

void LoDMCStatusPort_array_port::MergeFrom(const LoDMCStatusPort_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void LoDMCStatusPort_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoDMCStatusPort_array_port::CopyFrom(const LoDMCStatusPort_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoDMCStatusPort_array_port::IsInitialized() const {
  return true;
}

void LoDMCStatusPort_array_port::InternalSwap(LoDMCStatusPort_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoDMCStatusPort_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace lo_dmcstatus_port
}  // namespace ap_lodmc
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort* Arena::CreateMaybeMessage< ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port* Arena::CreateMaybeMessage< ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
