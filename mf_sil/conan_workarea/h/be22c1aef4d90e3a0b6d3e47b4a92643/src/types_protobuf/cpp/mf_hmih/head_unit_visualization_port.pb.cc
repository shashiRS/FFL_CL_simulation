// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/head_unit_visualization_port.proto

#include "mf_hmih/head_unit_visualization_port.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsignal_5fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HeadUnitVisualizationPort_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto;
namespace pb {
namespace mf_hmih {
namespace head_unit_visualization_port {
class HeadUnitVisualizationPortDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HeadUnitVisualizationPort> _instance;
} _HeadUnitVisualizationPort_default_instance_;
class HeadUnitVisualizationPort_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HeadUnitVisualizationPort_array_port> _instance;
} _HeadUnitVisualizationPort_array_port_default_instance_;
}  // namespace head_unit_visualization_port
}  // namespace mf_hmih
}  // namespace pb
static void InitDefaultsscc_info_HeadUnitVisualizationPort_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::head_unit_visualization_port::_HeadUnitVisualizationPort_default_instance_;
    new (ptr) ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HeadUnitVisualizationPort_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HeadUnitVisualizationPort_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto}, {
      &scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto.base,}};

static void InitDefaultsscc_info_HeadUnitVisualizationPort_array_port_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::head_unit_visualization_port::_HeadUnitVisualizationPort_array_port_default_instance_;
    new (ptr) ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HeadUnitVisualizationPort_array_port_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HeadUnitVisualizationPort_array_port_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto}, {
      &scc_info_HeadUnitVisualizationPort_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, uiversionnumber_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, ssigheader_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, screen_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, message_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apafeatureactivehu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahucurrentfeaturesstate_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apapreconditionscheck_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahucrossbutton_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahuparkingiconsgrayout_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahusvsiconsgrayout_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahuparkinsubfeaturestate_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahuparkoutsubfeaturestate_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahugarageparksubfeaturestate_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahusvssubfeaturestate_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahurasubfeaturestate_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahubvmsubfeaturestate_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apainteractionpausecount_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apainteractiontimer_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apaintrpausecondition_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort, apahuframeready_),
  12,
  0,
  7,
  4,
  10,
  2,
  9,
  16,
  15,
  8,
  1,
  17,
  19,
  18,
  13,
  14,
  3,
  6,
  5,
  11,
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 25, sizeof(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort)},
  { 45, 51, sizeof(::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::head_unit_visualization_port::_HeadUnitVisualizationPort_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::head_unit_visualization_port::_HeadUnitVisualizationPort_array_port_default_instance_),
};

const char descriptor_table_protodef_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*mf_hmih/head_unit_visualization_port.p"
  "roto\022\'pb.mf_hmih.head_unit_visualization"
  "_port\032\027eco/signal_header.proto\032\036mf_hmih/"
  "screen_head_unit.proto\032\033ap_psm_app/hmime"
  "ssage.proto\032%mf_hmih/hucurrent_feature_s"
  "tate.proto\032\035mf_hmih/hu_cross_button.prot"
  "o\032*mf_hmih/hu_park_in_sub_feature_state."
  "proto\032+mf_hmih/hu_park_out_sub_feature_s"
  "tate.proto\032.mf_hmih/hu_garage_park_sub_f"
  "eature_state.proto\032&mf_hmih/hu_svs_sub_f"
  "eature_state.proto\032%mf_hmih/hu_ra_sub_fe"
  "ature_state.proto\032&mf_hmih/hu_bvm_sub_fe"
  "ature_state.proto\032$mf_hmih/huintr_pause_"
  "condition.proto\032\034mf_hmih/hu_frame_ready."
  "proto\"\303\n\n\031HeadUnitVisualizationPort\022\030\n\017u"
  "iVersionNumber\030\314\020 \001(\r\0227\n\nsSigHeader\030\211\010 \001"
  "(\0132\".pb.eco.signal_header.SignalHeader\022\?"
  "\n\tscreen_nu\030\372\t \001(\0162+.pb.mf_hmih.screen_h"
  "ead_unit.ScreenHeadUnit\0229\n\nmessage_nu\030\217\007"
  " \001(\0162$.pb.ap_psm_app.hmimessage.HMIMessa"
  "ge\022\033\n\022apaFeatureActiveHU\030\211\016 \001(\010\022]\n\031apaHu"
  "CurrentFeaturesState\030\240\002 \001(\01629.pb.mf_hmih"
  ".hucurrent_feature_state.HUCurrentFeatur"
  "eState\022\036\n\025apaPreconditionsCheck\030\354\r \001(\r\022D"
  "\n\020apaHuCrossButton\030\255\026 \001(\0162).pb.mf_hmih.h"
  "u_cross_button.HuCrossButton\022!\n\030apaHuPar"
  "kingIconsGrayOut\030\237\025 \001(\r\022\035\n\024apaHuSVsIcons"
  "GrayOut\030\254\r \001(\r\022e\n\032apaHuParkInSubFeatureS"
  "tate\030\327\035 \001(\0162@.pb.mf_hmih.hu_park_in_sub_"
  "feature_state.HuParkInSubFeatureState\022h\n"
  "\033apaHuParkOutSubFeatureState\030\236\032 \001(\0162B.pb"
  ".mf_hmih.hu_park_out_sub_feature_state.H"
  "uParkOutSubFeatureState\022q\n\036apaHuGaragePa"
  "rkSubFeatureState\030\245\034 \001(\0162H.pb.mf_hmih.hu"
  "_garage_park_sub_feature_state.HuGarageP"
  "arkSubFeatureState\022[\n\027apaHuSVsSubFeature"
  "State\030\200\033 \001(\01629.pb.mf_hmih.hu_svs_sub_fea"
  "ture_state.HuSVsSubFeatureState\022X\n\026apaHu"
  "RaSubFeatureState\030\365\020 \001(\01627.pb.mf_hmih.hu"
  "_ra_sub_feature_state.HuRaSubFeatureStat"
  "e\022[\n\027apaHuBvmSubFeatureState\030\214\025 \001(\01629.pb"
  ".mf_hmih.hu_bvm_sub_feature_state.HuBvmS"
  "ubFeatureState\022!\n\030apaInteractionPauseCou"
  "nt\030\212\003 \001(\r\022\034\n\023apaInteractionTimer\030\220\t \001(\r\022"
  "W\n\025apaIntrPauseCondition\030\365\007 \001(\01627.pb.mf_"
  "hmih.huintr_pause_condition.HUIntrPauseC"
  "ondition\022A\n\017apaHuFrameReady\030\230\016 \001(\0162\'.pb."
  "mf_hmih.hu_frame_ready.HuFrameReady\"y\n$H"
  "eadUnitVisualizationPort_array_port\022Q\n\004d"
  "ata\030\340\013 \003(\0132B.pb.mf_hmih.head_unit_visual"
  "ization_port.HeadUnitVisualizationPort"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto_deps[13] = {
  &::descriptor_table_ap_5fpsm_5fapp_2fhmimessage_2eproto,
  &::descriptor_table_eco_2fsignal_5fheader_2eproto,
  &::descriptor_table_mf_5fhmih_2fhu_5fbvm_5fsub_5ffeature_5fstate_2eproto,
  &::descriptor_table_mf_5fhmih_2fhu_5fcross_5fbutton_2eproto,
  &::descriptor_table_mf_5fhmih_2fhu_5fframe_5fready_2eproto,
  &::descriptor_table_mf_5fhmih_2fhu_5fgarage_5fpark_5fsub_5ffeature_5fstate_2eproto,
  &::descriptor_table_mf_5fhmih_2fhu_5fpark_5fin_5fsub_5ffeature_5fstate_2eproto,
  &::descriptor_table_mf_5fhmih_2fhu_5fpark_5fout_5fsub_5ffeature_5fstate_2eproto,
  &::descriptor_table_mf_5fhmih_2fhu_5fra_5fsub_5ffeature_5fstate_2eproto,
  &::descriptor_table_mf_5fhmih_2fhu_5fsvs_5fsub_5ffeature_5fstate_2eproto,
  &::descriptor_table_mf_5fhmih_2fhucurrent_5ffeature_5fstate_2eproto,
  &::descriptor_table_mf_5fhmih_2fhuintr_5fpause_5fcondition_2eproto,
  &::descriptor_table_mf_5fhmih_2fscreen_5fhead_5funit_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto_sccs[2] = {
  &scc_info_HeadUnitVisualizationPort_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto.base,
  &scc_info_HeadUnitVisualizationPort_array_port_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto_once;
static bool descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto = {
  &descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto_initialized, descriptor_table_protodef_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto, "mf_hmih/head_unit_visualization_port.proto", 2038,
  &descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto_once, descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto_sccs, descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto_deps, 2, 13,
  schemas, file_default_instances, TableStruct_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto::offsets,
  file_level_metadata_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto, 2, file_level_enum_descriptors_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto, file_level_service_descriptors_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto), true);
namespace pb {
namespace mf_hmih {
namespace head_unit_visualization_port {

// ===================================================================

void HeadUnitVisualizationPort::InitAsDefaultInstance() {
  ::pb::mf_hmih::head_unit_visualization_port::_HeadUnitVisualizationPort_default_instance_._instance.get_mutable()->ssigheader_ = const_cast< ::pb::eco::signal_header::SignalHeader*>(
      ::pb::eco::signal_header::SignalHeader::internal_default_instance());
}
class HeadUnitVisualizationPort::_Internal {
 public:
  using HasBits = decltype(std::declval<HeadUnitVisualizationPort>()._has_bits_);
  static void set_has_uiversionnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::pb::eco::signal_header::SignalHeader& ssigheader(const HeadUnitVisualizationPort* msg);
  static void set_has_ssigheader(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_screen_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_message_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_apafeatureactivehu(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_apahucurrentfeaturesstate(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_apapreconditionscheck(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_apahucrossbutton(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_apahuparkingiconsgrayout(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_apahusvsiconsgrayout(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_apahuparkinsubfeaturestate(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_apahuparkoutsubfeaturestate(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_apahugarageparksubfeaturestate(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_apahusvssubfeaturestate(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_apahurasubfeaturestate(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_apahubvmsubfeaturestate(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_apainteractionpausecount(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_apainteractiontimer(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_apaintrpausecondition(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_apahuframeready(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
};

const ::pb::eco::signal_header::SignalHeader&
HeadUnitVisualizationPort::_Internal::ssigheader(const HeadUnitVisualizationPort* msg) {
  return *msg->ssigheader_;
}
void HeadUnitVisualizationPort::clear_ssigheader() {
  if (ssigheader_ != nullptr) ssigheader_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
HeadUnitVisualizationPort::HeadUnitVisualizationPort()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
}
HeadUnitVisualizationPort::HeadUnitVisualizationPort(const HeadUnitVisualizationPort& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_ssigheader()) {
    ssigheader_ = new ::pb::eco::signal_header::SignalHeader(*from.ssigheader_);
  } else {
    ssigheader_ = nullptr;
  }
  ::memcpy(&apahuparkinsubfeaturestate_, &from.apahuparkinsubfeaturestate_,
    static_cast<size_t>(reinterpret_cast<char*>(&apahugarageparksubfeaturestate_) -
    reinterpret_cast<char*>(&apahuparkinsubfeaturestate_)) + sizeof(apahugarageparksubfeaturestate_));
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
}

void HeadUnitVisualizationPort::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HeadUnitVisualizationPort_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto.base);
  ::memset(&ssigheader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apahugarageparksubfeaturestate_) -
      reinterpret_cast<char*>(&ssigheader_)) + sizeof(apahugarageparksubfeaturestate_));
}

HeadUnitVisualizationPort::~HeadUnitVisualizationPort() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
  SharedDtor();
}

void HeadUnitVisualizationPort::SharedDtor() {
  if (this != internal_default_instance()) delete ssigheader_;
}

void HeadUnitVisualizationPort::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeadUnitVisualizationPort& HeadUnitVisualizationPort::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HeadUnitVisualizationPort_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto.base);
  return *internal_default_instance();
}


void HeadUnitVisualizationPort::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(ssigheader_ != nullptr);
    ssigheader_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&apahuparkinsubfeaturestate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&screen_nu_) -
        reinterpret_cast<char*>(&apahuparkinsubfeaturestate_)) + sizeof(screen_nu_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&apahusvsiconsgrayout_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&apahuparkingiconsgrayout_) -
        reinterpret_cast<char*>(&apahusvsiconsgrayout_)) + sizeof(apahuparkingiconsgrayout_));
  }
  if (cached_has_bits & 0x000f0000u) {
    ::memset(&apahucrossbutton_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&apahugarageparksubfeaturestate_) -
        reinterpret_cast<char*>(&apahucrossbutton_)) + sizeof(apahugarageparksubfeaturestate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* HeadUnitVisualizationPort::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.mf_hmih.hucurrent_feature_state.HUCurrentFeatureState apaHuCurrentFeaturesState = 288;
      case 288:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState_IsValid(val))) {
            _internal_set_apahucurrentfeaturesstate(static_cast<::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(288, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 apaInteractionPauseCount = 394;
      case 394:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_apainteractionpausecount(&has_bits);
          apainteractionpausecount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_psm_app.hmimessage.HMIMessage message_nu = 911;
      case 911:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_psm_app::hmimessage::HMIMessage_IsValid(val))) {
            _internal_set_message_nu(static_cast<::pb::ap_psm_app::hmimessage::HMIMessage>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(911, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.huintr_pause_condition.HUIntrPauseCondition apaIntrPauseCondition = 1013;
      case 1013:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition_IsValid(val))) {
            _internal_set_apaintrpausecondition(static_cast<::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1013, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_ssigheader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 apaInteractionTimer = 1168;
      case 1168:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_apainteractiontimer(&has_bits);
          apainteractiontimer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.screen_head_unit.ScreenHeadUnit screen_nu = 1274;
      case 1274:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::screen_head_unit::ScreenHeadUnit_IsValid(val))) {
            _internal_set_screen_nu(static_cast<::pb::mf_hmih::screen_head_unit::ScreenHeadUnit>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1274, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 apaHuSVsIconsGrayOut = 1708;
      case 1708:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_apahusvsiconsgrayout(&has_bits);
          apahusvsiconsgrayout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 apaPreconditionsCheck = 1772;
      case 1772:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_apapreconditionscheck(&has_bits);
          apapreconditionscheck_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool apaFeatureActiveHU = 1801;
      case 1801:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_apafeatureactivehu(&has_bits);
          apafeatureactivehu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.hu_frame_ready.HuFrameReady apaHuFrameReady = 1816;
      case 1816:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::hu_frame_ready::HuFrameReady_IsValid(val))) {
            _internal_set_apahuframeready(static_cast<::pb::mf_hmih::hu_frame_ready::HuFrameReady>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1816, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 uiVersionNumber = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_uiversionnumber(&has_bits);
          uiversionnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.hu_ra_sub_feature_state.HuRaSubFeatureState apaHuRaSubFeatureState = 2165;
      case 2165:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState_IsValid(val))) {
            _internal_set_apahurasubfeaturestate(static_cast<::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2165, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.hu_bvm_sub_feature_state.HuBvmSubFeatureState apaHuBvmSubFeatureState = 2700;
      case 2700:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState_IsValid(val))) {
            _internal_set_apahubvmsubfeaturestate(static_cast<::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2700, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 apaHuParkingIconsGrayOut = 2719;
      case 2719:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          _Internal::set_has_apahuparkingiconsgrayout(&has_bits);
          apahuparkingiconsgrayout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.hu_cross_button.HuCrossButton apaHuCrossButton = 2861;
      case 2861:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::hu_cross_button::HuCrossButton_IsValid(val))) {
            _internal_set_apahucrossbutton(static_cast<::pb::mf_hmih::hu_cross_button::HuCrossButton>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2861, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.hu_park_out_sub_feature_state.HuParkOutSubFeatureState apaHuParkOutSubFeatureState = 3358;
      case 3358:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState_IsValid(val))) {
            _internal_set_apahuparkoutsubfeaturestate(static_cast<::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3358, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.hu_svs_sub_feature_state.HuSVsSubFeatureState apaHuSVsSubFeatureState = 3456;
      case 3456:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState_IsValid(val))) {
            _internal_set_apahusvssubfeaturestate(static_cast<::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3456, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.hu_garage_park_sub_feature_state.HuGarageParkSubFeatureState apaHuGarageParkSubFeatureState = 3621;
      case 3621:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState_IsValid(val))) {
            _internal_set_apahugarageparksubfeaturestate(static_cast<::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3621, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.hu_park_in_sub_feature_state.HuParkInSubFeatureState apaHuParkInSubFeatureState = 3799;
      case 3799:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState_IsValid(val))) {
            _internal_set_apahuparkinsubfeaturestate(static_cast<::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3799, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HeadUnitVisualizationPort::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.mf_hmih.hucurrent_feature_state.HUCurrentFeatureState apaHuCurrentFeaturesState = 288;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      288, this->_internal_apahucurrentfeaturesstate(), target);
  }

  // optional uint32 apaInteractionPauseCount = 394;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(394, this->_internal_apainteractionpausecount(), target);
  }

  // optional .pb.ap_psm_app.hmimessage.HMIMessage message_nu = 911;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      911, this->_internal_message_nu(), target);
  }

  // optional .pb.mf_hmih.huintr_pause_condition.HUIntrPauseCondition apaIntrPauseCondition = 1013;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1013, this->_internal_apaintrpausecondition(), target);
  }

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::ssigheader(this), target, stream);
  }

  // optional uint32 apaInteractionTimer = 1168;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1168, this->_internal_apainteractiontimer(), target);
  }

  // optional .pb.mf_hmih.screen_head_unit.ScreenHeadUnit screen_nu = 1274;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1274, this->_internal_screen_nu(), target);
  }

  // optional uint32 apaHuSVsIconsGrayOut = 1708;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1708, this->_internal_apahusvsiconsgrayout(), target);
  }

  // optional uint32 apaPreconditionsCheck = 1772;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1772, this->_internal_apapreconditionscheck(), target);
  }

  // optional bool apaFeatureActiveHU = 1801;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1801, this->_internal_apafeatureactivehu(), target);
  }

  // optional .pb.mf_hmih.hu_frame_ready.HuFrameReady apaHuFrameReady = 1816;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1816, this->_internal_apahuframeready(), target);
  }

  // optional uint32 uiVersionNumber = 2124;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2124, this->_internal_uiversionnumber(), target);
  }

  // optional .pb.mf_hmih.hu_ra_sub_feature_state.HuRaSubFeatureState apaHuRaSubFeatureState = 2165;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2165, this->_internal_apahurasubfeaturestate(), target);
  }

  // optional .pb.mf_hmih.hu_bvm_sub_feature_state.HuBvmSubFeatureState apaHuBvmSubFeatureState = 2700;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2700, this->_internal_apahubvmsubfeaturestate(), target);
  }

  // optional uint32 apaHuParkingIconsGrayOut = 2719;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2719, this->_internal_apahuparkingiconsgrayout(), target);
  }

  // optional .pb.mf_hmih.hu_cross_button.HuCrossButton apaHuCrossButton = 2861;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2861, this->_internal_apahucrossbutton(), target);
  }

  // optional .pb.mf_hmih.hu_park_out_sub_feature_state.HuParkOutSubFeatureState apaHuParkOutSubFeatureState = 3358;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3358, this->_internal_apahuparkoutsubfeaturestate(), target);
  }

  // optional .pb.mf_hmih.hu_svs_sub_feature_state.HuSVsSubFeatureState apaHuSVsSubFeatureState = 3456;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3456, this->_internal_apahusvssubfeaturestate(), target);
  }

  // optional .pb.mf_hmih.hu_garage_park_sub_feature_state.HuGarageParkSubFeatureState apaHuGarageParkSubFeatureState = 3621;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3621, this->_internal_apahugarageparksubfeaturestate(), target);
  }

  // optional .pb.mf_hmih.hu_park_in_sub_feature_state.HuParkInSubFeatureState apaHuParkInSubFeatureState = 3799;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3799, this->_internal_apahuparkinsubfeaturestate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
  return target;
}

size_t HeadUnitVisualizationPort::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ssigheader_);
    }

    // optional .pb.mf_hmih.hu_park_in_sub_feature_state.HuParkInSubFeatureState apaHuParkInSubFeatureState = 3799;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apahuparkinsubfeaturestate());
    }

    // optional .pb.mf_hmih.hucurrent_feature_state.HUCurrentFeatureState apaHuCurrentFeaturesState = 288;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apahucurrentfeaturesstate());
    }

    // optional uint32 apaInteractionPauseCount = 394;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_apainteractionpausecount());
    }

    // optional .pb.ap_psm_app.hmimessage.HMIMessage message_nu = 911;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_message_nu());
    }

    // optional .pb.mf_hmih.huintr_pause_condition.HUIntrPauseCondition apaIntrPauseCondition = 1013;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apaintrpausecondition());
    }

    // optional uint32 apaInteractionTimer = 1168;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_apainteractiontimer());
    }

    // optional .pb.mf_hmih.screen_head_unit.ScreenHeadUnit screen_nu = 1274;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_screen_nu());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint32 apaHuSVsIconsGrayOut = 1708;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_apahusvsiconsgrayout());
    }

    // optional uint32 apaPreconditionsCheck = 1772;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_apapreconditionscheck());
    }

    // optional bool apaFeatureActiveHU = 1801;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional .pb.mf_hmih.hu_frame_ready.HuFrameReady apaHuFrameReady = 1816;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apahuframeready());
    }

    // optional uint32 uiVersionNumber = 2124;
    if (cached_has_bits & 0x00001000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uiversionnumber());
    }

    // optional .pb.mf_hmih.hu_ra_sub_feature_state.HuRaSubFeatureState apaHuRaSubFeatureState = 2165;
    if (cached_has_bits & 0x00002000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apahurasubfeaturestate());
    }

    // optional .pb.mf_hmih.hu_bvm_sub_feature_state.HuBvmSubFeatureState apaHuBvmSubFeatureState = 2700;
    if (cached_has_bits & 0x00004000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apahubvmsubfeaturestate());
    }

    // optional uint32 apaHuParkingIconsGrayOut = 2719;
    if (cached_has_bits & 0x00008000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_apahuparkingiconsgrayout());
    }

  }
  if (cached_has_bits & 0x000f0000u) {
    // optional .pb.mf_hmih.hu_cross_button.HuCrossButton apaHuCrossButton = 2861;
    if (cached_has_bits & 0x00010000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apahucrossbutton());
    }

    // optional .pb.mf_hmih.hu_park_out_sub_feature_state.HuParkOutSubFeatureState apaHuParkOutSubFeatureState = 3358;
    if (cached_has_bits & 0x00020000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apahuparkoutsubfeaturestate());
    }

    // optional .pb.mf_hmih.hu_svs_sub_feature_state.HuSVsSubFeatureState apaHuSVsSubFeatureState = 3456;
    if (cached_has_bits & 0x00040000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apahusvssubfeaturestate());
    }

    // optional .pb.mf_hmih.hu_garage_park_sub_feature_state.HuGarageParkSubFeatureState apaHuGarageParkSubFeatureState = 3621;
    if (cached_has_bits & 0x00080000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apahugarageparksubfeaturestate());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeadUnitVisualizationPort::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
  GOOGLE_DCHECK_NE(&from, this);
  const HeadUnitVisualizationPort* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HeadUnitVisualizationPort>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
    MergeFrom(*source);
  }
}

void HeadUnitVisualizationPort::MergeFrom(const HeadUnitVisualizationPort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_ssigheader()->::pb::eco::signal_header::SignalHeader::MergeFrom(from._internal_ssigheader());
    }
    if (cached_has_bits & 0x00000002u) {
      apahuparkinsubfeaturestate_ = from.apahuparkinsubfeaturestate_;
    }
    if (cached_has_bits & 0x00000004u) {
      apahucurrentfeaturesstate_ = from.apahucurrentfeaturesstate_;
    }
    if (cached_has_bits & 0x00000008u) {
      apainteractionpausecount_ = from.apainteractionpausecount_;
    }
    if (cached_has_bits & 0x00000010u) {
      message_nu_ = from.message_nu_;
    }
    if (cached_has_bits & 0x00000020u) {
      apaintrpausecondition_ = from.apaintrpausecondition_;
    }
    if (cached_has_bits & 0x00000040u) {
      apainteractiontimer_ = from.apainteractiontimer_;
    }
    if (cached_has_bits & 0x00000080u) {
      screen_nu_ = from.screen_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      apahusvsiconsgrayout_ = from.apahusvsiconsgrayout_;
    }
    if (cached_has_bits & 0x00000200u) {
      apapreconditionscheck_ = from.apapreconditionscheck_;
    }
    if (cached_has_bits & 0x00000400u) {
      apafeatureactivehu_ = from.apafeatureactivehu_;
    }
    if (cached_has_bits & 0x00000800u) {
      apahuframeready_ = from.apahuframeready_;
    }
    if (cached_has_bits & 0x00001000u) {
      uiversionnumber_ = from.uiversionnumber_;
    }
    if (cached_has_bits & 0x00002000u) {
      apahurasubfeaturestate_ = from.apahurasubfeaturestate_;
    }
    if (cached_has_bits & 0x00004000u) {
      apahubvmsubfeaturestate_ = from.apahubvmsubfeaturestate_;
    }
    if (cached_has_bits & 0x00008000u) {
      apahuparkingiconsgrayout_ = from.apahuparkingiconsgrayout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x000f0000u) {
    if (cached_has_bits & 0x00010000u) {
      apahucrossbutton_ = from.apahucrossbutton_;
    }
    if (cached_has_bits & 0x00020000u) {
      apahuparkoutsubfeaturestate_ = from.apahuparkoutsubfeaturestate_;
    }
    if (cached_has_bits & 0x00040000u) {
      apahusvssubfeaturestate_ = from.apahusvssubfeaturestate_;
    }
    if (cached_has_bits & 0x00080000u) {
      apahugarageparksubfeaturestate_ = from.apahugarageparksubfeaturestate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HeadUnitVisualizationPort::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeadUnitVisualizationPort::CopyFrom(const HeadUnitVisualizationPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeadUnitVisualizationPort::IsInitialized() const {
  return true;
}

void HeadUnitVisualizationPort::InternalSwap(HeadUnitVisualizationPort* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ssigheader_, other->ssigheader_);
  swap(apahuparkinsubfeaturestate_, other->apahuparkinsubfeaturestate_);
  swap(apahucurrentfeaturesstate_, other->apahucurrentfeaturesstate_);
  swap(apainteractionpausecount_, other->apainteractionpausecount_);
  swap(message_nu_, other->message_nu_);
  swap(apaintrpausecondition_, other->apaintrpausecondition_);
  swap(apainteractiontimer_, other->apainteractiontimer_);
  swap(screen_nu_, other->screen_nu_);
  swap(apahusvsiconsgrayout_, other->apahusvsiconsgrayout_);
  swap(apapreconditionscheck_, other->apapreconditionscheck_);
  swap(apafeatureactivehu_, other->apafeatureactivehu_);
  swap(apahuframeready_, other->apahuframeready_);
  swap(uiversionnumber_, other->uiversionnumber_);
  swap(apahurasubfeaturestate_, other->apahurasubfeaturestate_);
  swap(apahubvmsubfeaturestate_, other->apahubvmsubfeaturestate_);
  swap(apahuparkingiconsgrayout_, other->apahuparkingiconsgrayout_);
  swap(apahucrossbutton_, other->apahucrossbutton_);
  swap(apahuparkoutsubfeaturestate_, other->apahuparkoutsubfeaturestate_);
  swap(apahusvssubfeaturestate_, other->apahusvssubfeaturestate_);
  swap(apahugarageparksubfeaturestate_, other->apahugarageparksubfeaturestate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HeadUnitVisualizationPort::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HeadUnitVisualizationPort_array_port::InitAsDefaultInstance() {
}
class HeadUnitVisualizationPort_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<HeadUnitVisualizationPort_array_port>()._has_bits_);
};

HeadUnitVisualizationPort_array_port::HeadUnitVisualizationPort_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
}
HeadUnitVisualizationPort_array_port::HeadUnitVisualizationPort_array_port(const HeadUnitVisualizationPort_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
}

void HeadUnitVisualizationPort_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HeadUnitVisualizationPort_array_port_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto.base);
}

HeadUnitVisualizationPort_array_port::~HeadUnitVisualizationPort_array_port() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
  SharedDtor();
}

void HeadUnitVisualizationPort_array_port::SharedDtor() {
}

void HeadUnitVisualizationPort_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeadUnitVisualizationPort_array_port& HeadUnitVisualizationPort_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HeadUnitVisualizationPort_array_port_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto.base);
  return *internal_default_instance();
}


void HeadUnitVisualizationPort_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* HeadUnitVisualizationPort_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort data = 1504;
      case 1504:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<12034>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HeadUnitVisualizationPort_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort data = 1504;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1504, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
  return target;
}

size_t HeadUnitVisualizationPort_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort data = 1504;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeadUnitVisualizationPort_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const HeadUnitVisualizationPort_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HeadUnitVisualizationPort_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
    MergeFrom(*source);
  }
}

void HeadUnitVisualizationPort_array_port::MergeFrom(const HeadUnitVisualizationPort_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void HeadUnitVisualizationPort_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeadUnitVisualizationPort_array_port::CopyFrom(const HeadUnitVisualizationPort_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeadUnitVisualizationPort_array_port::IsInitialized() const {
  return true;
}

void HeadUnitVisualizationPort_array_port::InternalSwap(HeadUnitVisualizationPort_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HeadUnitVisualizationPort_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace head_unit_visualization_port
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort* Arena::CreateMaybeMessage< ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port* Arena::CreateMaybeMessage< ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
