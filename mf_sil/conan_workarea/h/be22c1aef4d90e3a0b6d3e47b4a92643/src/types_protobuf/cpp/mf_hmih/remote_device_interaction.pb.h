// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/remote_device_interaction.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mf_hmih/apuser_action_remote_device.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto;
namespace pb {
namespace mf_hmih {
namespace remote_device_interaction {
class RemoteDeviceInteraction;
class RemoteDeviceInteractionDefaultTypeInternal;
extern RemoteDeviceInteractionDefaultTypeInternal _RemoteDeviceInteraction_default_instance_;
class RemoteDeviceInteraction_array_port;
class RemoteDeviceInteraction_array_portDefaultTypeInternal;
extern RemoteDeviceInteraction_array_portDefaultTypeInternal _RemoteDeviceInteraction_array_port_default_instance_;
}  // namespace remote_device_interaction
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction* Arena::CreateMaybeMessage<::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction>(Arena*);
template<> ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction_array_port* Arena::CreateMaybeMessage<::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace mf_hmih {
namespace remote_device_interaction {

// ===================================================================

class RemoteDeviceInteraction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction) */ {
 public:
  RemoteDeviceInteraction();
  virtual ~RemoteDeviceInteraction();

  RemoteDeviceInteraction(const RemoteDeviceInteraction& from);
  RemoteDeviceInteraction(RemoteDeviceInteraction&& from) noexcept
    : RemoteDeviceInteraction() {
    *this = ::std::move(from);
  }

  inline RemoteDeviceInteraction& operator=(const RemoteDeviceInteraction& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoteDeviceInteraction& operator=(RemoteDeviceInteraction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoteDeviceInteraction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteDeviceInteraction* internal_default_instance() {
    return reinterpret_cast<const RemoteDeviceInteraction*>(
               &_RemoteDeviceInteraction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RemoteDeviceInteraction& a, RemoteDeviceInteraction& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoteDeviceInteraction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RemoteDeviceInteraction* New() const final {
    return CreateMaybeMessage<RemoteDeviceInteraction>(nullptr);
  }

  RemoteDeviceInteraction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoteDeviceInteraction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoteDeviceInteraction& from);
  void MergeFrom(const RemoteDeviceInteraction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteDeviceInteraction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto);
    return ::descriptor_table_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBatteryLevelPercFieldNumber = 269,
    kDeadMansSwitchBtnNuFieldNumber = 1719,
    kPairedNuFieldNumber = 1271,
    kConnectedNuFieldNumber = 2338,
    kScreenResolutionYPxFieldNumber = 2345,
    kFingerPositionYPxFieldNumber = 2635,
    kFingerPositionXPxFieldNumber = 3327,
    kApUserActionRemoteDeviceNuFieldNumber = 3423,
    kAliveCounterNuFieldNumber = 3550,
    kScreenResolutionXPxFieldNumber = 3997,
  };
  // optional float batteryLevel_perc = 269;
  bool has_batterylevel_perc() const;
  private:
  bool _internal_has_batterylevel_perc() const;
  public:
  void clear_batterylevel_perc();
  float batterylevel_perc() const;
  void set_batterylevel_perc(float value);
  private:
  float _internal_batterylevel_perc() const;
  void _internal_set_batterylevel_perc(float value);
  public:

  // optional bool deadMansSwitchBtn_nu = 1719;
  bool has_deadmansswitchbtn_nu() const;
  private:
  bool _internal_has_deadmansswitchbtn_nu() const;
  public:
  void clear_deadmansswitchbtn_nu();
  bool deadmansswitchbtn_nu() const;
  void set_deadmansswitchbtn_nu(bool value);
  private:
  bool _internal_deadmansswitchbtn_nu() const;
  void _internal_set_deadmansswitchbtn_nu(bool value);
  public:

  // optional bool paired_nu = 1271;
  bool has_paired_nu() const;
  private:
  bool _internal_has_paired_nu() const;
  public:
  void clear_paired_nu();
  bool paired_nu() const;
  void set_paired_nu(bool value);
  private:
  bool _internal_paired_nu() const;
  void _internal_set_paired_nu(bool value);
  public:

  // optional bool connected_nu = 2338;
  bool has_connected_nu() const;
  private:
  bool _internal_has_connected_nu() const;
  public:
  void clear_connected_nu();
  bool connected_nu() const;
  void set_connected_nu(bool value);
  private:
  bool _internal_connected_nu() const;
  void _internal_set_connected_nu(bool value);
  public:

  // optional uint32 screenResolutionY_px = 2345;
  bool has_screenresolutiony_px() const;
  private:
  bool _internal_has_screenresolutiony_px() const;
  public:
  void clear_screenresolutiony_px();
  ::PROTOBUF_NAMESPACE_ID::uint32 screenresolutiony_px() const;
  void set_screenresolutiony_px(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_screenresolutiony_px() const;
  void _internal_set_screenresolutiony_px(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 fingerPositionY_px = 2635;
  bool has_fingerpositiony_px() const;
  private:
  bool _internal_has_fingerpositiony_px() const;
  public:
  void clear_fingerpositiony_px();
  ::PROTOBUF_NAMESPACE_ID::uint32 fingerpositiony_px() const;
  void set_fingerpositiony_px(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fingerpositiony_px() const;
  void _internal_set_fingerpositiony_px(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 fingerPositionX_px = 3327;
  bool has_fingerpositionx_px() const;
  private:
  bool _internal_has_fingerpositionx_px() const;
  public:
  void clear_fingerpositionx_px();
  ::PROTOBUF_NAMESPACE_ID::uint32 fingerpositionx_px() const;
  void set_fingerpositionx_px(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fingerpositionx_px() const;
  void _internal_set_fingerpositionx_px(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.mf_hmih.apuser_action_remote_device.APUserActionRemoteDevice apUserActionRemoteDevice_nu = 3423;
  bool has_apuseractionremotedevice_nu() const;
  private:
  bool _internal_has_apuseractionremotedevice_nu() const;
  public:
  void clear_apuseractionremotedevice_nu();
  ::pb::mf_hmih::apuser_action_remote_device::APUserActionRemoteDevice apuseractionremotedevice_nu() const;
  void set_apuseractionremotedevice_nu(::pb::mf_hmih::apuser_action_remote_device::APUserActionRemoteDevice value);
  private:
  ::pb::mf_hmih::apuser_action_remote_device::APUserActionRemoteDevice _internal_apuseractionremotedevice_nu() const;
  void _internal_set_apuseractionremotedevice_nu(::pb::mf_hmih::apuser_action_remote_device::APUserActionRemoteDevice value);
  public:

  // optional uint32 aliveCounter_nu = 3550;
  bool has_alivecounter_nu() const;
  private:
  bool _internal_has_alivecounter_nu() const;
  public:
  void clear_alivecounter_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 alivecounter_nu() const;
  void set_alivecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_alivecounter_nu() const;
  void _internal_set_alivecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 screenResolutionX_px = 3997;
  bool has_screenresolutionx_px() const;
  private:
  bool _internal_has_screenresolutionx_px() const;
  public:
  void clear_screenresolutionx_px();
  ::PROTOBUF_NAMESPACE_ID::uint32 screenresolutionx_px() const;
  void set_screenresolutionx_px(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_screenresolutionx_px() const;
  void _internal_set_screenresolutionx_px(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float batterylevel_perc_;
  bool deadmansswitchbtn_nu_;
  bool paired_nu_;
  bool connected_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 screenresolutiony_px_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fingerpositiony_px_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fingerpositionx_px_;
  int apuseractionremotedevice_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 alivecounter_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 screenresolutionx_px_;
  friend struct ::TableStruct_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto;
};
// -------------------------------------------------------------------

class RemoteDeviceInteraction_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction_array_port) */ {
 public:
  RemoteDeviceInteraction_array_port();
  virtual ~RemoteDeviceInteraction_array_port();

  RemoteDeviceInteraction_array_port(const RemoteDeviceInteraction_array_port& from);
  RemoteDeviceInteraction_array_port(RemoteDeviceInteraction_array_port&& from) noexcept
    : RemoteDeviceInteraction_array_port() {
    *this = ::std::move(from);
  }

  inline RemoteDeviceInteraction_array_port& operator=(const RemoteDeviceInteraction_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoteDeviceInteraction_array_port& operator=(RemoteDeviceInteraction_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoteDeviceInteraction_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteDeviceInteraction_array_port* internal_default_instance() {
    return reinterpret_cast<const RemoteDeviceInteraction_array_port*>(
               &_RemoteDeviceInteraction_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RemoteDeviceInteraction_array_port& a, RemoteDeviceInteraction_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoteDeviceInteraction_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RemoteDeviceInteraction_array_port* New() const final {
    return CreateMaybeMessage<RemoteDeviceInteraction_array_port>(nullptr);
  }

  RemoteDeviceInteraction_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoteDeviceInteraction_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoteDeviceInteraction_array_port& from);
  void MergeFrom(const RemoteDeviceInteraction_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteDeviceInteraction_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto);
    return ::descriptor_table_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1222,
  };
  // repeated .pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction data = 1222;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction >*
      mutable_data();
  private:
  const ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction& _internal_data(int index) const;
  ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction* _internal_add_data();
  public:
  const ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction& data(int index) const;
  ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction > data_;
  friend struct ::TableStruct_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RemoteDeviceInteraction

// optional float batteryLevel_perc = 269;
inline bool RemoteDeviceInteraction::_internal_has_batterylevel_perc() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RemoteDeviceInteraction::has_batterylevel_perc() const {
  return _internal_has_batterylevel_perc();
}
inline void RemoteDeviceInteraction::clear_batterylevel_perc() {
  batterylevel_perc_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float RemoteDeviceInteraction::_internal_batterylevel_perc() const {
  return batterylevel_perc_;
}
inline float RemoteDeviceInteraction::batterylevel_perc() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.batteryLevel_perc)
  return _internal_batterylevel_perc();
}
inline void RemoteDeviceInteraction::_internal_set_batterylevel_perc(float value) {
  _has_bits_[0] |= 0x00000001u;
  batterylevel_perc_ = value;
}
inline void RemoteDeviceInteraction::set_batterylevel_perc(float value) {
  _internal_set_batterylevel_perc(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.batteryLevel_perc)
}

// optional uint32 fingerPositionX_px = 3327;
inline bool RemoteDeviceInteraction::_internal_has_fingerpositionx_px() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool RemoteDeviceInteraction::has_fingerpositionx_px() const {
  return _internal_has_fingerpositionx_px();
}
inline void RemoteDeviceInteraction::clear_fingerpositionx_px() {
  fingerpositionx_px_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoteDeviceInteraction::_internal_fingerpositionx_px() const {
  return fingerpositionx_px_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoteDeviceInteraction::fingerpositionx_px() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.fingerPositionX_px)
  return _internal_fingerpositionx_px();
}
inline void RemoteDeviceInteraction::_internal_set_fingerpositionx_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  fingerpositionx_px_ = value;
}
inline void RemoteDeviceInteraction::set_fingerpositionx_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fingerpositionx_px(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.fingerPositionX_px)
}

// optional uint32 fingerPositionY_px = 2635;
inline bool RemoteDeviceInteraction::_internal_has_fingerpositiony_px() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool RemoteDeviceInteraction::has_fingerpositiony_px() const {
  return _internal_has_fingerpositiony_px();
}
inline void RemoteDeviceInteraction::clear_fingerpositiony_px() {
  fingerpositiony_px_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoteDeviceInteraction::_internal_fingerpositiony_px() const {
  return fingerpositiony_px_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoteDeviceInteraction::fingerpositiony_px() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.fingerPositionY_px)
  return _internal_fingerpositiony_px();
}
inline void RemoteDeviceInteraction::_internal_set_fingerpositiony_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  fingerpositiony_px_ = value;
}
inline void RemoteDeviceInteraction::set_fingerpositiony_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fingerpositiony_px(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.fingerPositionY_px)
}

// optional .pb.mf_hmih.apuser_action_remote_device.APUserActionRemoteDevice apUserActionRemoteDevice_nu = 3423;
inline bool RemoteDeviceInteraction::_internal_has_apuseractionremotedevice_nu() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool RemoteDeviceInteraction::has_apuseractionremotedevice_nu() const {
  return _internal_has_apuseractionremotedevice_nu();
}
inline void RemoteDeviceInteraction::clear_apuseractionremotedevice_nu() {
  apuseractionremotedevice_nu_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::pb::mf_hmih::apuser_action_remote_device::APUserActionRemoteDevice RemoteDeviceInteraction::_internal_apuseractionremotedevice_nu() const {
  return static_cast< ::pb::mf_hmih::apuser_action_remote_device::APUserActionRemoteDevice >(apuseractionremotedevice_nu_);
}
inline ::pb::mf_hmih::apuser_action_remote_device::APUserActionRemoteDevice RemoteDeviceInteraction::apuseractionremotedevice_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.apUserActionRemoteDevice_nu)
  return _internal_apuseractionremotedevice_nu();
}
inline void RemoteDeviceInteraction::_internal_set_apuseractionremotedevice_nu(::pb::mf_hmih::apuser_action_remote_device::APUserActionRemoteDevice value) {
  assert(::pb::mf_hmih::apuser_action_remote_device::APUserActionRemoteDevice_IsValid(value));
  _has_bits_[0] |= 0x00000080u;
  apuseractionremotedevice_nu_ = value;
}
inline void RemoteDeviceInteraction::set_apuseractionremotedevice_nu(::pb::mf_hmih::apuser_action_remote_device::APUserActionRemoteDevice value) {
  _internal_set_apuseractionremotedevice_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.apUserActionRemoteDevice_nu)
}

// optional uint32 aliveCounter_nu = 3550;
inline bool RemoteDeviceInteraction::_internal_has_alivecounter_nu() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool RemoteDeviceInteraction::has_alivecounter_nu() const {
  return _internal_has_alivecounter_nu();
}
inline void RemoteDeviceInteraction::clear_alivecounter_nu() {
  alivecounter_nu_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoteDeviceInteraction::_internal_alivecounter_nu() const {
  return alivecounter_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoteDeviceInteraction::alivecounter_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.aliveCounter_nu)
  return _internal_alivecounter_nu();
}
inline void RemoteDeviceInteraction::_internal_set_alivecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  alivecounter_nu_ = value;
}
inline void RemoteDeviceInteraction::set_alivecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_alivecounter_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.aliveCounter_nu)
}

// optional bool deadMansSwitchBtn_nu = 1719;
inline bool RemoteDeviceInteraction::_internal_has_deadmansswitchbtn_nu() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RemoteDeviceInteraction::has_deadmansswitchbtn_nu() const {
  return _internal_has_deadmansswitchbtn_nu();
}
inline void RemoteDeviceInteraction::clear_deadmansswitchbtn_nu() {
  deadmansswitchbtn_nu_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool RemoteDeviceInteraction::_internal_deadmansswitchbtn_nu() const {
  return deadmansswitchbtn_nu_;
}
inline bool RemoteDeviceInteraction::deadmansswitchbtn_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.deadMansSwitchBtn_nu)
  return _internal_deadmansswitchbtn_nu();
}
inline void RemoteDeviceInteraction::_internal_set_deadmansswitchbtn_nu(bool value) {
  _has_bits_[0] |= 0x00000002u;
  deadmansswitchbtn_nu_ = value;
}
inline void RemoteDeviceInteraction::set_deadmansswitchbtn_nu(bool value) {
  _internal_set_deadmansswitchbtn_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.deadMansSwitchBtn_nu)
}

// optional bool paired_nu = 1271;
inline bool RemoteDeviceInteraction::_internal_has_paired_nu() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool RemoteDeviceInteraction::has_paired_nu() const {
  return _internal_has_paired_nu();
}
inline void RemoteDeviceInteraction::clear_paired_nu() {
  paired_nu_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool RemoteDeviceInteraction::_internal_paired_nu() const {
  return paired_nu_;
}
inline bool RemoteDeviceInteraction::paired_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.paired_nu)
  return _internal_paired_nu();
}
inline void RemoteDeviceInteraction::_internal_set_paired_nu(bool value) {
  _has_bits_[0] |= 0x00000004u;
  paired_nu_ = value;
}
inline void RemoteDeviceInteraction::set_paired_nu(bool value) {
  _internal_set_paired_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.paired_nu)
}

// optional bool connected_nu = 2338;
inline bool RemoteDeviceInteraction::_internal_has_connected_nu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool RemoteDeviceInteraction::has_connected_nu() const {
  return _internal_has_connected_nu();
}
inline void RemoteDeviceInteraction::clear_connected_nu() {
  connected_nu_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool RemoteDeviceInteraction::_internal_connected_nu() const {
  return connected_nu_;
}
inline bool RemoteDeviceInteraction::connected_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.connected_nu)
  return _internal_connected_nu();
}
inline void RemoteDeviceInteraction::_internal_set_connected_nu(bool value) {
  _has_bits_[0] |= 0x00000008u;
  connected_nu_ = value;
}
inline void RemoteDeviceInteraction::set_connected_nu(bool value) {
  _internal_set_connected_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.connected_nu)
}

// optional uint32 screenResolutionX_px = 3997;
inline bool RemoteDeviceInteraction::_internal_has_screenresolutionx_px() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool RemoteDeviceInteraction::has_screenresolutionx_px() const {
  return _internal_has_screenresolutionx_px();
}
inline void RemoteDeviceInteraction::clear_screenresolutionx_px() {
  screenresolutionx_px_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoteDeviceInteraction::_internal_screenresolutionx_px() const {
  return screenresolutionx_px_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoteDeviceInteraction::screenresolutionx_px() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.screenResolutionX_px)
  return _internal_screenresolutionx_px();
}
inline void RemoteDeviceInteraction::_internal_set_screenresolutionx_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  screenresolutionx_px_ = value;
}
inline void RemoteDeviceInteraction::set_screenresolutionx_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_screenresolutionx_px(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.screenResolutionX_px)
}

// optional uint32 screenResolutionY_px = 2345;
inline bool RemoteDeviceInteraction::_internal_has_screenresolutiony_px() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool RemoteDeviceInteraction::has_screenresolutiony_px() const {
  return _internal_has_screenresolutiony_px();
}
inline void RemoteDeviceInteraction::clear_screenresolutiony_px() {
  screenresolutiony_px_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoteDeviceInteraction::_internal_screenresolutiony_px() const {
  return screenresolutiony_px_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoteDeviceInteraction::screenresolutiony_px() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.screenResolutionY_px)
  return _internal_screenresolutiony_px();
}
inline void RemoteDeviceInteraction::_internal_set_screenresolutiony_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  screenresolutiony_px_ = value;
}
inline void RemoteDeviceInteraction::set_screenresolutiony_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_screenresolutiony_px(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction.screenResolutionY_px)
}

// -------------------------------------------------------------------

// RemoteDeviceInteraction_array_port

// repeated .pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction data = 1222;
inline int RemoteDeviceInteraction_array_port::_internal_data_size() const {
  return data_.size();
}
inline int RemoteDeviceInteraction_array_port::data_size() const {
  return _internal_data_size();
}
inline void RemoteDeviceInteraction_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction* RemoteDeviceInteraction_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction >*
RemoteDeviceInteraction_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction_array_port.data)
  return &data_;
}
inline const ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction& RemoteDeviceInteraction_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction& RemoteDeviceInteraction_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction_array_port.data)
  return _internal_data(index);
}
inline ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction* RemoteDeviceInteraction_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction* RemoteDeviceInteraction_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::remote_device_interaction::RemoteDeviceInteraction >&
RemoteDeviceInteraction_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.remote_device_interaction.RemoteDeviceInteraction_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace remote_device_interaction
}  // namespace mf_hmih
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fremote_5fdevice_5finteraction_2eproto
