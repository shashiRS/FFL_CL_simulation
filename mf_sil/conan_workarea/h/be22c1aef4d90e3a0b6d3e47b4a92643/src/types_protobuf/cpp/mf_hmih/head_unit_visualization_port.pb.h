// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/head_unit_visualization_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "mf_hmih/screen_head_unit.pb.h"
#include "ap_psm_app/hmimessage.pb.h"
#include "mf_hmih/hucurrent_feature_state.pb.h"
#include "mf_hmih/hu_cross_button.pb.h"
#include "mf_hmih/hu_park_in_sub_feature_state.pb.h"
#include "mf_hmih/hu_park_out_sub_feature_state.pb.h"
#include "mf_hmih/hu_garage_park_sub_feature_state.pb.h"
#include "mf_hmih/hu_svs_sub_feature_state.pb.h"
#include "mf_hmih/hu_ra_sub_feature_state.pb.h"
#include "mf_hmih/hu_bvm_sub_feature_state.pb.h"
#include "mf_hmih/huintr_pause_condition.pb.h"
#include "mf_hmih/hu_frame_ready.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto;
namespace pb {
namespace mf_hmih {
namespace head_unit_visualization_port {
class HeadUnitVisualizationPort;
class HeadUnitVisualizationPortDefaultTypeInternal;
extern HeadUnitVisualizationPortDefaultTypeInternal _HeadUnitVisualizationPort_default_instance_;
class HeadUnitVisualizationPort_array_port;
class HeadUnitVisualizationPort_array_portDefaultTypeInternal;
extern HeadUnitVisualizationPort_array_portDefaultTypeInternal _HeadUnitVisualizationPort_array_port_default_instance_;
}  // namespace head_unit_visualization_port
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort* Arena::CreateMaybeMessage<::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort>(Arena*);
template<> ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port* Arena::CreateMaybeMessage<::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace mf_hmih {
namespace head_unit_visualization_port {

// ===================================================================

class HeadUnitVisualizationPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort) */ {
 public:
  HeadUnitVisualizationPort();
  virtual ~HeadUnitVisualizationPort();

  HeadUnitVisualizationPort(const HeadUnitVisualizationPort& from);
  HeadUnitVisualizationPort(HeadUnitVisualizationPort&& from) noexcept
    : HeadUnitVisualizationPort() {
    *this = ::std::move(from);
  }

  inline HeadUnitVisualizationPort& operator=(const HeadUnitVisualizationPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeadUnitVisualizationPort& operator=(HeadUnitVisualizationPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HeadUnitVisualizationPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeadUnitVisualizationPort* internal_default_instance() {
    return reinterpret_cast<const HeadUnitVisualizationPort*>(
               &_HeadUnitVisualizationPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(HeadUnitVisualizationPort& a, HeadUnitVisualizationPort& b) {
    a.Swap(&b);
  }
  inline void Swap(HeadUnitVisualizationPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeadUnitVisualizationPort* New() const final {
    return CreateMaybeMessage<HeadUnitVisualizationPort>(nullptr);
  }

  HeadUnitVisualizationPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeadUnitVisualizationPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HeadUnitVisualizationPort& from);
  void MergeFrom(const HeadUnitVisualizationPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeadUnitVisualizationPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto);
    return ::descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSSigHeaderFieldNumber = 1033,
    kApaHuParkInSubFeatureStateFieldNumber = 3799,
    kApaHuCurrentFeaturesStateFieldNumber = 288,
    kApaInteractionPauseCountFieldNumber = 394,
    kMessageNuFieldNumber = 911,
    kApaIntrPauseConditionFieldNumber = 1013,
    kApaInteractionTimerFieldNumber = 1168,
    kScreenNuFieldNumber = 1274,
    kApaHuSVsIconsGrayOutFieldNumber = 1708,
    kApaPreconditionsCheckFieldNumber = 1772,
    kApaFeatureActiveHUFieldNumber = 1801,
    kApaHuFrameReadyFieldNumber = 1816,
    kUiVersionNumberFieldNumber = 2124,
    kApaHuRaSubFeatureStateFieldNumber = 2165,
    kApaHuBvmSubFeatureStateFieldNumber = 2700,
    kApaHuParkingIconsGrayOutFieldNumber = 2719,
    kApaHuCrossButtonFieldNumber = 2861,
    kApaHuParkOutSubFeatureStateFieldNumber = 3358,
    kApaHuSVsSubFeatureStateFieldNumber = 3456,
    kApaHuGarageParkSubFeatureStateFieldNumber = 3621,
  };
  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional .pb.mf_hmih.hu_park_in_sub_feature_state.HuParkInSubFeatureState apaHuParkInSubFeatureState = 3799;
  bool has_apahuparkinsubfeaturestate() const;
  private:
  bool _internal_has_apahuparkinsubfeaturestate() const;
  public:
  void clear_apahuparkinsubfeaturestate();
  ::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState apahuparkinsubfeaturestate() const;
  void set_apahuparkinsubfeaturestate(::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState value);
  private:
  ::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState _internal_apahuparkinsubfeaturestate() const;
  void _internal_set_apahuparkinsubfeaturestate(::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState value);
  public:

  // optional .pb.mf_hmih.hucurrent_feature_state.HUCurrentFeatureState apaHuCurrentFeaturesState = 288;
  bool has_apahucurrentfeaturesstate() const;
  private:
  bool _internal_has_apahucurrentfeaturesstate() const;
  public:
  void clear_apahucurrentfeaturesstate();
  ::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState apahucurrentfeaturesstate() const;
  void set_apahucurrentfeaturesstate(::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState value);
  private:
  ::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState _internal_apahucurrentfeaturesstate() const;
  void _internal_set_apahucurrentfeaturesstate(::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState value);
  public:

  // optional uint32 apaInteractionPauseCount = 394;
  bool has_apainteractionpausecount() const;
  private:
  bool _internal_has_apainteractionpausecount() const;
  public:
  void clear_apainteractionpausecount();
  ::PROTOBUF_NAMESPACE_ID::uint32 apainteractionpausecount() const;
  void set_apainteractionpausecount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apainteractionpausecount() const;
  void _internal_set_apainteractionpausecount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.ap_psm_app.hmimessage.HMIMessage message_nu = 911;
  bool has_message_nu() const;
  private:
  bool _internal_has_message_nu() const;
  public:
  void clear_message_nu();
  ::pb::ap_psm_app::hmimessage::HMIMessage message_nu() const;
  void set_message_nu(::pb::ap_psm_app::hmimessage::HMIMessage value);
  private:
  ::pb::ap_psm_app::hmimessage::HMIMessage _internal_message_nu() const;
  void _internal_set_message_nu(::pb::ap_psm_app::hmimessage::HMIMessage value);
  public:

  // optional .pb.mf_hmih.huintr_pause_condition.HUIntrPauseCondition apaIntrPauseCondition = 1013;
  bool has_apaintrpausecondition() const;
  private:
  bool _internal_has_apaintrpausecondition() const;
  public:
  void clear_apaintrpausecondition();
  ::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition apaintrpausecondition() const;
  void set_apaintrpausecondition(::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition value);
  private:
  ::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition _internal_apaintrpausecondition() const;
  void _internal_set_apaintrpausecondition(::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition value);
  public:

  // optional uint32 apaInteractionTimer = 1168;
  bool has_apainteractiontimer() const;
  private:
  bool _internal_has_apainteractiontimer() const;
  public:
  void clear_apainteractiontimer();
  ::PROTOBUF_NAMESPACE_ID::uint32 apainteractiontimer() const;
  void set_apainteractiontimer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apainteractiontimer() const;
  void _internal_set_apainteractiontimer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.mf_hmih.screen_head_unit.ScreenHeadUnit screen_nu = 1274;
  bool has_screen_nu() const;
  private:
  bool _internal_has_screen_nu() const;
  public:
  void clear_screen_nu();
  ::pb::mf_hmih::screen_head_unit::ScreenHeadUnit screen_nu() const;
  void set_screen_nu(::pb::mf_hmih::screen_head_unit::ScreenHeadUnit value);
  private:
  ::pb::mf_hmih::screen_head_unit::ScreenHeadUnit _internal_screen_nu() const;
  void _internal_set_screen_nu(::pb::mf_hmih::screen_head_unit::ScreenHeadUnit value);
  public:

  // optional uint32 apaHuSVsIconsGrayOut = 1708;
  bool has_apahusvsiconsgrayout() const;
  private:
  bool _internal_has_apahusvsiconsgrayout() const;
  public:
  void clear_apahusvsiconsgrayout();
  ::PROTOBUF_NAMESPACE_ID::uint32 apahusvsiconsgrayout() const;
  void set_apahusvsiconsgrayout(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apahusvsiconsgrayout() const;
  void _internal_set_apahusvsiconsgrayout(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 apaPreconditionsCheck = 1772;
  bool has_apapreconditionscheck() const;
  private:
  bool _internal_has_apapreconditionscheck() const;
  public:
  void clear_apapreconditionscheck();
  ::PROTOBUF_NAMESPACE_ID::uint32 apapreconditionscheck() const;
  void set_apapreconditionscheck(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apapreconditionscheck() const;
  void _internal_set_apapreconditionscheck(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool apaFeatureActiveHU = 1801;
  bool has_apafeatureactivehu() const;
  private:
  bool _internal_has_apafeatureactivehu() const;
  public:
  void clear_apafeatureactivehu();
  bool apafeatureactivehu() const;
  void set_apafeatureactivehu(bool value);
  private:
  bool _internal_apafeatureactivehu() const;
  void _internal_set_apafeatureactivehu(bool value);
  public:

  // optional .pb.mf_hmih.hu_frame_ready.HuFrameReady apaHuFrameReady = 1816;
  bool has_apahuframeready() const;
  private:
  bool _internal_has_apahuframeready() const;
  public:
  void clear_apahuframeready();
  ::pb::mf_hmih::hu_frame_ready::HuFrameReady apahuframeready() const;
  void set_apahuframeready(::pb::mf_hmih::hu_frame_ready::HuFrameReady value);
  private:
  ::pb::mf_hmih::hu_frame_ready::HuFrameReady _internal_apahuframeready() const;
  void _internal_set_apahuframeready(::pb::mf_hmih::hu_frame_ready::HuFrameReady value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.mf_hmih.hu_ra_sub_feature_state.HuRaSubFeatureState apaHuRaSubFeatureState = 2165;
  bool has_apahurasubfeaturestate() const;
  private:
  bool _internal_has_apahurasubfeaturestate() const;
  public:
  void clear_apahurasubfeaturestate();
  ::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState apahurasubfeaturestate() const;
  void set_apahurasubfeaturestate(::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState value);
  private:
  ::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState _internal_apahurasubfeaturestate() const;
  void _internal_set_apahurasubfeaturestate(::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState value);
  public:

  // optional .pb.mf_hmih.hu_bvm_sub_feature_state.HuBvmSubFeatureState apaHuBvmSubFeatureState = 2700;
  bool has_apahubvmsubfeaturestate() const;
  private:
  bool _internal_has_apahubvmsubfeaturestate() const;
  public:
  void clear_apahubvmsubfeaturestate();
  ::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState apahubvmsubfeaturestate() const;
  void set_apahubvmsubfeaturestate(::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState value);
  private:
  ::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState _internal_apahubvmsubfeaturestate() const;
  void _internal_set_apahubvmsubfeaturestate(::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState value);
  public:

  // optional uint32 apaHuParkingIconsGrayOut = 2719;
  bool has_apahuparkingiconsgrayout() const;
  private:
  bool _internal_has_apahuparkingiconsgrayout() const;
  public:
  void clear_apahuparkingiconsgrayout();
  ::PROTOBUF_NAMESPACE_ID::uint32 apahuparkingiconsgrayout() const;
  void set_apahuparkingiconsgrayout(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apahuparkingiconsgrayout() const;
  void _internal_set_apahuparkingiconsgrayout(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.mf_hmih.hu_cross_button.HuCrossButton apaHuCrossButton = 2861;
  bool has_apahucrossbutton() const;
  private:
  bool _internal_has_apahucrossbutton() const;
  public:
  void clear_apahucrossbutton();
  ::pb::mf_hmih::hu_cross_button::HuCrossButton apahucrossbutton() const;
  void set_apahucrossbutton(::pb::mf_hmih::hu_cross_button::HuCrossButton value);
  private:
  ::pb::mf_hmih::hu_cross_button::HuCrossButton _internal_apahucrossbutton() const;
  void _internal_set_apahucrossbutton(::pb::mf_hmih::hu_cross_button::HuCrossButton value);
  public:

  // optional .pb.mf_hmih.hu_park_out_sub_feature_state.HuParkOutSubFeatureState apaHuParkOutSubFeatureState = 3358;
  bool has_apahuparkoutsubfeaturestate() const;
  private:
  bool _internal_has_apahuparkoutsubfeaturestate() const;
  public:
  void clear_apahuparkoutsubfeaturestate();
  ::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState apahuparkoutsubfeaturestate() const;
  void set_apahuparkoutsubfeaturestate(::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState value);
  private:
  ::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState _internal_apahuparkoutsubfeaturestate() const;
  void _internal_set_apahuparkoutsubfeaturestate(::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState value);
  public:

  // optional .pb.mf_hmih.hu_svs_sub_feature_state.HuSVsSubFeatureState apaHuSVsSubFeatureState = 3456;
  bool has_apahusvssubfeaturestate() const;
  private:
  bool _internal_has_apahusvssubfeaturestate() const;
  public:
  void clear_apahusvssubfeaturestate();
  ::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState apahusvssubfeaturestate() const;
  void set_apahusvssubfeaturestate(::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState value);
  private:
  ::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState _internal_apahusvssubfeaturestate() const;
  void _internal_set_apahusvssubfeaturestate(::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState value);
  public:

  // optional .pb.mf_hmih.hu_garage_park_sub_feature_state.HuGarageParkSubFeatureState apaHuGarageParkSubFeatureState = 3621;
  bool has_apahugarageparksubfeaturestate() const;
  private:
  bool _internal_has_apahugarageparksubfeaturestate() const;
  public:
  void clear_apahugarageparksubfeaturestate();
  ::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState apahugarageparksubfeaturestate() const;
  void set_apahugarageparksubfeaturestate(::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState value);
  private:
  ::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState _internal_apahugarageparksubfeaturestate() const;
  void _internal_set_apahugarageparksubfeaturestate(::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState value);
  public:

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  int apahuparkinsubfeaturestate_;
  int apahucurrentfeaturesstate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apainteractionpausecount_;
  int message_nu_;
  int apaintrpausecondition_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apainteractiontimer_;
  int screen_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apahusvsiconsgrayout_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apapreconditionscheck_;
  bool apafeatureactivehu_;
  int apahuframeready_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  int apahurasubfeaturestate_;
  int apahubvmsubfeaturestate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apahuparkingiconsgrayout_;
  int apahucrossbutton_;
  int apahuparkoutsubfeaturestate_;
  int apahusvssubfeaturestate_;
  int apahugarageparksubfeaturestate_;
  friend struct ::TableStruct_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto;
};
// -------------------------------------------------------------------

class HeadUnitVisualizationPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port) */ {
 public:
  HeadUnitVisualizationPort_array_port();
  virtual ~HeadUnitVisualizationPort_array_port();

  HeadUnitVisualizationPort_array_port(const HeadUnitVisualizationPort_array_port& from);
  HeadUnitVisualizationPort_array_port(HeadUnitVisualizationPort_array_port&& from) noexcept
    : HeadUnitVisualizationPort_array_port() {
    *this = ::std::move(from);
  }

  inline HeadUnitVisualizationPort_array_port& operator=(const HeadUnitVisualizationPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeadUnitVisualizationPort_array_port& operator=(HeadUnitVisualizationPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HeadUnitVisualizationPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeadUnitVisualizationPort_array_port* internal_default_instance() {
    return reinterpret_cast<const HeadUnitVisualizationPort_array_port*>(
               &_HeadUnitVisualizationPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(HeadUnitVisualizationPort_array_port& a, HeadUnitVisualizationPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(HeadUnitVisualizationPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeadUnitVisualizationPort_array_port* New() const final {
    return CreateMaybeMessage<HeadUnitVisualizationPort_array_port>(nullptr);
  }

  HeadUnitVisualizationPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeadUnitVisualizationPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HeadUnitVisualizationPort_array_port& from);
  void MergeFrom(const HeadUnitVisualizationPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeadUnitVisualizationPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto);
    return ::descriptor_table_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1504,
  };
  // repeated .pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort data = 1504;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort >*
      mutable_data();
  private:
  const ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort& _internal_data(int index) const;
  ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort* _internal_add_data();
  public:
  const ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort& data(int index) const;
  ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort > data_;
  friend struct ::TableStruct_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HeadUnitVisualizationPort

// optional uint32 uiVersionNumber = 2124;
inline bool HeadUnitVisualizationPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void HeadUnitVisualizationPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void HeadUnitVisualizationPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  uiversionnumber_ = value;
}
inline void HeadUnitVisualizationPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool HeadUnitVisualizationPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool HeadUnitVisualizationPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& HeadUnitVisualizationPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& HeadUnitVisualizationPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* HeadUnitVisualizationPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* HeadUnitVisualizationPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* HeadUnitVisualizationPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void HeadUnitVisualizationPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.sSigHeader)
}

// optional .pb.mf_hmih.screen_head_unit.ScreenHeadUnit screen_nu = 1274;
inline bool HeadUnitVisualizationPort::_internal_has_screen_nu() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_screen_nu() const {
  return _internal_has_screen_nu();
}
inline void HeadUnitVisualizationPort::clear_screen_nu() {
  screen_nu_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::pb::mf_hmih::screen_head_unit::ScreenHeadUnit HeadUnitVisualizationPort::_internal_screen_nu() const {
  return static_cast< ::pb::mf_hmih::screen_head_unit::ScreenHeadUnit >(screen_nu_);
}
inline ::pb::mf_hmih::screen_head_unit::ScreenHeadUnit HeadUnitVisualizationPort::screen_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.screen_nu)
  return _internal_screen_nu();
}
inline void HeadUnitVisualizationPort::_internal_set_screen_nu(::pb::mf_hmih::screen_head_unit::ScreenHeadUnit value) {
  assert(::pb::mf_hmih::screen_head_unit::ScreenHeadUnit_IsValid(value));
  _has_bits_[0] |= 0x00000080u;
  screen_nu_ = value;
}
inline void HeadUnitVisualizationPort::set_screen_nu(::pb::mf_hmih::screen_head_unit::ScreenHeadUnit value) {
  _internal_set_screen_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.screen_nu)
}

// optional .pb.ap_psm_app.hmimessage.HMIMessage message_nu = 911;
inline bool HeadUnitVisualizationPort::_internal_has_message_nu() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_message_nu() const {
  return _internal_has_message_nu();
}
inline void HeadUnitVisualizationPort::clear_message_nu() {
  message_nu_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::pb::ap_psm_app::hmimessage::HMIMessage HeadUnitVisualizationPort::_internal_message_nu() const {
  return static_cast< ::pb::ap_psm_app::hmimessage::HMIMessage >(message_nu_);
}
inline ::pb::ap_psm_app::hmimessage::HMIMessage HeadUnitVisualizationPort::message_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.message_nu)
  return _internal_message_nu();
}
inline void HeadUnitVisualizationPort::_internal_set_message_nu(::pb::ap_psm_app::hmimessage::HMIMessage value) {
  assert(::pb::ap_psm_app::hmimessage::HMIMessage_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  message_nu_ = value;
}
inline void HeadUnitVisualizationPort::set_message_nu(::pb::ap_psm_app::hmimessage::HMIMessage value) {
  _internal_set_message_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.message_nu)
}

// optional bool apaFeatureActiveHU = 1801;
inline bool HeadUnitVisualizationPort::_internal_has_apafeatureactivehu() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apafeatureactivehu() const {
  return _internal_has_apafeatureactivehu();
}
inline void HeadUnitVisualizationPort::clear_apafeatureactivehu() {
  apafeatureactivehu_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool HeadUnitVisualizationPort::_internal_apafeatureactivehu() const {
  return apafeatureactivehu_;
}
inline bool HeadUnitVisualizationPort::apafeatureactivehu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaFeatureActiveHU)
  return _internal_apafeatureactivehu();
}
inline void HeadUnitVisualizationPort::_internal_set_apafeatureactivehu(bool value) {
  _has_bits_[0] |= 0x00000400u;
  apafeatureactivehu_ = value;
}
inline void HeadUnitVisualizationPort::set_apafeatureactivehu(bool value) {
  _internal_set_apafeatureactivehu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaFeatureActiveHU)
}

// optional .pb.mf_hmih.hucurrent_feature_state.HUCurrentFeatureState apaHuCurrentFeaturesState = 288;
inline bool HeadUnitVisualizationPort::_internal_has_apahucurrentfeaturesstate() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahucurrentfeaturesstate() const {
  return _internal_has_apahucurrentfeaturesstate();
}
inline void HeadUnitVisualizationPort::clear_apahucurrentfeaturesstate() {
  apahucurrentfeaturesstate_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState HeadUnitVisualizationPort::_internal_apahucurrentfeaturesstate() const {
  return static_cast< ::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState >(apahucurrentfeaturesstate_);
}
inline ::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState HeadUnitVisualizationPort::apahucurrentfeaturesstate() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuCurrentFeaturesState)
  return _internal_apahucurrentfeaturesstate();
}
inline void HeadUnitVisualizationPort::_internal_set_apahucurrentfeaturesstate(::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState value) {
  assert(::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  apahucurrentfeaturesstate_ = value;
}
inline void HeadUnitVisualizationPort::set_apahucurrentfeaturesstate(::pb::mf_hmih::hucurrent_feature_state::HUCurrentFeatureState value) {
  _internal_set_apahucurrentfeaturesstate(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuCurrentFeaturesState)
}

// optional uint32 apaPreconditionsCheck = 1772;
inline bool HeadUnitVisualizationPort::_internal_has_apapreconditionscheck() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apapreconditionscheck() const {
  return _internal_has_apapreconditionscheck();
}
inline void HeadUnitVisualizationPort::clear_apapreconditionscheck() {
  apapreconditionscheck_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::_internal_apapreconditionscheck() const {
  return apapreconditionscheck_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::apapreconditionscheck() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaPreconditionsCheck)
  return _internal_apapreconditionscheck();
}
inline void HeadUnitVisualizationPort::_internal_set_apapreconditionscheck(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  apapreconditionscheck_ = value;
}
inline void HeadUnitVisualizationPort::set_apapreconditionscheck(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apapreconditionscheck(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaPreconditionsCheck)
}

// optional .pb.mf_hmih.hu_cross_button.HuCrossButton apaHuCrossButton = 2861;
inline bool HeadUnitVisualizationPort::_internal_has_apahucrossbutton() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahucrossbutton() const {
  return _internal_has_apahucrossbutton();
}
inline void HeadUnitVisualizationPort::clear_apahucrossbutton() {
  apahucrossbutton_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::pb::mf_hmih::hu_cross_button::HuCrossButton HeadUnitVisualizationPort::_internal_apahucrossbutton() const {
  return static_cast< ::pb::mf_hmih::hu_cross_button::HuCrossButton >(apahucrossbutton_);
}
inline ::pb::mf_hmih::hu_cross_button::HuCrossButton HeadUnitVisualizationPort::apahucrossbutton() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuCrossButton)
  return _internal_apahucrossbutton();
}
inline void HeadUnitVisualizationPort::_internal_set_apahucrossbutton(::pb::mf_hmih::hu_cross_button::HuCrossButton value) {
  assert(::pb::mf_hmih::hu_cross_button::HuCrossButton_IsValid(value));
  _has_bits_[0] |= 0x00010000u;
  apahucrossbutton_ = value;
}
inline void HeadUnitVisualizationPort::set_apahucrossbutton(::pb::mf_hmih::hu_cross_button::HuCrossButton value) {
  _internal_set_apahucrossbutton(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuCrossButton)
}

// optional uint32 apaHuParkingIconsGrayOut = 2719;
inline bool HeadUnitVisualizationPort::_internal_has_apahuparkingiconsgrayout() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahuparkingiconsgrayout() const {
  return _internal_has_apahuparkingiconsgrayout();
}
inline void HeadUnitVisualizationPort::clear_apahuparkingiconsgrayout() {
  apahuparkingiconsgrayout_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::_internal_apahuparkingiconsgrayout() const {
  return apahuparkingiconsgrayout_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::apahuparkingiconsgrayout() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuParkingIconsGrayOut)
  return _internal_apahuparkingiconsgrayout();
}
inline void HeadUnitVisualizationPort::_internal_set_apahuparkingiconsgrayout(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  apahuparkingiconsgrayout_ = value;
}
inline void HeadUnitVisualizationPort::set_apahuparkingiconsgrayout(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apahuparkingiconsgrayout(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuParkingIconsGrayOut)
}

// optional uint32 apaHuSVsIconsGrayOut = 1708;
inline bool HeadUnitVisualizationPort::_internal_has_apahusvsiconsgrayout() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahusvsiconsgrayout() const {
  return _internal_has_apahusvsiconsgrayout();
}
inline void HeadUnitVisualizationPort::clear_apahusvsiconsgrayout() {
  apahusvsiconsgrayout_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::_internal_apahusvsiconsgrayout() const {
  return apahusvsiconsgrayout_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::apahusvsiconsgrayout() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuSVsIconsGrayOut)
  return _internal_apahusvsiconsgrayout();
}
inline void HeadUnitVisualizationPort::_internal_set_apahusvsiconsgrayout(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  apahusvsiconsgrayout_ = value;
}
inline void HeadUnitVisualizationPort::set_apahusvsiconsgrayout(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apahusvsiconsgrayout(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuSVsIconsGrayOut)
}

// optional .pb.mf_hmih.hu_park_in_sub_feature_state.HuParkInSubFeatureState apaHuParkInSubFeatureState = 3799;
inline bool HeadUnitVisualizationPort::_internal_has_apahuparkinsubfeaturestate() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahuparkinsubfeaturestate() const {
  return _internal_has_apahuparkinsubfeaturestate();
}
inline void HeadUnitVisualizationPort::clear_apahuparkinsubfeaturestate() {
  apahuparkinsubfeaturestate_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState HeadUnitVisualizationPort::_internal_apahuparkinsubfeaturestate() const {
  return static_cast< ::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState >(apahuparkinsubfeaturestate_);
}
inline ::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState HeadUnitVisualizationPort::apahuparkinsubfeaturestate() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuParkInSubFeatureState)
  return _internal_apahuparkinsubfeaturestate();
}
inline void HeadUnitVisualizationPort::_internal_set_apahuparkinsubfeaturestate(::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState value) {
  assert(::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  apahuparkinsubfeaturestate_ = value;
}
inline void HeadUnitVisualizationPort::set_apahuparkinsubfeaturestate(::pb::mf_hmih::hu_park_in_sub_feature_state::HuParkInSubFeatureState value) {
  _internal_set_apahuparkinsubfeaturestate(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuParkInSubFeatureState)
}

// optional .pb.mf_hmih.hu_park_out_sub_feature_state.HuParkOutSubFeatureState apaHuParkOutSubFeatureState = 3358;
inline bool HeadUnitVisualizationPort::_internal_has_apahuparkoutsubfeaturestate() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahuparkoutsubfeaturestate() const {
  return _internal_has_apahuparkoutsubfeaturestate();
}
inline void HeadUnitVisualizationPort::clear_apahuparkoutsubfeaturestate() {
  apahuparkoutsubfeaturestate_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState HeadUnitVisualizationPort::_internal_apahuparkoutsubfeaturestate() const {
  return static_cast< ::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState >(apahuparkoutsubfeaturestate_);
}
inline ::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState HeadUnitVisualizationPort::apahuparkoutsubfeaturestate() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuParkOutSubFeatureState)
  return _internal_apahuparkoutsubfeaturestate();
}
inline void HeadUnitVisualizationPort::_internal_set_apahuparkoutsubfeaturestate(::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState value) {
  assert(::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState_IsValid(value));
  _has_bits_[0] |= 0x00020000u;
  apahuparkoutsubfeaturestate_ = value;
}
inline void HeadUnitVisualizationPort::set_apahuparkoutsubfeaturestate(::pb::mf_hmih::hu_park_out_sub_feature_state::HuParkOutSubFeatureState value) {
  _internal_set_apahuparkoutsubfeaturestate(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuParkOutSubFeatureState)
}

// optional .pb.mf_hmih.hu_garage_park_sub_feature_state.HuGarageParkSubFeatureState apaHuGarageParkSubFeatureState = 3621;
inline bool HeadUnitVisualizationPort::_internal_has_apahugarageparksubfeaturestate() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahugarageparksubfeaturestate() const {
  return _internal_has_apahugarageparksubfeaturestate();
}
inline void HeadUnitVisualizationPort::clear_apahugarageparksubfeaturestate() {
  apahugarageparksubfeaturestate_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState HeadUnitVisualizationPort::_internal_apahugarageparksubfeaturestate() const {
  return static_cast< ::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState >(apahugarageparksubfeaturestate_);
}
inline ::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState HeadUnitVisualizationPort::apahugarageparksubfeaturestate() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuGarageParkSubFeatureState)
  return _internal_apahugarageparksubfeaturestate();
}
inline void HeadUnitVisualizationPort::_internal_set_apahugarageparksubfeaturestate(::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState value) {
  assert(::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState_IsValid(value));
  _has_bits_[0] |= 0x00080000u;
  apahugarageparksubfeaturestate_ = value;
}
inline void HeadUnitVisualizationPort::set_apahugarageparksubfeaturestate(::pb::mf_hmih::hu_garage_park_sub_feature_state::HuGarageParkSubFeatureState value) {
  _internal_set_apahugarageparksubfeaturestate(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuGarageParkSubFeatureState)
}

// optional .pb.mf_hmih.hu_svs_sub_feature_state.HuSVsSubFeatureState apaHuSVsSubFeatureState = 3456;
inline bool HeadUnitVisualizationPort::_internal_has_apahusvssubfeaturestate() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahusvssubfeaturestate() const {
  return _internal_has_apahusvssubfeaturestate();
}
inline void HeadUnitVisualizationPort::clear_apahusvssubfeaturestate() {
  apahusvssubfeaturestate_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState HeadUnitVisualizationPort::_internal_apahusvssubfeaturestate() const {
  return static_cast< ::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState >(apahusvssubfeaturestate_);
}
inline ::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState HeadUnitVisualizationPort::apahusvssubfeaturestate() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuSVsSubFeatureState)
  return _internal_apahusvssubfeaturestate();
}
inline void HeadUnitVisualizationPort::_internal_set_apahusvssubfeaturestate(::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState value) {
  assert(::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState_IsValid(value));
  _has_bits_[0] |= 0x00040000u;
  apahusvssubfeaturestate_ = value;
}
inline void HeadUnitVisualizationPort::set_apahusvssubfeaturestate(::pb::mf_hmih::hu_svs_sub_feature_state::HuSVsSubFeatureState value) {
  _internal_set_apahusvssubfeaturestate(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuSVsSubFeatureState)
}

// optional .pb.mf_hmih.hu_ra_sub_feature_state.HuRaSubFeatureState apaHuRaSubFeatureState = 2165;
inline bool HeadUnitVisualizationPort::_internal_has_apahurasubfeaturestate() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahurasubfeaturestate() const {
  return _internal_has_apahurasubfeaturestate();
}
inline void HeadUnitVisualizationPort::clear_apahurasubfeaturestate() {
  apahurasubfeaturestate_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState HeadUnitVisualizationPort::_internal_apahurasubfeaturestate() const {
  return static_cast< ::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState >(apahurasubfeaturestate_);
}
inline ::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState HeadUnitVisualizationPort::apahurasubfeaturestate() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuRaSubFeatureState)
  return _internal_apahurasubfeaturestate();
}
inline void HeadUnitVisualizationPort::_internal_set_apahurasubfeaturestate(::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState value) {
  assert(::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState_IsValid(value));
  _has_bits_[0] |= 0x00002000u;
  apahurasubfeaturestate_ = value;
}
inline void HeadUnitVisualizationPort::set_apahurasubfeaturestate(::pb::mf_hmih::hu_ra_sub_feature_state::HuRaSubFeatureState value) {
  _internal_set_apahurasubfeaturestate(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuRaSubFeatureState)
}

// optional .pb.mf_hmih.hu_bvm_sub_feature_state.HuBvmSubFeatureState apaHuBvmSubFeatureState = 2700;
inline bool HeadUnitVisualizationPort::_internal_has_apahubvmsubfeaturestate() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahubvmsubfeaturestate() const {
  return _internal_has_apahubvmsubfeaturestate();
}
inline void HeadUnitVisualizationPort::clear_apahubvmsubfeaturestate() {
  apahubvmsubfeaturestate_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState HeadUnitVisualizationPort::_internal_apahubvmsubfeaturestate() const {
  return static_cast< ::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState >(apahubvmsubfeaturestate_);
}
inline ::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState HeadUnitVisualizationPort::apahubvmsubfeaturestate() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuBvmSubFeatureState)
  return _internal_apahubvmsubfeaturestate();
}
inline void HeadUnitVisualizationPort::_internal_set_apahubvmsubfeaturestate(::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState value) {
  assert(::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState_IsValid(value));
  _has_bits_[0] |= 0x00004000u;
  apahubvmsubfeaturestate_ = value;
}
inline void HeadUnitVisualizationPort::set_apahubvmsubfeaturestate(::pb::mf_hmih::hu_bvm_sub_feature_state::HuBvmSubFeatureState value) {
  _internal_set_apahubvmsubfeaturestate(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuBvmSubFeatureState)
}

// optional uint32 apaInteractionPauseCount = 394;
inline bool HeadUnitVisualizationPort::_internal_has_apainteractionpausecount() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apainteractionpausecount() const {
  return _internal_has_apainteractionpausecount();
}
inline void HeadUnitVisualizationPort::clear_apainteractionpausecount() {
  apainteractionpausecount_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::_internal_apainteractionpausecount() const {
  return apainteractionpausecount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::apainteractionpausecount() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaInteractionPauseCount)
  return _internal_apainteractionpausecount();
}
inline void HeadUnitVisualizationPort::_internal_set_apainteractionpausecount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  apainteractionpausecount_ = value;
}
inline void HeadUnitVisualizationPort::set_apainteractionpausecount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apainteractionpausecount(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaInteractionPauseCount)
}

// optional uint32 apaInteractionTimer = 1168;
inline bool HeadUnitVisualizationPort::_internal_has_apainteractiontimer() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apainteractiontimer() const {
  return _internal_has_apainteractiontimer();
}
inline void HeadUnitVisualizationPort::clear_apainteractiontimer() {
  apainteractiontimer_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::_internal_apainteractiontimer() const {
  return apainteractiontimer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeadUnitVisualizationPort::apainteractiontimer() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaInteractionTimer)
  return _internal_apainteractiontimer();
}
inline void HeadUnitVisualizationPort::_internal_set_apainteractiontimer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  apainteractiontimer_ = value;
}
inline void HeadUnitVisualizationPort::set_apainteractiontimer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apainteractiontimer(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaInteractionTimer)
}

// optional .pb.mf_hmih.huintr_pause_condition.HUIntrPauseCondition apaIntrPauseCondition = 1013;
inline bool HeadUnitVisualizationPort::_internal_has_apaintrpausecondition() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apaintrpausecondition() const {
  return _internal_has_apaintrpausecondition();
}
inline void HeadUnitVisualizationPort::clear_apaintrpausecondition() {
  apaintrpausecondition_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition HeadUnitVisualizationPort::_internal_apaintrpausecondition() const {
  return static_cast< ::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition >(apaintrpausecondition_);
}
inline ::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition HeadUnitVisualizationPort::apaintrpausecondition() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaIntrPauseCondition)
  return _internal_apaintrpausecondition();
}
inline void HeadUnitVisualizationPort::_internal_set_apaintrpausecondition(::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition value) {
  assert(::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  apaintrpausecondition_ = value;
}
inline void HeadUnitVisualizationPort::set_apaintrpausecondition(::pb::mf_hmih::huintr_pause_condition::HUIntrPauseCondition value) {
  _internal_set_apaintrpausecondition(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaIntrPauseCondition)
}

// optional .pb.mf_hmih.hu_frame_ready.HuFrameReady apaHuFrameReady = 1816;
inline bool HeadUnitVisualizationPort::_internal_has_apahuframeready() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool HeadUnitVisualizationPort::has_apahuframeready() const {
  return _internal_has_apahuframeready();
}
inline void HeadUnitVisualizationPort::clear_apahuframeready() {
  apahuframeready_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::pb::mf_hmih::hu_frame_ready::HuFrameReady HeadUnitVisualizationPort::_internal_apahuframeready() const {
  return static_cast< ::pb::mf_hmih::hu_frame_ready::HuFrameReady >(apahuframeready_);
}
inline ::pb::mf_hmih::hu_frame_ready::HuFrameReady HeadUnitVisualizationPort::apahuframeready() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuFrameReady)
  return _internal_apahuframeready();
}
inline void HeadUnitVisualizationPort::_internal_set_apahuframeready(::pb::mf_hmih::hu_frame_ready::HuFrameReady value) {
  assert(::pb::mf_hmih::hu_frame_ready::HuFrameReady_IsValid(value));
  _has_bits_[0] |= 0x00000800u;
  apahuframeready_ = value;
}
inline void HeadUnitVisualizationPort::set_apahuframeready(::pb::mf_hmih::hu_frame_ready::HuFrameReady value) {
  _internal_set_apahuframeready(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort.apaHuFrameReady)
}

// -------------------------------------------------------------------

// HeadUnitVisualizationPort_array_port

// repeated .pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort data = 1504;
inline int HeadUnitVisualizationPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int HeadUnitVisualizationPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void HeadUnitVisualizationPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort* HeadUnitVisualizationPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort >*
HeadUnitVisualizationPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port.data)
  return &data_;
}
inline const ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort& HeadUnitVisualizationPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort& HeadUnitVisualizationPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort* HeadUnitVisualizationPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort* HeadUnitVisualizationPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::head_unit_visualization_port::HeadUnitVisualizationPort >&
HeadUnitVisualizationPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.head_unit_visualization_port.HeadUnitVisualizationPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace head_unit_visualization_port
}  // namespace mf_hmih
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fhead_5funit_5fvisualization_5fport_2eproto
