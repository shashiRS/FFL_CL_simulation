// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/visu_hmidata.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fvisu_5fhmidata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fvisu_5fhmidata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ap_hmitoap/gesture_code.pb.h"
#include "ap_hmitoap/blind_spot_view.pb.h"
#include "ap_hmitoap/parking_augmentation_type.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fvisu_5fhmidata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mf_5fhmih_2fvisu_5fhmidata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fvisu_5fhmidata_2eproto;
namespace pb {
namespace mf_hmih {
namespace visu_hmidata {
class VisuHMIData;
class VisuHMIDataDefaultTypeInternal;
extern VisuHMIDataDefaultTypeInternal _VisuHMIData_default_instance_;
class VisuHMIData_array_port;
class VisuHMIData_array_portDefaultTypeInternal;
extern VisuHMIData_array_portDefaultTypeInternal _VisuHMIData_array_port_default_instance_;
}  // namespace visu_hmidata
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::mf_hmih::visu_hmidata::VisuHMIData* Arena::CreateMaybeMessage<::pb::mf_hmih::visu_hmidata::VisuHMIData>(Arena*);
template<> ::pb::mf_hmih::visu_hmidata::VisuHMIData_array_port* Arena::CreateMaybeMessage<::pb::mf_hmih::visu_hmidata::VisuHMIData_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace mf_hmih {
namespace visu_hmidata {

// ===================================================================

class VisuHMIData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.visu_hmidata.VisuHMIData) */ {
 public:
  VisuHMIData();
  virtual ~VisuHMIData();

  VisuHMIData(const VisuHMIData& from);
  VisuHMIData(VisuHMIData&& from) noexcept
    : VisuHMIData() {
    *this = ::std::move(from);
  }

  inline VisuHMIData& operator=(const VisuHMIData& from) {
    CopyFrom(from);
    return *this;
  }
  inline VisuHMIData& operator=(VisuHMIData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VisuHMIData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VisuHMIData* internal_default_instance() {
    return reinterpret_cast<const VisuHMIData*>(
               &_VisuHMIData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VisuHMIData& a, VisuHMIData& b) {
    a.Swap(&b);
  }
  inline void Swap(VisuHMIData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VisuHMIData* New() const final {
    return CreateMaybeMessage<VisuHMIData>(nullptr);
  }

  VisuHMIData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VisuHMIData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VisuHMIData& from);
  void MergeFrom(const VisuHMIData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VisuHMIData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.visu_hmidata.VisuHMIData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fvisu_5fhmidata_2eproto);
    return ::descriptor_table_mf_5fhmih_2fvisu_5fhmidata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVisibilityTagsNuFieldNumber = 2646,
    kGestureCodeNuU8FieldNumber = 4066,
    kParkingAugmentationTypeNuFieldNumber = 370,
    kGestureFingerNuFieldNumber = 1012,
    kGestureCounterNuFieldNumber = 1476,
    kReverseAssistStatusNuFieldNumber = 1915,
    kFirstClickEventXPxFieldNumber = 2481,
    kSecondClickEventXPxFieldNumber = 2654,
    kIsSequenceNuFieldNumber = 1750,
    kStartVideoRecorderReqNuFieldNumber = 4086,
    kStartScreenCaptureReqNuFieldNumber = 1771,
    kRimProtectionStatusNuFieldNumber = 3107,
    kSecondClickEventYPxFieldNumber = 3306,
    kBlindSpotViewTypeNuFieldNumber = 3747,
    kFirstClickEventYPxFieldNumber = 3845,
  };
  // repeated bool visibilityTags_nu = 2646;
  int visibilitytags_nu_size() const;
  private:
  int _internal_visibilitytags_nu_size() const;
  public:
  void clear_visibilitytags_nu();
  private:
  bool _internal_visibilitytags_nu(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_visibilitytags_nu() const;
  void _internal_add_visibilitytags_nu(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_visibilitytags_nu();
  public:
  bool visibilitytags_nu(int index) const;
  void set_visibilitytags_nu(int index, bool value);
  void add_visibilitytags_nu(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      visibilitytags_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_visibilitytags_nu();

  // optional .pb.ap_hmitoap.gesture_code.GestureCode gestureCode_nu_u8 = 4066;
  bool has_gesturecode_nu_u8() const;
  private:
  bool _internal_has_gesturecode_nu_u8() const;
  public:
  void clear_gesturecode_nu_u8();
  ::pb::ap_hmitoap::gesture_code::GestureCode gesturecode_nu_u8() const;
  void set_gesturecode_nu_u8(::pb::ap_hmitoap::gesture_code::GestureCode value);
  private:
  ::pb::ap_hmitoap::gesture_code::GestureCode _internal_gesturecode_nu_u8() const;
  void _internal_set_gesturecode_nu_u8(::pb::ap_hmitoap::gesture_code::GestureCode value);
  public:

  // optional .pb.ap_hmitoap.parking_augmentation_type.ParkingAugmentationType parkingAugmentationType_nu = 370;
  bool has_parkingaugmentationtype_nu() const;
  private:
  bool _internal_has_parkingaugmentationtype_nu() const;
  public:
  void clear_parkingaugmentationtype_nu();
  ::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType parkingaugmentationtype_nu() const;
  void set_parkingaugmentationtype_nu(::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType value);
  private:
  ::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType _internal_parkingaugmentationtype_nu() const;
  void _internal_set_parkingaugmentationtype_nu(::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType value);
  public:

  // optional uint32 gestureFinger_nu = 1012;
  bool has_gesturefinger_nu() const;
  private:
  bool _internal_has_gesturefinger_nu() const;
  public:
  void clear_gesturefinger_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 gesturefinger_nu() const;
  void set_gesturefinger_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gesturefinger_nu() const;
  void _internal_set_gesturefinger_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gestureCounter_nu = 1476;
  bool has_gesturecounter_nu() const;
  private:
  bool _internal_has_gesturecounter_nu() const;
  public:
  void clear_gesturecounter_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 gesturecounter_nu() const;
  void set_gesturecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gesturecounter_nu() const;
  void _internal_set_gesturecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool reverseAssistStatus_nu = 1915;
  bool has_reverseassiststatus_nu() const;
  private:
  bool _internal_has_reverseassiststatus_nu() const;
  public:
  void clear_reverseassiststatus_nu();
  bool reverseassiststatus_nu() const;
  void set_reverseassiststatus_nu(bool value);
  private:
  bool _internal_reverseassiststatus_nu() const;
  void _internal_set_reverseassiststatus_nu(bool value);
  public:

  // optional float firstClickEventX_px = 2481;
  bool has_firstclickeventx_px() const;
  private:
  bool _internal_has_firstclickeventx_px() const;
  public:
  void clear_firstclickeventx_px();
  float firstclickeventx_px() const;
  void set_firstclickeventx_px(float value);
  private:
  float _internal_firstclickeventx_px() const;
  void _internal_set_firstclickeventx_px(float value);
  public:

  // optional float secondClickEventX_px = 2654;
  bool has_secondclickeventx_px() const;
  private:
  bool _internal_has_secondclickeventx_px() const;
  public:
  void clear_secondclickeventx_px();
  float secondclickeventx_px() const;
  void set_secondclickeventx_px(float value);
  private:
  float _internal_secondclickeventx_px() const;
  void _internal_set_secondclickeventx_px(float value);
  public:

  // optional bool isSequence_nu = 1750;
  bool has_issequence_nu() const;
  private:
  bool _internal_has_issequence_nu() const;
  public:
  void clear_issequence_nu();
  bool issequence_nu() const;
  void set_issequence_nu(bool value);
  private:
  bool _internal_issequence_nu() const;
  void _internal_set_issequence_nu(bool value);
  public:

  // optional bool startVideoRecorderReq_nu = 4086;
  bool has_startvideorecorderreq_nu() const;
  private:
  bool _internal_has_startvideorecorderreq_nu() const;
  public:
  void clear_startvideorecorderreq_nu();
  bool startvideorecorderreq_nu() const;
  void set_startvideorecorderreq_nu(bool value);
  private:
  bool _internal_startvideorecorderreq_nu() const;
  void _internal_set_startvideorecorderreq_nu(bool value);
  public:

  // optional bool startScreenCaptureReq_nu = 1771;
  bool has_startscreencapturereq_nu() const;
  private:
  bool _internal_has_startscreencapturereq_nu() const;
  public:
  void clear_startscreencapturereq_nu();
  bool startscreencapturereq_nu() const;
  void set_startscreencapturereq_nu(bool value);
  private:
  bool _internal_startscreencapturereq_nu() const;
  void _internal_set_startscreencapturereq_nu(bool value);
  public:

  // optional bool rimProtectionStatus_nu = 3107;
  bool has_rimprotectionstatus_nu() const;
  private:
  bool _internal_has_rimprotectionstatus_nu() const;
  public:
  void clear_rimprotectionstatus_nu();
  bool rimprotectionstatus_nu() const;
  void set_rimprotectionstatus_nu(bool value);
  private:
  bool _internal_rimprotectionstatus_nu() const;
  void _internal_set_rimprotectionstatus_nu(bool value);
  public:

  // optional float secondClickEventY_px = 3306;
  bool has_secondclickeventy_px() const;
  private:
  bool _internal_has_secondclickeventy_px() const;
  public:
  void clear_secondclickeventy_px();
  float secondclickeventy_px() const;
  void set_secondclickeventy_px(float value);
  private:
  float _internal_secondclickeventy_px() const;
  void _internal_set_secondclickeventy_px(float value);
  public:

  // optional .pb.ap_hmitoap.blind_spot_view.BlindSpotView blindSpotViewType_nu = 3747;
  bool has_blindspotviewtype_nu() const;
  private:
  bool _internal_has_blindspotviewtype_nu() const;
  public:
  void clear_blindspotviewtype_nu();
  ::pb::ap_hmitoap::blind_spot_view::BlindSpotView blindspotviewtype_nu() const;
  void set_blindspotviewtype_nu(::pb::ap_hmitoap::blind_spot_view::BlindSpotView value);
  private:
  ::pb::ap_hmitoap::blind_spot_view::BlindSpotView _internal_blindspotviewtype_nu() const;
  void _internal_set_blindspotviewtype_nu(::pb::ap_hmitoap::blind_spot_view::BlindSpotView value);
  public:

  // optional float firstClickEventY_px = 3845;
  bool has_firstclickeventy_px() const;
  private:
  bool _internal_has_firstclickeventy_px() const;
  public:
  void clear_firstclickeventy_px();
  float firstclickeventy_px() const;
  void set_firstclickeventy_px(float value);
  private:
  float _internal_firstclickeventy_px() const;
  void _internal_set_firstclickeventy_px(float value);
  public:

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.visu_hmidata.VisuHMIData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > visibilitytags_nu_;
  int gesturecode_nu_u8_;
  int parkingaugmentationtype_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gesturefinger_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gesturecounter_nu_;
  bool reverseassiststatus_nu_;
  float firstclickeventx_px_;
  float secondclickeventx_px_;
  bool issequence_nu_;
  bool startvideorecorderreq_nu_;
  bool startscreencapturereq_nu_;
  bool rimprotectionstatus_nu_;
  float secondclickeventy_px_;
  int blindspotviewtype_nu_;
  float firstclickeventy_px_;
  friend struct ::TableStruct_mf_5fhmih_2fvisu_5fhmidata_2eproto;
};
// -------------------------------------------------------------------

class VisuHMIData_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.visu_hmidata.VisuHMIData_array_port) */ {
 public:
  VisuHMIData_array_port();
  virtual ~VisuHMIData_array_port();

  VisuHMIData_array_port(const VisuHMIData_array_port& from);
  VisuHMIData_array_port(VisuHMIData_array_port&& from) noexcept
    : VisuHMIData_array_port() {
    *this = ::std::move(from);
  }

  inline VisuHMIData_array_port& operator=(const VisuHMIData_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline VisuHMIData_array_port& operator=(VisuHMIData_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VisuHMIData_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VisuHMIData_array_port* internal_default_instance() {
    return reinterpret_cast<const VisuHMIData_array_port*>(
               &_VisuHMIData_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(VisuHMIData_array_port& a, VisuHMIData_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(VisuHMIData_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VisuHMIData_array_port* New() const final {
    return CreateMaybeMessage<VisuHMIData_array_port>(nullptr);
  }

  VisuHMIData_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VisuHMIData_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VisuHMIData_array_port& from);
  void MergeFrom(const VisuHMIData_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VisuHMIData_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.visu_hmidata.VisuHMIData_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fvisu_5fhmidata_2eproto);
    return ::descriptor_table_mf_5fhmih_2fvisu_5fhmidata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1466,
  };
  // repeated .pb.mf_hmih.visu_hmidata.VisuHMIData data = 1466;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::mf_hmih::visu_hmidata::VisuHMIData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::visu_hmidata::VisuHMIData >*
      mutable_data();
  private:
  const ::pb::mf_hmih::visu_hmidata::VisuHMIData& _internal_data(int index) const;
  ::pb::mf_hmih::visu_hmidata::VisuHMIData* _internal_add_data();
  public:
  const ::pb::mf_hmih::visu_hmidata::VisuHMIData& data(int index) const;
  ::pb::mf_hmih::visu_hmidata::VisuHMIData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::visu_hmidata::VisuHMIData >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.visu_hmidata.VisuHMIData_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::visu_hmidata::VisuHMIData > data_;
  friend struct ::TableStruct_mf_5fhmih_2fvisu_5fhmidata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VisuHMIData

// optional float firstClickEventX_px = 2481;
inline bool VisuHMIData::_internal_has_firstclickeventx_px() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool VisuHMIData::has_firstclickeventx_px() const {
  return _internal_has_firstclickeventx_px();
}
inline void VisuHMIData::clear_firstclickeventx_px() {
  firstclickeventx_px_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float VisuHMIData::_internal_firstclickeventx_px() const {
  return firstclickeventx_px_;
}
inline float VisuHMIData::firstclickeventx_px() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.firstClickEventX_px)
  return _internal_firstclickeventx_px();
}
inline void VisuHMIData::_internal_set_firstclickeventx_px(float value) {
  _has_bits_[0] |= 0x00000020u;
  firstclickeventx_px_ = value;
}
inline void VisuHMIData::set_firstclickeventx_px(float value) {
  _internal_set_firstclickeventx_px(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.firstClickEventX_px)
}

// optional float firstClickEventY_px = 3845;
inline bool VisuHMIData::_internal_has_firstclickeventy_px() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool VisuHMIData::has_firstclickeventy_px() const {
  return _internal_has_firstclickeventy_px();
}
inline void VisuHMIData::clear_firstclickeventy_px() {
  firstclickeventy_px_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline float VisuHMIData::_internal_firstclickeventy_px() const {
  return firstclickeventy_px_;
}
inline float VisuHMIData::firstclickeventy_px() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.firstClickEventY_px)
  return _internal_firstclickeventy_px();
}
inline void VisuHMIData::_internal_set_firstclickeventy_px(float value) {
  _has_bits_[0] |= 0x00002000u;
  firstclickeventy_px_ = value;
}
inline void VisuHMIData::set_firstclickeventy_px(float value) {
  _internal_set_firstclickeventy_px(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.firstClickEventY_px)
}

// optional float secondClickEventX_px = 2654;
inline bool VisuHMIData::_internal_has_secondclickeventx_px() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool VisuHMIData::has_secondclickeventx_px() const {
  return _internal_has_secondclickeventx_px();
}
inline void VisuHMIData::clear_secondclickeventx_px() {
  secondclickeventx_px_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float VisuHMIData::_internal_secondclickeventx_px() const {
  return secondclickeventx_px_;
}
inline float VisuHMIData::secondclickeventx_px() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.secondClickEventX_px)
  return _internal_secondclickeventx_px();
}
inline void VisuHMIData::_internal_set_secondclickeventx_px(float value) {
  _has_bits_[0] |= 0x00000040u;
  secondclickeventx_px_ = value;
}
inline void VisuHMIData::set_secondclickeventx_px(float value) {
  _internal_set_secondclickeventx_px(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.secondClickEventX_px)
}

// optional float secondClickEventY_px = 3306;
inline bool VisuHMIData::_internal_has_secondclickeventy_px() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool VisuHMIData::has_secondclickeventy_px() const {
  return _internal_has_secondclickeventy_px();
}
inline void VisuHMIData::clear_secondclickeventy_px() {
  secondclickeventy_px_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline float VisuHMIData::_internal_secondclickeventy_px() const {
  return secondclickeventy_px_;
}
inline float VisuHMIData::secondclickeventy_px() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.secondClickEventY_px)
  return _internal_secondclickeventy_px();
}
inline void VisuHMIData::_internal_set_secondclickeventy_px(float value) {
  _has_bits_[0] |= 0x00000800u;
  secondclickeventy_px_ = value;
}
inline void VisuHMIData::set_secondclickeventy_px(float value) {
  _internal_set_secondclickeventy_px(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.secondClickEventY_px)
}

// optional uint32 gestureFinger_nu = 1012;
inline bool VisuHMIData::_internal_has_gesturefinger_nu() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool VisuHMIData::has_gesturefinger_nu() const {
  return _internal_has_gesturefinger_nu();
}
inline void VisuHMIData::clear_gesturefinger_nu() {
  gesturefinger_nu_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuHMIData::_internal_gesturefinger_nu() const {
  return gesturefinger_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuHMIData::gesturefinger_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.gestureFinger_nu)
  return _internal_gesturefinger_nu();
}
inline void VisuHMIData::_internal_set_gesturefinger_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  gesturefinger_nu_ = value;
}
inline void VisuHMIData::set_gesturefinger_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gesturefinger_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.gestureFinger_nu)
}

// optional uint32 gestureCounter_nu = 1476;
inline bool VisuHMIData::_internal_has_gesturecounter_nu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool VisuHMIData::has_gesturecounter_nu() const {
  return _internal_has_gesturecounter_nu();
}
inline void VisuHMIData::clear_gesturecounter_nu() {
  gesturecounter_nu_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuHMIData::_internal_gesturecounter_nu() const {
  return gesturecounter_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuHMIData::gesturecounter_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.gestureCounter_nu)
  return _internal_gesturecounter_nu();
}
inline void VisuHMIData::_internal_set_gesturecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  gesturecounter_nu_ = value;
}
inline void VisuHMIData::set_gesturecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gesturecounter_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.gestureCounter_nu)
}

// optional .pb.ap_hmitoap.gesture_code.GestureCode gestureCode_nu_u8 = 4066;
inline bool VisuHMIData::_internal_has_gesturecode_nu_u8() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool VisuHMIData::has_gesturecode_nu_u8() const {
  return _internal_has_gesturecode_nu_u8();
}
inline void VisuHMIData::clear_gesturecode_nu_u8() {
  gesturecode_nu_u8_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::pb::ap_hmitoap::gesture_code::GestureCode VisuHMIData::_internal_gesturecode_nu_u8() const {
  return static_cast< ::pb::ap_hmitoap::gesture_code::GestureCode >(gesturecode_nu_u8_);
}
inline ::pb::ap_hmitoap::gesture_code::GestureCode VisuHMIData::gesturecode_nu_u8() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.gestureCode_nu_u8)
  return _internal_gesturecode_nu_u8();
}
inline void VisuHMIData::_internal_set_gesturecode_nu_u8(::pb::ap_hmitoap::gesture_code::GestureCode value) {
  assert(::pb::ap_hmitoap::gesture_code::GestureCode_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  gesturecode_nu_u8_ = value;
}
inline void VisuHMIData::set_gesturecode_nu_u8(::pb::ap_hmitoap::gesture_code::GestureCode value) {
  _internal_set_gesturecode_nu_u8(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.gestureCode_nu_u8)
}

// optional .pb.ap_hmitoap.blind_spot_view.BlindSpotView blindSpotViewType_nu = 3747;
inline bool VisuHMIData::_internal_has_blindspotviewtype_nu() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool VisuHMIData::has_blindspotviewtype_nu() const {
  return _internal_has_blindspotviewtype_nu();
}
inline void VisuHMIData::clear_blindspotviewtype_nu() {
  blindspotviewtype_nu_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::pb::ap_hmitoap::blind_spot_view::BlindSpotView VisuHMIData::_internal_blindspotviewtype_nu() const {
  return static_cast< ::pb::ap_hmitoap::blind_spot_view::BlindSpotView >(blindspotviewtype_nu_);
}
inline ::pb::ap_hmitoap::blind_spot_view::BlindSpotView VisuHMIData::blindspotviewtype_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.blindSpotViewType_nu)
  return _internal_blindspotviewtype_nu();
}
inline void VisuHMIData::_internal_set_blindspotviewtype_nu(::pb::ap_hmitoap::blind_spot_view::BlindSpotView value) {
  assert(::pb::ap_hmitoap::blind_spot_view::BlindSpotView_IsValid(value));
  _has_bits_[0] |= 0x00001000u;
  blindspotviewtype_nu_ = value;
}
inline void VisuHMIData::set_blindspotviewtype_nu(::pb::ap_hmitoap::blind_spot_view::BlindSpotView value) {
  _internal_set_blindspotviewtype_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.blindSpotViewType_nu)
}

// repeated bool visibilityTags_nu = 2646;
inline int VisuHMIData::_internal_visibilitytags_nu_size() const {
  return visibilitytags_nu_.size();
}
inline int VisuHMIData::visibilitytags_nu_size() const {
  return _internal_visibilitytags_nu_size();
}
inline void VisuHMIData::clear_visibilitytags_nu() {
  visibilitytags_nu_.Clear();
}
inline bool VisuHMIData::_internal_visibilitytags_nu(int index) const {
  return visibilitytags_nu_.Get(index);
}
inline bool VisuHMIData::visibilitytags_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.visibilityTags_nu)
  return _internal_visibilitytags_nu(index);
}
inline void VisuHMIData::set_visibilitytags_nu(int index, bool value) {
  visibilitytags_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.visibilityTags_nu)
}
inline void VisuHMIData::_internal_add_visibilitytags_nu(bool value) {
  visibilitytags_nu_.Add(value);
}
inline void VisuHMIData::add_visibilitytags_nu(bool value) {
  _internal_add_visibilitytags_nu(value);
  // @@protoc_insertion_point(field_add:pb.mf_hmih.visu_hmidata.VisuHMIData.visibilityTags_nu)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
VisuHMIData::_internal_visibilitytags_nu() const {
  return visibilitytags_nu_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
VisuHMIData::visibilitytags_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.visu_hmidata.VisuHMIData.visibilityTags_nu)
  return _internal_visibilitytags_nu();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
VisuHMIData::_internal_mutable_visibilitytags_nu() {
  return &visibilitytags_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
VisuHMIData::mutable_visibilitytags_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.visu_hmidata.VisuHMIData.visibilityTags_nu)
  return _internal_mutable_visibilitytags_nu();
}

// optional bool isSequence_nu = 1750;
inline bool VisuHMIData::_internal_has_issequence_nu() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool VisuHMIData::has_issequence_nu() const {
  return _internal_has_issequence_nu();
}
inline void VisuHMIData::clear_issequence_nu() {
  issequence_nu_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool VisuHMIData::_internal_issequence_nu() const {
  return issequence_nu_;
}
inline bool VisuHMIData::issequence_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.isSequence_nu)
  return _internal_issequence_nu();
}
inline void VisuHMIData::_internal_set_issequence_nu(bool value) {
  _has_bits_[0] |= 0x00000080u;
  issequence_nu_ = value;
}
inline void VisuHMIData::set_issequence_nu(bool value) {
  _internal_set_issequence_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.isSequence_nu)
}

// optional bool startVideoRecorderReq_nu = 4086;
inline bool VisuHMIData::_internal_has_startvideorecorderreq_nu() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool VisuHMIData::has_startvideorecorderreq_nu() const {
  return _internal_has_startvideorecorderreq_nu();
}
inline void VisuHMIData::clear_startvideorecorderreq_nu() {
  startvideorecorderreq_nu_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool VisuHMIData::_internal_startvideorecorderreq_nu() const {
  return startvideorecorderreq_nu_;
}
inline bool VisuHMIData::startvideorecorderreq_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.startVideoRecorderReq_nu)
  return _internal_startvideorecorderreq_nu();
}
inline void VisuHMIData::_internal_set_startvideorecorderreq_nu(bool value) {
  _has_bits_[0] |= 0x00000100u;
  startvideorecorderreq_nu_ = value;
}
inline void VisuHMIData::set_startvideorecorderreq_nu(bool value) {
  _internal_set_startvideorecorderreq_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.startVideoRecorderReq_nu)
}

// optional bool startScreenCaptureReq_nu = 1771;
inline bool VisuHMIData::_internal_has_startscreencapturereq_nu() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool VisuHMIData::has_startscreencapturereq_nu() const {
  return _internal_has_startscreencapturereq_nu();
}
inline void VisuHMIData::clear_startscreencapturereq_nu() {
  startscreencapturereq_nu_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool VisuHMIData::_internal_startscreencapturereq_nu() const {
  return startscreencapturereq_nu_;
}
inline bool VisuHMIData::startscreencapturereq_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.startScreenCaptureReq_nu)
  return _internal_startscreencapturereq_nu();
}
inline void VisuHMIData::_internal_set_startscreencapturereq_nu(bool value) {
  _has_bits_[0] |= 0x00000200u;
  startscreencapturereq_nu_ = value;
}
inline void VisuHMIData::set_startscreencapturereq_nu(bool value) {
  _internal_set_startscreencapturereq_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.startScreenCaptureReq_nu)
}

// optional bool rimProtectionStatus_nu = 3107;
inline bool VisuHMIData::_internal_has_rimprotectionstatus_nu() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool VisuHMIData::has_rimprotectionstatus_nu() const {
  return _internal_has_rimprotectionstatus_nu();
}
inline void VisuHMIData::clear_rimprotectionstatus_nu() {
  rimprotectionstatus_nu_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool VisuHMIData::_internal_rimprotectionstatus_nu() const {
  return rimprotectionstatus_nu_;
}
inline bool VisuHMIData::rimprotectionstatus_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.rimProtectionStatus_nu)
  return _internal_rimprotectionstatus_nu();
}
inline void VisuHMIData::_internal_set_rimprotectionstatus_nu(bool value) {
  _has_bits_[0] |= 0x00000400u;
  rimprotectionstatus_nu_ = value;
}
inline void VisuHMIData::set_rimprotectionstatus_nu(bool value) {
  _internal_set_rimprotectionstatus_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.rimProtectionStatus_nu)
}

// optional bool reverseAssistStatus_nu = 1915;
inline bool VisuHMIData::_internal_has_reverseassiststatus_nu() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool VisuHMIData::has_reverseassiststatus_nu() const {
  return _internal_has_reverseassiststatus_nu();
}
inline void VisuHMIData::clear_reverseassiststatus_nu() {
  reverseassiststatus_nu_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool VisuHMIData::_internal_reverseassiststatus_nu() const {
  return reverseassiststatus_nu_;
}
inline bool VisuHMIData::reverseassiststatus_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.reverseAssistStatus_nu)
  return _internal_reverseassiststatus_nu();
}
inline void VisuHMIData::_internal_set_reverseassiststatus_nu(bool value) {
  _has_bits_[0] |= 0x00000010u;
  reverseassiststatus_nu_ = value;
}
inline void VisuHMIData::set_reverseassiststatus_nu(bool value) {
  _internal_set_reverseassiststatus_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.reverseAssistStatus_nu)
}

// optional .pb.ap_hmitoap.parking_augmentation_type.ParkingAugmentationType parkingAugmentationType_nu = 370;
inline bool VisuHMIData::_internal_has_parkingaugmentationtype_nu() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool VisuHMIData::has_parkingaugmentationtype_nu() const {
  return _internal_has_parkingaugmentationtype_nu();
}
inline void VisuHMIData::clear_parkingaugmentationtype_nu() {
  parkingaugmentationtype_nu_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType VisuHMIData::_internal_parkingaugmentationtype_nu() const {
  return static_cast< ::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType >(parkingaugmentationtype_nu_);
}
inline ::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType VisuHMIData::parkingaugmentationtype_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData.parkingAugmentationType_nu)
  return _internal_parkingaugmentationtype_nu();
}
inline void VisuHMIData::_internal_set_parkingaugmentationtype_nu(::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType value) {
  assert(::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  parkingaugmentationtype_nu_ = value;
}
inline void VisuHMIData::set_parkingaugmentationtype_nu(::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType value) {
  _internal_set_parkingaugmentationtype_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_hmidata.VisuHMIData.parkingAugmentationType_nu)
}

// -------------------------------------------------------------------

// VisuHMIData_array_port

// repeated .pb.mf_hmih.visu_hmidata.VisuHMIData data = 1466;
inline int VisuHMIData_array_port::_internal_data_size() const {
  return data_.size();
}
inline int VisuHMIData_array_port::data_size() const {
  return _internal_data_size();
}
inline void VisuHMIData_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::mf_hmih::visu_hmidata::VisuHMIData* VisuHMIData_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.visu_hmidata.VisuHMIData_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::visu_hmidata::VisuHMIData >*
VisuHMIData_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.visu_hmidata.VisuHMIData_array_port.data)
  return &data_;
}
inline const ::pb::mf_hmih::visu_hmidata::VisuHMIData& VisuHMIData_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::mf_hmih::visu_hmidata::VisuHMIData& VisuHMIData_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_hmidata.VisuHMIData_array_port.data)
  return _internal_data(index);
}
inline ::pb::mf_hmih::visu_hmidata::VisuHMIData* VisuHMIData_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::mf_hmih::visu_hmidata::VisuHMIData* VisuHMIData_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.mf_hmih.visu_hmidata.VisuHMIData_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::visu_hmidata::VisuHMIData >&
VisuHMIData_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.visu_hmidata.VisuHMIData_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace visu_hmidata
}  // namespace mf_hmih
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fvisu_5fhmidata_2eproto
