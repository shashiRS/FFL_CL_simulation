// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/hmistate.proto

#include "mf_hmih/hmistate.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace pb {
namespace mf_hmih {
namespace hmistate {
}  // namespace hmistate
}  // namespace mf_hmih
}  // namespace pb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_mf_5fhmih_2fhmistate_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_mf_5fhmih_2fhmistate_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mf_5fhmih_2fhmistate_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mf_5fhmih_2fhmistate_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_mf_5fhmih_2fhmistate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026mf_hmih/hmistate.proto\022\023pb.mf_hmih.hmi"
  "state*\314\006\n\010HMIState\022\020\n\014HMI_INACTIVE\020\000\022\023\n\017"
  "HMI_SCANNING_IN\020\001\022\024\n\020HMI_SCANNING_OUT\020\002\022"
  "\033\n\027HMI_DIRECTION_SELECTION\020\003\022\036\n\032HMI_PARK"
  "ING_SLOT_SELECTION\020\004\022\030\n\024HMI_LOW_ENERGY_L"
  "EVEL\020\005\022\034\n\030HMI_USER_MANEUVERING_REQ\020\006\022\"\n\036"
  "HMI_VIS_MANEUVERING_CONDITIONS\020\007\022\034\n\030HMI_"
  "VIS_PARKING_MANEUVER\020\010\022\031\n\025HMI_MANEUVERIN"
  "G_PAUSE\020\t\022\026\n\022HMI_PARKING_FAILED\020\n\022\030\n\024HMI"
  "_REQUEST_HANDOVER\020\013\022\035\n\031HMI_CONNECT_REMOT"
  "E_DEVICE\020\014\022\032\n\026HMI_SHOW_CIRCLE_SCREEN\020\r\022\037"
  "\n\033HMI_REM_DIRECTION_SELECTION\020\016\022\032\n\026HMI_R"
  "EM_SLOT_SELECTION\020\017\022\025\n\021HMI_REM_RM_CHOSEN"
  "\020\020\022\030\n\024HMI_CANCELED_BY_USER\020\021\022\034\n\030HMI_CANC"
  "ELED_BY_BEHAVIOR\020\022\022\027\n\023HMI_PARKING_SUCCES"
  "S\020\023\022\030\n\024HMI_REVERSIBLE_ERROR\020\024\022\032\n\026HMI_IRR"
  "EVERSIBLE_ERROR\020\025\022\036\n\032HMI_INACTIVE_NO_ERR"
  "OR_MODE\020\026\022\030\n\024HMI_SUB_HMI_INACTIVE\020\027\022\020\n\014H"
  "MI_PDC_COMM\020\030\022\026\n\022HMI_SCANNING_GP_IN\020\031\022\027\n"
  "\023HMI_SCANNING_GP_OUT\020\032\022\035\n\031HMI_REM_GP_SLO"
  "T_SELECTION\020\033\022\032\n\026HMI_MP_SLOT_ADJUSTMENT\020"
  "\034\022\031\n\025HMI_MP_SLOT_SELECTION\020\035\022\026\n\022HMI_REVE"
  "RSE_ASSIST\020\036"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mf_5fhmih_2fhmistate_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mf_5fhmih_2fhmistate_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mf_5fhmih_2fhmistate_2eproto_once;
static bool descriptor_table_mf_5fhmih_2fhmistate_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fhmistate_2eproto = {
  &descriptor_table_mf_5fhmih_2fhmistate_2eproto_initialized, descriptor_table_protodef_mf_5fhmih_2fhmistate_2eproto, "mf_hmih/hmistate.proto", 892,
  &descriptor_table_mf_5fhmih_2fhmistate_2eproto_once, descriptor_table_mf_5fhmih_2fhmistate_2eproto_sccs, descriptor_table_mf_5fhmih_2fhmistate_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_mf_5fhmih_2fhmistate_2eproto::offsets,
  file_level_metadata_mf_5fhmih_2fhmistate_2eproto, 0, file_level_enum_descriptors_mf_5fhmih_2fhmistate_2eproto, file_level_service_descriptors_mf_5fhmih_2fhmistate_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mf_5fhmih_2fhmistate_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mf_5fhmih_2fhmistate_2eproto), true);
namespace pb {
namespace mf_hmih {
namespace hmistate {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* HMIState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mf_5fhmih_2fhmistate_2eproto);
  return file_level_enum_descriptors_mf_5fhmih_2fhmistate_2eproto[0];
}
bool HMIState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace hmistate
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
