// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/parking_situation.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fparking_5fsituation_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fparking_5fsituation_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mf_hmih/parking_situation_sides.pb.h"
#include "mf_hmih/parking_situation_front_rear.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fparking_5fsituation_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mf_5fhmih_2fparking_5fsituation_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto;
namespace pb {
namespace mf_hmih {
namespace parking_situation {
class ParkingSituation;
class ParkingSituationDefaultTypeInternal;
extern ParkingSituationDefaultTypeInternal _ParkingSituation_default_instance_;
class ParkingSituation_array_port;
class ParkingSituation_array_portDefaultTypeInternal;
extern ParkingSituation_array_portDefaultTypeInternal _ParkingSituation_array_port_default_instance_;
}  // namespace parking_situation
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::mf_hmih::parking_situation::ParkingSituation* Arena::CreateMaybeMessage<::pb::mf_hmih::parking_situation::ParkingSituation>(Arena*);
template<> ::pb::mf_hmih::parking_situation::ParkingSituation_array_port* Arena::CreateMaybeMessage<::pb::mf_hmih::parking_situation::ParkingSituation_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace mf_hmih {
namespace parking_situation {

// ===================================================================

class ParkingSituation :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.parking_situation.ParkingSituation) */ {
 public:
  ParkingSituation();
  virtual ~ParkingSituation();

  ParkingSituation(const ParkingSituation& from);
  ParkingSituation(ParkingSituation&& from) noexcept
    : ParkingSituation() {
    *this = ::std::move(from);
  }

  inline ParkingSituation& operator=(const ParkingSituation& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParkingSituation& operator=(ParkingSituation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParkingSituation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParkingSituation* internal_default_instance() {
    return reinterpret_cast<const ParkingSituation*>(
               &_ParkingSituation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ParkingSituation& a, ParkingSituation& b) {
    a.Swap(&b);
  }
  inline void Swap(ParkingSituation* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParkingSituation* New() const final {
    return CreateMaybeMessage<ParkingSituation>(nullptr);
  }

  ParkingSituation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParkingSituation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParkingSituation& from);
  void MergeFrom(const ParkingSituation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParkingSituation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.parking_situation.ParkingSituation";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto);
    return ::descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeftFieldNumber = 861,
    kFrontFieldNumber = 982,
    kRearFieldNumber = 1174,
    kRightFieldNumber = 3555,
  };
  // optional .pb.mf_hmih.parking_situation_sides.ParkingSituationSides left = 861;
  bool has_left() const;
  private:
  bool _internal_has_left() const;
  public:
  void clear_left();
  const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides& left() const;
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* release_left();
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* mutable_left();
  void set_allocated_left(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* left);
  private:
  const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides& _internal_left() const;
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* _internal_mutable_left();
  public:

  // optional .pb.mf_hmih.parking_situation_front_rear.ParkingSituationFrontRear front = 982;
  bool has_front() const;
  private:
  bool _internal_has_front() const;
  public:
  void clear_front();
  const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear& front() const;
  ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* release_front();
  ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* mutable_front();
  void set_allocated_front(::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* front);
  private:
  const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear& _internal_front() const;
  ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* _internal_mutable_front();
  public:

  // optional .pb.mf_hmih.parking_situation_front_rear.ParkingSituationFrontRear rear = 1174;
  bool has_rear() const;
  private:
  bool _internal_has_rear() const;
  public:
  void clear_rear();
  const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear& rear() const;
  ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* release_rear();
  ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* mutable_rear();
  void set_allocated_rear(::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* rear);
  private:
  const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear& _internal_rear() const;
  ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* _internal_mutable_rear();
  public:

  // optional .pb.mf_hmih.parking_situation_sides.ParkingSituationSides right = 3555;
  bool has_right() const;
  private:
  bool _internal_has_right() const;
  public:
  void clear_right();
  const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides& right() const;
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* release_right();
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* mutable_right();
  void set_allocated_right(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* right);
  private:
  const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides& _internal_right() const;
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* _internal_mutable_right();
  public:

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.parking_situation.ParkingSituation)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* left_;
  ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* front_;
  ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* rear_;
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* right_;
  friend struct ::TableStruct_mf_5fhmih_2fparking_5fsituation_2eproto;
};
// -------------------------------------------------------------------

class ParkingSituation_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.parking_situation.ParkingSituation_array_port) */ {
 public:
  ParkingSituation_array_port();
  virtual ~ParkingSituation_array_port();

  ParkingSituation_array_port(const ParkingSituation_array_port& from);
  ParkingSituation_array_port(ParkingSituation_array_port&& from) noexcept
    : ParkingSituation_array_port() {
    *this = ::std::move(from);
  }

  inline ParkingSituation_array_port& operator=(const ParkingSituation_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParkingSituation_array_port& operator=(ParkingSituation_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParkingSituation_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParkingSituation_array_port* internal_default_instance() {
    return reinterpret_cast<const ParkingSituation_array_port*>(
               &_ParkingSituation_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ParkingSituation_array_port& a, ParkingSituation_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(ParkingSituation_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParkingSituation_array_port* New() const final {
    return CreateMaybeMessage<ParkingSituation_array_port>(nullptr);
  }

  ParkingSituation_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParkingSituation_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParkingSituation_array_port& from);
  void MergeFrom(const ParkingSituation_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParkingSituation_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.parking_situation.ParkingSituation_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto);
    return ::descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3577,
  };
  // repeated .pb.mf_hmih.parking_situation.ParkingSituation data = 3577;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::mf_hmih::parking_situation::ParkingSituation* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::parking_situation::ParkingSituation >*
      mutable_data();
  private:
  const ::pb::mf_hmih::parking_situation::ParkingSituation& _internal_data(int index) const;
  ::pb::mf_hmih::parking_situation::ParkingSituation* _internal_add_data();
  public:
  const ::pb::mf_hmih::parking_situation::ParkingSituation& data(int index) const;
  ::pb::mf_hmih::parking_situation::ParkingSituation* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::parking_situation::ParkingSituation >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::parking_situation::ParkingSituation > data_;
  friend struct ::TableStruct_mf_5fhmih_2fparking_5fsituation_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParkingSituation

// optional .pb.mf_hmih.parking_situation_sides.ParkingSituationSides left = 861;
inline bool ParkingSituation::_internal_has_left() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || left_ != nullptr);
  return value;
}
inline bool ParkingSituation::has_left() const {
  return _internal_has_left();
}
inline const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides& ParkingSituation::_internal_left() const {
  const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* p = left_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides*>(
      &::pb::mf_hmih::parking_situation_sides::_ParkingSituationSides_default_instance_);
}
inline const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides& ParkingSituation::left() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_situation.ParkingSituation.left)
  return _internal_left();
}
inline ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* ParkingSituation::release_left() {
  // @@protoc_insertion_point(field_release:pb.mf_hmih.parking_situation.ParkingSituation.left)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* temp = left_;
  left_ = nullptr;
  return temp;
}
inline ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* ParkingSituation::_internal_mutable_left() {
  _has_bits_[0] |= 0x00000001u;
  if (left_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_hmih::parking_situation_sides::ParkingSituationSides>(GetArenaNoVirtual());
    left_ = p;
  }
  return left_;
}
inline ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* ParkingSituation::mutable_left() {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.parking_situation.ParkingSituation.left)
  return _internal_mutable_left();
}
inline void ParkingSituation::set_allocated_left(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* left) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(left_);
  }
  if (left) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      left = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, left, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  left_ = left;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_hmih.parking_situation.ParkingSituation.left)
}

// optional .pb.mf_hmih.parking_situation_sides.ParkingSituationSides right = 3555;
inline bool ParkingSituation::_internal_has_right() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || right_ != nullptr);
  return value;
}
inline bool ParkingSituation::has_right() const {
  return _internal_has_right();
}
inline const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides& ParkingSituation::_internal_right() const {
  const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* p = right_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides*>(
      &::pb::mf_hmih::parking_situation_sides::_ParkingSituationSides_default_instance_);
}
inline const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides& ParkingSituation::right() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_situation.ParkingSituation.right)
  return _internal_right();
}
inline ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* ParkingSituation::release_right() {
  // @@protoc_insertion_point(field_release:pb.mf_hmih.parking_situation.ParkingSituation.right)
  _has_bits_[0] &= ~0x00000008u;
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* temp = right_;
  right_ = nullptr;
  return temp;
}
inline ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* ParkingSituation::_internal_mutable_right() {
  _has_bits_[0] |= 0x00000008u;
  if (right_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_hmih::parking_situation_sides::ParkingSituationSides>(GetArenaNoVirtual());
    right_ = p;
  }
  return right_;
}
inline ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* ParkingSituation::mutable_right() {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.parking_situation.ParkingSituation.right)
  return _internal_mutable_right();
}
inline void ParkingSituation::set_allocated_right(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* right) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(right_);
  }
  if (right) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      right = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, right, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  right_ = right;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_hmih.parking_situation.ParkingSituation.right)
}

// optional .pb.mf_hmih.parking_situation_front_rear.ParkingSituationFrontRear front = 982;
inline bool ParkingSituation::_internal_has_front() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || front_ != nullptr);
  return value;
}
inline bool ParkingSituation::has_front() const {
  return _internal_has_front();
}
inline const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear& ParkingSituation::_internal_front() const {
  const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* p = front_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear*>(
      &::pb::mf_hmih::parking_situation_front_rear::_ParkingSituationFrontRear_default_instance_);
}
inline const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear& ParkingSituation::front() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_situation.ParkingSituation.front)
  return _internal_front();
}
inline ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* ParkingSituation::release_front() {
  // @@protoc_insertion_point(field_release:pb.mf_hmih.parking_situation.ParkingSituation.front)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* temp = front_;
  front_ = nullptr;
  return temp;
}
inline ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* ParkingSituation::_internal_mutable_front() {
  _has_bits_[0] |= 0x00000002u;
  if (front_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear>(GetArenaNoVirtual());
    front_ = p;
  }
  return front_;
}
inline ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* ParkingSituation::mutable_front() {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.parking_situation.ParkingSituation.front)
  return _internal_mutable_front();
}
inline void ParkingSituation::set_allocated_front(::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* front) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(front_);
  }
  if (front) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      front = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, front, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  front_ = front;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_hmih.parking_situation.ParkingSituation.front)
}

// optional .pb.mf_hmih.parking_situation_front_rear.ParkingSituationFrontRear rear = 1174;
inline bool ParkingSituation::_internal_has_rear() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || rear_ != nullptr);
  return value;
}
inline bool ParkingSituation::has_rear() const {
  return _internal_has_rear();
}
inline const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear& ParkingSituation::_internal_rear() const {
  const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* p = rear_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear*>(
      &::pb::mf_hmih::parking_situation_front_rear::_ParkingSituationFrontRear_default_instance_);
}
inline const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear& ParkingSituation::rear() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_situation.ParkingSituation.rear)
  return _internal_rear();
}
inline ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* ParkingSituation::release_rear() {
  // @@protoc_insertion_point(field_release:pb.mf_hmih.parking_situation.ParkingSituation.rear)
  _has_bits_[0] &= ~0x00000004u;
  ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* temp = rear_;
  rear_ = nullptr;
  return temp;
}
inline ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* ParkingSituation::_internal_mutable_rear() {
  _has_bits_[0] |= 0x00000004u;
  if (rear_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear>(GetArenaNoVirtual());
    rear_ = p;
  }
  return rear_;
}
inline ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* ParkingSituation::mutable_rear() {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.parking_situation.ParkingSituation.rear)
  return _internal_mutable_rear();
}
inline void ParkingSituation::set_allocated_rear(::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear* rear) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rear_);
  }
  if (rear) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rear = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rear, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  rear_ = rear;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_hmih.parking_situation.ParkingSituation.rear)
}

// -------------------------------------------------------------------

// ParkingSituation_array_port

// repeated .pb.mf_hmih.parking_situation.ParkingSituation data = 3577;
inline int ParkingSituation_array_port::_internal_data_size() const {
  return data_.size();
}
inline int ParkingSituation_array_port::data_size() const {
  return _internal_data_size();
}
inline void ParkingSituation_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::mf_hmih::parking_situation::ParkingSituation* ParkingSituation_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.parking_situation.ParkingSituation_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::parking_situation::ParkingSituation >*
ParkingSituation_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.parking_situation.ParkingSituation_array_port.data)
  return &data_;
}
inline const ::pb::mf_hmih::parking_situation::ParkingSituation& ParkingSituation_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::mf_hmih::parking_situation::ParkingSituation& ParkingSituation_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_situation.ParkingSituation_array_port.data)
  return _internal_data(index);
}
inline ::pb::mf_hmih::parking_situation::ParkingSituation* ParkingSituation_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::mf_hmih::parking_situation::ParkingSituation* ParkingSituation_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.mf_hmih.parking_situation.ParkingSituation_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::parking_situation::ParkingSituation >&
ParkingSituation_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.parking_situation.ParkingSituation_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace parking_situation
}  // namespace mf_hmih
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fparking_5fsituation_2eproto
