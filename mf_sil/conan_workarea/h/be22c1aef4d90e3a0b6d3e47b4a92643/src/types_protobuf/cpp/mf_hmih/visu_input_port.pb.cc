// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/visu_input_port.proto

#include "mf_hmih/visu_input_port.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ap_5ftp_2ftraj_5fplan_5fvisu_5fport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_TrajPlanVisuPort_ap_5ftp_2ftraj_5fplan_5fvisu_5fport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsignal_5fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fparking_5ftarget_5fposes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ParkingTargetPoses_mf_5fhmih_2fparking_5ftarget_5fposes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fvisu_5fhmidata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VisuHMIData_mf_5fhmih_2fvisu_5fhmidata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fvisu_5finput_5fport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_VisuInputPort_mf_5fhmih_2fvisu_5finput_5fport_2eproto;
namespace pb {
namespace mf_hmih {
namespace visu_input_port {
class VisuInputPortDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VisuInputPort> _instance;
} _VisuInputPort_default_instance_;
class VisuInputPort_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VisuInputPort_array_port> _instance;
} _VisuInputPort_array_port_default_instance_;
}  // namespace visu_input_port
}  // namespace mf_hmih
}  // namespace pb
static void InitDefaultsscc_info_VisuInputPort_mf_5fhmih_2fvisu_5finput_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::visu_input_port::_VisuInputPort_default_instance_;
    new (ptr) ::pb::mf_hmih::visu_input_port::VisuInputPort();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::visu_input_port::VisuInputPort::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_VisuInputPort_mf_5fhmih_2fvisu_5finput_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_VisuInputPort_mf_5fhmih_2fvisu_5finput_5fport_2eproto}, {
      &scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto.base,
      &scc_info_VisuHMIData_mf_5fhmih_2fvisu_5fhmidata_2eproto.base,
      &scc_info_TrajPlanVisuPort_ap_5ftp_2ftraj_5fplan_5fvisu_5fport_2eproto.base,
      &scc_info_ParkingTargetPoses_mf_5fhmih_2fparking_5ftarget_5fposes_2eproto.base,}};

static void InitDefaultsscc_info_VisuInputPort_array_port_mf_5fhmih_2fvisu_5finput_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::visu_input_port::_VisuInputPort_array_port_default_instance_;
    new (ptr) ::pb::mf_hmih::visu_input_port::VisuInputPort_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::visu_input_port::VisuInputPort_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VisuInputPort_array_port_mf_5fhmih_2fvisu_5finput_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_VisuInputPort_array_port_mf_5fhmih_2fvisu_5finput_5fport_2eproto}, {
      &scc_info_VisuInputPort_mf_5fhmih_2fvisu_5finput_5fport_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mf_5fhmih_2fvisu_5finput_5fport_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mf_5fhmih_2fvisu_5finput_5fport_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mf_5fhmih_2fvisu_5finput_5fport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mf_5fhmih_2fvisu_5finput_5fport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort, uiversionnumber_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort, ssigheader_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort, distancetostopreq_m_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort, visuhmidata_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort, hmioutuseractscreenreq_u8_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort, trajplanvisuport_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort, parkingposesvisu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort, driverselection_nu_),
  6,
  1,
  7,
  2,
  4,
  0,
  3,
  5,
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::visu_input_port::VisuInputPort_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::pb::mf_hmih::visu_input_port::VisuInputPort)},
  { 21, 27, sizeof(::pb::mf_hmih::visu_input_port::VisuInputPort_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::visu_input_port::_VisuInputPort_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::visu_input_port::_VisuInputPort_array_port_default_instance_),
};

const char descriptor_table_protodef_mf_5fhmih_2fvisu_5finput_5fport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035mf_hmih/visu_input_port.proto\022\032pb.mf_h"
  "mih.visu_input_port\032\027eco/signal_header.p"
  "roto\032\032mf_hmih/visu_hmidata.proto\032\035ap_hmi"
  "toap/screen_types.proto\032\037ap_tp/traj_plan"
  "_visu_port.proto\032\"mf_hmih/parking_target"
  "_poses.proto\"\304\003\n\rVisuInputPort\022\030\n\017uiVers"
  "ionNumber\030\314\020 \001(\r\0227\n\nsSigHeader\030\211\010 \001(\0132\"."
  "pb.eco.signal_header.SignalHeader\022\034\n\023dis"
  "tanceToStopReq_m\030\372\031 \001(\002\022:\n\013visuHMIData\030\231"
  "\n \001(\0132$.pb.mf_hmih.visu_hmidata.VisuHMID"
  "ata\022K\n\031HmiOutUserActScreenReq_u8\030\362\004 \001(\0162"
  "\'.pb.ap_hmitoap.screen_types.ScreenTypes"
  "\022L\n\023trajPlanVisuPort_nu\030\275\001 \001(\0132..pb.ap_t"
  "p.traj_plan_visu_port.TrajPlanVisuPort\022N"
  "\n\020parkingPosesVisu\030\220\025 \001(\01323.pb.mf_hmih.p"
  "arking_target_poses.ParkingTargetPoses\022\033"
  "\n\022driverSelection_nu\030\364\010 \001(\010\"T\n\030VisuInput"
  "Port_array_port\0228\n\004data\030\341\r \003(\0132).pb.mf_h"
  "mih.visu_input_port.VisuInputPort"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto_deps[5] = {
  &::descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto,
  &::descriptor_table_ap_5ftp_2ftraj_5fplan_5fvisu_5fport_2eproto,
  &::descriptor_table_eco_2fsignal_5fheader_2eproto,
  &::descriptor_table_mf_5fhmih_2fparking_5ftarget_5fposes_2eproto,
  &::descriptor_table_mf_5fhmih_2fvisu_5fhmidata_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto_sccs[2] = {
  &scc_info_VisuInputPort_mf_5fhmih_2fvisu_5finput_5fport_2eproto.base,
  &scc_info_VisuInputPort_array_port_mf_5fhmih_2fvisu_5finput_5fport_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto_once;
static bool descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto = {
  &descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto_initialized, descriptor_table_protodef_mf_5fhmih_2fvisu_5finput_5fport_2eproto, "mf_hmih/visu_input_port.proto", 753,
  &descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto_once, descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto_sccs, descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto_deps, 2, 5,
  schemas, file_default_instances, TableStruct_mf_5fhmih_2fvisu_5finput_5fport_2eproto::offsets,
  file_level_metadata_mf_5fhmih_2fvisu_5finput_5fport_2eproto, 2, file_level_enum_descriptors_mf_5fhmih_2fvisu_5finput_5fport_2eproto, file_level_service_descriptors_mf_5fhmih_2fvisu_5finput_5fport_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mf_5fhmih_2fvisu_5finput_5fport_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto), true);
namespace pb {
namespace mf_hmih {
namespace visu_input_port {

// ===================================================================

void VisuInputPort::InitAsDefaultInstance() {
  ::pb::mf_hmih::visu_input_port::_VisuInputPort_default_instance_._instance.get_mutable()->ssigheader_ = const_cast< ::pb::eco::signal_header::SignalHeader*>(
      ::pb::eco::signal_header::SignalHeader::internal_default_instance());
  ::pb::mf_hmih::visu_input_port::_VisuInputPort_default_instance_._instance.get_mutable()->visuhmidata_ = const_cast< ::pb::mf_hmih::visu_hmidata::VisuHMIData*>(
      ::pb::mf_hmih::visu_hmidata::VisuHMIData::internal_default_instance());
  ::pb::mf_hmih::visu_input_port::_VisuInputPort_default_instance_._instance.get_mutable()->trajplanvisuport_nu_ = const_cast< ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort*>(
      ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort::internal_default_instance());
  ::pb::mf_hmih::visu_input_port::_VisuInputPort_default_instance_._instance.get_mutable()->parkingposesvisu_ = const_cast< ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses*>(
      ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses::internal_default_instance());
}
class VisuInputPort::_Internal {
 public:
  using HasBits = decltype(std::declval<VisuInputPort>()._has_bits_);
  static void set_has_uiversionnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::pb::eco::signal_header::SignalHeader& ssigheader(const VisuInputPort* msg);
  static void set_has_ssigheader(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_distancetostopreq_m(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::pb::mf_hmih::visu_hmidata::VisuHMIData& visuhmidata(const VisuInputPort* msg);
  static void set_has_visuhmidata(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_hmioutuseractscreenreq_u8(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort& trajplanvisuport_nu(const VisuInputPort* msg);
  static void set_has_trajplanvisuport_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses& parkingposesvisu(const VisuInputPort* msg);
  static void set_has_parkingposesvisu(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_driverselection_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::pb::eco::signal_header::SignalHeader&
VisuInputPort::_Internal::ssigheader(const VisuInputPort* msg) {
  return *msg->ssigheader_;
}
const ::pb::mf_hmih::visu_hmidata::VisuHMIData&
VisuInputPort::_Internal::visuhmidata(const VisuInputPort* msg) {
  return *msg->visuhmidata_;
}
const ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort&
VisuInputPort::_Internal::trajplanvisuport_nu(const VisuInputPort* msg) {
  return *msg->trajplanvisuport_nu_;
}
const ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses&
VisuInputPort::_Internal::parkingposesvisu(const VisuInputPort* msg) {
  return *msg->parkingposesvisu_;
}
void VisuInputPort::clear_ssigheader() {
  if (ssigheader_ != nullptr) ssigheader_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void VisuInputPort::clear_visuhmidata() {
  if (visuhmidata_ != nullptr) visuhmidata_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void VisuInputPort::clear_trajplanvisuport_nu() {
  if (trajplanvisuport_nu_ != nullptr) trajplanvisuport_nu_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void VisuInputPort::clear_parkingposesvisu() {
  if (parkingposesvisu_ != nullptr) parkingposesvisu_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
VisuInputPort::VisuInputPort()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.visu_input_port.VisuInputPort)
}
VisuInputPort::VisuInputPort(const VisuInputPort& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_trajplanvisuport_nu()) {
    trajplanvisuport_nu_ = new ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort(*from.trajplanvisuport_nu_);
  } else {
    trajplanvisuport_nu_ = nullptr;
  }
  if (from._internal_has_ssigheader()) {
    ssigheader_ = new ::pb::eco::signal_header::SignalHeader(*from.ssigheader_);
  } else {
    ssigheader_ = nullptr;
  }
  if (from._internal_has_visuhmidata()) {
    visuhmidata_ = new ::pb::mf_hmih::visu_hmidata::VisuHMIData(*from.visuhmidata_);
  } else {
    visuhmidata_ = nullptr;
  }
  if (from._internal_has_parkingposesvisu()) {
    parkingposesvisu_ = new ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses(*from.parkingposesvisu_);
  } else {
    parkingposesvisu_ = nullptr;
  }
  ::memcpy(&hmioutuseractscreenreq_u8_, &from.hmioutuseractscreenreq_u8_,
    static_cast<size_t>(reinterpret_cast<char*>(&distancetostopreq_m_) -
    reinterpret_cast<char*>(&hmioutuseractscreenreq_u8_)) + sizeof(distancetostopreq_m_));
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.visu_input_port.VisuInputPort)
}

void VisuInputPort::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VisuInputPort_mf_5fhmih_2fvisu_5finput_5fport_2eproto.base);
  ::memset(&trajplanvisuport_nu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distancetostopreq_m_) -
      reinterpret_cast<char*>(&trajplanvisuport_nu_)) + sizeof(distancetostopreq_m_));
}

VisuInputPort::~VisuInputPort() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.visu_input_port.VisuInputPort)
  SharedDtor();
}

void VisuInputPort::SharedDtor() {
  if (this != internal_default_instance()) delete trajplanvisuport_nu_;
  if (this != internal_default_instance()) delete ssigheader_;
  if (this != internal_default_instance()) delete visuhmidata_;
  if (this != internal_default_instance()) delete parkingposesvisu_;
}

void VisuInputPort::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VisuInputPort& VisuInputPort::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VisuInputPort_mf_5fhmih_2fvisu_5finput_5fport_2eproto.base);
  return *internal_default_instance();
}


void VisuInputPort::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.visu_input_port.VisuInputPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(trajplanvisuport_nu_ != nullptr);
      trajplanvisuport_nu_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ssigheader_ != nullptr);
      ssigheader_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(visuhmidata_ != nullptr);
      visuhmidata_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(parkingposesvisu_ != nullptr);
      parkingposesvisu_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&hmioutuseractscreenreq_u8_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&distancetostopreq_m_) -
        reinterpret_cast<char*>(&hmioutuseractscreenreq_u8_)) + sizeof(distancetostopreq_m_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* VisuInputPort::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.ap_tp.traj_plan_visu_port.TrajPlanVisuPort trajPlanVisuPort_nu = 189;
      case 189:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_trajplanvisuport_nu(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_hmitoap.screen_types.ScreenTypes HmiOutUserActScreenReq_u8 = 626;
      case 626:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_hmitoap::screen_types::ScreenTypes_IsValid(val))) {
            _internal_set_hmioutuseractscreenreq_u8(static_cast<::pb::ap_hmitoap::screen_types::ScreenTypes>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(626, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_ssigheader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool driverSelection_nu = 1140;
      case 1140:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_driverselection_nu(&has_bits);
          driverselection_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.visu_hmidata.VisuHMIData visuHMIData = 1305;
      case 1305:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_visuhmidata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 uiVersionNumber = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_uiversionnumber(&has_bits);
          uiversionnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.parking_target_poses.ParkingTargetPoses parkingPosesVisu = 2704;
      case 2704:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_parkingposesvisu(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float distanceToStopReq_m = 3322;
      case 3322:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 213)) {
          _Internal::set_has_distancetostopreq_m(&has_bits);
          distancetostopreq_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VisuInputPort::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.visu_input_port.VisuInputPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.ap_tp.traj_plan_visu_port.TrajPlanVisuPort trajPlanVisuPort_nu = 189;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        189, _Internal::trajplanvisuport_nu(this), target, stream);
  }

  // optional .pb.ap_hmitoap.screen_types.ScreenTypes HmiOutUserActScreenReq_u8 = 626;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      626, this->_internal_hmioutuseractscreenreq_u8(), target);
  }

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::ssigheader(this), target, stream);
  }

  // optional bool driverSelection_nu = 1140;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1140, this->_internal_driverselection_nu(), target);
  }

  // optional .pb.mf_hmih.visu_hmidata.VisuHMIData visuHMIData = 1305;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1305, _Internal::visuhmidata(this), target, stream);
  }

  // optional uint32 uiVersionNumber = 2124;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2124, this->_internal_uiversionnumber(), target);
  }

  // optional .pb.mf_hmih.parking_target_poses.ParkingTargetPoses parkingPosesVisu = 2704;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2704, _Internal::parkingposesvisu(this), target, stream);
  }

  // optional float distanceToStopReq_m = 3322;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3322, this->_internal_distancetostopreq_m(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.visu_input_port.VisuInputPort)
  return target;
}

size_t VisuInputPort::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.visu_input_port.VisuInputPort)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .pb.ap_tp.traj_plan_visu_port.TrajPlanVisuPort trajPlanVisuPort_nu = 189;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *trajplanvisuport_nu_);
    }

    // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ssigheader_);
    }

    // optional .pb.mf_hmih.visu_hmidata.VisuHMIData visuHMIData = 1305;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *visuhmidata_);
    }

    // optional .pb.mf_hmih.parking_target_poses.ParkingTargetPoses parkingPosesVisu = 2704;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *parkingposesvisu_);
    }

    // optional .pb.ap_hmitoap.screen_types.ScreenTypes HmiOutUserActScreenReq_u8 = 626;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hmioutuseractscreenreq_u8());
    }

    // optional bool driverSelection_nu = 1140;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional uint32 uiVersionNumber = 2124;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uiversionnumber());
    }

    // optional float distanceToStopReq_m = 3322;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VisuInputPort::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.visu_input_port.VisuInputPort)
  GOOGLE_DCHECK_NE(&from, this);
  const VisuInputPort* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VisuInputPort>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.visu_input_port.VisuInputPort)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.visu_input_port.VisuInputPort)
    MergeFrom(*source);
  }
}

void VisuInputPort::MergeFrom(const VisuInputPort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.visu_input_port.VisuInputPort)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_trajplanvisuport_nu()->::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort::MergeFrom(from._internal_trajplanvisuport_nu());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_ssigheader()->::pb::eco::signal_header::SignalHeader::MergeFrom(from._internal_ssigheader());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_visuhmidata()->::pb::mf_hmih::visu_hmidata::VisuHMIData::MergeFrom(from._internal_visuhmidata());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_parkingposesvisu()->::pb::mf_hmih::parking_target_poses::ParkingTargetPoses::MergeFrom(from._internal_parkingposesvisu());
    }
    if (cached_has_bits & 0x00000010u) {
      hmioutuseractscreenreq_u8_ = from.hmioutuseractscreenreq_u8_;
    }
    if (cached_has_bits & 0x00000020u) {
      driverselection_nu_ = from.driverselection_nu_;
    }
    if (cached_has_bits & 0x00000040u) {
      uiversionnumber_ = from.uiversionnumber_;
    }
    if (cached_has_bits & 0x00000080u) {
      distancetostopreq_m_ = from.distancetostopreq_m_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VisuInputPort::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.visu_input_port.VisuInputPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisuInputPort::CopyFrom(const VisuInputPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.visu_input_port.VisuInputPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisuInputPort::IsInitialized() const {
  return true;
}

void VisuInputPort::InternalSwap(VisuInputPort* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(trajplanvisuport_nu_, other->trajplanvisuport_nu_);
  swap(ssigheader_, other->ssigheader_);
  swap(visuhmidata_, other->visuhmidata_);
  swap(parkingposesvisu_, other->parkingposesvisu_);
  swap(hmioutuseractscreenreq_u8_, other->hmioutuseractscreenreq_u8_);
  swap(driverselection_nu_, other->driverselection_nu_);
  swap(uiversionnumber_, other->uiversionnumber_);
  swap(distancetostopreq_m_, other->distancetostopreq_m_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VisuInputPort::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VisuInputPort_array_port::InitAsDefaultInstance() {
}
class VisuInputPort_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<VisuInputPort_array_port>()._has_bits_);
};

VisuInputPort_array_port::VisuInputPort_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
}
VisuInputPort_array_port::VisuInputPort_array_port(const VisuInputPort_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
}

void VisuInputPort_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VisuInputPort_array_port_mf_5fhmih_2fvisu_5finput_5fport_2eproto.base);
}

VisuInputPort_array_port::~VisuInputPort_array_port() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
  SharedDtor();
}

void VisuInputPort_array_port::SharedDtor() {
}

void VisuInputPort_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VisuInputPort_array_port& VisuInputPort_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VisuInputPort_array_port_mf_5fhmih_2fvisu_5finput_5fport_2eproto.base);
  return *internal_default_instance();
}


void VisuInputPort_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* VisuInputPort_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.mf_hmih.visu_input_port.VisuInputPort data = 1761;
      case 1761:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<14090>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VisuInputPort_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.visu_input_port.VisuInputPort data = 1761;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1761, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
  return target;
}

size_t VisuInputPort_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.visu_input_port.VisuInputPort data = 1761;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VisuInputPort_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const VisuInputPort_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VisuInputPort_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
    MergeFrom(*source);
  }
}

void VisuInputPort_array_port::MergeFrom(const VisuInputPort_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void VisuInputPort_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisuInputPort_array_port::CopyFrom(const VisuInputPort_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisuInputPort_array_port::IsInitialized() const {
  return true;
}

void VisuInputPort_array_port::InternalSwap(VisuInputPort_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VisuInputPort_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace visu_input_port
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::visu_input_port::VisuInputPort* Arena::CreateMaybeMessage< ::pb::mf_hmih::visu_input_port::VisuInputPort >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::visu_input_port::VisuInputPort >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::visu_input_port::VisuInputPort_array_port* Arena::CreateMaybeMessage< ::pb::mf_hmih::visu_input_port::VisuInputPort_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::visu_input_port::VisuInputPort_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
