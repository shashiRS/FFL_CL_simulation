// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/mp_slot_list.proto

#include "mf_hmih/mp_slot_list.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fmp_5fslot_5flist_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MpSlotList_mf_5fhmih_2fmp_5fslot_5flist_2eproto;
namespace pb {
namespace mf_hmih {
namespace mp_slot_list {
class MpSlotListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MpSlotList> _instance;
} _MpSlotList_default_instance_;
class MpSlotList_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MpSlotList_array_port> _instance;
} _MpSlotList_array_port_default_instance_;
}  // namespace mp_slot_list
}  // namespace mf_hmih
}  // namespace pb
static void InitDefaultsscc_info_MpSlotList_mf_5fhmih_2fmp_5fslot_5flist_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::mp_slot_list::_MpSlotList_default_instance_;
    new (ptr) ::pb::mf_hmih::mp_slot_list::MpSlotList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::mp_slot_list::MpSlotList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MpSlotList_mf_5fhmih_2fmp_5fslot_5flist_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MpSlotList_mf_5fhmih_2fmp_5fslot_5flist_2eproto}, {}};

static void InitDefaultsscc_info_MpSlotList_array_port_mf_5fhmih_2fmp_5fslot_5flist_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::mp_slot_list::_MpSlotList_array_port_default_instance_;
    new (ptr) ::pb::mf_hmih::mp_slot_list::MpSlotList_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::mp_slot_list::MpSlotList_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MpSlotList_array_port_mf_5fhmih_2fmp_5fslot_5flist_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MpSlotList_array_port_mf_5fhmih_2fmp_5fslot_5flist_2eproto}, {
      &scc_info_MpSlotList_mf_5fhmih_2fmp_5fslot_5flist_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mf_5fhmih_2fmp_5fslot_5flist_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mf_5fhmih_2fmp_5fslot_5flist_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mf_5fhmih_2fmp_5fslot_5flist_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mf_5fhmih_2fmp_5fslot_5flist_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::mp_slot_list::MpSlotList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::mp_slot_list::MpSlotList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::mp_slot_list::MpSlotList, slotid_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::mp_slot_list::MpSlotList, roadwidth_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::mp_slot_list::MpSlotList, relocalizationstatus_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::mp_slot_list::MpSlotList, gpssilentofferingenabled_),
  3,
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::mp_slot_list::MpSlotList_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::mp_slot_list::MpSlotList_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::mp_slot_list::MpSlotList_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::pb::mf_hmih::mp_slot_list::MpSlotList)},
  { 13, 19, sizeof(::pb::mf_hmih::mp_slot_list::MpSlotList_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::mp_slot_list::_MpSlotList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::mp_slot_list::_MpSlotList_array_port_default_instance_),
};

const char descriptor_table_protodef_mf_5fhmih_2fmp_5fslot_5flist_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032mf_hmih/mp_slot_list.proto\022\027pb.mf_hmih"
  ".mp_slot_list\"s\n\nMpSlotList\022\017\n\006slotId\030\262\t"
  " \001(\r\022\022\n\troadWidth\030\336\002 \001(\002\022\035\n\024relocalizati"
  "onStatus\030\265\001 \001(\010\022!\n\030gpsSilentOfferingEnab"
  "led\030\271\032 \001(\010\"K\n\025MpSlotList_array_port\0222\n\004d"
  "ata\030\276\031 \003(\0132#.pb.mf_hmih.mp_slot_list.MpS"
  "lotList"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mf_5fhmih_2fmp_5fslot_5flist_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mf_5fhmih_2fmp_5fslot_5flist_2eproto_sccs[2] = {
  &scc_info_MpSlotList_mf_5fhmih_2fmp_5fslot_5flist_2eproto.base,
  &scc_info_MpSlotList_array_port_mf_5fhmih_2fmp_5fslot_5flist_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mf_5fhmih_2fmp_5fslot_5flist_2eproto_once;
static bool descriptor_table_mf_5fhmih_2fmp_5fslot_5flist_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fmp_5fslot_5flist_2eproto = {
  &descriptor_table_mf_5fhmih_2fmp_5fslot_5flist_2eproto_initialized, descriptor_table_protodef_mf_5fhmih_2fmp_5fslot_5flist_2eproto, "mf_hmih/mp_slot_list.proto", 247,
  &descriptor_table_mf_5fhmih_2fmp_5fslot_5flist_2eproto_once, descriptor_table_mf_5fhmih_2fmp_5fslot_5flist_2eproto_sccs, descriptor_table_mf_5fhmih_2fmp_5fslot_5flist_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_mf_5fhmih_2fmp_5fslot_5flist_2eproto::offsets,
  file_level_metadata_mf_5fhmih_2fmp_5fslot_5flist_2eproto, 2, file_level_enum_descriptors_mf_5fhmih_2fmp_5fslot_5flist_2eproto, file_level_service_descriptors_mf_5fhmih_2fmp_5fslot_5flist_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mf_5fhmih_2fmp_5fslot_5flist_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mf_5fhmih_2fmp_5fslot_5flist_2eproto), true);
namespace pb {
namespace mf_hmih {
namespace mp_slot_list {

// ===================================================================

void MpSlotList::InitAsDefaultInstance() {
}
class MpSlotList::_Internal {
 public:
  using HasBits = decltype(std::declval<MpSlotList>()._has_bits_);
  static void set_has_slotid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_roadwidth(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_relocalizationstatus(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_gpssilentofferingenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MpSlotList::MpSlotList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.mp_slot_list.MpSlotList)
}
MpSlotList::MpSlotList(const MpSlotList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&relocalizationstatus_, &from.relocalizationstatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&slotid_) -
    reinterpret_cast<char*>(&relocalizationstatus_)) + sizeof(slotid_));
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.mp_slot_list.MpSlotList)
}

void MpSlotList::SharedCtor() {
  ::memset(&relocalizationstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slotid_) -
      reinterpret_cast<char*>(&relocalizationstatus_)) + sizeof(slotid_));
}

MpSlotList::~MpSlotList() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.mp_slot_list.MpSlotList)
  SharedDtor();
}

void MpSlotList::SharedDtor() {
}

void MpSlotList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MpSlotList& MpSlotList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MpSlotList_mf_5fhmih_2fmp_5fslot_5flist_2eproto.base);
  return *internal_default_instance();
}


void MpSlotList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.mp_slot_list.MpSlotList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&relocalizationstatus_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&slotid_) -
        reinterpret_cast<char*>(&relocalizationstatus_)) + sizeof(slotid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MpSlotList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool relocalizationStatus = 181;
      case 181:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_relocalizationstatus(&has_bits);
          relocalizationstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float roadWidth = 350;
      case 350:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 245)) {
          _Internal::set_has_roadwidth(&has_bits);
          roadwidth_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional uint32 slotId = 1202;
      case 1202:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_slotid(&has_bits);
          slotid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool gpsSilentOfferingEnabled = 3385;
      case 3385:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          _Internal::set_has_gpssilentofferingenabled(&has_bits);
          gpssilentofferingenabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MpSlotList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.mp_slot_list.MpSlotList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool relocalizationStatus = 181;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(181, this->_internal_relocalizationstatus(), target);
  }

  // optional float roadWidth = 350;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(350, this->_internal_roadwidth(), target);
  }

  // optional uint32 slotId = 1202;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1202, this->_internal_slotid(), target);
  }

  // optional bool gpsSilentOfferingEnabled = 3385;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3385, this->_internal_gpssilentofferingenabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.mp_slot_list.MpSlotList)
  return target;
}

size_t MpSlotList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.mp_slot_list.MpSlotList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bool relocalizationStatus = 181;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool gpsSilentOfferingEnabled = 3385;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 + 1;
    }

    // optional float roadWidth = 350;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 4;
    }

    // optional uint32 slotId = 1202;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_slotid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MpSlotList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.mp_slot_list.MpSlotList)
  GOOGLE_DCHECK_NE(&from, this);
  const MpSlotList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MpSlotList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.mp_slot_list.MpSlotList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.mp_slot_list.MpSlotList)
    MergeFrom(*source);
  }
}

void MpSlotList::MergeFrom(const MpSlotList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.mp_slot_list.MpSlotList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      relocalizationstatus_ = from.relocalizationstatus_;
    }
    if (cached_has_bits & 0x00000002u) {
      gpssilentofferingenabled_ = from.gpssilentofferingenabled_;
    }
    if (cached_has_bits & 0x00000004u) {
      roadwidth_ = from.roadwidth_;
    }
    if (cached_has_bits & 0x00000008u) {
      slotid_ = from.slotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MpSlotList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.mp_slot_list.MpSlotList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpSlotList::CopyFrom(const MpSlotList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.mp_slot_list.MpSlotList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpSlotList::IsInitialized() const {
  return true;
}

void MpSlotList::InternalSwap(MpSlotList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(relocalizationstatus_, other->relocalizationstatus_);
  swap(gpssilentofferingenabled_, other->gpssilentofferingenabled_);
  swap(roadwidth_, other->roadwidth_);
  swap(slotid_, other->slotid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MpSlotList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MpSlotList_array_port::InitAsDefaultInstance() {
}
class MpSlotList_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<MpSlotList_array_port>()._has_bits_);
};

MpSlotList_array_port::MpSlotList_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
}
MpSlotList_array_port::MpSlotList_array_port(const MpSlotList_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
}

void MpSlotList_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MpSlotList_array_port_mf_5fhmih_2fmp_5fslot_5flist_2eproto.base);
}

MpSlotList_array_port::~MpSlotList_array_port() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
  SharedDtor();
}

void MpSlotList_array_port::SharedDtor() {
}

void MpSlotList_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MpSlotList_array_port& MpSlotList_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MpSlotList_array_port_mf_5fhmih_2fmp_5fslot_5flist_2eproto.base);
  return *internal_default_instance();
}


void MpSlotList_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MpSlotList_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.mf_hmih.mp_slot_list.MpSlotList data = 3262;
      case 3262:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MpSlotList_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.mp_slot_list.MpSlotList data = 3262;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3262, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
  return target;
}

size_t MpSlotList_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.mp_slot_list.MpSlotList data = 3262;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MpSlotList_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const MpSlotList_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MpSlotList_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
    MergeFrom(*source);
  }
}

void MpSlotList_array_port::MergeFrom(const MpSlotList_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void MpSlotList_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpSlotList_array_port::CopyFrom(const MpSlotList_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.mp_slot_list.MpSlotList_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpSlotList_array_port::IsInitialized() const {
  return true;
}

void MpSlotList_array_port::InternalSwap(MpSlotList_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MpSlotList_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mp_slot_list
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::mp_slot_list::MpSlotList* Arena::CreateMaybeMessage< ::pb::mf_hmih::mp_slot_list::MpSlotList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::mp_slot_list::MpSlotList >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::mp_slot_list::MpSlotList_array_port* Arena::CreateMaybeMessage< ::pb::mf_hmih::mp_slot_list::MpSlotList_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::mp_slot_list::MpSlotList_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
