// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lsm_vedodo/odo_nvmdata.proto

#include "lsm_vedodo/odo_nvmdata.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsignal_5fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_lsm_5fvedodo_2flat_5facc_5ft_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LatAcc_t_lsm_5fvedodo_2flat_5facc_5ft_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_lsm_5fvedodo_2fodo_5fnv_5fst_5fwhl_5fang_5fcal_5ft_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OdoNvStWhlAngCal_t_lsm_5fvedodo_2fodo_5fnv_5fst_5fwhl_5fang_5fcal_5ft_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_lsm_5fvedodo_2fodo_5fnvm_5fstate_5ft_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OdoNvmState_t_lsm_5fvedodo_2fodo_5fnvm_5fstate_5ft_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_lsm_5fvedodo_2fodo_5fnvmdata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_OdoNVMData_lsm_5fvedodo_2fodo_5fnvmdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_lsm_5fvedodo_2fyw_5frate_5ft_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_YwRate_t_lsm_5fvedodo_2fyw_5frate_5ft_2eproto;
namespace pb {
namespace lsm_vedodo {
namespace odo_nvmdata {
class OdoNVMDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OdoNVMData> _instance;
} _OdoNVMData_default_instance_;
class OdoNVMData_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OdoNVMData_array_port> _instance;
} _OdoNVMData_array_port_default_instance_;
}  // namespace odo_nvmdata
}  // namespace lsm_vedodo
}  // namespace pb
static void InitDefaultsscc_info_OdoNVMData_lsm_5fvedodo_2fodo_5fnvmdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::lsm_vedodo::odo_nvmdata::_OdoNVMData_default_instance_;
    new (ptr) ::pb::lsm_vedodo::odo_nvmdata::OdoNVMData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::lsm_vedodo::odo_nvmdata::OdoNVMData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_OdoNVMData_lsm_5fvedodo_2fodo_5fnvmdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_OdoNVMData_lsm_5fvedodo_2fodo_5fnvmdata_2eproto}, {
      &scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto.base,
      &scc_info_OdoNvStWhlAngCal_t_lsm_5fvedodo_2fodo_5fnv_5fst_5fwhl_5fang_5fcal_5ft_2eproto.base,
      &scc_info_YwRate_t_lsm_5fvedodo_2fyw_5frate_5ft_2eproto.base,
      &scc_info_LatAcc_t_lsm_5fvedodo_2flat_5facc_5ft_2eproto.base,
      &scc_info_OdoNvmState_t_lsm_5fvedodo_2fodo_5fnvm_5fstate_5ft_2eproto.base,}};

static void InitDefaultsscc_info_OdoNVMData_array_port_lsm_5fvedodo_2fodo_5fnvmdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::lsm_vedodo::odo_nvmdata::_OdoNVMData_array_port_default_instance_;
    new (ptr) ::pb::lsm_vedodo::odo_nvmdata::OdoNVMData_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::lsm_vedodo::odo_nvmdata::OdoNVMData_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OdoNVMData_array_port_lsm_5fvedodo_2fodo_5fnvmdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OdoNVMData_array_port_lsm_5fvedodo_2fodo_5fnvmdata_2eproto}, {
      &scc_info_OdoNVMData_lsm_5fvedodo_2fodo_5fnvmdata_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_lsm_5fvedodo_2fodo_5fnvmdata_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_lsm_5fvedodo_2fodo_5fnvmdata_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_lsm_5fvedodo_2fodo_5fnvmdata_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_lsm_5fvedodo_2fodo_5fnvmdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData, uiversionnumber_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData, ssigheader_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData, stwhlang_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData, ywrate_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData, latacc_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData, state_),
  5,
  0,
  4,
  2,
  3,
  1,
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData)},
  { 17, 23, sizeof(::pb::lsm_vedodo::odo_nvmdata::OdoNVMData_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::lsm_vedodo::odo_nvmdata::_OdoNVMData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::lsm_vedodo::odo_nvmdata::_OdoNVMData_array_port_default_instance_),
};

const char descriptor_table_protodef_lsm_5fvedodo_2fodo_5fnvmdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034lsm_vedodo/odo_nvmdata.proto\022\031pb.lsm_v"
  "edodo.odo_nvmdata\032\027eco/signal_header.pro"
  "to\032(lsm_vedodo/odo_nv_st_whl_ang_cal_t.p"
  "roto\032\032lsm_vedodo/yw_rate_t.proto\032\032lsm_ve"
  "dodo/lat_acc_t.proto\032 lsm_vedodo/odo_nvm"
  "_state_t.proto\"\323\002\n\nOdoNVMData\022\030\n\017uiVersi"
  "onNumber\030\314\020 \001(\r\0227\n\nsSigHeader\030\211\010 \001(\0132\".p"
  "b.eco.signal_header.SignalHeader\022L\n\010StWh"
  "lAng\030\303\027 \001(\01329.pb.lsm_vedodo.odo_nv_st_wh"
  "l_ang_cal_t.OdoNvStWhlAngCal_t\0222\n\006YwRate"
  "\030\365\t \001(\0132!.pb.lsm_vedodo.yw_rate_t.YwRate"
  "_t\0222\n\006LatAcc\030\233\023 \001(\0132!.pb.lsm_vedodo.lat_"
  "acc_t.LatAcc_t\022<\n\005State\030\276\t \001(\0132,.pb.lsm_"
  "vedodo.odo_nvm_state_t.OdoNvmState_t\"M\n\025"
  "OdoNVMData_array_port\0224\n\004data\030\327\020 \003(\0132%.p"
  "b.lsm_vedodo.odo_nvmdata.OdoNVMData"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_lsm_5fvedodo_2fodo_5fnvmdata_2eproto_deps[5] = {
  &::descriptor_table_eco_2fsignal_5fheader_2eproto,
  &::descriptor_table_lsm_5fvedodo_2flat_5facc_5ft_2eproto,
  &::descriptor_table_lsm_5fvedodo_2fodo_5fnv_5fst_5fwhl_5fang_5fcal_5ft_2eproto,
  &::descriptor_table_lsm_5fvedodo_2fodo_5fnvm_5fstate_5ft_2eproto,
  &::descriptor_table_lsm_5fvedodo_2fyw_5frate_5ft_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_lsm_5fvedodo_2fodo_5fnvmdata_2eproto_sccs[2] = {
  &scc_info_OdoNVMData_lsm_5fvedodo_2fodo_5fnvmdata_2eproto.base,
  &scc_info_OdoNVMData_array_port_lsm_5fvedodo_2fodo_5fnvmdata_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_lsm_5fvedodo_2fodo_5fnvmdata_2eproto_once;
static bool descriptor_table_lsm_5fvedodo_2fodo_5fnvmdata_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lsm_5fvedodo_2fodo_5fnvmdata_2eproto = {
  &descriptor_table_lsm_5fvedodo_2fodo_5fnvmdata_2eproto_initialized, descriptor_table_protodef_lsm_5fvedodo_2fodo_5fnvmdata_2eproto, "lsm_vedodo/odo_nvmdata.proto", 635,
  &descriptor_table_lsm_5fvedodo_2fodo_5fnvmdata_2eproto_once, descriptor_table_lsm_5fvedodo_2fodo_5fnvmdata_2eproto_sccs, descriptor_table_lsm_5fvedodo_2fodo_5fnvmdata_2eproto_deps, 2, 5,
  schemas, file_default_instances, TableStruct_lsm_5fvedodo_2fodo_5fnvmdata_2eproto::offsets,
  file_level_metadata_lsm_5fvedodo_2fodo_5fnvmdata_2eproto, 2, file_level_enum_descriptors_lsm_5fvedodo_2fodo_5fnvmdata_2eproto, file_level_service_descriptors_lsm_5fvedodo_2fodo_5fnvmdata_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_lsm_5fvedodo_2fodo_5fnvmdata_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_lsm_5fvedodo_2fodo_5fnvmdata_2eproto), true);
namespace pb {
namespace lsm_vedodo {
namespace odo_nvmdata {

// ===================================================================

void OdoNVMData::InitAsDefaultInstance() {
  ::pb::lsm_vedodo::odo_nvmdata::_OdoNVMData_default_instance_._instance.get_mutable()->ssigheader_ = const_cast< ::pb::eco::signal_header::SignalHeader*>(
      ::pb::eco::signal_header::SignalHeader::internal_default_instance());
  ::pb::lsm_vedodo::odo_nvmdata::_OdoNVMData_default_instance_._instance.get_mutable()->stwhlang_ = const_cast< ::pb::lsm_vedodo::odo_nv_st_whl_ang_cal_t::OdoNvStWhlAngCal_t*>(
      ::pb::lsm_vedodo::odo_nv_st_whl_ang_cal_t::OdoNvStWhlAngCal_t::internal_default_instance());
  ::pb::lsm_vedodo::odo_nvmdata::_OdoNVMData_default_instance_._instance.get_mutable()->ywrate_ = const_cast< ::pb::lsm_vedodo::yw_rate_t::YwRate_t*>(
      ::pb::lsm_vedodo::yw_rate_t::YwRate_t::internal_default_instance());
  ::pb::lsm_vedodo::odo_nvmdata::_OdoNVMData_default_instance_._instance.get_mutable()->latacc_ = const_cast< ::pb::lsm_vedodo::lat_acc_t::LatAcc_t*>(
      ::pb::lsm_vedodo::lat_acc_t::LatAcc_t::internal_default_instance());
  ::pb::lsm_vedodo::odo_nvmdata::_OdoNVMData_default_instance_._instance.get_mutable()->state_ = const_cast< ::pb::lsm_vedodo::odo_nvm_state_t::OdoNvmState_t*>(
      ::pb::lsm_vedodo::odo_nvm_state_t::OdoNvmState_t::internal_default_instance());
}
class OdoNVMData::_Internal {
 public:
  using HasBits = decltype(std::declval<OdoNVMData>()._has_bits_);
  static void set_has_uiversionnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::pb::eco::signal_header::SignalHeader& ssigheader(const OdoNVMData* msg);
  static void set_has_ssigheader(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb::lsm_vedodo::odo_nv_st_whl_ang_cal_t::OdoNvStWhlAngCal_t& stwhlang(const OdoNVMData* msg);
  static void set_has_stwhlang(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::pb::lsm_vedodo::yw_rate_t::YwRate_t& ywrate(const OdoNVMData* msg);
  static void set_has_ywrate(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::pb::lsm_vedodo::lat_acc_t::LatAcc_t& latacc(const OdoNVMData* msg);
  static void set_has_latacc(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::pb::lsm_vedodo::odo_nvm_state_t::OdoNvmState_t& state(const OdoNVMData* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::pb::eco::signal_header::SignalHeader&
OdoNVMData::_Internal::ssigheader(const OdoNVMData* msg) {
  return *msg->ssigheader_;
}
const ::pb::lsm_vedodo::odo_nv_st_whl_ang_cal_t::OdoNvStWhlAngCal_t&
OdoNVMData::_Internal::stwhlang(const OdoNVMData* msg) {
  return *msg->stwhlang_;
}
const ::pb::lsm_vedodo::yw_rate_t::YwRate_t&
OdoNVMData::_Internal::ywrate(const OdoNVMData* msg) {
  return *msg->ywrate_;
}
const ::pb::lsm_vedodo::lat_acc_t::LatAcc_t&
OdoNVMData::_Internal::latacc(const OdoNVMData* msg) {
  return *msg->latacc_;
}
const ::pb::lsm_vedodo::odo_nvm_state_t::OdoNvmState_t&
OdoNVMData::_Internal::state(const OdoNVMData* msg) {
  return *msg->state_;
}
void OdoNVMData::clear_ssigheader() {
  if (ssigheader_ != nullptr) ssigheader_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void OdoNVMData::clear_stwhlang() {
  if (stwhlang_ != nullptr) stwhlang_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void OdoNVMData::clear_ywrate() {
  if (ywrate_ != nullptr) ywrate_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void OdoNVMData::clear_latacc() {
  if (latacc_ != nullptr) latacc_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void OdoNVMData::clear_state() {
  if (state_ != nullptr) state_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
OdoNVMData::OdoNVMData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
}
OdoNVMData::OdoNVMData(const OdoNVMData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_ssigheader()) {
    ssigheader_ = new ::pb::eco::signal_header::SignalHeader(*from.ssigheader_);
  } else {
    ssigheader_ = nullptr;
  }
  if (from._internal_has_state()) {
    state_ = new ::pb::lsm_vedodo::odo_nvm_state_t::OdoNvmState_t(*from.state_);
  } else {
    state_ = nullptr;
  }
  if (from._internal_has_ywrate()) {
    ywrate_ = new ::pb::lsm_vedodo::yw_rate_t::YwRate_t(*from.ywrate_);
  } else {
    ywrate_ = nullptr;
  }
  if (from._internal_has_latacc()) {
    latacc_ = new ::pb::lsm_vedodo::lat_acc_t::LatAcc_t(*from.latacc_);
  } else {
    latacc_ = nullptr;
  }
  if (from._internal_has_stwhlang()) {
    stwhlang_ = new ::pb::lsm_vedodo::odo_nv_st_whl_ang_cal_t::OdoNvStWhlAngCal_t(*from.stwhlang_);
  } else {
    stwhlang_ = nullptr;
  }
  uiversionnumber_ = from.uiversionnumber_;
  // @@protoc_insertion_point(copy_constructor:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
}

void OdoNVMData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OdoNVMData_lsm_5fvedodo_2fodo_5fnvmdata_2eproto.base);
  ::memset(&ssigheader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiversionnumber_) -
      reinterpret_cast<char*>(&ssigheader_)) + sizeof(uiversionnumber_));
}

OdoNVMData::~OdoNVMData() {
  // @@protoc_insertion_point(destructor:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
  SharedDtor();
}

void OdoNVMData::SharedDtor() {
  if (this != internal_default_instance()) delete ssigheader_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete ywrate_;
  if (this != internal_default_instance()) delete latacc_;
  if (this != internal_default_instance()) delete stwhlang_;
}

void OdoNVMData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OdoNVMData& OdoNVMData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OdoNVMData_lsm_5fvedodo_2fodo_5fnvmdata_2eproto.base);
  return *internal_default_instance();
}


void OdoNVMData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(ssigheader_ != nullptr);
      ssigheader_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(state_ != nullptr);
      state_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(ywrate_ != nullptr);
      ywrate_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(latacc_ != nullptr);
      latacc_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(stwhlang_ != nullptr);
      stwhlang_->Clear();
    }
  }
  uiversionnumber_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* OdoNVMData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_ssigheader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.lsm_vedodo.odo_nvm_state_t.OdoNvmState_t State = 1214;
      case 1214:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.lsm_vedodo.yw_rate_t.YwRate_t YwRate = 1269;
      case 1269:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_ywrate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 uiVersionNumber = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_uiversionnumber(&has_bits);
          uiversionnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.lsm_vedodo.lat_acc_t.LatAcc_t LatAcc = 2459;
      case 2459:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_latacc(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.lsm_vedodo.odo_nv_st_whl_ang_cal_t.OdoNvStWhlAngCal_t StWhlAng = 3011;
      case 3011:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_stwhlang(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OdoNVMData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::ssigheader(this), target, stream);
  }

  // optional .pb.lsm_vedodo.odo_nvm_state_t.OdoNvmState_t State = 1214;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1214, _Internal::state(this), target, stream);
  }

  // optional .pb.lsm_vedodo.yw_rate_t.YwRate_t YwRate = 1269;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1269, _Internal::ywrate(this), target, stream);
  }

  // optional uint32 uiVersionNumber = 2124;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2124, this->_internal_uiversionnumber(), target);
  }

  // optional .pb.lsm_vedodo.lat_acc_t.LatAcc_t LatAcc = 2459;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2459, _Internal::latacc(this), target, stream);
  }

  // optional .pb.lsm_vedodo.odo_nv_st_whl_ang_cal_t.OdoNvStWhlAngCal_t StWhlAng = 3011;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3011, _Internal::stwhlang(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
  return target;
}

size_t OdoNVMData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ssigheader_);
    }

    // optional .pb.lsm_vedodo.odo_nvm_state_t.OdoNvmState_t State = 1214;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *state_);
    }

    // optional .pb.lsm_vedodo.yw_rate_t.YwRate_t YwRate = 1269;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ywrate_);
    }

    // optional .pb.lsm_vedodo.lat_acc_t.LatAcc_t LatAcc = 2459;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *latacc_);
    }

    // optional .pb.lsm_vedodo.odo_nv_st_whl_ang_cal_t.OdoNvStWhlAngCal_t StWhlAng = 3011;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stwhlang_);
    }

    // optional uint32 uiVersionNumber = 2124;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uiversionnumber());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OdoNVMData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
  GOOGLE_DCHECK_NE(&from, this);
  const OdoNVMData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OdoNVMData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
    MergeFrom(*source);
  }
}

void OdoNVMData::MergeFrom(const OdoNVMData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_ssigheader()->::pb::eco::signal_header::SignalHeader::MergeFrom(from._internal_ssigheader());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_state()->::pb::lsm_vedodo::odo_nvm_state_t::OdoNvmState_t::MergeFrom(from._internal_state());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_ywrate()->::pb::lsm_vedodo::yw_rate_t::YwRate_t::MergeFrom(from._internal_ywrate());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_latacc()->::pb::lsm_vedodo::lat_acc_t::LatAcc_t::MergeFrom(from._internal_latacc());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_stwhlang()->::pb::lsm_vedodo::odo_nv_st_whl_ang_cal_t::OdoNvStWhlAngCal_t::MergeFrom(from._internal_stwhlang());
    }
    if (cached_has_bits & 0x00000020u) {
      uiversionnumber_ = from.uiversionnumber_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OdoNVMData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OdoNVMData::CopyFrom(const OdoNVMData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OdoNVMData::IsInitialized() const {
  return true;
}

void OdoNVMData::InternalSwap(OdoNVMData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ssigheader_, other->ssigheader_);
  swap(state_, other->state_);
  swap(ywrate_, other->ywrate_);
  swap(latacc_, other->latacc_);
  swap(stwhlang_, other->stwhlang_);
  swap(uiversionnumber_, other->uiversionnumber_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OdoNVMData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OdoNVMData_array_port::InitAsDefaultInstance() {
}
class OdoNVMData_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<OdoNVMData_array_port>()._has_bits_);
};

OdoNVMData_array_port::OdoNVMData_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
}
OdoNVMData_array_port::OdoNVMData_array_port(const OdoNVMData_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
}

void OdoNVMData_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OdoNVMData_array_port_lsm_5fvedodo_2fodo_5fnvmdata_2eproto.base);
}

OdoNVMData_array_port::~OdoNVMData_array_port() {
  // @@protoc_insertion_point(destructor:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
  SharedDtor();
}

void OdoNVMData_array_port::SharedDtor() {
}

void OdoNVMData_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OdoNVMData_array_port& OdoNVMData_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OdoNVMData_array_port_lsm_5fvedodo_2fodo_5fnvmdata_2eproto.base);
  return *internal_default_instance();
}


void OdoNVMData_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* OdoNVMData_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.lsm_vedodo.odo_nvmdata.OdoNVMData data = 2135;
      case 2135:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OdoNVMData_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.lsm_vedodo.odo_nvmdata.OdoNVMData data = 2135;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2135, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
  return target;
}

size_t OdoNVMData_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.lsm_vedodo.odo_nvmdata.OdoNVMData data = 2135;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OdoNVMData_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const OdoNVMData_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OdoNVMData_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
    MergeFrom(*source);
  }
}

void OdoNVMData_array_port::MergeFrom(const OdoNVMData_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void OdoNVMData_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OdoNVMData_array_port::CopyFrom(const OdoNVMData_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.lsm_vedodo.odo_nvmdata.OdoNVMData_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OdoNVMData_array_port::IsInitialized() const {
  return true;
}

void OdoNVMData_array_port::InternalSwap(OdoNVMData_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OdoNVMData_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace odo_nvmdata
}  // namespace lsm_vedodo
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::lsm_vedodo::odo_nvmdata::OdoNVMData* Arena::CreateMaybeMessage< ::pb::lsm_vedodo::odo_nvmdata::OdoNVMData >(Arena* arena) {
  return Arena::CreateInternal< ::pb::lsm_vedodo::odo_nvmdata::OdoNVMData >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::lsm_vedodo::odo_nvmdata::OdoNVMData_array_port* Arena::CreateMaybeMessage< ::pb::lsm_vedodo::odo_nvmdata::OdoNVMData_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::lsm_vedodo::odo_nvmdata::OdoNVMData_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
