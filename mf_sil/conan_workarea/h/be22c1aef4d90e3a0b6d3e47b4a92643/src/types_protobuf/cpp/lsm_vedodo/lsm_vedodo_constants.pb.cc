// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lsm_vedodo/lsm_vedodo_constants.proto

#include "lsm_vedodo/lsm_vedodo_constants.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LSM_VEDODO_Constants_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto;
namespace pb {
namespace lsm_vedodo {
namespace lsm_vedodo_constants {
class LSM_VEDODO_ConstantsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LSM_VEDODO_Constants> _instance;
} _LSM_VEDODO_Constants_default_instance_;
class LSM_VEDODO_Constants_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LSM_VEDODO_Constants_array_port> _instance;
} _LSM_VEDODO_Constants_array_port_default_instance_;
}  // namespace lsm_vedodo_constants
}  // namespace lsm_vedodo
}  // namespace pb
static void InitDefaultsscc_info_LSM_VEDODO_Constants_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::lsm_vedodo::lsm_vedodo_constants::_LSM_VEDODO_Constants_default_instance_;
    new (ptr) ::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LSM_VEDODO_Constants_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LSM_VEDODO_Constants_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto}, {}};

static void InitDefaultsscc_info_LSM_VEDODO_Constants_array_port_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::lsm_vedodo::lsm_vedodo_constants::_LSM_VEDODO_Constants_array_port_default_instance_;
    new (ptr) ::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LSM_VEDODO_Constants_array_port_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LSM_VEDODO_Constants_array_port_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto}, {
      &scc_info_LSM_VEDODO_Constants_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants, odo_buffer_size_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants, odo_prediction_size_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants, dbg_num_of_wheels_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants, num_mts_debug_freespace_odo_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants, coordinate_overflow_position_m_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants, coordinate_overflow_yaw_angle_rad_),
  3,
  0,
  2,
  4,
  1,
  5,
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants)},
  { 17, 23, sizeof(::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::lsm_vedodo::lsm_vedodo_constants::_LSM_VEDODO_Constants_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::lsm_vedodo::lsm_vedodo_constants::_LSM_VEDODO_Constants_array_port_default_instance_),
};

const char descriptor_table_protodef_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%lsm_vedodo/lsm_vedodo_constants.proto\022"
  "\"pb.lsm_vedodo.lsm_vedodo_constants\"\350\001\n\024"
  "LSM_VEDODO_Constants\022\030\n\017ODO_BUFFER_SIZE\030"
  "\222\010 \001(\r\022\034\n\023ODO_PREDICTION_SIZE\030\365\003 \001(\r\022\035\n\024"
  "DBG_NUM_OF_WHEELS_NU\030\262\006 \001(\r\022$\n\033NUM_MTS_D"
  "EBUG_FREESPACE_ODO\030\273\030 \001(\r\022\'\n\036COORDINATE_"
  "OVERFLOW_POSITION_M\030\326\004 \001(\002\022*\n!COORDINATE"
  "_OVERFLOW_YAW_ANGLE_RAD\030\240\033 \001(\002\"j\n\037LSM_VE"
  "DODO_Constants_array_port\022G\n\004data\030\343\017 \003(\013"
  "28.pb.lsm_vedodo.lsm_vedodo_constants.LS"
  "M_VEDODO_Constants"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto_sccs[2] = {
  &scc_info_LSM_VEDODO_Constants_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto.base,
  &scc_info_LSM_VEDODO_Constants_array_port_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto_once;
static bool descriptor_table_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto = {
  &descriptor_table_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto_initialized, descriptor_table_protodef_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto, "lsm_vedodo/lsm_vedodo_constants.proto", 418,
  &descriptor_table_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto_once, descriptor_table_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto_sccs, descriptor_table_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto::offsets,
  file_level_metadata_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto, 2, file_level_enum_descriptors_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto, file_level_service_descriptors_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto), true);
namespace pb {
namespace lsm_vedodo {
namespace lsm_vedodo_constants {

// ===================================================================

void LSM_VEDODO_Constants::InitAsDefaultInstance() {
}
class LSM_VEDODO_Constants::_Internal {
 public:
  using HasBits = decltype(std::declval<LSM_VEDODO_Constants>()._has_bits_);
  static void set_has_odo_buffer_size(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_odo_prediction_size(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dbg_num_of_wheels_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_num_mts_debug_freespace_odo(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_coordinate_overflow_position_m(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_coordinate_overflow_yaw_angle_rad(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

LSM_VEDODO_Constants::LSM_VEDODO_Constants()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
}
LSM_VEDODO_Constants::LSM_VEDODO_Constants(const LSM_VEDODO_Constants& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&odo_prediction_size_, &from.odo_prediction_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&coordinate_overflow_yaw_angle_rad_) -
    reinterpret_cast<char*>(&odo_prediction_size_)) + sizeof(coordinate_overflow_yaw_angle_rad_));
  // @@protoc_insertion_point(copy_constructor:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
}

void LSM_VEDODO_Constants::SharedCtor() {
  ::memset(&odo_prediction_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coordinate_overflow_yaw_angle_rad_) -
      reinterpret_cast<char*>(&odo_prediction_size_)) + sizeof(coordinate_overflow_yaw_angle_rad_));
}

LSM_VEDODO_Constants::~LSM_VEDODO_Constants() {
  // @@protoc_insertion_point(destructor:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
  SharedDtor();
}

void LSM_VEDODO_Constants::SharedDtor() {
}

void LSM_VEDODO_Constants::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LSM_VEDODO_Constants& LSM_VEDODO_Constants::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LSM_VEDODO_Constants_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto.base);
  return *internal_default_instance();
}


void LSM_VEDODO_Constants::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&odo_prediction_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&coordinate_overflow_yaw_angle_rad_) -
        reinterpret_cast<char*>(&odo_prediction_size_)) + sizeof(coordinate_overflow_yaw_angle_rad_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* LSM_VEDODO_Constants::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 ODO_PREDICTION_SIZE = 501;
      case 501:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_odo_prediction_size(&has_bits);
          odo_prediction_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float COORDINATE_OVERFLOW_POSITION_M = 598;
      case 598:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 181)) {
          _Internal::set_has_coordinate_overflow_position_m(&has_bits);
          coordinate_overflow_position_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional uint32 DBG_NUM_OF_WHEELS_NU = 818;
      case 818:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_dbg_num_of_wheels_nu(&has_bits);
          dbg_num_of_wheels_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 ODO_BUFFER_SIZE = 1042;
      case 1042:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_odo_buffer_size(&has_bits);
          odo_buffer_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 NUM_MTS_DEBUG_FREESPACE_ODO = 3131;
      case 3131:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          _Internal::set_has_num_mts_debug_freespace_odo(&has_bits);
          num_mts_debug_freespace_odo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float COORDINATE_OVERFLOW_YAW_ANGLE_RAD = 3488;
      case 3488:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 5)) {
          _Internal::set_has_coordinate_overflow_yaw_angle_rad(&has_bits);
          coordinate_overflow_yaw_angle_rad_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LSM_VEDODO_Constants::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ODO_PREDICTION_SIZE = 501;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(501, this->_internal_odo_prediction_size(), target);
  }

  // optional float COORDINATE_OVERFLOW_POSITION_M = 598;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(598, this->_internal_coordinate_overflow_position_m(), target);
  }

  // optional uint32 DBG_NUM_OF_WHEELS_NU = 818;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(818, this->_internal_dbg_num_of_wheels_nu(), target);
  }

  // optional uint32 ODO_BUFFER_SIZE = 1042;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1042, this->_internal_odo_buffer_size(), target);
  }

  // optional uint32 NUM_MTS_DEBUG_FREESPACE_ODO = 3131;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3131, this->_internal_num_mts_debug_freespace_odo(), target);
  }

  // optional float COORDINATE_OVERFLOW_YAW_ANGLE_RAD = 3488;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3488, this->_internal_coordinate_overflow_yaw_angle_rad(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
  return target;
}

size_t LSM_VEDODO_Constants::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint32 ODO_PREDICTION_SIZE = 501;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_odo_prediction_size());
    }

    // optional float COORDINATE_OVERFLOW_POSITION_M = 598;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 4;
    }

    // optional uint32 DBG_NUM_OF_WHEELS_NU = 818;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_dbg_num_of_wheels_nu());
    }

    // optional uint32 ODO_BUFFER_SIZE = 1042;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_odo_buffer_size());
    }

    // optional uint32 NUM_MTS_DEBUG_FREESPACE_ODO = 3131;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_num_mts_debug_freespace_odo());
    }

    // optional float COORDINATE_OVERFLOW_YAW_ANGLE_RAD = 3488;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LSM_VEDODO_Constants::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
  GOOGLE_DCHECK_NE(&from, this);
  const LSM_VEDODO_Constants* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LSM_VEDODO_Constants>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
    MergeFrom(*source);
  }
}

void LSM_VEDODO_Constants::MergeFrom(const LSM_VEDODO_Constants& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      odo_prediction_size_ = from.odo_prediction_size_;
    }
    if (cached_has_bits & 0x00000002u) {
      coordinate_overflow_position_m_ = from.coordinate_overflow_position_m_;
    }
    if (cached_has_bits & 0x00000004u) {
      dbg_num_of_wheels_nu_ = from.dbg_num_of_wheels_nu_;
    }
    if (cached_has_bits & 0x00000008u) {
      odo_buffer_size_ = from.odo_buffer_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_mts_debug_freespace_odo_ = from.num_mts_debug_freespace_odo_;
    }
    if (cached_has_bits & 0x00000020u) {
      coordinate_overflow_yaw_angle_rad_ = from.coordinate_overflow_yaw_angle_rad_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LSM_VEDODO_Constants::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSM_VEDODO_Constants::CopyFrom(const LSM_VEDODO_Constants& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSM_VEDODO_Constants::IsInitialized() const {
  return true;
}

void LSM_VEDODO_Constants::InternalSwap(LSM_VEDODO_Constants* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(odo_prediction_size_, other->odo_prediction_size_);
  swap(coordinate_overflow_position_m_, other->coordinate_overflow_position_m_);
  swap(dbg_num_of_wheels_nu_, other->dbg_num_of_wheels_nu_);
  swap(odo_buffer_size_, other->odo_buffer_size_);
  swap(num_mts_debug_freespace_odo_, other->num_mts_debug_freespace_odo_);
  swap(coordinate_overflow_yaw_angle_rad_, other->coordinate_overflow_yaw_angle_rad_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LSM_VEDODO_Constants::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LSM_VEDODO_Constants_array_port::InitAsDefaultInstance() {
}
class LSM_VEDODO_Constants_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<LSM_VEDODO_Constants_array_port>()._has_bits_);
};

LSM_VEDODO_Constants_array_port::LSM_VEDODO_Constants_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
}
LSM_VEDODO_Constants_array_port::LSM_VEDODO_Constants_array_port(const LSM_VEDODO_Constants_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
}

void LSM_VEDODO_Constants_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LSM_VEDODO_Constants_array_port_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto.base);
}

LSM_VEDODO_Constants_array_port::~LSM_VEDODO_Constants_array_port() {
  // @@protoc_insertion_point(destructor:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
  SharedDtor();
}

void LSM_VEDODO_Constants_array_port::SharedDtor() {
}

void LSM_VEDODO_Constants_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LSM_VEDODO_Constants_array_port& LSM_VEDODO_Constants_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LSM_VEDODO_Constants_array_port_lsm_5fvedodo_2flsm_5fvedodo_5fconstants_2eproto.base);
  return *internal_default_instance();
}


void LSM_VEDODO_Constants_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* LSM_VEDODO_Constants_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants data = 2019;
      case 2019:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16154>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LSM_VEDODO_Constants_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants data = 2019;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2019, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
  return target;
}

size_t LSM_VEDODO_Constants_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants data = 2019;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LSM_VEDODO_Constants_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const LSM_VEDODO_Constants_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LSM_VEDODO_Constants_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
    MergeFrom(*source);
  }
}

void LSM_VEDODO_Constants_array_port::MergeFrom(const LSM_VEDODO_Constants_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void LSM_VEDODO_Constants_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSM_VEDODO_Constants_array_port::CopyFrom(const LSM_VEDODO_Constants_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.lsm_vedodo.lsm_vedodo_constants.LSM_VEDODO_Constants_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSM_VEDODO_Constants_array_port::IsInitialized() const {
  return true;
}

void LSM_VEDODO_Constants_array_port::InternalSwap(LSM_VEDODO_Constants_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LSM_VEDODO_Constants_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace lsm_vedodo_constants
}  // namespace lsm_vedodo
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants* Arena::CreateMaybeMessage< ::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants >(Arena* arena) {
  return Arena::CreateInternal< ::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants_array_port* Arena::CreateMaybeMessage< ::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::lsm_vedodo::lsm_vedodo_constants::LSM_VEDODO_Constants_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
