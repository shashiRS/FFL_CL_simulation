// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_drv/us_drv_detection_type.proto

#include "us_drv/us_drv_detection_type.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace pb {
namespace us_drv {
namespace us_drv_detection_type {
}  // namespace us_drv_detection_type
}  // namespace us_drv
}  // namespace pb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"us_drv/us_drv_detection_type.proto\022\037pb"
  ".us_drv.us_drv_detection_type*\272\002\n\022UsDrvD"
  "etectionType\022 \n\034US_DETECTION_CONFIDENCE_"
  "MASK\020\017\022\034\n\030US_DETECTION_NORMAL_PATH\020\000\022 \n\034"
  "US_DETECTION_ADVANCED_PATH_1\020\020\022 \n\034US_DET"
  "ECTION_ADVANCED_PATH_2\020 \022\031\n\025US_DETECTION"
  "_NFD_PATH\0200\022!\n\035US_DETECTION_AATG_THRESHO"
  "LD_1\020@\022!\n\035US_DETECTION_AATG_THRESHOLD_2\020"
  "P\022\"\n\035US_DETECTION_FIRING_TIMESTAMP\020\200\001\022\033\n"
  "\026US_DETECTION_TYPE_MASK\020\360\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto_once;
static bool descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto = {
  &descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto_initialized, descriptor_table_protodef_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto, "us_drv/us_drv_detection_type.proto", 386,
  &descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto_once, descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto_sccs, descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto::offsets,
  file_level_metadata_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto, 0, file_level_enum_descriptors_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto, file_level_service_descriptors_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto), true);
namespace pb {
namespace us_drv {
namespace us_drv_detection_type {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UsDrvDetectionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto);
  return file_level_enum_descriptors_us_5fdrv_2fus_5fdrv_5fdetection_5ftype_2eproto[0];
}
bool UsDrvDetectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 15:
    case 16:
    case 32:
    case 48:
    case 64:
    case 80:
    case 128:
    case 240:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace us_drv_detection_type
}  // namespace us_drv
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
