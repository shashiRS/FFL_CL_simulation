// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_drv/us_drv_asic_errors.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "us_drv/us_drv_asic_status_errors.pb.h"
#include "us_drv/us_drv_spi_comm_errors.pb.h"
#include "us_drv/us_drv_dsi_comm_errors.pb.h"
#include "us_drv/us_drv_crm_mode_errors.pb.h"
#include "us_drv/us_drv_pdcm_frame_format_errors.pb.h"
#include "us_drv/us_drv_dsi_packet_errors.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto;
namespace pb {
namespace us_drv {
namespace us_drv_asic_errors {
class UsDrvAsicErrors;
class UsDrvAsicErrorsDefaultTypeInternal;
extern UsDrvAsicErrorsDefaultTypeInternal _UsDrvAsicErrors_default_instance_;
class UsDrvAsicErrors_array_port;
class UsDrvAsicErrors_array_portDefaultTypeInternal;
extern UsDrvAsicErrors_array_portDefaultTypeInternal _UsDrvAsicErrors_array_port_default_instance_;
}  // namespace us_drv_asic_errors
}  // namespace us_drv
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors* Arena::CreateMaybeMessage<::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors>(Arena*);
template<> ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port* Arena::CreateMaybeMessage<::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace us_drv {
namespace us_drv_asic_errors {

// ===================================================================

class UsDrvAsicErrors :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors) */ {
 public:
  UsDrvAsicErrors();
  virtual ~UsDrvAsicErrors();

  UsDrvAsicErrors(const UsDrvAsicErrors& from);
  UsDrvAsicErrors(UsDrvAsicErrors&& from) noexcept
    : UsDrvAsicErrors() {
    *this = ::std::move(from);
  }

  inline UsDrvAsicErrors& operator=(const UsDrvAsicErrors& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsDrvAsicErrors& operator=(UsDrvAsicErrors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsDrvAsicErrors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsDrvAsicErrors* internal_default_instance() {
    return reinterpret_cast<const UsDrvAsicErrors*>(
               &_UsDrvAsicErrors_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UsDrvAsicErrors& a, UsDrvAsicErrors& b) {
    a.Swap(&b);
  }
  inline void Swap(UsDrvAsicErrors* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsDrvAsicErrors* New() const final {
    return CreateMaybeMessage<UsDrvAsicErrors>(nullptr);
  }

  UsDrvAsicErrors* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsDrvAsicErrors>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsDrvAsicErrors& from);
  void MergeFrom(const UsDrvAsicErrors& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsDrvAsicErrors* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto);
    return ::descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCrmModeErrorsFieldNumber = 92,
    kDsiPacketErrorsFieldNumber = 900,
    kPdcmFrameFormatErrorsFieldNumber = 2977,
    kDsiCommErrorsFieldNumber = 3912,
    kAsicStatusErrorsFieldNumber = 1400,
    kSpiCommErrorsFieldNumber = 3024,
  };
  // repeated .pb.us_drv.us_drv_crm_mode_errors.UsDrvCrmModeErrors crmModeErrors = 92;
  int crmmodeerrors_size() const;
  private:
  int _internal_crmmodeerrors_size() const;
  public:
  void clear_crmmodeerrors();
  ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors* mutable_crmmodeerrors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors >*
      mutable_crmmodeerrors();
  private:
  const ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors& _internal_crmmodeerrors(int index) const;
  ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors* _internal_add_crmmodeerrors();
  public:
  const ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors& crmmodeerrors(int index) const;
  ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors* add_crmmodeerrors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors >&
      crmmodeerrors() const;

  // repeated .pb.us_drv.us_drv_dsi_packet_errors.UsDrvDsiPacketErrors dsiPacketErrors = 900;
  int dsipacketerrors_size() const;
  private:
  int _internal_dsipacketerrors_size() const;
  public:
  void clear_dsipacketerrors();
  ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors* mutable_dsipacketerrors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors >*
      mutable_dsipacketerrors();
  private:
  const ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors& _internal_dsipacketerrors(int index) const;
  ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors* _internal_add_dsipacketerrors();
  public:
  const ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors& dsipacketerrors(int index) const;
  ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors* add_dsipacketerrors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors >&
      dsipacketerrors() const;

  // repeated .pb.us_drv.us_drv_pdcm_frame_format_errors.UsDrvPdcmFrameFormatErrors pdcmFrameFormatErrors = 2977;
  int pdcmframeformaterrors_size() const;
  private:
  int _internal_pdcmframeformaterrors_size() const;
  public:
  void clear_pdcmframeformaterrors();
  ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors* mutable_pdcmframeformaterrors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors >*
      mutable_pdcmframeformaterrors();
  private:
  const ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors& _internal_pdcmframeformaterrors(int index) const;
  ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors* _internal_add_pdcmframeformaterrors();
  public:
  const ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors& pdcmframeformaterrors(int index) const;
  ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors* add_pdcmframeformaterrors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors >&
      pdcmframeformaterrors() const;

  // repeated .pb.us_drv.us_drv_dsi_comm_errors.UsDrvDsiCommErrors dsiCommErrors = 3912;
  int dsicommerrors_size() const;
  private:
  int _internal_dsicommerrors_size() const;
  public:
  void clear_dsicommerrors();
  ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors* mutable_dsicommerrors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors >*
      mutable_dsicommerrors();
  private:
  const ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors& _internal_dsicommerrors(int index) const;
  ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors* _internal_add_dsicommerrors();
  public:
  const ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors& dsicommerrors(int index) const;
  ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors* add_dsicommerrors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors >&
      dsicommerrors() const;

  // optional .pb.us_drv.us_drv_asic_status_errors.UsDrvAsicStatusErrors asicStatusErrors = 1400;
  bool has_asicstatuserrors() const;
  private:
  bool _internal_has_asicstatuserrors() const;
  public:
  void clear_asicstatuserrors();
  const ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors& asicstatuserrors() const;
  ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* release_asicstatuserrors();
  ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* mutable_asicstatuserrors();
  void set_allocated_asicstatuserrors(::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* asicstatuserrors);
  private:
  const ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors& _internal_asicstatuserrors() const;
  ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* _internal_mutable_asicstatuserrors();
  public:

  // optional .pb.us_drv.us_drv_spi_comm_errors.UsDrvSpiCommErrors spiCommErrors = 3024;
  bool has_spicommerrors() const;
  private:
  bool _internal_has_spicommerrors() const;
  public:
  void clear_spicommerrors();
  const ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors& spicommerrors() const;
  ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* release_spicommerrors();
  ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* mutable_spicommerrors();
  void set_allocated_spicommerrors(::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* spicommerrors);
  private:
  const ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors& _internal_spicommerrors() const;
  ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* _internal_mutable_spicommerrors();
  public:

  // @@protoc_insertion_point(class_scope:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors > crmmodeerrors_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors > dsipacketerrors_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors > pdcmframeformaterrors_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors > dsicommerrors_;
  ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* asicstatuserrors_;
  ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* spicommerrors_;
  friend struct ::TableStruct_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto;
};
// -------------------------------------------------------------------

class UsDrvAsicErrors_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port) */ {
 public:
  UsDrvAsicErrors_array_port();
  virtual ~UsDrvAsicErrors_array_port();

  UsDrvAsicErrors_array_port(const UsDrvAsicErrors_array_port& from);
  UsDrvAsicErrors_array_port(UsDrvAsicErrors_array_port&& from) noexcept
    : UsDrvAsicErrors_array_port() {
    *this = ::std::move(from);
  }

  inline UsDrvAsicErrors_array_port& operator=(const UsDrvAsicErrors_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsDrvAsicErrors_array_port& operator=(UsDrvAsicErrors_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsDrvAsicErrors_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsDrvAsicErrors_array_port* internal_default_instance() {
    return reinterpret_cast<const UsDrvAsicErrors_array_port*>(
               &_UsDrvAsicErrors_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UsDrvAsicErrors_array_port& a, UsDrvAsicErrors_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(UsDrvAsicErrors_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsDrvAsicErrors_array_port* New() const final {
    return CreateMaybeMessage<UsDrvAsicErrors_array_port>(nullptr);
  }

  UsDrvAsicErrors_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsDrvAsicErrors_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsDrvAsicErrors_array_port& from);
  void MergeFrom(const UsDrvAsicErrors_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsDrvAsicErrors_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto);
    return ::descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3780,
  };
  // repeated .pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors data = 3780;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors >*
      mutable_data();
  private:
  const ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors& _internal_data(int index) const;
  ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors* _internal_add_data();
  public:
  const ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors& data(int index) const;
  ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors > data_;
  friend struct ::TableStruct_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UsDrvAsicErrors

// optional .pb.us_drv.us_drv_asic_status_errors.UsDrvAsicStatusErrors asicStatusErrors = 1400;
inline bool UsDrvAsicErrors::_internal_has_asicstatuserrors() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || asicstatuserrors_ != nullptr);
  return value;
}
inline bool UsDrvAsicErrors::has_asicstatuserrors() const {
  return _internal_has_asicstatuserrors();
}
inline const ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors& UsDrvAsicErrors::_internal_asicstatuserrors() const {
  const ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* p = asicstatuserrors_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors*>(
      &::pb::us_drv::us_drv_asic_status_errors::_UsDrvAsicStatusErrors_default_instance_);
}
inline const ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors& UsDrvAsicErrors::asicstatuserrors() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.asicStatusErrors)
  return _internal_asicstatuserrors();
}
inline ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* UsDrvAsicErrors::release_asicstatuserrors() {
  // @@protoc_insertion_point(field_release:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.asicStatusErrors)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* temp = asicstatuserrors_;
  asicstatuserrors_ = nullptr;
  return temp;
}
inline ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* UsDrvAsicErrors::_internal_mutable_asicstatuserrors() {
  _has_bits_[0] |= 0x00000001u;
  if (asicstatuserrors_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors>(GetArenaNoVirtual());
    asicstatuserrors_ = p;
  }
  return asicstatuserrors_;
}
inline ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* UsDrvAsicErrors::mutable_asicstatuserrors() {
  // @@protoc_insertion_point(field_mutable:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.asicStatusErrors)
  return _internal_mutable_asicstatuserrors();
}
inline void UsDrvAsicErrors::set_allocated_asicstatuserrors(::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors* asicstatuserrors) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(asicstatuserrors_);
  }
  if (asicstatuserrors) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      asicstatuserrors = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, asicstatuserrors, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  asicstatuserrors_ = asicstatuserrors;
  // @@protoc_insertion_point(field_set_allocated:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.asicStatusErrors)
}

// optional .pb.us_drv.us_drv_spi_comm_errors.UsDrvSpiCommErrors spiCommErrors = 3024;
inline bool UsDrvAsicErrors::_internal_has_spicommerrors() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || spicommerrors_ != nullptr);
  return value;
}
inline bool UsDrvAsicErrors::has_spicommerrors() const {
  return _internal_has_spicommerrors();
}
inline const ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors& UsDrvAsicErrors::_internal_spicommerrors() const {
  const ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* p = spicommerrors_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors*>(
      &::pb::us_drv::us_drv_spi_comm_errors::_UsDrvSpiCommErrors_default_instance_);
}
inline const ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors& UsDrvAsicErrors::spicommerrors() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.spiCommErrors)
  return _internal_spicommerrors();
}
inline ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* UsDrvAsicErrors::release_spicommerrors() {
  // @@protoc_insertion_point(field_release:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.spiCommErrors)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* temp = spicommerrors_;
  spicommerrors_ = nullptr;
  return temp;
}
inline ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* UsDrvAsicErrors::_internal_mutable_spicommerrors() {
  _has_bits_[0] |= 0x00000002u;
  if (spicommerrors_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors>(GetArenaNoVirtual());
    spicommerrors_ = p;
  }
  return spicommerrors_;
}
inline ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* UsDrvAsicErrors::mutable_spicommerrors() {
  // @@protoc_insertion_point(field_mutable:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.spiCommErrors)
  return _internal_mutable_spicommerrors();
}
inline void UsDrvAsicErrors::set_allocated_spicommerrors(::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors* spicommerrors) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(spicommerrors_);
  }
  if (spicommerrors) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      spicommerrors = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spicommerrors, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  spicommerrors_ = spicommerrors;
  // @@protoc_insertion_point(field_set_allocated:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.spiCommErrors)
}

// repeated .pb.us_drv.us_drv_dsi_comm_errors.UsDrvDsiCommErrors dsiCommErrors = 3912;
inline int UsDrvAsicErrors::_internal_dsicommerrors_size() const {
  return dsicommerrors_.size();
}
inline int UsDrvAsicErrors::dsicommerrors_size() const {
  return _internal_dsicommerrors_size();
}
inline ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors* UsDrvAsicErrors::mutable_dsicommerrors(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.dsiCommErrors)
  return dsicommerrors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors >*
UsDrvAsicErrors::mutable_dsicommerrors() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.dsiCommErrors)
  return &dsicommerrors_;
}
inline const ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors& UsDrvAsicErrors::_internal_dsicommerrors(int index) const {
  return dsicommerrors_.Get(index);
}
inline const ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors& UsDrvAsicErrors::dsicommerrors(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.dsiCommErrors)
  return _internal_dsicommerrors(index);
}
inline ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors* UsDrvAsicErrors::_internal_add_dsicommerrors() {
  return dsicommerrors_.Add();
}
inline ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors* UsDrvAsicErrors::add_dsicommerrors() {
  // @@protoc_insertion_point(field_add:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.dsiCommErrors)
  return _internal_add_dsicommerrors();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_dsi_comm_errors::UsDrvDsiCommErrors >&
UsDrvAsicErrors::dsicommerrors() const {
  // @@protoc_insertion_point(field_list:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.dsiCommErrors)
  return dsicommerrors_;
}

// repeated .pb.us_drv.us_drv_crm_mode_errors.UsDrvCrmModeErrors crmModeErrors = 92;
inline int UsDrvAsicErrors::_internal_crmmodeerrors_size() const {
  return crmmodeerrors_.size();
}
inline int UsDrvAsicErrors::crmmodeerrors_size() const {
  return _internal_crmmodeerrors_size();
}
inline ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors* UsDrvAsicErrors::mutable_crmmodeerrors(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.crmModeErrors)
  return crmmodeerrors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors >*
UsDrvAsicErrors::mutable_crmmodeerrors() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.crmModeErrors)
  return &crmmodeerrors_;
}
inline const ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors& UsDrvAsicErrors::_internal_crmmodeerrors(int index) const {
  return crmmodeerrors_.Get(index);
}
inline const ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors& UsDrvAsicErrors::crmmodeerrors(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.crmModeErrors)
  return _internal_crmmodeerrors(index);
}
inline ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors* UsDrvAsicErrors::_internal_add_crmmodeerrors() {
  return crmmodeerrors_.Add();
}
inline ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors* UsDrvAsicErrors::add_crmmodeerrors() {
  // @@protoc_insertion_point(field_add:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.crmModeErrors)
  return _internal_add_crmmodeerrors();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_crm_mode_errors::UsDrvCrmModeErrors >&
UsDrvAsicErrors::crmmodeerrors() const {
  // @@protoc_insertion_point(field_list:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.crmModeErrors)
  return crmmodeerrors_;
}

// repeated .pb.us_drv.us_drv_pdcm_frame_format_errors.UsDrvPdcmFrameFormatErrors pdcmFrameFormatErrors = 2977;
inline int UsDrvAsicErrors::_internal_pdcmframeformaterrors_size() const {
  return pdcmframeformaterrors_.size();
}
inline int UsDrvAsicErrors::pdcmframeformaterrors_size() const {
  return _internal_pdcmframeformaterrors_size();
}
inline ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors* UsDrvAsicErrors::mutable_pdcmframeformaterrors(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.pdcmFrameFormatErrors)
  return pdcmframeformaterrors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors >*
UsDrvAsicErrors::mutable_pdcmframeformaterrors() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.pdcmFrameFormatErrors)
  return &pdcmframeformaterrors_;
}
inline const ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors& UsDrvAsicErrors::_internal_pdcmframeformaterrors(int index) const {
  return pdcmframeformaterrors_.Get(index);
}
inline const ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors& UsDrvAsicErrors::pdcmframeformaterrors(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.pdcmFrameFormatErrors)
  return _internal_pdcmframeformaterrors(index);
}
inline ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors* UsDrvAsicErrors::_internal_add_pdcmframeformaterrors() {
  return pdcmframeformaterrors_.Add();
}
inline ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors* UsDrvAsicErrors::add_pdcmframeformaterrors() {
  // @@protoc_insertion_point(field_add:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.pdcmFrameFormatErrors)
  return _internal_add_pdcmframeformaterrors();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_pdcm_frame_format_errors::UsDrvPdcmFrameFormatErrors >&
UsDrvAsicErrors::pdcmframeformaterrors() const {
  // @@protoc_insertion_point(field_list:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.pdcmFrameFormatErrors)
  return pdcmframeformaterrors_;
}

// repeated .pb.us_drv.us_drv_dsi_packet_errors.UsDrvDsiPacketErrors dsiPacketErrors = 900;
inline int UsDrvAsicErrors::_internal_dsipacketerrors_size() const {
  return dsipacketerrors_.size();
}
inline int UsDrvAsicErrors::dsipacketerrors_size() const {
  return _internal_dsipacketerrors_size();
}
inline ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors* UsDrvAsicErrors::mutable_dsipacketerrors(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.dsiPacketErrors)
  return dsipacketerrors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors >*
UsDrvAsicErrors::mutable_dsipacketerrors() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.dsiPacketErrors)
  return &dsipacketerrors_;
}
inline const ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors& UsDrvAsicErrors::_internal_dsipacketerrors(int index) const {
  return dsipacketerrors_.Get(index);
}
inline const ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors& UsDrvAsicErrors::dsipacketerrors(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.dsiPacketErrors)
  return _internal_dsipacketerrors(index);
}
inline ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors* UsDrvAsicErrors::_internal_add_dsipacketerrors() {
  return dsipacketerrors_.Add();
}
inline ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors* UsDrvAsicErrors::add_dsipacketerrors() {
  // @@protoc_insertion_point(field_add:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.dsiPacketErrors)
  return _internal_add_dsipacketerrors();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_dsi_packet_errors::UsDrvDsiPacketErrors >&
UsDrvAsicErrors::dsipacketerrors() const {
  // @@protoc_insertion_point(field_list:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors.dsiPacketErrors)
  return dsipacketerrors_;
}

// -------------------------------------------------------------------

// UsDrvAsicErrors_array_port

// repeated .pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors data = 3780;
inline int UsDrvAsicErrors_array_port::_internal_data_size() const {
  return data_.size();
}
inline int UsDrvAsicErrors_array_port::data_size() const {
  return _internal_data_size();
}
inline void UsDrvAsicErrors_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors* UsDrvAsicErrors_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors >*
UsDrvAsicErrors_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port.data)
  return &data_;
}
inline const ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors& UsDrvAsicErrors_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors& UsDrvAsicErrors_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port.data)
  return _internal_data(index);
}
inline ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors* UsDrvAsicErrors_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors* UsDrvAsicErrors_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors >&
UsDrvAsicErrors_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace us_drv_asic_errors
}  // namespace us_drv
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto
