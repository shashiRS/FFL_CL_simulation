// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eco/sensor_mounting_position_detailed.proto

#include "eco/sensor_mounting_position_detailed.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SensorMountingPositionDetailed_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto;
namespace pb {
namespace eco {
namespace sensor_mounting_position_detailed {
class SensorMountingPositionDetailedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SensorMountingPositionDetailed> _instance;
} _SensorMountingPositionDetailed_default_instance_;
class SensorMountingPositionDetailed_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SensorMountingPositionDetailed_array_port> _instance;
} _SensorMountingPositionDetailed_array_port_default_instance_;
}  // namespace sensor_mounting_position_detailed
}  // namespace eco
}  // namespace pb
static void InitDefaultsscc_info_SensorMountingPositionDetailed_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::eco::sensor_mounting_position_detailed::_SensorMountingPositionDetailed_default_instance_;
    new (ptr) ::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SensorMountingPositionDetailed_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SensorMountingPositionDetailed_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto}, {}};

static void InitDefaultsscc_info_SensorMountingPositionDetailed_array_port_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::eco::sensor_mounting_position_detailed::_SensorMountingPositionDetailed_array_port_default_instance_;
    new (ptr) ::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SensorMountingPositionDetailed_array_port_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SensorMountingPositionDetailed_array_port_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto}, {
      &scc_info_SensorMountingPositionDetailed_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed, roll_),
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed, pitch_),
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed, yaw_),
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed, x_),
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed, y_),
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed, z_),
  5,
  0,
  1,
  4,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed)},
  { 17, 23, sizeof(::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::eco::sensor_mounting_position_detailed::_SensorMountingPositionDetailed_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::eco::sensor_mounting_position_detailed::_SensorMountingPositionDetailed_array_port_default_instance_),
};

const char descriptor_table_protodef_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n+eco/sensor_mounting_position_detailed."
  "proto\022(pb.eco.sensor_mounting_position_d"
  "etailed\"q\n\036SensorMountingPositionDetaile"
  "d\022\r\n\004roll\030\222\017 \001(\002\022\016\n\005pitch\030\374\001 \001(\002\022\014\n\003yaw\030"
  "\251\007 \001(\002\022\n\n\001x\030\367\007 \001(\002\022\n\n\001y\030\326\007 \001(\002\022\n\n\001z\030\265\007 \001"
  "(\002\"\204\001\n)SensorMountingPositionDetailed_ar"
  "ray_port\022W\n\004data\030\336\023 \003(\0132H.pb.eco.sensor_"
  "mounting_position_detailed.SensorMountin"
  "gPositionDetailed"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto_sccs[2] = {
  &scc_info_SensorMountingPositionDetailed_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto.base,
  &scc_info_SensorMountingPositionDetailed_array_port_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto_once;
static bool descriptor_table_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto = {
  &descriptor_table_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto_initialized, descriptor_table_protodef_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto, "eco/sensor_mounting_position_detailed.proto", 337,
  &descriptor_table_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto_once, descriptor_table_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto_sccs, descriptor_table_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto::offsets,
  file_level_metadata_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto, 2, file_level_enum_descriptors_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto, file_level_service_descriptors_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto), true);
namespace pb {
namespace eco {
namespace sensor_mounting_position_detailed {

// ===================================================================

void SensorMountingPositionDetailed::InitAsDefaultInstance() {
}
class SensorMountingPositionDetailed::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorMountingPositionDetailed>()._has_bits_);
  static void set_has_roll(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_pitch(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_yaw(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SensorMountingPositionDetailed::SensorMountingPositionDetailed()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
}
SensorMountingPositionDetailed::SensorMountingPositionDetailed(const SensorMountingPositionDetailed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pitch_, &from.pitch_,
    static_cast<size_t>(reinterpret_cast<char*>(&roll_) -
    reinterpret_cast<char*>(&pitch_)) + sizeof(roll_));
  // @@protoc_insertion_point(copy_constructor:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
}

void SensorMountingPositionDetailed::SharedCtor() {
  ::memset(&pitch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roll_) -
      reinterpret_cast<char*>(&pitch_)) + sizeof(roll_));
}

SensorMountingPositionDetailed::~SensorMountingPositionDetailed() {
  // @@protoc_insertion_point(destructor:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
  SharedDtor();
}

void SensorMountingPositionDetailed::SharedDtor() {
}

void SensorMountingPositionDetailed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SensorMountingPositionDetailed& SensorMountingPositionDetailed::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SensorMountingPositionDetailed_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto.base);
  return *internal_default_instance();
}


void SensorMountingPositionDetailed::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&pitch_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&roll_) -
        reinterpret_cast<char*>(&pitch_)) + sizeof(roll_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* SensorMountingPositionDetailed::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional float pitch = 252;
      case 252:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 229)) {
          _Internal::set_has_pitch(&has_bits);
          pitch_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float yaw = 937;
      case 937:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          _Internal::set_has_yaw(&has_bits);
          yaw_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float z = 949;
      case 949:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 173)) {
          _Internal::set_has_z(&has_bits);
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float y = 982;
      case 982:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 181)) {
          _Internal::set_has_y(&has_bits);
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float x = 1015;
      case 1015:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 189)) {
          _Internal::set_has_x(&has_bits);
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float roll = 1938;
      case 1938:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 149)) {
          _Internal::set_has_roll(&has_bits);
          roll_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SensorMountingPositionDetailed::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float pitch = 252;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(252, this->_internal_pitch(), target);
  }

  // optional float yaw = 937;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(937, this->_internal_yaw(), target);
  }

  // optional float z = 949;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(949, this->_internal_z(), target);
  }

  // optional float y = 982;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(982, this->_internal_y(), target);
  }

  // optional float x = 1015;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1015, this->_internal_x(), target);
  }

  // optional float roll = 1938;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1938, this->_internal_roll(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
  return target;
}

size_t SensorMountingPositionDetailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional float pitch = 252;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 4;
    }

    // optional float yaw = 937;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 4;
    }

    // optional float z = 949;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 4;
    }

    // optional float y = 982;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 4;
    }

    // optional float x = 1015;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 4;
    }

    // optional float roll = 1938;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SensorMountingPositionDetailed::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
  GOOGLE_DCHECK_NE(&from, this);
  const SensorMountingPositionDetailed* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SensorMountingPositionDetailed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
    MergeFrom(*source);
  }
}

void SensorMountingPositionDetailed::MergeFrom(const SensorMountingPositionDetailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      pitch_ = from.pitch_;
    }
    if (cached_has_bits & 0x00000002u) {
      yaw_ = from.yaw_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000010u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000020u) {
      roll_ = from.roll_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SensorMountingPositionDetailed::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorMountingPositionDetailed::CopyFrom(const SensorMountingPositionDetailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorMountingPositionDetailed::IsInitialized() const {
  return true;
}

void SensorMountingPositionDetailed::InternalSwap(SensorMountingPositionDetailed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  swap(z_, other->z_);
  swap(y_, other->y_);
  swap(x_, other->x_);
  swap(roll_, other->roll_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SensorMountingPositionDetailed::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SensorMountingPositionDetailed_array_port::InitAsDefaultInstance() {
}
class SensorMountingPositionDetailed_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorMountingPositionDetailed_array_port>()._has_bits_);
};

SensorMountingPositionDetailed_array_port::SensorMountingPositionDetailed_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
}
SensorMountingPositionDetailed_array_port::SensorMountingPositionDetailed_array_port(const SensorMountingPositionDetailed_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
}

void SensorMountingPositionDetailed_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SensorMountingPositionDetailed_array_port_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto.base);
}

SensorMountingPositionDetailed_array_port::~SensorMountingPositionDetailed_array_port() {
  // @@protoc_insertion_point(destructor:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
  SharedDtor();
}

void SensorMountingPositionDetailed_array_port::SharedDtor() {
}

void SensorMountingPositionDetailed_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SensorMountingPositionDetailed_array_port& SensorMountingPositionDetailed_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SensorMountingPositionDetailed_array_port_eco_2fsensor_5fmounting_5fposition_5fdetailed_2eproto.base);
  return *internal_default_instance();
}


void SensorMountingPositionDetailed_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* SensorMountingPositionDetailed_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed data = 2526;
      case 2526:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SensorMountingPositionDetailed_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed data = 2526;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2526, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
  return target;
}

size_t SensorMountingPositionDetailed_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed data = 2526;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SensorMountingPositionDetailed_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const SensorMountingPositionDetailed_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SensorMountingPositionDetailed_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
    MergeFrom(*source);
  }
}

void SensorMountingPositionDetailed_array_port::MergeFrom(const SensorMountingPositionDetailed_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void SensorMountingPositionDetailed_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorMountingPositionDetailed_array_port::CopyFrom(const SensorMountingPositionDetailed_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.eco.sensor_mounting_position_detailed.SensorMountingPositionDetailed_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorMountingPositionDetailed_array_port::IsInitialized() const {
  return true;
}

void SensorMountingPositionDetailed_array_port::InternalSwap(SensorMountingPositionDetailed_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SensorMountingPositionDetailed_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sensor_mounting_position_detailed
}  // namespace eco
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed* Arena::CreateMaybeMessage< ::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed >(Arena* arena) {
  return Arena::CreateInternal< ::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed_array_port* Arena::CreateMaybeMessage< ::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::eco::sensor_mounting_position_detailed::SensorMountingPositionDetailed_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
