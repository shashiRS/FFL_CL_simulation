#Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_protobuf\CMakeLists.txt.template!

set(Protobuf_USE_STATIC_LIBS ON)
find_package(Protobuf REQUIRED)

if(NOT DEFINED target_prefix)
  set(target_prefix "")
endif()

include(eco/eco_types.cmake)
include(com/com_types.cmake)
include(cfg_mgr/CFG_MGR_types.cmake)
include(cml/cml_types.cmake)
include(ecu_ctrl/ECU_CTRL_types.cmake)
include(lsm_geoml/LSM_GEOML_types.cmake)
include(ap_common/AP_Common_types.cmake)
include(ap_commonvehsigprovider/AP_CommonVehSigProvider_types.cmake)
include(ap_hmitoap/AP_HMIToAP_types.cmake)
include(ap_ladmc/AP_LADMC_types.cmake)
include(ap_lodmc/AP_LODMC_types.cmake)
include(ap_vehstatesigprovider/AP_VehStateSigProvider_types.cmake)
include(pdcp/PDCP_types.cmake)
include(mf_drvwarnsm/MF_DRVWARNSM_types.cmake)
include(ap_psm_app/AP_PSM_APP_types.cmake)
include(si/SI_types.cmake)
include(ap_psm/AP_PSM_types.cmake)
include(ap_tp/AP_TP_types.cmake)
include(ap_trjctl/AP_TRJCTL_types.cmake)
include(lsm_vedodo/LSM_VEDODO_types.cmake)
include(tce/tce_types.cmake)
include(mf_manager/MF_MANAGER_types.cmake)
include(mf_lsca/MF_LSCA_types.cmake)
include(mf_lvmd/MF_LVMD_types.cmake)
include(mf_whlprotectproc/MF_WhlProtectProc_types.cmake)
include(mf_mempark/MF_MemPark_types.cmake)
include(mf_hmih/MF_HMIH_types.cmake)
include(mf_drvwarnsm_core/MF_DRVWARNSM_CORE_types.cmake)
include(mf_tonh/MF_TONH_types.cmake)
include(vc/vc_types.cmake)
include(us_drv/US_DRV_types.cmake)
include(us_processing/US_PROCESSING_types.cmake)
include(us_em/US_EM_types.cmake)
include(hpsd/HPSD_types.cmake)
include(avga_swc/AVGA_SWC_types.cmake)

add_library(${target_prefix}codegen_types_protobuf_cpp STATIC
  ${eco_PROTO_CPP_FILES_TYPES}
  ${com_PROTO_CPP_FILES_TYPES}
  ${cfg_mgr_PROTO_CPP_FILES_TYPES}
  ${cml_PROTO_CPP_FILES_TYPES}
  ${ecu_ctrl_PROTO_CPP_FILES_TYPES}
  ${lsm_geoml_PROTO_CPP_FILES_TYPES}
  ${ap_common_PROTO_CPP_FILES_TYPES}
  ${ap_commonvehsigprovider_PROTO_CPP_FILES_TYPES}
  ${ap_hmitoap_PROTO_CPP_FILES_TYPES}
  ${ap_ladmc_PROTO_CPP_FILES_TYPES}
  ${ap_lodmc_PROTO_CPP_FILES_TYPES}
  ${ap_vehstatesigprovider_PROTO_CPP_FILES_TYPES}
  ${pdcp_PROTO_CPP_FILES_TYPES}
  ${mf_drvwarnsm_PROTO_CPP_FILES_TYPES}
  ${ap_psm_app_PROTO_CPP_FILES_TYPES}
  ${si_PROTO_CPP_FILES_TYPES}
  ${ap_psm_PROTO_CPP_FILES_TYPES}
  ${ap_tp_PROTO_CPP_FILES_TYPES}
  ${ap_trjctl_PROTO_CPP_FILES_TYPES}
  ${lsm_vedodo_PROTO_CPP_FILES_TYPES}
  ${tce_PROTO_CPP_FILES_TYPES}
  ${mf_manager_PROTO_CPP_FILES_TYPES}
  ${mf_lsca_PROTO_CPP_FILES_TYPES}
  ${mf_lvmd_PROTO_CPP_FILES_TYPES}
  ${mf_whlprotectproc_PROTO_CPP_FILES_TYPES}
  ${mf_mempark_PROTO_CPP_FILES_TYPES}
  ${mf_hmih_PROTO_CPP_FILES_TYPES}
  ${mf_drvwarnsm_core_PROTO_CPP_FILES_TYPES}
  ${mf_tonh_PROTO_CPP_FILES_TYPES}
  ${vc_PROTO_CPP_FILES_TYPES}
  ${us_drv_PROTO_CPP_FILES_TYPES}
  ${us_processing_PROTO_CPP_FILES_TYPES}
  ${us_em_PROTO_CPP_FILES_TYPES}
  ${hpsd_PROTO_CPP_FILES_TYPES}
  ${avga_swc_PROTO_CPP_FILES_TYPES}
)

target_include_directories(${target_prefix}codegen_types_protobuf_cpp
  PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
)

target_link_libraries(${target_prefix}codegen_types_protobuf_cpp
  PRIVATE
    eco::platform_ecal
    protobuf::libprotobuf
)

# needed to work-around a protobuf bug: https://github.com/protocolbuffers/protobuf/issues/4654
removeCompilerFlag("${target_prefix}codegen_types_protobuf_cpp" "-Werror")

source_group(${target_prefix}codegen_types_protobuf_cpp_files FILES
  ${eco_PROTO_CPP_FILES_TYPES}
  ${com_PROTO_CPP_FILES_TYPES}
  ${cfg_mgr_PROTO_CPP_FILES_TYPES}
  ${cml_PROTO_CPP_FILES_TYPES}
  ${ecu_ctrl_PROTO_CPP_FILES_TYPES}
  ${lsm_geoml_PROTO_CPP_FILES_TYPES}
  ${ap_common_PROTO_CPP_FILES_TYPES}
  ${ap_commonvehsigprovider_PROTO_CPP_FILES_TYPES}
  ${ap_hmitoap_PROTO_CPP_FILES_TYPES}
  ${ap_ladmc_PROTO_CPP_FILES_TYPES}
  ${ap_lodmc_PROTO_CPP_FILES_TYPES}
  ${ap_vehstatesigprovider_PROTO_CPP_FILES_TYPES}
  ${pdcp_PROTO_CPP_FILES_TYPES}
  ${mf_drvwarnsm_PROTO_CPP_FILES_TYPES}
  ${ap_psm_app_PROTO_CPP_FILES_TYPES}
  ${si_PROTO_CPP_FILES_TYPES}
  ${ap_psm_PROTO_CPP_FILES_TYPES}
  ${ap_tp_PROTO_CPP_FILES_TYPES}
  ${ap_trjctl_PROTO_CPP_FILES_TYPES}
  ${lsm_vedodo_PROTO_CPP_FILES_TYPES}
  ${tce_PROTO_CPP_FILES_TYPES}
  ${mf_manager_PROTO_CPP_FILES_TYPES}
  ${mf_lsca_PROTO_CPP_FILES_TYPES}
  ${mf_lvmd_PROTO_CPP_FILES_TYPES}
  ${mf_whlprotectproc_PROTO_CPP_FILES_TYPES}
  ${mf_mempark_PROTO_CPP_FILES_TYPES}
  ${mf_hmih_PROTO_CPP_FILES_TYPES}
  ${mf_drvwarnsm_core_PROTO_CPP_FILES_TYPES}
  ${mf_tonh_PROTO_CPP_FILES_TYPES}
  ${vc_PROTO_CPP_FILES_TYPES}
  ${us_drv_PROTO_CPP_FILES_TYPES}
  ${us_processing_PROTO_CPP_FILES_TYPES}
  ${us_em_PROTO_CPP_FILES_TYPES}
  ${hpsd_PROTO_CPP_FILES_TYPES}
  ${avga_swc_PROTO_CPP_FILES_TYPES}
)

set_target_properties(${target_prefix}codegen_types_protobuf_cpp PROPERTIES FOLDER codegen_protobuf)

if(MSVC)
  target_compile_options(${target_prefix}codegen_types_protobuf_cpp PRIVATE "/wd4244;/wd4267;/wd4127;/wd4125;")
else()
  target_compile_options(${target_prefix}codegen_types_protobuf_cpp PRIVATE "-Wno-conversion;")
endif()

