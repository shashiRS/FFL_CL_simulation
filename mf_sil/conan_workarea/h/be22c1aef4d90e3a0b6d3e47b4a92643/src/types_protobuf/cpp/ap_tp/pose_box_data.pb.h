// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_tp/pose_box_data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5ftp_2fpose_5fbox_5fdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5ftp_2fpose_5fbox_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ap_tp/target_road_side.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5ftp_2fpose_5fbox_5fdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5ftp_2fpose_5fbox_5fdata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5ftp_2fpose_5fbox_5fdata_2eproto;
namespace pb {
namespace ap_tp {
namespace pose_box_data {
class PoseBoxData;
class PoseBoxDataDefaultTypeInternal;
extern PoseBoxDataDefaultTypeInternal _PoseBoxData_default_instance_;
class PoseBoxData_array_port;
class PoseBoxData_array_portDefaultTypeInternal;
extern PoseBoxData_array_portDefaultTypeInternal _PoseBoxData_array_port_default_instance_;
}  // namespace pose_box_data
}  // namespace ap_tp
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_tp::pose_box_data::PoseBoxData* Arena::CreateMaybeMessage<::pb::ap_tp::pose_box_data::PoseBoxData>(Arena*);
template<> ::pb::ap_tp::pose_box_data::PoseBoxData_array_port* Arena::CreateMaybeMessage<::pb::ap_tp::pose_box_data::PoseBoxData_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_tp {
namespace pose_box_data {

// ===================================================================

class PoseBoxData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_tp.pose_box_data.PoseBoxData) */ {
 public:
  PoseBoxData();
  virtual ~PoseBoxData();

  PoseBoxData(const PoseBoxData& from);
  PoseBoxData(PoseBoxData&& from) noexcept
    : PoseBoxData() {
    *this = ::std::move(from);
  }

  inline PoseBoxData& operator=(const PoseBoxData& from) {
    CopyFrom(from);
    return *this;
  }
  inline PoseBoxData& operator=(PoseBoxData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PoseBoxData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PoseBoxData* internal_default_instance() {
    return reinterpret_cast<const PoseBoxData*>(
               &_PoseBoxData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PoseBoxData& a, PoseBoxData& b) {
    a.Swap(&b);
  }
  inline void Swap(PoseBoxData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PoseBoxData* New() const final {
    return CreateMaybeMessage<PoseBoxData>(nullptr);
  }

  PoseBoxData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PoseBoxData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PoseBoxData& from);
  void MergeFrom(const PoseBoxData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PoseBoxData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_tp.pose_box_data.PoseBoxData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5ftp_2fpose_5fbox_5fdata_2eproto);
    return ::descriptor_table_ap_5ftp_2fpose_5fbox_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParkingBoxIDNuFieldNumber = 444,
    kLeftEdgeIsFrontNuFieldNumber = 2311,
    kMappingValidNuFieldNumber = 439,
    kPoseInIDNuFieldNumber = 1524,
    kPoseOutIdxNuFieldNumber = 1798,
    kPoseInIdxNuFieldNumber = 2396,
    kParkingBoxSideNuFieldNumber = 2669,
    kPoseOutIDNuFieldNumber = 3609,
    kEgoYawFirstDetectionRadFieldNumber = 3666,
  };
  // optional uint32 parkingBoxID_nu = 444;
  bool has_parkingboxid_nu() const;
  private:
  bool _internal_has_parkingboxid_nu() const;
  public:
  void clear_parkingboxid_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 parkingboxid_nu() const;
  void set_parkingboxid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_parkingboxid_nu() const;
  void _internal_set_parkingboxid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool leftEdgeIsFront_nu = 2311;
  bool has_leftedgeisfront_nu() const;
  private:
  bool _internal_has_leftedgeisfront_nu() const;
  public:
  void clear_leftedgeisfront_nu();
  bool leftedgeisfront_nu() const;
  void set_leftedgeisfront_nu(bool value);
  private:
  bool _internal_leftedgeisfront_nu() const;
  void _internal_set_leftedgeisfront_nu(bool value);
  public:

  // optional bool mappingValid_nu = 439;
  bool has_mappingvalid_nu() const;
  private:
  bool _internal_has_mappingvalid_nu() const;
  public:
  void clear_mappingvalid_nu();
  bool mappingvalid_nu() const;
  void set_mappingvalid_nu(bool value);
  private:
  bool _internal_mappingvalid_nu() const;
  void _internal_set_mappingvalid_nu(bool value);
  public:

  // optional uint32 poseInID_nu = 1524;
  bool has_poseinid_nu() const;
  private:
  bool _internal_has_poseinid_nu() const;
  public:
  void clear_poseinid_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 poseinid_nu() const;
  void set_poseinid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_poseinid_nu() const;
  void _internal_set_poseinid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 poseOutIdx_nu = 1798;
  bool has_poseoutidx_nu() const;
  private:
  bool _internal_has_poseoutidx_nu() const;
  public:
  void clear_poseoutidx_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 poseoutidx_nu() const;
  void set_poseoutidx_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_poseoutidx_nu() const;
  void _internal_set_poseoutidx_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 poseInIdx_nu = 2396;
  bool has_poseinidx_nu() const;
  private:
  bool _internal_has_poseinidx_nu() const;
  public:
  void clear_poseinidx_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 poseinidx_nu() const;
  void set_poseinidx_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_poseinidx_nu() const;
  void _internal_set_poseinidx_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.ap_tp.target_road_side.TargetRoadSide parkingBoxSide_nu = 2669;
  bool has_parkingboxside_nu() const;
  private:
  bool _internal_has_parkingboxside_nu() const;
  public:
  void clear_parkingboxside_nu();
  ::pb::ap_tp::target_road_side::TargetRoadSide parkingboxside_nu() const;
  void set_parkingboxside_nu(::pb::ap_tp::target_road_side::TargetRoadSide value);
  private:
  ::pb::ap_tp::target_road_side::TargetRoadSide _internal_parkingboxside_nu() const;
  void _internal_set_parkingboxside_nu(::pb::ap_tp::target_road_side::TargetRoadSide value);
  public:

  // optional uint32 poseOutID_nu = 3609;
  bool has_poseoutid_nu() const;
  private:
  bool _internal_has_poseoutid_nu() const;
  public:
  void clear_poseoutid_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 poseoutid_nu() const;
  void set_poseoutid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_poseoutid_nu() const;
  void _internal_set_poseoutid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float egoYawFirstDetection_rad = 3666;
  bool has_egoyawfirstdetection_rad() const;
  private:
  bool _internal_has_egoyawfirstdetection_rad() const;
  public:
  void clear_egoyawfirstdetection_rad();
  float egoyawfirstdetection_rad() const;
  void set_egoyawfirstdetection_rad(float value);
  private:
  float _internal_egoyawfirstdetection_rad() const;
  void _internal_set_egoyawfirstdetection_rad(float value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_tp.pose_box_data.PoseBoxData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 parkingboxid_nu_;
  bool leftedgeisfront_nu_;
  bool mappingvalid_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 poseinid_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 poseoutidx_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 poseinidx_nu_;
  int parkingboxside_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 poseoutid_nu_;
  float egoyawfirstdetection_rad_;
  friend struct ::TableStruct_ap_5ftp_2fpose_5fbox_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PoseBoxData_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_tp.pose_box_data.PoseBoxData_array_port) */ {
 public:
  PoseBoxData_array_port();
  virtual ~PoseBoxData_array_port();

  PoseBoxData_array_port(const PoseBoxData_array_port& from);
  PoseBoxData_array_port(PoseBoxData_array_port&& from) noexcept
    : PoseBoxData_array_port() {
    *this = ::std::move(from);
  }

  inline PoseBoxData_array_port& operator=(const PoseBoxData_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline PoseBoxData_array_port& operator=(PoseBoxData_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PoseBoxData_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PoseBoxData_array_port* internal_default_instance() {
    return reinterpret_cast<const PoseBoxData_array_port*>(
               &_PoseBoxData_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PoseBoxData_array_port& a, PoseBoxData_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(PoseBoxData_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PoseBoxData_array_port* New() const final {
    return CreateMaybeMessage<PoseBoxData_array_port>(nullptr);
  }

  PoseBoxData_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PoseBoxData_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PoseBoxData_array_port& from);
  void MergeFrom(const PoseBoxData_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PoseBoxData_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_tp.pose_box_data.PoseBoxData_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5ftp_2fpose_5fbox_5fdata_2eproto);
    return ::descriptor_table_ap_5ftp_2fpose_5fbox_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3903,
  };
  // repeated .pb.ap_tp.pose_box_data.PoseBoxData data = 3903;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_tp::pose_box_data::PoseBoxData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::pose_box_data::PoseBoxData >*
      mutable_data();
  private:
  const ::pb::ap_tp::pose_box_data::PoseBoxData& _internal_data(int index) const;
  ::pb::ap_tp::pose_box_data::PoseBoxData* _internal_add_data();
  public:
  const ::pb::ap_tp::pose_box_data::PoseBoxData& data(int index) const;
  ::pb::ap_tp::pose_box_data::PoseBoxData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::pose_box_data::PoseBoxData >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_tp.pose_box_data.PoseBoxData_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::pose_box_data::PoseBoxData > data_;
  friend struct ::TableStruct_ap_5ftp_2fpose_5fbox_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PoseBoxData

// optional float egoYawFirstDetection_rad = 3666;
inline bool PoseBoxData::_internal_has_egoyawfirstdetection_rad() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool PoseBoxData::has_egoyawfirstdetection_rad() const {
  return _internal_has_egoyawfirstdetection_rad();
}
inline void PoseBoxData::clear_egoyawfirstdetection_rad() {
  egoyawfirstdetection_rad_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float PoseBoxData::_internal_egoyawfirstdetection_rad() const {
  return egoyawfirstdetection_rad_;
}
inline float PoseBoxData::egoyawfirstdetection_rad() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.pose_box_data.PoseBoxData.egoYawFirstDetection_rad)
  return _internal_egoyawfirstdetection_rad();
}
inline void PoseBoxData::_internal_set_egoyawfirstdetection_rad(float value) {
  _has_bits_[0] |= 0x00000100u;
  egoyawfirstdetection_rad_ = value;
}
inline void PoseBoxData::set_egoyawfirstdetection_rad(float value) {
  _internal_set_egoyawfirstdetection_rad(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.pose_box_data.PoseBoxData.egoYawFirstDetection_rad)
}

// optional uint32 parkingBoxID_nu = 444;
inline bool PoseBoxData::_internal_has_parkingboxid_nu() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PoseBoxData::has_parkingboxid_nu() const {
  return _internal_has_parkingboxid_nu();
}
inline void PoseBoxData::clear_parkingboxid_nu() {
  parkingboxid_nu_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoseBoxData::_internal_parkingboxid_nu() const {
  return parkingboxid_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoseBoxData::parkingboxid_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.pose_box_data.PoseBoxData.parkingBoxID_nu)
  return _internal_parkingboxid_nu();
}
inline void PoseBoxData::_internal_set_parkingboxid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  parkingboxid_nu_ = value;
}
inline void PoseBoxData::set_parkingboxid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_parkingboxid_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.pose_box_data.PoseBoxData.parkingBoxID_nu)
}

// optional uint32 poseInID_nu = 1524;
inline bool PoseBoxData::_internal_has_poseinid_nu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PoseBoxData::has_poseinid_nu() const {
  return _internal_has_poseinid_nu();
}
inline void PoseBoxData::clear_poseinid_nu() {
  poseinid_nu_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoseBoxData::_internal_poseinid_nu() const {
  return poseinid_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoseBoxData::poseinid_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.pose_box_data.PoseBoxData.poseInID_nu)
  return _internal_poseinid_nu();
}
inline void PoseBoxData::_internal_set_poseinid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  poseinid_nu_ = value;
}
inline void PoseBoxData::set_poseinid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_poseinid_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.pose_box_data.PoseBoxData.poseInID_nu)
}

// optional uint32 poseOutID_nu = 3609;
inline bool PoseBoxData::_internal_has_poseoutid_nu() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool PoseBoxData::has_poseoutid_nu() const {
  return _internal_has_poseoutid_nu();
}
inline void PoseBoxData::clear_poseoutid_nu() {
  poseoutid_nu_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoseBoxData::_internal_poseoutid_nu() const {
  return poseoutid_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoseBoxData::poseoutid_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.pose_box_data.PoseBoxData.poseOutID_nu)
  return _internal_poseoutid_nu();
}
inline void PoseBoxData::_internal_set_poseoutid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  poseoutid_nu_ = value;
}
inline void PoseBoxData::set_poseoutid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_poseoutid_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.pose_box_data.PoseBoxData.poseOutID_nu)
}

// optional uint32 poseInIdx_nu = 2396;
inline bool PoseBoxData::_internal_has_poseinidx_nu() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PoseBoxData::has_poseinidx_nu() const {
  return _internal_has_poseinidx_nu();
}
inline void PoseBoxData::clear_poseinidx_nu() {
  poseinidx_nu_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoseBoxData::_internal_poseinidx_nu() const {
  return poseinidx_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoseBoxData::poseinidx_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.pose_box_data.PoseBoxData.poseInIdx_nu)
  return _internal_poseinidx_nu();
}
inline void PoseBoxData::_internal_set_poseinidx_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  poseinidx_nu_ = value;
}
inline void PoseBoxData::set_poseinidx_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_poseinidx_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.pose_box_data.PoseBoxData.poseInIdx_nu)
}

// optional uint32 poseOutIdx_nu = 1798;
inline bool PoseBoxData::_internal_has_poseoutidx_nu() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PoseBoxData::has_poseoutidx_nu() const {
  return _internal_has_poseoutidx_nu();
}
inline void PoseBoxData::clear_poseoutidx_nu() {
  poseoutidx_nu_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoseBoxData::_internal_poseoutidx_nu() const {
  return poseoutidx_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PoseBoxData::poseoutidx_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.pose_box_data.PoseBoxData.poseOutIdx_nu)
  return _internal_poseoutidx_nu();
}
inline void PoseBoxData::_internal_set_poseoutidx_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  poseoutidx_nu_ = value;
}
inline void PoseBoxData::set_poseoutidx_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_poseoutidx_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.pose_box_data.PoseBoxData.poseOutIdx_nu)
}

// optional .pb.ap_tp.target_road_side.TargetRoadSide parkingBoxSide_nu = 2669;
inline bool PoseBoxData::_internal_has_parkingboxside_nu() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool PoseBoxData::has_parkingboxside_nu() const {
  return _internal_has_parkingboxside_nu();
}
inline void PoseBoxData::clear_parkingboxside_nu() {
  parkingboxside_nu_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::pb::ap_tp::target_road_side::TargetRoadSide PoseBoxData::_internal_parkingboxside_nu() const {
  return static_cast< ::pb::ap_tp::target_road_side::TargetRoadSide >(parkingboxside_nu_);
}
inline ::pb::ap_tp::target_road_side::TargetRoadSide PoseBoxData::parkingboxside_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.pose_box_data.PoseBoxData.parkingBoxSide_nu)
  return _internal_parkingboxside_nu();
}
inline void PoseBoxData::_internal_set_parkingboxside_nu(::pb::ap_tp::target_road_side::TargetRoadSide value) {
  assert(::pb::ap_tp::target_road_side::TargetRoadSide_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  parkingboxside_nu_ = value;
}
inline void PoseBoxData::set_parkingboxside_nu(::pb::ap_tp::target_road_side::TargetRoadSide value) {
  _internal_set_parkingboxside_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.pose_box_data.PoseBoxData.parkingBoxSide_nu)
}

// optional bool leftEdgeIsFront_nu = 2311;
inline bool PoseBoxData::_internal_has_leftedgeisfront_nu() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PoseBoxData::has_leftedgeisfront_nu() const {
  return _internal_has_leftedgeisfront_nu();
}
inline void PoseBoxData::clear_leftedgeisfront_nu() {
  leftedgeisfront_nu_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool PoseBoxData::_internal_leftedgeisfront_nu() const {
  return leftedgeisfront_nu_;
}
inline bool PoseBoxData::leftedgeisfront_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.pose_box_data.PoseBoxData.leftEdgeIsFront_nu)
  return _internal_leftedgeisfront_nu();
}
inline void PoseBoxData::_internal_set_leftedgeisfront_nu(bool value) {
  _has_bits_[0] |= 0x00000002u;
  leftedgeisfront_nu_ = value;
}
inline void PoseBoxData::set_leftedgeisfront_nu(bool value) {
  _internal_set_leftedgeisfront_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.pose_box_data.PoseBoxData.leftEdgeIsFront_nu)
}

// optional bool mappingValid_nu = 439;
inline bool PoseBoxData::_internal_has_mappingvalid_nu() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PoseBoxData::has_mappingvalid_nu() const {
  return _internal_has_mappingvalid_nu();
}
inline void PoseBoxData::clear_mappingvalid_nu() {
  mappingvalid_nu_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool PoseBoxData::_internal_mappingvalid_nu() const {
  return mappingvalid_nu_;
}
inline bool PoseBoxData::mappingvalid_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.pose_box_data.PoseBoxData.mappingValid_nu)
  return _internal_mappingvalid_nu();
}
inline void PoseBoxData::_internal_set_mappingvalid_nu(bool value) {
  _has_bits_[0] |= 0x00000004u;
  mappingvalid_nu_ = value;
}
inline void PoseBoxData::set_mappingvalid_nu(bool value) {
  _internal_set_mappingvalid_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.pose_box_data.PoseBoxData.mappingValid_nu)
}

// -------------------------------------------------------------------

// PoseBoxData_array_port

// repeated .pb.ap_tp.pose_box_data.PoseBoxData data = 3903;
inline int PoseBoxData_array_port::_internal_data_size() const {
  return data_.size();
}
inline int PoseBoxData_array_port::data_size() const {
  return _internal_data_size();
}
inline void PoseBoxData_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_tp::pose_box_data::PoseBoxData* PoseBoxData_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_tp.pose_box_data.PoseBoxData_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::pose_box_data::PoseBoxData >*
PoseBoxData_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_tp.pose_box_data.PoseBoxData_array_port.data)
  return &data_;
}
inline const ::pb::ap_tp::pose_box_data::PoseBoxData& PoseBoxData_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_tp::pose_box_data::PoseBoxData& PoseBoxData_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.pose_box_data.PoseBoxData_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_tp::pose_box_data::PoseBoxData* PoseBoxData_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_tp::pose_box_data::PoseBoxData* PoseBoxData_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_tp.pose_box_data.PoseBoxData_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::pose_box_data::PoseBoxData >&
PoseBoxData_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_tp.pose_box_data.PoseBoxData_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pose_box_data
}  // namespace ap_tp
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5ftp_2fpose_5fbox_5fdata_2eproto
