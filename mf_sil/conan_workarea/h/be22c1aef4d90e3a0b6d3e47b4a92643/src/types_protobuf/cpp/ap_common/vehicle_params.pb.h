// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_common/vehicle_params.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5fcommon_2fvehicle_5fparams_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5fcommon_2fvehicle_5fparams_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5fcommon_2fvehicle_5fparams_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5fcommon_2fvehicle_5fparams_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fcommon_2fvehicle_5fparams_2eproto;
namespace pb {
namespace ap_common {
namespace vehicle_params {
class Vehicle_Params;
class Vehicle_ParamsDefaultTypeInternal;
extern Vehicle_ParamsDefaultTypeInternal _Vehicle_Params_default_instance_;
class Vehicle_Params_array_port;
class Vehicle_Params_array_portDefaultTypeInternal;
extern Vehicle_Params_array_portDefaultTypeInternal _Vehicle_Params_array_port_default_instance_;
}  // namespace vehicle_params
}  // namespace ap_common
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_common::vehicle_params::Vehicle_Params* Arena::CreateMaybeMessage<::pb::ap_common::vehicle_params::Vehicle_Params>(Arena*);
template<> ::pb::ap_common::vehicle_params::Vehicle_Params_array_port* Arena::CreateMaybeMessage<::pb::ap_common::vehicle_params::Vehicle_Params_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_common {
namespace vehicle_params {

// ===================================================================

class Vehicle_Params :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_common.vehicle_params.Vehicle_Params) */ {
 public:
  Vehicle_Params();
  virtual ~Vehicle_Params();

  Vehicle_Params(const Vehicle_Params& from);
  Vehicle_Params(Vehicle_Params&& from) noexcept
    : Vehicle_Params() {
    *this = ::std::move(from);
  }

  inline Vehicle_Params& operator=(const Vehicle_Params& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vehicle_Params& operator=(Vehicle_Params&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Vehicle_Params& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vehicle_Params* internal_default_instance() {
    return reinterpret_cast<const Vehicle_Params*>(
               &_Vehicle_Params_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Vehicle_Params& a, Vehicle_Params& b) {
    a.Swap(&b);
  }
  inline void Swap(Vehicle_Params* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Vehicle_Params* New() const final {
    return CreateMaybeMessage<Vehicle_Params>(nullptr);
  }

  Vehicle_Params* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Vehicle_Params>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Vehicle_Params& from);
  void MergeFrom(const Vehicle_Params& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vehicle_Params* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_common.vehicle_params.Vehicle_Params";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fcommon_2fvehicle_5fparams_2eproto);
    return ::descriptor_table_ap_5fcommon_2fvehicle_5fparams_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAPVHITCHSHAPEYMFieldNumber = 68,
    kAPVFLWHEELSHAPEYMFieldNumber = 91,
    kAPVSTANDARDSHAPEYMFieldNumber = 210,
    kAPVRIGHTMIRRORSHAPEYMFieldNumber = 425,
    kAPVRLWHEELSHAPEYMFieldNumber = 515,
    kAPVSTEERPOLYOUTWHLRADFieldNumber = 582,
    kAPVBOUNDINGBOXYMFieldNumber = 799,
    kAPVBOUNDINGBOXXMFieldNumber = 1071,
    kAPVSTEERPOLYCTRWHLRADFieldNumber = 1090,
    kAPVRLWHEELSHAPEXMFieldNumber = 1331,
    kAPVSTEERLOOKUPSTWHLRADFieldNumber = 1390,
    kAPVRIGHTMIRRORSHAPEXMFieldNumber = 1689,
    kAPVFLWHEELSHAPEXMFieldNumber = 1899,
    kAPVHITCHSHAPEXMFieldNumber = 1908,
    kAPVSTANDARDSHAPEXMFieldNumber = 2018,
    kAPVSTEERLOOKUPCTRWHLRADFieldNumber = 2201,
    kAPVRRWHEELSHAPEYMFieldNumber = 2398,
    kAPVSTEERLOOKUPINWHLRADFieldNumber = 2399,
    kAPVLEFTMIRRORSHAPEYMFieldNumber = 2512,
    kAPVSTEERPOLYINWHLRADFieldNumber = 2516,
    kAPVFRWHEELSHAPEYMFieldNumber = 2822,
    kAPVFRWHEELSHAPEXMFieldNumber = 3126,
    kAPVRRWHEELSHAPEXMFieldNumber = 3694,
    kAPVSTEERLOOKUPOUTWHLRADFieldNumber = 3741,
    kAPVLEFTMIRRORSHAPEXMFieldNumber = 3808,
    kSSigHeaderFieldNumber = 1033,
    kAPVTRACKREARMFieldNumber = 299,
    kAPVWHEELSHAPESIZENUFieldNumber = 427,
    kAPVWHEELNUMBEROFTEETHNUFieldNumber = 440,
    kAPVOVERHANGREARMFieldNumber = 786,
    kAPVWHEELBASEMFieldNumber = 1387,
    kAPVWIDTHMFieldNumber = 1463,
    kAPVTYRECIRCUMFERENCEFRONTMFieldNumber = 1586,
    kAPVSTEERANGTOYAWANGNUFieldNumber = 1748,
    kUiVersionNumberFieldNumber = 2124,
    kAPVMAXSTEERANGVELRADPSFieldNumber = 2299,
    kAPVTRACKFRONTMFieldNumber = 2405,
    kAPVMAXINFLDISTMFieldNumber = 2458,
    kAPVNUMBOUNDINGPTSFieldNumber = 2644,
    kAPVCOMFSTEERANGVELRADPSFieldNumber = 2964,
    kAPVNUMSTANDARDSHAPEPTSFieldNumber = 3477,
    kAPVSTEERRATIONUFieldNumber = 3492,
    kAPVLENGTHMFieldNumber = 3529,
    kAPVMIRRORSHAPESIZENUFieldNumber = 3546,
    kAPVTYRECIRCUMFERENCEREARMFieldNumber = 3570,
    kAPVHITCHSHAPESIZENUFieldNumber = 3596,
  };
  // repeated float AP_V_HITCH_SHAPE_Y_M = 68;
  int ap_v_hitch_shape_y_m_size() const;
  private:
  int _internal_ap_v_hitch_shape_y_m_size() const;
  public:
  void clear_ap_v_hitch_shape_y_m();
  private:
  float _internal_ap_v_hitch_shape_y_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_hitch_shape_y_m() const;
  void _internal_add_ap_v_hitch_shape_y_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_hitch_shape_y_m();
  public:
  float ap_v_hitch_shape_y_m(int index) const;
  void set_ap_v_hitch_shape_y_m(int index, float value);
  void add_ap_v_hitch_shape_y_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_hitch_shape_y_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_hitch_shape_y_m();

  // repeated float AP_V_FL_WHEEL_SHAPE_Y_M = 91;
  int ap_v_fl_wheel_shape_y_m_size() const;
  private:
  int _internal_ap_v_fl_wheel_shape_y_m_size() const;
  public:
  void clear_ap_v_fl_wheel_shape_y_m();
  private:
  float _internal_ap_v_fl_wheel_shape_y_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_fl_wheel_shape_y_m() const;
  void _internal_add_ap_v_fl_wheel_shape_y_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_fl_wheel_shape_y_m();
  public:
  float ap_v_fl_wheel_shape_y_m(int index) const;
  void set_ap_v_fl_wheel_shape_y_m(int index, float value);
  void add_ap_v_fl_wheel_shape_y_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_fl_wheel_shape_y_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_fl_wheel_shape_y_m();

  // repeated float AP_V_STANDARD_SHAPE_Y_M = 210;
  int ap_v_standard_shape_y_m_size() const;
  private:
  int _internal_ap_v_standard_shape_y_m_size() const;
  public:
  void clear_ap_v_standard_shape_y_m();
  private:
  float _internal_ap_v_standard_shape_y_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_standard_shape_y_m() const;
  void _internal_add_ap_v_standard_shape_y_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_standard_shape_y_m();
  public:
  float ap_v_standard_shape_y_m(int index) const;
  void set_ap_v_standard_shape_y_m(int index, float value);
  void add_ap_v_standard_shape_y_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_standard_shape_y_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_standard_shape_y_m();

  // repeated float AP_V_RIGHT_MIRROR_SHAPE_Y_M = 425;
  int ap_v_right_mirror_shape_y_m_size() const;
  private:
  int _internal_ap_v_right_mirror_shape_y_m_size() const;
  public:
  void clear_ap_v_right_mirror_shape_y_m();
  private:
  float _internal_ap_v_right_mirror_shape_y_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_right_mirror_shape_y_m() const;
  void _internal_add_ap_v_right_mirror_shape_y_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_right_mirror_shape_y_m();
  public:
  float ap_v_right_mirror_shape_y_m(int index) const;
  void set_ap_v_right_mirror_shape_y_m(int index, float value);
  void add_ap_v_right_mirror_shape_y_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_right_mirror_shape_y_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_right_mirror_shape_y_m();

  // repeated float AP_V_RL_WHEEL_SHAPE_Y_M = 515;
  int ap_v_rl_wheel_shape_y_m_size() const;
  private:
  int _internal_ap_v_rl_wheel_shape_y_m_size() const;
  public:
  void clear_ap_v_rl_wheel_shape_y_m();
  private:
  float _internal_ap_v_rl_wheel_shape_y_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_rl_wheel_shape_y_m() const;
  void _internal_add_ap_v_rl_wheel_shape_y_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_rl_wheel_shape_y_m();
  public:
  float ap_v_rl_wheel_shape_y_m(int index) const;
  void set_ap_v_rl_wheel_shape_y_m(int index, float value);
  void add_ap_v_rl_wheel_shape_y_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_rl_wheel_shape_y_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_rl_wheel_shape_y_m();

  // repeated float AP_V_STEER_POLY_OUT_WHL_RAD = 582;
  int ap_v_steer_poly_out_whl_rad_size() const;
  private:
  int _internal_ap_v_steer_poly_out_whl_rad_size() const;
  public:
  void clear_ap_v_steer_poly_out_whl_rad();
  private:
  float _internal_ap_v_steer_poly_out_whl_rad(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_steer_poly_out_whl_rad() const;
  void _internal_add_ap_v_steer_poly_out_whl_rad(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_steer_poly_out_whl_rad();
  public:
  float ap_v_steer_poly_out_whl_rad(int index) const;
  void set_ap_v_steer_poly_out_whl_rad(int index, float value);
  void add_ap_v_steer_poly_out_whl_rad(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_steer_poly_out_whl_rad() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_steer_poly_out_whl_rad();

  // repeated float AP_V_BOUNDINGBOX_Y_M = 799;
  int ap_v_boundingbox_y_m_size() const;
  private:
  int _internal_ap_v_boundingbox_y_m_size() const;
  public:
  void clear_ap_v_boundingbox_y_m();
  private:
  float _internal_ap_v_boundingbox_y_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_boundingbox_y_m() const;
  void _internal_add_ap_v_boundingbox_y_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_boundingbox_y_m();
  public:
  float ap_v_boundingbox_y_m(int index) const;
  void set_ap_v_boundingbox_y_m(int index, float value);
  void add_ap_v_boundingbox_y_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_boundingbox_y_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_boundingbox_y_m();

  // repeated float AP_V_BOUNDINGBOX_X_M = 1071;
  int ap_v_boundingbox_x_m_size() const;
  private:
  int _internal_ap_v_boundingbox_x_m_size() const;
  public:
  void clear_ap_v_boundingbox_x_m();
  private:
  float _internal_ap_v_boundingbox_x_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_boundingbox_x_m() const;
  void _internal_add_ap_v_boundingbox_x_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_boundingbox_x_m();
  public:
  float ap_v_boundingbox_x_m(int index) const;
  void set_ap_v_boundingbox_x_m(int index, float value);
  void add_ap_v_boundingbox_x_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_boundingbox_x_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_boundingbox_x_m();

  // repeated float AP_V_STEER_POLY_CTR_WHL_RAD = 1090;
  int ap_v_steer_poly_ctr_whl_rad_size() const;
  private:
  int _internal_ap_v_steer_poly_ctr_whl_rad_size() const;
  public:
  void clear_ap_v_steer_poly_ctr_whl_rad();
  private:
  float _internal_ap_v_steer_poly_ctr_whl_rad(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_steer_poly_ctr_whl_rad() const;
  void _internal_add_ap_v_steer_poly_ctr_whl_rad(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_steer_poly_ctr_whl_rad();
  public:
  float ap_v_steer_poly_ctr_whl_rad(int index) const;
  void set_ap_v_steer_poly_ctr_whl_rad(int index, float value);
  void add_ap_v_steer_poly_ctr_whl_rad(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_steer_poly_ctr_whl_rad() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_steer_poly_ctr_whl_rad();

  // repeated float AP_V_RL_WHEEL_SHAPE_X_M = 1331;
  int ap_v_rl_wheel_shape_x_m_size() const;
  private:
  int _internal_ap_v_rl_wheel_shape_x_m_size() const;
  public:
  void clear_ap_v_rl_wheel_shape_x_m();
  private:
  float _internal_ap_v_rl_wheel_shape_x_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_rl_wheel_shape_x_m() const;
  void _internal_add_ap_v_rl_wheel_shape_x_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_rl_wheel_shape_x_m();
  public:
  float ap_v_rl_wheel_shape_x_m(int index) const;
  void set_ap_v_rl_wheel_shape_x_m(int index, float value);
  void add_ap_v_rl_wheel_shape_x_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_rl_wheel_shape_x_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_rl_wheel_shape_x_m();

  // repeated float AP_V_STEER_LOOKUP_ST_WHL_RAD = 1390;
  int ap_v_steer_lookup_st_whl_rad_size() const;
  private:
  int _internal_ap_v_steer_lookup_st_whl_rad_size() const;
  public:
  void clear_ap_v_steer_lookup_st_whl_rad();
  private:
  float _internal_ap_v_steer_lookup_st_whl_rad(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_steer_lookup_st_whl_rad() const;
  void _internal_add_ap_v_steer_lookup_st_whl_rad(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_steer_lookup_st_whl_rad();
  public:
  float ap_v_steer_lookup_st_whl_rad(int index) const;
  void set_ap_v_steer_lookup_st_whl_rad(int index, float value);
  void add_ap_v_steer_lookup_st_whl_rad(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_steer_lookup_st_whl_rad() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_steer_lookup_st_whl_rad();

  // repeated float AP_V_RIGHT_MIRROR_SHAPE_X_M = 1689;
  int ap_v_right_mirror_shape_x_m_size() const;
  private:
  int _internal_ap_v_right_mirror_shape_x_m_size() const;
  public:
  void clear_ap_v_right_mirror_shape_x_m();
  private:
  float _internal_ap_v_right_mirror_shape_x_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_right_mirror_shape_x_m() const;
  void _internal_add_ap_v_right_mirror_shape_x_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_right_mirror_shape_x_m();
  public:
  float ap_v_right_mirror_shape_x_m(int index) const;
  void set_ap_v_right_mirror_shape_x_m(int index, float value);
  void add_ap_v_right_mirror_shape_x_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_right_mirror_shape_x_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_right_mirror_shape_x_m();

  // repeated float AP_V_FL_WHEEL_SHAPE_X_M = 1899;
  int ap_v_fl_wheel_shape_x_m_size() const;
  private:
  int _internal_ap_v_fl_wheel_shape_x_m_size() const;
  public:
  void clear_ap_v_fl_wheel_shape_x_m();
  private:
  float _internal_ap_v_fl_wheel_shape_x_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_fl_wheel_shape_x_m() const;
  void _internal_add_ap_v_fl_wheel_shape_x_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_fl_wheel_shape_x_m();
  public:
  float ap_v_fl_wheel_shape_x_m(int index) const;
  void set_ap_v_fl_wheel_shape_x_m(int index, float value);
  void add_ap_v_fl_wheel_shape_x_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_fl_wheel_shape_x_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_fl_wheel_shape_x_m();

  // repeated float AP_V_HITCH_SHAPE_X_M = 1908;
  int ap_v_hitch_shape_x_m_size() const;
  private:
  int _internal_ap_v_hitch_shape_x_m_size() const;
  public:
  void clear_ap_v_hitch_shape_x_m();
  private:
  float _internal_ap_v_hitch_shape_x_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_hitch_shape_x_m() const;
  void _internal_add_ap_v_hitch_shape_x_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_hitch_shape_x_m();
  public:
  float ap_v_hitch_shape_x_m(int index) const;
  void set_ap_v_hitch_shape_x_m(int index, float value);
  void add_ap_v_hitch_shape_x_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_hitch_shape_x_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_hitch_shape_x_m();

  // repeated float AP_V_STANDARD_SHAPE_X_M = 2018;
  int ap_v_standard_shape_x_m_size() const;
  private:
  int _internal_ap_v_standard_shape_x_m_size() const;
  public:
  void clear_ap_v_standard_shape_x_m();
  private:
  float _internal_ap_v_standard_shape_x_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_standard_shape_x_m() const;
  void _internal_add_ap_v_standard_shape_x_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_standard_shape_x_m();
  public:
  float ap_v_standard_shape_x_m(int index) const;
  void set_ap_v_standard_shape_x_m(int index, float value);
  void add_ap_v_standard_shape_x_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_standard_shape_x_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_standard_shape_x_m();

  // repeated float AP_V_STEER_LOOKUP_CTR_WHL_RAD = 2201;
  int ap_v_steer_lookup_ctr_whl_rad_size() const;
  private:
  int _internal_ap_v_steer_lookup_ctr_whl_rad_size() const;
  public:
  void clear_ap_v_steer_lookup_ctr_whl_rad();
  private:
  float _internal_ap_v_steer_lookup_ctr_whl_rad(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_steer_lookup_ctr_whl_rad() const;
  void _internal_add_ap_v_steer_lookup_ctr_whl_rad(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_steer_lookup_ctr_whl_rad();
  public:
  float ap_v_steer_lookup_ctr_whl_rad(int index) const;
  void set_ap_v_steer_lookup_ctr_whl_rad(int index, float value);
  void add_ap_v_steer_lookup_ctr_whl_rad(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_steer_lookup_ctr_whl_rad() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_steer_lookup_ctr_whl_rad();

  // repeated float AP_V_RR_WHEEL_SHAPE_Y_M = 2398;
  int ap_v_rr_wheel_shape_y_m_size() const;
  private:
  int _internal_ap_v_rr_wheel_shape_y_m_size() const;
  public:
  void clear_ap_v_rr_wheel_shape_y_m();
  private:
  float _internal_ap_v_rr_wheel_shape_y_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_rr_wheel_shape_y_m() const;
  void _internal_add_ap_v_rr_wheel_shape_y_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_rr_wheel_shape_y_m();
  public:
  float ap_v_rr_wheel_shape_y_m(int index) const;
  void set_ap_v_rr_wheel_shape_y_m(int index, float value);
  void add_ap_v_rr_wheel_shape_y_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_rr_wheel_shape_y_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_rr_wheel_shape_y_m();

  // repeated float AP_V_STEER_LOOKUP_IN_WHL_RAD = 2399;
  int ap_v_steer_lookup_in_whl_rad_size() const;
  private:
  int _internal_ap_v_steer_lookup_in_whl_rad_size() const;
  public:
  void clear_ap_v_steer_lookup_in_whl_rad();
  private:
  float _internal_ap_v_steer_lookup_in_whl_rad(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_steer_lookup_in_whl_rad() const;
  void _internal_add_ap_v_steer_lookup_in_whl_rad(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_steer_lookup_in_whl_rad();
  public:
  float ap_v_steer_lookup_in_whl_rad(int index) const;
  void set_ap_v_steer_lookup_in_whl_rad(int index, float value);
  void add_ap_v_steer_lookup_in_whl_rad(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_steer_lookup_in_whl_rad() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_steer_lookup_in_whl_rad();

  // repeated float AP_V_LEFT_MIRROR_SHAPE_Y_M = 2512;
  int ap_v_left_mirror_shape_y_m_size() const;
  private:
  int _internal_ap_v_left_mirror_shape_y_m_size() const;
  public:
  void clear_ap_v_left_mirror_shape_y_m();
  private:
  float _internal_ap_v_left_mirror_shape_y_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_left_mirror_shape_y_m() const;
  void _internal_add_ap_v_left_mirror_shape_y_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_left_mirror_shape_y_m();
  public:
  float ap_v_left_mirror_shape_y_m(int index) const;
  void set_ap_v_left_mirror_shape_y_m(int index, float value);
  void add_ap_v_left_mirror_shape_y_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_left_mirror_shape_y_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_left_mirror_shape_y_m();

  // repeated float AP_V_STEER_POLY_IN_WHL_RAD = 2516;
  int ap_v_steer_poly_in_whl_rad_size() const;
  private:
  int _internal_ap_v_steer_poly_in_whl_rad_size() const;
  public:
  void clear_ap_v_steer_poly_in_whl_rad();
  private:
  float _internal_ap_v_steer_poly_in_whl_rad(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_steer_poly_in_whl_rad() const;
  void _internal_add_ap_v_steer_poly_in_whl_rad(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_steer_poly_in_whl_rad();
  public:
  float ap_v_steer_poly_in_whl_rad(int index) const;
  void set_ap_v_steer_poly_in_whl_rad(int index, float value);
  void add_ap_v_steer_poly_in_whl_rad(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_steer_poly_in_whl_rad() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_steer_poly_in_whl_rad();

  // repeated float AP_V_FR_WHEEL_SHAPE_Y_M = 2822;
  int ap_v_fr_wheel_shape_y_m_size() const;
  private:
  int _internal_ap_v_fr_wheel_shape_y_m_size() const;
  public:
  void clear_ap_v_fr_wheel_shape_y_m();
  private:
  float _internal_ap_v_fr_wheel_shape_y_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_fr_wheel_shape_y_m() const;
  void _internal_add_ap_v_fr_wheel_shape_y_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_fr_wheel_shape_y_m();
  public:
  float ap_v_fr_wheel_shape_y_m(int index) const;
  void set_ap_v_fr_wheel_shape_y_m(int index, float value);
  void add_ap_v_fr_wheel_shape_y_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_fr_wheel_shape_y_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_fr_wheel_shape_y_m();

  // repeated float AP_V_FR_WHEEL_SHAPE_X_M = 3126;
  int ap_v_fr_wheel_shape_x_m_size() const;
  private:
  int _internal_ap_v_fr_wheel_shape_x_m_size() const;
  public:
  void clear_ap_v_fr_wheel_shape_x_m();
  private:
  float _internal_ap_v_fr_wheel_shape_x_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_fr_wheel_shape_x_m() const;
  void _internal_add_ap_v_fr_wheel_shape_x_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_fr_wheel_shape_x_m();
  public:
  float ap_v_fr_wheel_shape_x_m(int index) const;
  void set_ap_v_fr_wheel_shape_x_m(int index, float value);
  void add_ap_v_fr_wheel_shape_x_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_fr_wheel_shape_x_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_fr_wheel_shape_x_m();

  // repeated float AP_V_RR_WHEEL_SHAPE_X_M = 3694;
  int ap_v_rr_wheel_shape_x_m_size() const;
  private:
  int _internal_ap_v_rr_wheel_shape_x_m_size() const;
  public:
  void clear_ap_v_rr_wheel_shape_x_m();
  private:
  float _internal_ap_v_rr_wheel_shape_x_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_rr_wheel_shape_x_m() const;
  void _internal_add_ap_v_rr_wheel_shape_x_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_rr_wheel_shape_x_m();
  public:
  float ap_v_rr_wheel_shape_x_m(int index) const;
  void set_ap_v_rr_wheel_shape_x_m(int index, float value);
  void add_ap_v_rr_wheel_shape_x_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_rr_wheel_shape_x_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_rr_wheel_shape_x_m();

  // repeated float AP_V_STEER_LOOKUP_OUT_WHL_RAD = 3741;
  int ap_v_steer_lookup_out_whl_rad_size() const;
  private:
  int _internal_ap_v_steer_lookup_out_whl_rad_size() const;
  public:
  void clear_ap_v_steer_lookup_out_whl_rad();
  private:
  float _internal_ap_v_steer_lookup_out_whl_rad(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_steer_lookup_out_whl_rad() const;
  void _internal_add_ap_v_steer_lookup_out_whl_rad(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_steer_lookup_out_whl_rad();
  public:
  float ap_v_steer_lookup_out_whl_rad(int index) const;
  void set_ap_v_steer_lookup_out_whl_rad(int index, float value);
  void add_ap_v_steer_lookup_out_whl_rad(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_steer_lookup_out_whl_rad() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_steer_lookup_out_whl_rad();

  // repeated float AP_V_LEFT_MIRROR_SHAPE_X_M = 3808;
  int ap_v_left_mirror_shape_x_m_size() const;
  private:
  int _internal_ap_v_left_mirror_shape_x_m_size() const;
  public:
  void clear_ap_v_left_mirror_shape_x_m();
  private:
  float _internal_ap_v_left_mirror_shape_x_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ap_v_left_mirror_shape_x_m() const;
  void _internal_add_ap_v_left_mirror_shape_x_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ap_v_left_mirror_shape_x_m();
  public:
  float ap_v_left_mirror_shape_x_m(int index) const;
  void set_ap_v_left_mirror_shape_x_m(int index, float value);
  void add_ap_v_left_mirror_shape_x_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ap_v_left_mirror_shape_x_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ap_v_left_mirror_shape_x_m();

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional float AP_V_TRACK_REAR_M = 299;
  bool has_ap_v_track_rear_m() const;
  private:
  bool _internal_has_ap_v_track_rear_m() const;
  public:
  void clear_ap_v_track_rear_m();
  float ap_v_track_rear_m() const;
  void set_ap_v_track_rear_m(float value);
  private:
  float _internal_ap_v_track_rear_m() const;
  void _internal_set_ap_v_track_rear_m(float value);
  public:

  // optional uint32 AP_V_WHEEL_SHAPE_SIZE_NU = 427;
  bool has_ap_v_wheel_shape_size_nu() const;
  private:
  bool _internal_has_ap_v_wheel_shape_size_nu() const;
  public:
  void clear_ap_v_wheel_shape_size_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_wheel_shape_size_nu() const;
  void set_ap_v_wheel_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_wheel_shape_size_nu() const;
  void _internal_set_ap_v_wheel_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_V_WHEEL_NUMBER_OF_TEETH_NU = 440;
  bool has_ap_v_wheel_number_of_teeth_nu() const;
  private:
  bool _internal_has_ap_v_wheel_number_of_teeth_nu() const;
  public:
  void clear_ap_v_wheel_number_of_teeth_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_wheel_number_of_teeth_nu() const;
  void set_ap_v_wheel_number_of_teeth_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_wheel_number_of_teeth_nu() const;
  void _internal_set_ap_v_wheel_number_of_teeth_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float AP_V_OVERHANG_REAR_M = 786;
  bool has_ap_v_overhang_rear_m() const;
  private:
  bool _internal_has_ap_v_overhang_rear_m() const;
  public:
  void clear_ap_v_overhang_rear_m();
  float ap_v_overhang_rear_m() const;
  void set_ap_v_overhang_rear_m(float value);
  private:
  float _internal_ap_v_overhang_rear_m() const;
  void _internal_set_ap_v_overhang_rear_m(float value);
  public:

  // optional float AP_V_WHEELBASE_M = 1387;
  bool has_ap_v_wheelbase_m() const;
  private:
  bool _internal_has_ap_v_wheelbase_m() const;
  public:
  void clear_ap_v_wheelbase_m();
  float ap_v_wheelbase_m() const;
  void set_ap_v_wheelbase_m(float value);
  private:
  float _internal_ap_v_wheelbase_m() const;
  void _internal_set_ap_v_wheelbase_m(float value);
  public:

  // optional float AP_V_WIDTH_M = 1463;
  bool has_ap_v_width_m() const;
  private:
  bool _internal_has_ap_v_width_m() const;
  public:
  void clear_ap_v_width_m();
  float ap_v_width_m() const;
  void set_ap_v_width_m(float value);
  private:
  float _internal_ap_v_width_m() const;
  void _internal_set_ap_v_width_m(float value);
  public:

  // optional float AP_V_TYRE_CIRCUMFERENCE_FRONT_M = 1586;
  bool has_ap_v_tyre_circumference_front_m() const;
  private:
  bool _internal_has_ap_v_tyre_circumference_front_m() const;
  public:
  void clear_ap_v_tyre_circumference_front_m();
  float ap_v_tyre_circumference_front_m() const;
  void set_ap_v_tyre_circumference_front_m(float value);
  private:
  float _internal_ap_v_tyre_circumference_front_m() const;
  void _internal_set_ap_v_tyre_circumference_front_m(float value);
  public:

  // optional float AP_V_STEER_ANG_TO_YAW_ANG_NU = 1748;
  bool has_ap_v_steer_ang_to_yaw_ang_nu() const;
  private:
  bool _internal_has_ap_v_steer_ang_to_yaw_ang_nu() const;
  public:
  void clear_ap_v_steer_ang_to_yaw_ang_nu();
  float ap_v_steer_ang_to_yaw_ang_nu() const;
  void set_ap_v_steer_ang_to_yaw_ang_nu(float value);
  private:
  float _internal_ap_v_steer_ang_to_yaw_ang_nu() const;
  void _internal_set_ap_v_steer_ang_to_yaw_ang_nu(float value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float AP_V_MAX_STEER_ANG_VEL_RADPS = 2299;
  bool has_ap_v_max_steer_ang_vel_radps() const;
  private:
  bool _internal_has_ap_v_max_steer_ang_vel_radps() const;
  public:
  void clear_ap_v_max_steer_ang_vel_radps();
  float ap_v_max_steer_ang_vel_radps() const;
  void set_ap_v_max_steer_ang_vel_radps(float value);
  private:
  float _internal_ap_v_max_steer_ang_vel_radps() const;
  void _internal_set_ap_v_max_steer_ang_vel_radps(float value);
  public:

  // optional float AP_V_TRACK_FRONT_M = 2405;
  bool has_ap_v_track_front_m() const;
  private:
  bool _internal_has_ap_v_track_front_m() const;
  public:
  void clear_ap_v_track_front_m();
  float ap_v_track_front_m() const;
  void set_ap_v_track_front_m(float value);
  private:
  float _internal_ap_v_track_front_m() const;
  void _internal_set_ap_v_track_front_m(float value);
  public:

  // optional float AP_V_MAX_INFL_DIST_M = 2458;
  bool has_ap_v_max_infl_dist_m() const;
  private:
  bool _internal_has_ap_v_max_infl_dist_m() const;
  public:
  void clear_ap_v_max_infl_dist_m();
  float ap_v_max_infl_dist_m() const;
  void set_ap_v_max_infl_dist_m(float value);
  private:
  float _internal_ap_v_max_infl_dist_m() const;
  void _internal_set_ap_v_max_infl_dist_m(float value);
  public:

  // optional uint32 AP_V_NUM_BOUNDING_PTS = 2644;
  bool has_ap_v_num_bounding_pts() const;
  private:
  bool _internal_has_ap_v_num_bounding_pts() const;
  public:
  void clear_ap_v_num_bounding_pts();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_num_bounding_pts() const;
  void set_ap_v_num_bounding_pts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_num_bounding_pts() const;
  void _internal_set_ap_v_num_bounding_pts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float AP_V_COMF_STEER_ANG_VEL_RADPS = 2964;
  bool has_ap_v_comf_steer_ang_vel_radps() const;
  private:
  bool _internal_has_ap_v_comf_steer_ang_vel_radps() const;
  public:
  void clear_ap_v_comf_steer_ang_vel_radps();
  float ap_v_comf_steer_ang_vel_radps() const;
  void set_ap_v_comf_steer_ang_vel_radps(float value);
  private:
  float _internal_ap_v_comf_steer_ang_vel_radps() const;
  void _internal_set_ap_v_comf_steer_ang_vel_radps(float value);
  public:

  // optional uint32 AP_V_NUM_STANDARD_SHAPE_PTS = 3477;
  bool has_ap_v_num_standard_shape_pts() const;
  private:
  bool _internal_has_ap_v_num_standard_shape_pts() const;
  public:
  void clear_ap_v_num_standard_shape_pts();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_num_standard_shape_pts() const;
  void set_ap_v_num_standard_shape_pts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_num_standard_shape_pts() const;
  void _internal_set_ap_v_num_standard_shape_pts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float AP_V_STEER_RATIO_NU = 3492;
  bool has_ap_v_steer_ratio_nu() const;
  private:
  bool _internal_has_ap_v_steer_ratio_nu() const;
  public:
  void clear_ap_v_steer_ratio_nu();
  float ap_v_steer_ratio_nu() const;
  void set_ap_v_steer_ratio_nu(float value);
  private:
  float _internal_ap_v_steer_ratio_nu() const;
  void _internal_set_ap_v_steer_ratio_nu(float value);
  public:

  // optional float AP_V_LENGTH_M = 3529;
  bool has_ap_v_length_m() const;
  private:
  bool _internal_has_ap_v_length_m() const;
  public:
  void clear_ap_v_length_m();
  float ap_v_length_m() const;
  void set_ap_v_length_m(float value);
  private:
  float _internal_ap_v_length_m() const;
  void _internal_set_ap_v_length_m(float value);
  public:

  // optional uint32 AP_V_MIRROR_SHAPE_SIZE_NU = 3546;
  bool has_ap_v_mirror_shape_size_nu() const;
  private:
  bool _internal_has_ap_v_mirror_shape_size_nu() const;
  public:
  void clear_ap_v_mirror_shape_size_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_mirror_shape_size_nu() const;
  void set_ap_v_mirror_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_mirror_shape_size_nu() const;
  void _internal_set_ap_v_mirror_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float AP_V_TYRE_CIRCUMFERENCE_REAR_M = 3570;
  bool has_ap_v_tyre_circumference_rear_m() const;
  private:
  bool _internal_has_ap_v_tyre_circumference_rear_m() const;
  public:
  void clear_ap_v_tyre_circumference_rear_m();
  float ap_v_tyre_circumference_rear_m() const;
  void set_ap_v_tyre_circumference_rear_m(float value);
  private:
  float _internal_ap_v_tyre_circumference_rear_m() const;
  void _internal_set_ap_v_tyre_circumference_rear_m(float value);
  public:

  // optional uint32 AP_V_HITCH_SHAPE_SIZE_NU = 3596;
  bool has_ap_v_hitch_shape_size_nu() const;
  private:
  bool _internal_has_ap_v_hitch_shape_size_nu() const;
  public:
  void clear_ap_v_hitch_shape_size_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_hitch_shape_size_nu() const;
  void set_ap_v_hitch_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_hitch_shape_size_nu() const;
  void _internal_set_ap_v_hitch_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_common.vehicle_params.Vehicle_Params)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_hitch_shape_y_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_fl_wheel_shape_y_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_standard_shape_y_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_right_mirror_shape_y_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_rl_wheel_shape_y_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_steer_poly_out_whl_rad_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_boundingbox_y_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_boundingbox_x_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_steer_poly_ctr_whl_rad_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_rl_wheel_shape_x_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_steer_lookup_st_whl_rad_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_right_mirror_shape_x_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_fl_wheel_shape_x_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_hitch_shape_x_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_standard_shape_x_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_steer_lookup_ctr_whl_rad_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_rr_wheel_shape_y_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_steer_lookup_in_whl_rad_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_left_mirror_shape_y_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_steer_poly_in_whl_rad_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_fr_wheel_shape_y_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_fr_wheel_shape_x_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_rr_wheel_shape_x_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_steer_lookup_out_whl_rad_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ap_v_left_mirror_shape_x_m_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  float ap_v_track_rear_m_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_wheel_shape_size_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_wheel_number_of_teeth_nu_;
  float ap_v_overhang_rear_m_;
  float ap_v_wheelbase_m_;
  float ap_v_width_m_;
  float ap_v_tyre_circumference_front_m_;
  float ap_v_steer_ang_to_yaw_ang_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  float ap_v_max_steer_ang_vel_radps_;
  float ap_v_track_front_m_;
  float ap_v_max_infl_dist_m_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_num_bounding_pts_;
  float ap_v_comf_steer_ang_vel_radps_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_num_standard_shape_pts_;
  float ap_v_steer_ratio_nu_;
  float ap_v_length_m_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_mirror_shape_size_nu_;
  float ap_v_tyre_circumference_rear_m_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_hitch_shape_size_nu_;
  friend struct ::TableStruct_ap_5fcommon_2fvehicle_5fparams_2eproto;
};
// -------------------------------------------------------------------

class Vehicle_Params_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_common.vehicle_params.Vehicle_Params_array_port) */ {
 public:
  Vehicle_Params_array_port();
  virtual ~Vehicle_Params_array_port();

  Vehicle_Params_array_port(const Vehicle_Params_array_port& from);
  Vehicle_Params_array_port(Vehicle_Params_array_port&& from) noexcept
    : Vehicle_Params_array_port() {
    *this = ::std::move(from);
  }

  inline Vehicle_Params_array_port& operator=(const Vehicle_Params_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vehicle_Params_array_port& operator=(Vehicle_Params_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Vehicle_Params_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vehicle_Params_array_port* internal_default_instance() {
    return reinterpret_cast<const Vehicle_Params_array_port*>(
               &_Vehicle_Params_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Vehicle_Params_array_port& a, Vehicle_Params_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(Vehicle_Params_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Vehicle_Params_array_port* New() const final {
    return CreateMaybeMessage<Vehicle_Params_array_port>(nullptr);
  }

  Vehicle_Params_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Vehicle_Params_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Vehicle_Params_array_port& from);
  void MergeFrom(const Vehicle_Params_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vehicle_Params_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_common.vehicle_params.Vehicle_Params_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fcommon_2fvehicle_5fparams_2eproto);
    return ::descriptor_table_ap_5fcommon_2fvehicle_5fparams_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 331,
  };
  // repeated .pb.ap_common.vehicle_params.Vehicle_Params data = 331;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_common::vehicle_params::Vehicle_Params* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_common::vehicle_params::Vehicle_Params >*
      mutable_data();
  private:
  const ::pb::ap_common::vehicle_params::Vehicle_Params& _internal_data(int index) const;
  ::pb::ap_common::vehicle_params::Vehicle_Params* _internal_add_data();
  public:
  const ::pb::ap_common::vehicle_params::Vehicle_Params& data(int index) const;
  ::pb::ap_common::vehicle_params::Vehicle_Params* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_common::vehicle_params::Vehicle_Params >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_common.vehicle_params.Vehicle_Params_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_common::vehicle_params::Vehicle_Params > data_;
  friend struct ::TableStruct_ap_5fcommon_2fvehicle_5fparams_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Vehicle_Params

// optional uint32 uiVersionNumber = 2124;
inline bool Vehicle_Params::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool Vehicle_Params::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void Vehicle_Params::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void Vehicle_Params::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  uiversionnumber_ = value;
}
inline void Vehicle_Params::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool Vehicle_Params::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool Vehicle_Params::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& Vehicle_Params::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& Vehicle_Params::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* Vehicle_Params::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.ap_common.vehicle_params.Vehicle_Params.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* Vehicle_Params::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* Vehicle_Params::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.ap_common.vehicle_params.Vehicle_Params.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void Vehicle_Params::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_common.vehicle_params.Vehicle_Params.sSigHeader)
}

// optional float AP_V_STEER_RATIO_NU = 3492;
inline bool Vehicle_Params::_internal_has_ap_v_steer_ratio_nu() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_steer_ratio_nu() const {
  return _internal_has_ap_v_steer_ratio_nu();
}
inline void Vehicle_Params::clear_ap_v_steer_ratio_nu() {
  ap_v_steer_ratio_nu_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline float Vehicle_Params::_internal_ap_v_steer_ratio_nu() const {
  return ap_v_steer_ratio_nu_;
}
inline float Vehicle_Params::ap_v_steer_ratio_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_RATIO_NU)
  return _internal_ap_v_steer_ratio_nu();
}
inline void Vehicle_Params::_internal_set_ap_v_steer_ratio_nu(float value) {
  _has_bits_[0] |= 0x00010000u;
  ap_v_steer_ratio_nu_ = value;
}
inline void Vehicle_Params::set_ap_v_steer_ratio_nu(float value) {
  _internal_set_ap_v_steer_ratio_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_RATIO_NU)
}

// repeated float AP_V_STEER_LOOKUP_ST_WHL_RAD = 1390;
inline int Vehicle_Params::_internal_ap_v_steer_lookup_st_whl_rad_size() const {
  return ap_v_steer_lookup_st_whl_rad_.size();
}
inline int Vehicle_Params::ap_v_steer_lookup_st_whl_rad_size() const {
  return _internal_ap_v_steer_lookup_st_whl_rad_size();
}
inline void Vehicle_Params::clear_ap_v_steer_lookup_st_whl_rad() {
  ap_v_steer_lookup_st_whl_rad_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_steer_lookup_st_whl_rad(int index) const {
  return ap_v_steer_lookup_st_whl_rad_.Get(index);
}
inline float Vehicle_Params::ap_v_steer_lookup_st_whl_rad(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_ST_WHL_RAD)
  return _internal_ap_v_steer_lookup_st_whl_rad(index);
}
inline void Vehicle_Params::set_ap_v_steer_lookup_st_whl_rad(int index, float value) {
  ap_v_steer_lookup_st_whl_rad_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_ST_WHL_RAD)
}
inline void Vehicle_Params::_internal_add_ap_v_steer_lookup_st_whl_rad(float value) {
  ap_v_steer_lookup_st_whl_rad_.Add(value);
}
inline void Vehicle_Params::add_ap_v_steer_lookup_st_whl_rad(float value) {
  _internal_add_ap_v_steer_lookup_st_whl_rad(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_ST_WHL_RAD)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_steer_lookup_st_whl_rad() const {
  return ap_v_steer_lookup_st_whl_rad_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_steer_lookup_st_whl_rad() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_ST_WHL_RAD)
  return _internal_ap_v_steer_lookup_st_whl_rad();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_steer_lookup_st_whl_rad() {
  return &ap_v_steer_lookup_st_whl_rad_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_steer_lookup_st_whl_rad() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_ST_WHL_RAD)
  return _internal_mutable_ap_v_steer_lookup_st_whl_rad();
}

// repeated float AP_V_STEER_LOOKUP_IN_WHL_RAD = 2399;
inline int Vehicle_Params::_internal_ap_v_steer_lookup_in_whl_rad_size() const {
  return ap_v_steer_lookup_in_whl_rad_.size();
}
inline int Vehicle_Params::ap_v_steer_lookup_in_whl_rad_size() const {
  return _internal_ap_v_steer_lookup_in_whl_rad_size();
}
inline void Vehicle_Params::clear_ap_v_steer_lookup_in_whl_rad() {
  ap_v_steer_lookup_in_whl_rad_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_steer_lookup_in_whl_rad(int index) const {
  return ap_v_steer_lookup_in_whl_rad_.Get(index);
}
inline float Vehicle_Params::ap_v_steer_lookup_in_whl_rad(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_IN_WHL_RAD)
  return _internal_ap_v_steer_lookup_in_whl_rad(index);
}
inline void Vehicle_Params::set_ap_v_steer_lookup_in_whl_rad(int index, float value) {
  ap_v_steer_lookup_in_whl_rad_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_IN_WHL_RAD)
}
inline void Vehicle_Params::_internal_add_ap_v_steer_lookup_in_whl_rad(float value) {
  ap_v_steer_lookup_in_whl_rad_.Add(value);
}
inline void Vehicle_Params::add_ap_v_steer_lookup_in_whl_rad(float value) {
  _internal_add_ap_v_steer_lookup_in_whl_rad(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_IN_WHL_RAD)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_steer_lookup_in_whl_rad() const {
  return ap_v_steer_lookup_in_whl_rad_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_steer_lookup_in_whl_rad() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_IN_WHL_RAD)
  return _internal_ap_v_steer_lookup_in_whl_rad();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_steer_lookup_in_whl_rad() {
  return &ap_v_steer_lookup_in_whl_rad_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_steer_lookup_in_whl_rad() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_IN_WHL_RAD)
  return _internal_mutable_ap_v_steer_lookup_in_whl_rad();
}

// repeated float AP_V_STEER_LOOKUP_OUT_WHL_RAD = 3741;
inline int Vehicle_Params::_internal_ap_v_steer_lookup_out_whl_rad_size() const {
  return ap_v_steer_lookup_out_whl_rad_.size();
}
inline int Vehicle_Params::ap_v_steer_lookup_out_whl_rad_size() const {
  return _internal_ap_v_steer_lookup_out_whl_rad_size();
}
inline void Vehicle_Params::clear_ap_v_steer_lookup_out_whl_rad() {
  ap_v_steer_lookup_out_whl_rad_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_steer_lookup_out_whl_rad(int index) const {
  return ap_v_steer_lookup_out_whl_rad_.Get(index);
}
inline float Vehicle_Params::ap_v_steer_lookup_out_whl_rad(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_OUT_WHL_RAD)
  return _internal_ap_v_steer_lookup_out_whl_rad(index);
}
inline void Vehicle_Params::set_ap_v_steer_lookup_out_whl_rad(int index, float value) {
  ap_v_steer_lookup_out_whl_rad_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_OUT_WHL_RAD)
}
inline void Vehicle_Params::_internal_add_ap_v_steer_lookup_out_whl_rad(float value) {
  ap_v_steer_lookup_out_whl_rad_.Add(value);
}
inline void Vehicle_Params::add_ap_v_steer_lookup_out_whl_rad(float value) {
  _internal_add_ap_v_steer_lookup_out_whl_rad(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_OUT_WHL_RAD)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_steer_lookup_out_whl_rad() const {
  return ap_v_steer_lookup_out_whl_rad_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_steer_lookup_out_whl_rad() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_OUT_WHL_RAD)
  return _internal_ap_v_steer_lookup_out_whl_rad();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_steer_lookup_out_whl_rad() {
  return &ap_v_steer_lookup_out_whl_rad_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_steer_lookup_out_whl_rad() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_OUT_WHL_RAD)
  return _internal_mutable_ap_v_steer_lookup_out_whl_rad();
}

// repeated float AP_V_STEER_LOOKUP_CTR_WHL_RAD = 2201;
inline int Vehicle_Params::_internal_ap_v_steer_lookup_ctr_whl_rad_size() const {
  return ap_v_steer_lookup_ctr_whl_rad_.size();
}
inline int Vehicle_Params::ap_v_steer_lookup_ctr_whl_rad_size() const {
  return _internal_ap_v_steer_lookup_ctr_whl_rad_size();
}
inline void Vehicle_Params::clear_ap_v_steer_lookup_ctr_whl_rad() {
  ap_v_steer_lookup_ctr_whl_rad_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_steer_lookup_ctr_whl_rad(int index) const {
  return ap_v_steer_lookup_ctr_whl_rad_.Get(index);
}
inline float Vehicle_Params::ap_v_steer_lookup_ctr_whl_rad(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_CTR_WHL_RAD)
  return _internal_ap_v_steer_lookup_ctr_whl_rad(index);
}
inline void Vehicle_Params::set_ap_v_steer_lookup_ctr_whl_rad(int index, float value) {
  ap_v_steer_lookup_ctr_whl_rad_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_CTR_WHL_RAD)
}
inline void Vehicle_Params::_internal_add_ap_v_steer_lookup_ctr_whl_rad(float value) {
  ap_v_steer_lookup_ctr_whl_rad_.Add(value);
}
inline void Vehicle_Params::add_ap_v_steer_lookup_ctr_whl_rad(float value) {
  _internal_add_ap_v_steer_lookup_ctr_whl_rad(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_CTR_WHL_RAD)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_steer_lookup_ctr_whl_rad() const {
  return ap_v_steer_lookup_ctr_whl_rad_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_steer_lookup_ctr_whl_rad() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_CTR_WHL_RAD)
  return _internal_ap_v_steer_lookup_ctr_whl_rad();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_steer_lookup_ctr_whl_rad() {
  return &ap_v_steer_lookup_ctr_whl_rad_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_steer_lookup_ctr_whl_rad() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_LOOKUP_CTR_WHL_RAD)
  return _internal_mutable_ap_v_steer_lookup_ctr_whl_rad();
}

// optional float AP_V_WHEELBASE_M = 1387;
inline bool Vehicle_Params::_internal_has_ap_v_wheelbase_m() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_wheelbase_m() const {
  return _internal_has_ap_v_wheelbase_m();
}
inline void Vehicle_Params::clear_ap_v_wheelbase_m() {
  ap_v_wheelbase_m_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float Vehicle_Params::_internal_ap_v_wheelbase_m() const {
  return ap_v_wheelbase_m_;
}
inline float Vehicle_Params::ap_v_wheelbase_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_WHEELBASE_M)
  return _internal_ap_v_wheelbase_m();
}
inline void Vehicle_Params::_internal_set_ap_v_wheelbase_m(float value) {
  _has_bits_[0] |= 0x00000020u;
  ap_v_wheelbase_m_ = value;
}
inline void Vehicle_Params::set_ap_v_wheelbase_m(float value) {
  _internal_set_ap_v_wheelbase_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_WHEELBASE_M)
}

// optional float AP_V_OVERHANG_REAR_M = 786;
inline bool Vehicle_Params::_internal_has_ap_v_overhang_rear_m() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_overhang_rear_m() const {
  return _internal_has_ap_v_overhang_rear_m();
}
inline void Vehicle_Params::clear_ap_v_overhang_rear_m() {
  ap_v_overhang_rear_m_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float Vehicle_Params::_internal_ap_v_overhang_rear_m() const {
  return ap_v_overhang_rear_m_;
}
inline float Vehicle_Params::ap_v_overhang_rear_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_OVERHANG_REAR_M)
  return _internal_ap_v_overhang_rear_m();
}
inline void Vehicle_Params::_internal_set_ap_v_overhang_rear_m(float value) {
  _has_bits_[0] |= 0x00000010u;
  ap_v_overhang_rear_m_ = value;
}
inline void Vehicle_Params::set_ap_v_overhang_rear_m(float value) {
  _internal_set_ap_v_overhang_rear_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_OVERHANG_REAR_M)
}

// optional float AP_V_LENGTH_M = 3529;
inline bool Vehicle_Params::_internal_has_ap_v_length_m() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_length_m() const {
  return _internal_has_ap_v_length_m();
}
inline void Vehicle_Params::clear_ap_v_length_m() {
  ap_v_length_m_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline float Vehicle_Params::_internal_ap_v_length_m() const {
  return ap_v_length_m_;
}
inline float Vehicle_Params::ap_v_length_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LENGTH_M)
  return _internal_ap_v_length_m();
}
inline void Vehicle_Params::_internal_set_ap_v_length_m(float value) {
  _has_bits_[0] |= 0x00020000u;
  ap_v_length_m_ = value;
}
inline void Vehicle_Params::set_ap_v_length_m(float value) {
  _internal_set_ap_v_length_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LENGTH_M)
}

// optional float AP_V_WIDTH_M = 1463;
inline bool Vehicle_Params::_internal_has_ap_v_width_m() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_width_m() const {
  return _internal_has_ap_v_width_m();
}
inline void Vehicle_Params::clear_ap_v_width_m() {
  ap_v_width_m_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float Vehicle_Params::_internal_ap_v_width_m() const {
  return ap_v_width_m_;
}
inline float Vehicle_Params::ap_v_width_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_WIDTH_M)
  return _internal_ap_v_width_m();
}
inline void Vehicle_Params::_internal_set_ap_v_width_m(float value) {
  _has_bits_[0] |= 0x00000040u;
  ap_v_width_m_ = value;
}
inline void Vehicle_Params::set_ap_v_width_m(float value) {
  _internal_set_ap_v_width_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_WIDTH_M)
}

// optional uint32 AP_V_WHEEL_NUMBER_OF_TEETH_NU = 440;
inline bool Vehicle_Params::_internal_has_ap_v_wheel_number_of_teeth_nu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_wheel_number_of_teeth_nu() const {
  return _internal_has_ap_v_wheel_number_of_teeth_nu();
}
inline void Vehicle_Params::clear_ap_v_wheel_number_of_teeth_nu() {
  ap_v_wheel_number_of_teeth_nu_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::_internal_ap_v_wheel_number_of_teeth_nu() const {
  return ap_v_wheel_number_of_teeth_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::ap_v_wheel_number_of_teeth_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_WHEEL_NUMBER_OF_TEETH_NU)
  return _internal_ap_v_wheel_number_of_teeth_nu();
}
inline void Vehicle_Params::_internal_set_ap_v_wheel_number_of_teeth_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  ap_v_wheel_number_of_teeth_nu_ = value;
}
inline void Vehicle_Params::set_ap_v_wheel_number_of_teeth_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_wheel_number_of_teeth_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_WHEEL_NUMBER_OF_TEETH_NU)
}

// optional float AP_V_TYRE_CIRCUMFERENCE_FRONT_M = 1586;
inline bool Vehicle_Params::_internal_has_ap_v_tyre_circumference_front_m() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_tyre_circumference_front_m() const {
  return _internal_has_ap_v_tyre_circumference_front_m();
}
inline void Vehicle_Params::clear_ap_v_tyre_circumference_front_m() {
  ap_v_tyre_circumference_front_m_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float Vehicle_Params::_internal_ap_v_tyre_circumference_front_m() const {
  return ap_v_tyre_circumference_front_m_;
}
inline float Vehicle_Params::ap_v_tyre_circumference_front_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_TYRE_CIRCUMFERENCE_FRONT_M)
  return _internal_ap_v_tyre_circumference_front_m();
}
inline void Vehicle_Params::_internal_set_ap_v_tyre_circumference_front_m(float value) {
  _has_bits_[0] |= 0x00000080u;
  ap_v_tyre_circumference_front_m_ = value;
}
inline void Vehicle_Params::set_ap_v_tyre_circumference_front_m(float value) {
  _internal_set_ap_v_tyre_circumference_front_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_TYRE_CIRCUMFERENCE_FRONT_M)
}

// optional float AP_V_TYRE_CIRCUMFERENCE_REAR_M = 3570;
inline bool Vehicle_Params::_internal_has_ap_v_tyre_circumference_rear_m() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_tyre_circumference_rear_m() const {
  return _internal_has_ap_v_tyre_circumference_rear_m();
}
inline void Vehicle_Params::clear_ap_v_tyre_circumference_rear_m() {
  ap_v_tyre_circumference_rear_m_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline float Vehicle_Params::_internal_ap_v_tyre_circumference_rear_m() const {
  return ap_v_tyre_circumference_rear_m_;
}
inline float Vehicle_Params::ap_v_tyre_circumference_rear_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_TYRE_CIRCUMFERENCE_REAR_M)
  return _internal_ap_v_tyre_circumference_rear_m();
}
inline void Vehicle_Params::_internal_set_ap_v_tyre_circumference_rear_m(float value) {
  _has_bits_[0] |= 0x00080000u;
  ap_v_tyre_circumference_rear_m_ = value;
}
inline void Vehicle_Params::set_ap_v_tyre_circumference_rear_m(float value) {
  _internal_set_ap_v_tyre_circumference_rear_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_TYRE_CIRCUMFERENCE_REAR_M)
}

// optional uint32 AP_V_NUM_STANDARD_SHAPE_PTS = 3477;
inline bool Vehicle_Params::_internal_has_ap_v_num_standard_shape_pts() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_num_standard_shape_pts() const {
  return _internal_has_ap_v_num_standard_shape_pts();
}
inline void Vehicle_Params::clear_ap_v_num_standard_shape_pts() {
  ap_v_num_standard_shape_pts_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::_internal_ap_v_num_standard_shape_pts() const {
  return ap_v_num_standard_shape_pts_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::ap_v_num_standard_shape_pts() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_NUM_STANDARD_SHAPE_PTS)
  return _internal_ap_v_num_standard_shape_pts();
}
inline void Vehicle_Params::_internal_set_ap_v_num_standard_shape_pts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  ap_v_num_standard_shape_pts_ = value;
}
inline void Vehicle_Params::set_ap_v_num_standard_shape_pts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_num_standard_shape_pts(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_NUM_STANDARD_SHAPE_PTS)
}

// repeated float AP_V_STANDARD_SHAPE_X_M = 2018;
inline int Vehicle_Params::_internal_ap_v_standard_shape_x_m_size() const {
  return ap_v_standard_shape_x_m_.size();
}
inline int Vehicle_Params::ap_v_standard_shape_x_m_size() const {
  return _internal_ap_v_standard_shape_x_m_size();
}
inline void Vehicle_Params::clear_ap_v_standard_shape_x_m() {
  ap_v_standard_shape_x_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_standard_shape_x_m(int index) const {
  return ap_v_standard_shape_x_m_.Get(index);
}
inline float Vehicle_Params::ap_v_standard_shape_x_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STANDARD_SHAPE_X_M)
  return _internal_ap_v_standard_shape_x_m(index);
}
inline void Vehicle_Params::set_ap_v_standard_shape_x_m(int index, float value) {
  ap_v_standard_shape_x_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STANDARD_SHAPE_X_M)
}
inline void Vehicle_Params::_internal_add_ap_v_standard_shape_x_m(float value) {
  ap_v_standard_shape_x_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_standard_shape_x_m(float value) {
  _internal_add_ap_v_standard_shape_x_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STANDARD_SHAPE_X_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_standard_shape_x_m() const {
  return ap_v_standard_shape_x_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_standard_shape_x_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STANDARD_SHAPE_X_M)
  return _internal_ap_v_standard_shape_x_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_standard_shape_x_m() {
  return &ap_v_standard_shape_x_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_standard_shape_x_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STANDARD_SHAPE_X_M)
  return _internal_mutable_ap_v_standard_shape_x_m();
}

// repeated float AP_V_STANDARD_SHAPE_Y_M = 210;
inline int Vehicle_Params::_internal_ap_v_standard_shape_y_m_size() const {
  return ap_v_standard_shape_y_m_.size();
}
inline int Vehicle_Params::ap_v_standard_shape_y_m_size() const {
  return _internal_ap_v_standard_shape_y_m_size();
}
inline void Vehicle_Params::clear_ap_v_standard_shape_y_m() {
  ap_v_standard_shape_y_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_standard_shape_y_m(int index) const {
  return ap_v_standard_shape_y_m_.Get(index);
}
inline float Vehicle_Params::ap_v_standard_shape_y_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STANDARD_SHAPE_Y_M)
  return _internal_ap_v_standard_shape_y_m(index);
}
inline void Vehicle_Params::set_ap_v_standard_shape_y_m(int index, float value) {
  ap_v_standard_shape_y_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STANDARD_SHAPE_Y_M)
}
inline void Vehicle_Params::_internal_add_ap_v_standard_shape_y_m(float value) {
  ap_v_standard_shape_y_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_standard_shape_y_m(float value) {
  _internal_add_ap_v_standard_shape_y_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STANDARD_SHAPE_Y_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_standard_shape_y_m() const {
  return ap_v_standard_shape_y_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_standard_shape_y_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STANDARD_SHAPE_Y_M)
  return _internal_ap_v_standard_shape_y_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_standard_shape_y_m() {
  return &ap_v_standard_shape_y_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_standard_shape_y_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STANDARD_SHAPE_Y_M)
  return _internal_mutable_ap_v_standard_shape_y_m();
}

// optional uint32 AP_V_NUM_BOUNDING_PTS = 2644;
inline bool Vehicle_Params::_internal_has_ap_v_num_bounding_pts() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_num_bounding_pts() const {
  return _internal_has_ap_v_num_bounding_pts();
}
inline void Vehicle_Params::clear_ap_v_num_bounding_pts() {
  ap_v_num_bounding_pts_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::_internal_ap_v_num_bounding_pts() const {
  return ap_v_num_bounding_pts_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::ap_v_num_bounding_pts() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_NUM_BOUNDING_PTS)
  return _internal_ap_v_num_bounding_pts();
}
inline void Vehicle_Params::_internal_set_ap_v_num_bounding_pts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  ap_v_num_bounding_pts_ = value;
}
inline void Vehicle_Params::set_ap_v_num_bounding_pts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_num_bounding_pts(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_NUM_BOUNDING_PTS)
}

// repeated float AP_V_BOUNDINGBOX_X_M = 1071;
inline int Vehicle_Params::_internal_ap_v_boundingbox_x_m_size() const {
  return ap_v_boundingbox_x_m_.size();
}
inline int Vehicle_Params::ap_v_boundingbox_x_m_size() const {
  return _internal_ap_v_boundingbox_x_m_size();
}
inline void Vehicle_Params::clear_ap_v_boundingbox_x_m() {
  ap_v_boundingbox_x_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_boundingbox_x_m(int index) const {
  return ap_v_boundingbox_x_m_.Get(index);
}
inline float Vehicle_Params::ap_v_boundingbox_x_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_BOUNDINGBOX_X_M)
  return _internal_ap_v_boundingbox_x_m(index);
}
inline void Vehicle_Params::set_ap_v_boundingbox_x_m(int index, float value) {
  ap_v_boundingbox_x_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_BOUNDINGBOX_X_M)
}
inline void Vehicle_Params::_internal_add_ap_v_boundingbox_x_m(float value) {
  ap_v_boundingbox_x_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_boundingbox_x_m(float value) {
  _internal_add_ap_v_boundingbox_x_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_BOUNDINGBOX_X_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_boundingbox_x_m() const {
  return ap_v_boundingbox_x_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_boundingbox_x_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_BOUNDINGBOX_X_M)
  return _internal_ap_v_boundingbox_x_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_boundingbox_x_m() {
  return &ap_v_boundingbox_x_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_boundingbox_x_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_BOUNDINGBOX_X_M)
  return _internal_mutable_ap_v_boundingbox_x_m();
}

// repeated float AP_V_BOUNDINGBOX_Y_M = 799;
inline int Vehicle_Params::_internal_ap_v_boundingbox_y_m_size() const {
  return ap_v_boundingbox_y_m_.size();
}
inline int Vehicle_Params::ap_v_boundingbox_y_m_size() const {
  return _internal_ap_v_boundingbox_y_m_size();
}
inline void Vehicle_Params::clear_ap_v_boundingbox_y_m() {
  ap_v_boundingbox_y_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_boundingbox_y_m(int index) const {
  return ap_v_boundingbox_y_m_.Get(index);
}
inline float Vehicle_Params::ap_v_boundingbox_y_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_BOUNDINGBOX_Y_M)
  return _internal_ap_v_boundingbox_y_m(index);
}
inline void Vehicle_Params::set_ap_v_boundingbox_y_m(int index, float value) {
  ap_v_boundingbox_y_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_BOUNDINGBOX_Y_M)
}
inline void Vehicle_Params::_internal_add_ap_v_boundingbox_y_m(float value) {
  ap_v_boundingbox_y_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_boundingbox_y_m(float value) {
  _internal_add_ap_v_boundingbox_y_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_BOUNDINGBOX_Y_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_boundingbox_y_m() const {
  return ap_v_boundingbox_y_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_boundingbox_y_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_BOUNDINGBOX_Y_M)
  return _internal_ap_v_boundingbox_y_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_boundingbox_y_m() {
  return &ap_v_boundingbox_y_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_boundingbox_y_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_BOUNDINGBOX_Y_M)
  return _internal_mutable_ap_v_boundingbox_y_m();
}

// optional float AP_V_TRACK_FRONT_M = 2405;
inline bool Vehicle_Params::_internal_has_ap_v_track_front_m() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_track_front_m() const {
  return _internal_has_ap_v_track_front_m();
}
inline void Vehicle_Params::clear_ap_v_track_front_m() {
  ap_v_track_front_m_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline float Vehicle_Params::_internal_ap_v_track_front_m() const {
  return ap_v_track_front_m_;
}
inline float Vehicle_Params::ap_v_track_front_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_TRACK_FRONT_M)
  return _internal_ap_v_track_front_m();
}
inline void Vehicle_Params::_internal_set_ap_v_track_front_m(float value) {
  _has_bits_[0] |= 0x00000800u;
  ap_v_track_front_m_ = value;
}
inline void Vehicle_Params::set_ap_v_track_front_m(float value) {
  _internal_set_ap_v_track_front_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_TRACK_FRONT_M)
}

// optional float AP_V_TRACK_REAR_M = 299;
inline bool Vehicle_Params::_internal_has_ap_v_track_rear_m() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_track_rear_m() const {
  return _internal_has_ap_v_track_rear_m();
}
inline void Vehicle_Params::clear_ap_v_track_rear_m() {
  ap_v_track_rear_m_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float Vehicle_Params::_internal_ap_v_track_rear_m() const {
  return ap_v_track_rear_m_;
}
inline float Vehicle_Params::ap_v_track_rear_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_TRACK_REAR_M)
  return _internal_ap_v_track_rear_m();
}
inline void Vehicle_Params::_internal_set_ap_v_track_rear_m(float value) {
  _has_bits_[0] |= 0x00000002u;
  ap_v_track_rear_m_ = value;
}
inline void Vehicle_Params::set_ap_v_track_rear_m(float value) {
  _internal_set_ap_v_track_rear_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_TRACK_REAR_M)
}

// optional uint32 AP_V_MIRROR_SHAPE_SIZE_NU = 3546;
inline bool Vehicle_Params::_internal_has_ap_v_mirror_shape_size_nu() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_mirror_shape_size_nu() const {
  return _internal_has_ap_v_mirror_shape_size_nu();
}
inline void Vehicle_Params::clear_ap_v_mirror_shape_size_nu() {
  ap_v_mirror_shape_size_nu_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::_internal_ap_v_mirror_shape_size_nu() const {
  return ap_v_mirror_shape_size_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::ap_v_mirror_shape_size_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_MIRROR_SHAPE_SIZE_NU)
  return _internal_ap_v_mirror_shape_size_nu();
}
inline void Vehicle_Params::_internal_set_ap_v_mirror_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  ap_v_mirror_shape_size_nu_ = value;
}
inline void Vehicle_Params::set_ap_v_mirror_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_mirror_shape_size_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_MIRROR_SHAPE_SIZE_NU)
}

// optional uint32 AP_V_HITCH_SHAPE_SIZE_NU = 3596;
inline bool Vehicle_Params::_internal_has_ap_v_hitch_shape_size_nu() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_hitch_shape_size_nu() const {
  return _internal_has_ap_v_hitch_shape_size_nu();
}
inline void Vehicle_Params::clear_ap_v_hitch_shape_size_nu() {
  ap_v_hitch_shape_size_nu_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::_internal_ap_v_hitch_shape_size_nu() const {
  return ap_v_hitch_shape_size_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::ap_v_hitch_shape_size_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_SIZE_NU)
  return _internal_ap_v_hitch_shape_size_nu();
}
inline void Vehicle_Params::_internal_set_ap_v_hitch_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  ap_v_hitch_shape_size_nu_ = value;
}
inline void Vehicle_Params::set_ap_v_hitch_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_hitch_shape_size_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_SIZE_NU)
}

// optional uint32 AP_V_WHEEL_SHAPE_SIZE_NU = 427;
inline bool Vehicle_Params::_internal_has_ap_v_wheel_shape_size_nu() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_wheel_shape_size_nu() const {
  return _internal_has_ap_v_wheel_shape_size_nu();
}
inline void Vehicle_Params::clear_ap_v_wheel_shape_size_nu() {
  ap_v_wheel_shape_size_nu_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::_internal_ap_v_wheel_shape_size_nu() const {
  return ap_v_wheel_shape_size_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Vehicle_Params::ap_v_wheel_shape_size_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_WHEEL_SHAPE_SIZE_NU)
  return _internal_ap_v_wheel_shape_size_nu();
}
inline void Vehicle_Params::_internal_set_ap_v_wheel_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  ap_v_wheel_shape_size_nu_ = value;
}
inline void Vehicle_Params::set_ap_v_wheel_shape_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_wheel_shape_size_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_WHEEL_SHAPE_SIZE_NU)
}

// repeated float AP_V_LEFT_MIRROR_SHAPE_X_M = 3808;
inline int Vehicle_Params::_internal_ap_v_left_mirror_shape_x_m_size() const {
  return ap_v_left_mirror_shape_x_m_.size();
}
inline int Vehicle_Params::ap_v_left_mirror_shape_x_m_size() const {
  return _internal_ap_v_left_mirror_shape_x_m_size();
}
inline void Vehicle_Params::clear_ap_v_left_mirror_shape_x_m() {
  ap_v_left_mirror_shape_x_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_left_mirror_shape_x_m(int index) const {
  return ap_v_left_mirror_shape_x_m_.Get(index);
}
inline float Vehicle_Params::ap_v_left_mirror_shape_x_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LEFT_MIRROR_SHAPE_X_M)
  return _internal_ap_v_left_mirror_shape_x_m(index);
}
inline void Vehicle_Params::set_ap_v_left_mirror_shape_x_m(int index, float value) {
  ap_v_left_mirror_shape_x_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LEFT_MIRROR_SHAPE_X_M)
}
inline void Vehicle_Params::_internal_add_ap_v_left_mirror_shape_x_m(float value) {
  ap_v_left_mirror_shape_x_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_left_mirror_shape_x_m(float value) {
  _internal_add_ap_v_left_mirror_shape_x_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LEFT_MIRROR_SHAPE_X_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_left_mirror_shape_x_m() const {
  return ap_v_left_mirror_shape_x_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_left_mirror_shape_x_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LEFT_MIRROR_SHAPE_X_M)
  return _internal_ap_v_left_mirror_shape_x_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_left_mirror_shape_x_m() {
  return &ap_v_left_mirror_shape_x_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_left_mirror_shape_x_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LEFT_MIRROR_SHAPE_X_M)
  return _internal_mutable_ap_v_left_mirror_shape_x_m();
}

// repeated float AP_V_LEFT_MIRROR_SHAPE_Y_M = 2512;
inline int Vehicle_Params::_internal_ap_v_left_mirror_shape_y_m_size() const {
  return ap_v_left_mirror_shape_y_m_.size();
}
inline int Vehicle_Params::ap_v_left_mirror_shape_y_m_size() const {
  return _internal_ap_v_left_mirror_shape_y_m_size();
}
inline void Vehicle_Params::clear_ap_v_left_mirror_shape_y_m() {
  ap_v_left_mirror_shape_y_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_left_mirror_shape_y_m(int index) const {
  return ap_v_left_mirror_shape_y_m_.Get(index);
}
inline float Vehicle_Params::ap_v_left_mirror_shape_y_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LEFT_MIRROR_SHAPE_Y_M)
  return _internal_ap_v_left_mirror_shape_y_m(index);
}
inline void Vehicle_Params::set_ap_v_left_mirror_shape_y_m(int index, float value) {
  ap_v_left_mirror_shape_y_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LEFT_MIRROR_SHAPE_Y_M)
}
inline void Vehicle_Params::_internal_add_ap_v_left_mirror_shape_y_m(float value) {
  ap_v_left_mirror_shape_y_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_left_mirror_shape_y_m(float value) {
  _internal_add_ap_v_left_mirror_shape_y_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LEFT_MIRROR_SHAPE_Y_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_left_mirror_shape_y_m() const {
  return ap_v_left_mirror_shape_y_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_left_mirror_shape_y_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LEFT_MIRROR_SHAPE_Y_M)
  return _internal_ap_v_left_mirror_shape_y_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_left_mirror_shape_y_m() {
  return &ap_v_left_mirror_shape_y_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_left_mirror_shape_y_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_LEFT_MIRROR_SHAPE_Y_M)
  return _internal_mutable_ap_v_left_mirror_shape_y_m();
}

// repeated float AP_V_RIGHT_MIRROR_SHAPE_X_M = 1689;
inline int Vehicle_Params::_internal_ap_v_right_mirror_shape_x_m_size() const {
  return ap_v_right_mirror_shape_x_m_.size();
}
inline int Vehicle_Params::ap_v_right_mirror_shape_x_m_size() const {
  return _internal_ap_v_right_mirror_shape_x_m_size();
}
inline void Vehicle_Params::clear_ap_v_right_mirror_shape_x_m() {
  ap_v_right_mirror_shape_x_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_right_mirror_shape_x_m(int index) const {
  return ap_v_right_mirror_shape_x_m_.Get(index);
}
inline float Vehicle_Params::ap_v_right_mirror_shape_x_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RIGHT_MIRROR_SHAPE_X_M)
  return _internal_ap_v_right_mirror_shape_x_m(index);
}
inline void Vehicle_Params::set_ap_v_right_mirror_shape_x_m(int index, float value) {
  ap_v_right_mirror_shape_x_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RIGHT_MIRROR_SHAPE_X_M)
}
inline void Vehicle_Params::_internal_add_ap_v_right_mirror_shape_x_m(float value) {
  ap_v_right_mirror_shape_x_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_right_mirror_shape_x_m(float value) {
  _internal_add_ap_v_right_mirror_shape_x_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RIGHT_MIRROR_SHAPE_X_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_right_mirror_shape_x_m() const {
  return ap_v_right_mirror_shape_x_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_right_mirror_shape_x_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RIGHT_MIRROR_SHAPE_X_M)
  return _internal_ap_v_right_mirror_shape_x_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_right_mirror_shape_x_m() {
  return &ap_v_right_mirror_shape_x_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_right_mirror_shape_x_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RIGHT_MIRROR_SHAPE_X_M)
  return _internal_mutable_ap_v_right_mirror_shape_x_m();
}

// repeated float AP_V_RIGHT_MIRROR_SHAPE_Y_M = 425;
inline int Vehicle_Params::_internal_ap_v_right_mirror_shape_y_m_size() const {
  return ap_v_right_mirror_shape_y_m_.size();
}
inline int Vehicle_Params::ap_v_right_mirror_shape_y_m_size() const {
  return _internal_ap_v_right_mirror_shape_y_m_size();
}
inline void Vehicle_Params::clear_ap_v_right_mirror_shape_y_m() {
  ap_v_right_mirror_shape_y_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_right_mirror_shape_y_m(int index) const {
  return ap_v_right_mirror_shape_y_m_.Get(index);
}
inline float Vehicle_Params::ap_v_right_mirror_shape_y_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RIGHT_MIRROR_SHAPE_Y_M)
  return _internal_ap_v_right_mirror_shape_y_m(index);
}
inline void Vehicle_Params::set_ap_v_right_mirror_shape_y_m(int index, float value) {
  ap_v_right_mirror_shape_y_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RIGHT_MIRROR_SHAPE_Y_M)
}
inline void Vehicle_Params::_internal_add_ap_v_right_mirror_shape_y_m(float value) {
  ap_v_right_mirror_shape_y_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_right_mirror_shape_y_m(float value) {
  _internal_add_ap_v_right_mirror_shape_y_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RIGHT_MIRROR_SHAPE_Y_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_right_mirror_shape_y_m() const {
  return ap_v_right_mirror_shape_y_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_right_mirror_shape_y_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RIGHT_MIRROR_SHAPE_Y_M)
  return _internal_ap_v_right_mirror_shape_y_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_right_mirror_shape_y_m() {
  return &ap_v_right_mirror_shape_y_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_right_mirror_shape_y_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RIGHT_MIRROR_SHAPE_Y_M)
  return _internal_mutable_ap_v_right_mirror_shape_y_m();
}

// repeated float AP_V_HITCH_SHAPE_X_M = 1908;
inline int Vehicle_Params::_internal_ap_v_hitch_shape_x_m_size() const {
  return ap_v_hitch_shape_x_m_.size();
}
inline int Vehicle_Params::ap_v_hitch_shape_x_m_size() const {
  return _internal_ap_v_hitch_shape_x_m_size();
}
inline void Vehicle_Params::clear_ap_v_hitch_shape_x_m() {
  ap_v_hitch_shape_x_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_hitch_shape_x_m(int index) const {
  return ap_v_hitch_shape_x_m_.Get(index);
}
inline float Vehicle_Params::ap_v_hitch_shape_x_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_X_M)
  return _internal_ap_v_hitch_shape_x_m(index);
}
inline void Vehicle_Params::set_ap_v_hitch_shape_x_m(int index, float value) {
  ap_v_hitch_shape_x_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_X_M)
}
inline void Vehicle_Params::_internal_add_ap_v_hitch_shape_x_m(float value) {
  ap_v_hitch_shape_x_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_hitch_shape_x_m(float value) {
  _internal_add_ap_v_hitch_shape_x_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_X_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_hitch_shape_x_m() const {
  return ap_v_hitch_shape_x_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_hitch_shape_x_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_X_M)
  return _internal_ap_v_hitch_shape_x_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_hitch_shape_x_m() {
  return &ap_v_hitch_shape_x_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_hitch_shape_x_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_X_M)
  return _internal_mutable_ap_v_hitch_shape_x_m();
}

// repeated float AP_V_HITCH_SHAPE_Y_M = 68;
inline int Vehicle_Params::_internal_ap_v_hitch_shape_y_m_size() const {
  return ap_v_hitch_shape_y_m_.size();
}
inline int Vehicle_Params::ap_v_hitch_shape_y_m_size() const {
  return _internal_ap_v_hitch_shape_y_m_size();
}
inline void Vehicle_Params::clear_ap_v_hitch_shape_y_m() {
  ap_v_hitch_shape_y_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_hitch_shape_y_m(int index) const {
  return ap_v_hitch_shape_y_m_.Get(index);
}
inline float Vehicle_Params::ap_v_hitch_shape_y_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_Y_M)
  return _internal_ap_v_hitch_shape_y_m(index);
}
inline void Vehicle_Params::set_ap_v_hitch_shape_y_m(int index, float value) {
  ap_v_hitch_shape_y_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_Y_M)
}
inline void Vehicle_Params::_internal_add_ap_v_hitch_shape_y_m(float value) {
  ap_v_hitch_shape_y_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_hitch_shape_y_m(float value) {
  _internal_add_ap_v_hitch_shape_y_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_Y_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_hitch_shape_y_m() const {
  return ap_v_hitch_shape_y_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_hitch_shape_y_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_Y_M)
  return _internal_ap_v_hitch_shape_y_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_hitch_shape_y_m() {
  return &ap_v_hitch_shape_y_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_hitch_shape_y_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_HITCH_SHAPE_Y_M)
  return _internal_mutable_ap_v_hitch_shape_y_m();
}

// repeated float AP_V_FL_WHEEL_SHAPE_X_M = 1899;
inline int Vehicle_Params::_internal_ap_v_fl_wheel_shape_x_m_size() const {
  return ap_v_fl_wheel_shape_x_m_.size();
}
inline int Vehicle_Params::ap_v_fl_wheel_shape_x_m_size() const {
  return _internal_ap_v_fl_wheel_shape_x_m_size();
}
inline void Vehicle_Params::clear_ap_v_fl_wheel_shape_x_m() {
  ap_v_fl_wheel_shape_x_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_fl_wheel_shape_x_m(int index) const {
  return ap_v_fl_wheel_shape_x_m_.Get(index);
}
inline float Vehicle_Params::ap_v_fl_wheel_shape_x_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FL_WHEEL_SHAPE_X_M)
  return _internal_ap_v_fl_wheel_shape_x_m(index);
}
inline void Vehicle_Params::set_ap_v_fl_wheel_shape_x_m(int index, float value) {
  ap_v_fl_wheel_shape_x_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FL_WHEEL_SHAPE_X_M)
}
inline void Vehicle_Params::_internal_add_ap_v_fl_wheel_shape_x_m(float value) {
  ap_v_fl_wheel_shape_x_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_fl_wheel_shape_x_m(float value) {
  _internal_add_ap_v_fl_wheel_shape_x_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FL_WHEEL_SHAPE_X_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_fl_wheel_shape_x_m() const {
  return ap_v_fl_wheel_shape_x_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_fl_wheel_shape_x_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FL_WHEEL_SHAPE_X_M)
  return _internal_ap_v_fl_wheel_shape_x_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_fl_wheel_shape_x_m() {
  return &ap_v_fl_wheel_shape_x_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_fl_wheel_shape_x_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FL_WHEEL_SHAPE_X_M)
  return _internal_mutable_ap_v_fl_wheel_shape_x_m();
}

// repeated float AP_V_FL_WHEEL_SHAPE_Y_M = 91;
inline int Vehicle_Params::_internal_ap_v_fl_wheel_shape_y_m_size() const {
  return ap_v_fl_wheel_shape_y_m_.size();
}
inline int Vehicle_Params::ap_v_fl_wheel_shape_y_m_size() const {
  return _internal_ap_v_fl_wheel_shape_y_m_size();
}
inline void Vehicle_Params::clear_ap_v_fl_wheel_shape_y_m() {
  ap_v_fl_wheel_shape_y_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_fl_wheel_shape_y_m(int index) const {
  return ap_v_fl_wheel_shape_y_m_.Get(index);
}
inline float Vehicle_Params::ap_v_fl_wheel_shape_y_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FL_WHEEL_SHAPE_Y_M)
  return _internal_ap_v_fl_wheel_shape_y_m(index);
}
inline void Vehicle_Params::set_ap_v_fl_wheel_shape_y_m(int index, float value) {
  ap_v_fl_wheel_shape_y_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FL_WHEEL_SHAPE_Y_M)
}
inline void Vehicle_Params::_internal_add_ap_v_fl_wheel_shape_y_m(float value) {
  ap_v_fl_wheel_shape_y_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_fl_wheel_shape_y_m(float value) {
  _internal_add_ap_v_fl_wheel_shape_y_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FL_WHEEL_SHAPE_Y_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_fl_wheel_shape_y_m() const {
  return ap_v_fl_wheel_shape_y_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_fl_wheel_shape_y_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FL_WHEEL_SHAPE_Y_M)
  return _internal_ap_v_fl_wheel_shape_y_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_fl_wheel_shape_y_m() {
  return &ap_v_fl_wheel_shape_y_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_fl_wheel_shape_y_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FL_WHEEL_SHAPE_Y_M)
  return _internal_mutable_ap_v_fl_wheel_shape_y_m();
}

// repeated float AP_V_RL_WHEEL_SHAPE_X_M = 1331;
inline int Vehicle_Params::_internal_ap_v_rl_wheel_shape_x_m_size() const {
  return ap_v_rl_wheel_shape_x_m_.size();
}
inline int Vehicle_Params::ap_v_rl_wheel_shape_x_m_size() const {
  return _internal_ap_v_rl_wheel_shape_x_m_size();
}
inline void Vehicle_Params::clear_ap_v_rl_wheel_shape_x_m() {
  ap_v_rl_wheel_shape_x_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_rl_wheel_shape_x_m(int index) const {
  return ap_v_rl_wheel_shape_x_m_.Get(index);
}
inline float Vehicle_Params::ap_v_rl_wheel_shape_x_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RL_WHEEL_SHAPE_X_M)
  return _internal_ap_v_rl_wheel_shape_x_m(index);
}
inline void Vehicle_Params::set_ap_v_rl_wheel_shape_x_m(int index, float value) {
  ap_v_rl_wheel_shape_x_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RL_WHEEL_SHAPE_X_M)
}
inline void Vehicle_Params::_internal_add_ap_v_rl_wheel_shape_x_m(float value) {
  ap_v_rl_wheel_shape_x_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_rl_wheel_shape_x_m(float value) {
  _internal_add_ap_v_rl_wheel_shape_x_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RL_WHEEL_SHAPE_X_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_rl_wheel_shape_x_m() const {
  return ap_v_rl_wheel_shape_x_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_rl_wheel_shape_x_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RL_WHEEL_SHAPE_X_M)
  return _internal_ap_v_rl_wheel_shape_x_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_rl_wheel_shape_x_m() {
  return &ap_v_rl_wheel_shape_x_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_rl_wheel_shape_x_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RL_WHEEL_SHAPE_X_M)
  return _internal_mutable_ap_v_rl_wheel_shape_x_m();
}

// repeated float AP_V_RL_WHEEL_SHAPE_Y_M = 515;
inline int Vehicle_Params::_internal_ap_v_rl_wheel_shape_y_m_size() const {
  return ap_v_rl_wheel_shape_y_m_.size();
}
inline int Vehicle_Params::ap_v_rl_wheel_shape_y_m_size() const {
  return _internal_ap_v_rl_wheel_shape_y_m_size();
}
inline void Vehicle_Params::clear_ap_v_rl_wheel_shape_y_m() {
  ap_v_rl_wheel_shape_y_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_rl_wheel_shape_y_m(int index) const {
  return ap_v_rl_wheel_shape_y_m_.Get(index);
}
inline float Vehicle_Params::ap_v_rl_wheel_shape_y_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RL_WHEEL_SHAPE_Y_M)
  return _internal_ap_v_rl_wheel_shape_y_m(index);
}
inline void Vehicle_Params::set_ap_v_rl_wheel_shape_y_m(int index, float value) {
  ap_v_rl_wheel_shape_y_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RL_WHEEL_SHAPE_Y_M)
}
inline void Vehicle_Params::_internal_add_ap_v_rl_wheel_shape_y_m(float value) {
  ap_v_rl_wheel_shape_y_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_rl_wheel_shape_y_m(float value) {
  _internal_add_ap_v_rl_wheel_shape_y_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RL_WHEEL_SHAPE_Y_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_rl_wheel_shape_y_m() const {
  return ap_v_rl_wheel_shape_y_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_rl_wheel_shape_y_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RL_WHEEL_SHAPE_Y_M)
  return _internal_ap_v_rl_wheel_shape_y_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_rl_wheel_shape_y_m() {
  return &ap_v_rl_wheel_shape_y_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_rl_wheel_shape_y_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RL_WHEEL_SHAPE_Y_M)
  return _internal_mutable_ap_v_rl_wheel_shape_y_m();
}

// repeated float AP_V_RR_WHEEL_SHAPE_X_M = 3694;
inline int Vehicle_Params::_internal_ap_v_rr_wheel_shape_x_m_size() const {
  return ap_v_rr_wheel_shape_x_m_.size();
}
inline int Vehicle_Params::ap_v_rr_wheel_shape_x_m_size() const {
  return _internal_ap_v_rr_wheel_shape_x_m_size();
}
inline void Vehicle_Params::clear_ap_v_rr_wheel_shape_x_m() {
  ap_v_rr_wheel_shape_x_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_rr_wheel_shape_x_m(int index) const {
  return ap_v_rr_wheel_shape_x_m_.Get(index);
}
inline float Vehicle_Params::ap_v_rr_wheel_shape_x_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RR_WHEEL_SHAPE_X_M)
  return _internal_ap_v_rr_wheel_shape_x_m(index);
}
inline void Vehicle_Params::set_ap_v_rr_wheel_shape_x_m(int index, float value) {
  ap_v_rr_wheel_shape_x_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RR_WHEEL_SHAPE_X_M)
}
inline void Vehicle_Params::_internal_add_ap_v_rr_wheel_shape_x_m(float value) {
  ap_v_rr_wheel_shape_x_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_rr_wheel_shape_x_m(float value) {
  _internal_add_ap_v_rr_wheel_shape_x_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RR_WHEEL_SHAPE_X_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_rr_wheel_shape_x_m() const {
  return ap_v_rr_wheel_shape_x_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_rr_wheel_shape_x_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RR_WHEEL_SHAPE_X_M)
  return _internal_ap_v_rr_wheel_shape_x_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_rr_wheel_shape_x_m() {
  return &ap_v_rr_wheel_shape_x_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_rr_wheel_shape_x_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RR_WHEEL_SHAPE_X_M)
  return _internal_mutable_ap_v_rr_wheel_shape_x_m();
}

// repeated float AP_V_RR_WHEEL_SHAPE_Y_M = 2398;
inline int Vehicle_Params::_internal_ap_v_rr_wheel_shape_y_m_size() const {
  return ap_v_rr_wheel_shape_y_m_.size();
}
inline int Vehicle_Params::ap_v_rr_wheel_shape_y_m_size() const {
  return _internal_ap_v_rr_wheel_shape_y_m_size();
}
inline void Vehicle_Params::clear_ap_v_rr_wheel_shape_y_m() {
  ap_v_rr_wheel_shape_y_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_rr_wheel_shape_y_m(int index) const {
  return ap_v_rr_wheel_shape_y_m_.Get(index);
}
inline float Vehicle_Params::ap_v_rr_wheel_shape_y_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RR_WHEEL_SHAPE_Y_M)
  return _internal_ap_v_rr_wheel_shape_y_m(index);
}
inline void Vehicle_Params::set_ap_v_rr_wheel_shape_y_m(int index, float value) {
  ap_v_rr_wheel_shape_y_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RR_WHEEL_SHAPE_Y_M)
}
inline void Vehicle_Params::_internal_add_ap_v_rr_wheel_shape_y_m(float value) {
  ap_v_rr_wheel_shape_y_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_rr_wheel_shape_y_m(float value) {
  _internal_add_ap_v_rr_wheel_shape_y_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RR_WHEEL_SHAPE_Y_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_rr_wheel_shape_y_m() const {
  return ap_v_rr_wheel_shape_y_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_rr_wheel_shape_y_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RR_WHEEL_SHAPE_Y_M)
  return _internal_ap_v_rr_wheel_shape_y_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_rr_wheel_shape_y_m() {
  return &ap_v_rr_wheel_shape_y_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_rr_wheel_shape_y_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_RR_WHEEL_SHAPE_Y_M)
  return _internal_mutable_ap_v_rr_wheel_shape_y_m();
}

// repeated float AP_V_FR_WHEEL_SHAPE_X_M = 3126;
inline int Vehicle_Params::_internal_ap_v_fr_wheel_shape_x_m_size() const {
  return ap_v_fr_wheel_shape_x_m_.size();
}
inline int Vehicle_Params::ap_v_fr_wheel_shape_x_m_size() const {
  return _internal_ap_v_fr_wheel_shape_x_m_size();
}
inline void Vehicle_Params::clear_ap_v_fr_wheel_shape_x_m() {
  ap_v_fr_wheel_shape_x_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_fr_wheel_shape_x_m(int index) const {
  return ap_v_fr_wheel_shape_x_m_.Get(index);
}
inline float Vehicle_Params::ap_v_fr_wheel_shape_x_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FR_WHEEL_SHAPE_X_M)
  return _internal_ap_v_fr_wheel_shape_x_m(index);
}
inline void Vehicle_Params::set_ap_v_fr_wheel_shape_x_m(int index, float value) {
  ap_v_fr_wheel_shape_x_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FR_WHEEL_SHAPE_X_M)
}
inline void Vehicle_Params::_internal_add_ap_v_fr_wheel_shape_x_m(float value) {
  ap_v_fr_wheel_shape_x_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_fr_wheel_shape_x_m(float value) {
  _internal_add_ap_v_fr_wheel_shape_x_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FR_WHEEL_SHAPE_X_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_fr_wheel_shape_x_m() const {
  return ap_v_fr_wheel_shape_x_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_fr_wheel_shape_x_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FR_WHEEL_SHAPE_X_M)
  return _internal_ap_v_fr_wheel_shape_x_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_fr_wheel_shape_x_m() {
  return &ap_v_fr_wheel_shape_x_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_fr_wheel_shape_x_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FR_WHEEL_SHAPE_X_M)
  return _internal_mutable_ap_v_fr_wheel_shape_x_m();
}

// repeated float AP_V_FR_WHEEL_SHAPE_Y_M = 2822;
inline int Vehicle_Params::_internal_ap_v_fr_wheel_shape_y_m_size() const {
  return ap_v_fr_wheel_shape_y_m_.size();
}
inline int Vehicle_Params::ap_v_fr_wheel_shape_y_m_size() const {
  return _internal_ap_v_fr_wheel_shape_y_m_size();
}
inline void Vehicle_Params::clear_ap_v_fr_wheel_shape_y_m() {
  ap_v_fr_wheel_shape_y_m_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_fr_wheel_shape_y_m(int index) const {
  return ap_v_fr_wheel_shape_y_m_.Get(index);
}
inline float Vehicle_Params::ap_v_fr_wheel_shape_y_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FR_WHEEL_SHAPE_Y_M)
  return _internal_ap_v_fr_wheel_shape_y_m(index);
}
inline void Vehicle_Params::set_ap_v_fr_wheel_shape_y_m(int index, float value) {
  ap_v_fr_wheel_shape_y_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FR_WHEEL_SHAPE_Y_M)
}
inline void Vehicle_Params::_internal_add_ap_v_fr_wheel_shape_y_m(float value) {
  ap_v_fr_wheel_shape_y_m_.Add(value);
}
inline void Vehicle_Params::add_ap_v_fr_wheel_shape_y_m(float value) {
  _internal_add_ap_v_fr_wheel_shape_y_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FR_WHEEL_SHAPE_Y_M)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_fr_wheel_shape_y_m() const {
  return ap_v_fr_wheel_shape_y_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_fr_wheel_shape_y_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FR_WHEEL_SHAPE_Y_M)
  return _internal_ap_v_fr_wheel_shape_y_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_fr_wheel_shape_y_m() {
  return &ap_v_fr_wheel_shape_y_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_fr_wheel_shape_y_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_FR_WHEEL_SHAPE_Y_M)
  return _internal_mutable_ap_v_fr_wheel_shape_y_m();
}

// optional float AP_V_MAX_STEER_ANG_VEL_RADPS = 2299;
inline bool Vehicle_Params::_internal_has_ap_v_max_steer_ang_vel_radps() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_max_steer_ang_vel_radps() const {
  return _internal_has_ap_v_max_steer_ang_vel_radps();
}
inline void Vehicle_Params::clear_ap_v_max_steer_ang_vel_radps() {
  ap_v_max_steer_ang_vel_radps_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline float Vehicle_Params::_internal_ap_v_max_steer_ang_vel_radps() const {
  return ap_v_max_steer_ang_vel_radps_;
}
inline float Vehicle_Params::ap_v_max_steer_ang_vel_radps() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_MAX_STEER_ANG_VEL_RADPS)
  return _internal_ap_v_max_steer_ang_vel_radps();
}
inline void Vehicle_Params::_internal_set_ap_v_max_steer_ang_vel_radps(float value) {
  _has_bits_[0] |= 0x00000400u;
  ap_v_max_steer_ang_vel_radps_ = value;
}
inline void Vehicle_Params::set_ap_v_max_steer_ang_vel_radps(float value) {
  _internal_set_ap_v_max_steer_ang_vel_radps(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_MAX_STEER_ANG_VEL_RADPS)
}

// optional float AP_V_COMF_STEER_ANG_VEL_RADPS = 2964;
inline bool Vehicle_Params::_internal_has_ap_v_comf_steer_ang_vel_radps() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_comf_steer_ang_vel_radps() const {
  return _internal_has_ap_v_comf_steer_ang_vel_radps();
}
inline void Vehicle_Params::clear_ap_v_comf_steer_ang_vel_radps() {
  ap_v_comf_steer_ang_vel_radps_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline float Vehicle_Params::_internal_ap_v_comf_steer_ang_vel_radps() const {
  return ap_v_comf_steer_ang_vel_radps_;
}
inline float Vehicle_Params::ap_v_comf_steer_ang_vel_radps() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_COMF_STEER_ANG_VEL_RADPS)
  return _internal_ap_v_comf_steer_ang_vel_radps();
}
inline void Vehicle_Params::_internal_set_ap_v_comf_steer_ang_vel_radps(float value) {
  _has_bits_[0] |= 0x00004000u;
  ap_v_comf_steer_ang_vel_radps_ = value;
}
inline void Vehicle_Params::set_ap_v_comf_steer_ang_vel_radps(float value) {
  _internal_set_ap_v_comf_steer_ang_vel_radps(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_COMF_STEER_ANG_VEL_RADPS)
}

// optional float AP_V_STEER_ANG_TO_YAW_ANG_NU = 1748;
inline bool Vehicle_Params::_internal_has_ap_v_steer_ang_to_yaw_ang_nu() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_steer_ang_to_yaw_ang_nu() const {
  return _internal_has_ap_v_steer_ang_to_yaw_ang_nu();
}
inline void Vehicle_Params::clear_ap_v_steer_ang_to_yaw_ang_nu() {
  ap_v_steer_ang_to_yaw_ang_nu_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float Vehicle_Params::_internal_ap_v_steer_ang_to_yaw_ang_nu() const {
  return ap_v_steer_ang_to_yaw_ang_nu_;
}
inline float Vehicle_Params::ap_v_steer_ang_to_yaw_ang_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_ANG_TO_YAW_ANG_NU)
  return _internal_ap_v_steer_ang_to_yaw_ang_nu();
}
inline void Vehicle_Params::_internal_set_ap_v_steer_ang_to_yaw_ang_nu(float value) {
  _has_bits_[0] |= 0x00000100u;
  ap_v_steer_ang_to_yaw_ang_nu_ = value;
}
inline void Vehicle_Params::set_ap_v_steer_ang_to_yaw_ang_nu(float value) {
  _internal_set_ap_v_steer_ang_to_yaw_ang_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_ANG_TO_YAW_ANG_NU)
}

// repeated float AP_V_STEER_POLY_OUT_WHL_RAD = 582;
inline int Vehicle_Params::_internal_ap_v_steer_poly_out_whl_rad_size() const {
  return ap_v_steer_poly_out_whl_rad_.size();
}
inline int Vehicle_Params::ap_v_steer_poly_out_whl_rad_size() const {
  return _internal_ap_v_steer_poly_out_whl_rad_size();
}
inline void Vehicle_Params::clear_ap_v_steer_poly_out_whl_rad() {
  ap_v_steer_poly_out_whl_rad_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_steer_poly_out_whl_rad(int index) const {
  return ap_v_steer_poly_out_whl_rad_.Get(index);
}
inline float Vehicle_Params::ap_v_steer_poly_out_whl_rad(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_OUT_WHL_RAD)
  return _internal_ap_v_steer_poly_out_whl_rad(index);
}
inline void Vehicle_Params::set_ap_v_steer_poly_out_whl_rad(int index, float value) {
  ap_v_steer_poly_out_whl_rad_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_OUT_WHL_RAD)
}
inline void Vehicle_Params::_internal_add_ap_v_steer_poly_out_whl_rad(float value) {
  ap_v_steer_poly_out_whl_rad_.Add(value);
}
inline void Vehicle_Params::add_ap_v_steer_poly_out_whl_rad(float value) {
  _internal_add_ap_v_steer_poly_out_whl_rad(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_OUT_WHL_RAD)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_steer_poly_out_whl_rad() const {
  return ap_v_steer_poly_out_whl_rad_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_steer_poly_out_whl_rad() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_OUT_WHL_RAD)
  return _internal_ap_v_steer_poly_out_whl_rad();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_steer_poly_out_whl_rad() {
  return &ap_v_steer_poly_out_whl_rad_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_steer_poly_out_whl_rad() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_OUT_WHL_RAD)
  return _internal_mutable_ap_v_steer_poly_out_whl_rad();
}

// repeated float AP_V_STEER_POLY_CTR_WHL_RAD = 1090;
inline int Vehicle_Params::_internal_ap_v_steer_poly_ctr_whl_rad_size() const {
  return ap_v_steer_poly_ctr_whl_rad_.size();
}
inline int Vehicle_Params::ap_v_steer_poly_ctr_whl_rad_size() const {
  return _internal_ap_v_steer_poly_ctr_whl_rad_size();
}
inline void Vehicle_Params::clear_ap_v_steer_poly_ctr_whl_rad() {
  ap_v_steer_poly_ctr_whl_rad_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_steer_poly_ctr_whl_rad(int index) const {
  return ap_v_steer_poly_ctr_whl_rad_.Get(index);
}
inline float Vehicle_Params::ap_v_steer_poly_ctr_whl_rad(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_CTR_WHL_RAD)
  return _internal_ap_v_steer_poly_ctr_whl_rad(index);
}
inline void Vehicle_Params::set_ap_v_steer_poly_ctr_whl_rad(int index, float value) {
  ap_v_steer_poly_ctr_whl_rad_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_CTR_WHL_RAD)
}
inline void Vehicle_Params::_internal_add_ap_v_steer_poly_ctr_whl_rad(float value) {
  ap_v_steer_poly_ctr_whl_rad_.Add(value);
}
inline void Vehicle_Params::add_ap_v_steer_poly_ctr_whl_rad(float value) {
  _internal_add_ap_v_steer_poly_ctr_whl_rad(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_CTR_WHL_RAD)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_steer_poly_ctr_whl_rad() const {
  return ap_v_steer_poly_ctr_whl_rad_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_steer_poly_ctr_whl_rad() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_CTR_WHL_RAD)
  return _internal_ap_v_steer_poly_ctr_whl_rad();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_steer_poly_ctr_whl_rad() {
  return &ap_v_steer_poly_ctr_whl_rad_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_steer_poly_ctr_whl_rad() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_CTR_WHL_RAD)
  return _internal_mutable_ap_v_steer_poly_ctr_whl_rad();
}

// repeated float AP_V_STEER_POLY_IN_WHL_RAD = 2516;
inline int Vehicle_Params::_internal_ap_v_steer_poly_in_whl_rad_size() const {
  return ap_v_steer_poly_in_whl_rad_.size();
}
inline int Vehicle_Params::ap_v_steer_poly_in_whl_rad_size() const {
  return _internal_ap_v_steer_poly_in_whl_rad_size();
}
inline void Vehicle_Params::clear_ap_v_steer_poly_in_whl_rad() {
  ap_v_steer_poly_in_whl_rad_.Clear();
}
inline float Vehicle_Params::_internal_ap_v_steer_poly_in_whl_rad(int index) const {
  return ap_v_steer_poly_in_whl_rad_.Get(index);
}
inline float Vehicle_Params::ap_v_steer_poly_in_whl_rad(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_IN_WHL_RAD)
  return _internal_ap_v_steer_poly_in_whl_rad(index);
}
inline void Vehicle_Params::set_ap_v_steer_poly_in_whl_rad(int index, float value) {
  ap_v_steer_poly_in_whl_rad_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_IN_WHL_RAD)
}
inline void Vehicle_Params::_internal_add_ap_v_steer_poly_in_whl_rad(float value) {
  ap_v_steer_poly_in_whl_rad_.Add(value);
}
inline void Vehicle_Params::add_ap_v_steer_poly_in_whl_rad(float value) {
  _internal_add_ap_v_steer_poly_in_whl_rad(value);
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_IN_WHL_RAD)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::_internal_ap_v_steer_poly_in_whl_rad() const {
  return ap_v_steer_poly_in_whl_rad_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Vehicle_Params::ap_v_steer_poly_in_whl_rad() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_IN_WHL_RAD)
  return _internal_ap_v_steer_poly_in_whl_rad();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::_internal_mutable_ap_v_steer_poly_in_whl_rad() {
  return &ap_v_steer_poly_in_whl_rad_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Vehicle_Params::mutable_ap_v_steer_poly_in_whl_rad() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_STEER_POLY_IN_WHL_RAD)
  return _internal_mutable_ap_v_steer_poly_in_whl_rad();
}

// optional float AP_V_MAX_INFL_DIST_M = 2458;
inline bool Vehicle_Params::_internal_has_ap_v_max_infl_dist_m() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool Vehicle_Params::has_ap_v_max_infl_dist_m() const {
  return _internal_has_ap_v_max_infl_dist_m();
}
inline void Vehicle_Params::clear_ap_v_max_infl_dist_m() {
  ap_v_max_infl_dist_m_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline float Vehicle_Params::_internal_ap_v_max_infl_dist_m() const {
  return ap_v_max_infl_dist_m_;
}
inline float Vehicle_Params::ap_v_max_infl_dist_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_MAX_INFL_DIST_M)
  return _internal_ap_v_max_infl_dist_m();
}
inline void Vehicle_Params::_internal_set_ap_v_max_infl_dist_m(float value) {
  _has_bits_[0] |= 0x00001000u;
  ap_v_max_infl_dist_m_ = value;
}
inline void Vehicle_Params::set_ap_v_max_infl_dist_m(float value) {
  _internal_set_ap_v_max_infl_dist_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.vehicle_params.Vehicle_Params.AP_V_MAX_INFL_DIST_M)
}

// -------------------------------------------------------------------

// Vehicle_Params_array_port

// repeated .pb.ap_common.vehicle_params.Vehicle_Params data = 331;
inline int Vehicle_Params_array_port::_internal_data_size() const {
  return data_.size();
}
inline int Vehicle_Params_array_port::data_size() const {
  return _internal_data_size();
}
inline void Vehicle_Params_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_common::vehicle_params::Vehicle_Params* Vehicle_Params_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_common.vehicle_params.Vehicle_Params_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_common::vehicle_params::Vehicle_Params >*
Vehicle_Params_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.vehicle_params.Vehicle_Params_array_port.data)
  return &data_;
}
inline const ::pb::ap_common::vehicle_params::Vehicle_Params& Vehicle_Params_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_common::vehicle_params::Vehicle_Params& Vehicle_Params_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.vehicle_params.Vehicle_Params_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_common::vehicle_params::Vehicle_Params* Vehicle_Params_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_common::vehicle_params::Vehicle_Params* Vehicle_Params_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_common.vehicle_params.Vehicle_Params_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_common::vehicle_params::Vehicle_Params >&
Vehicle_Params_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.vehicle_params.Vehicle_Params_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace vehicle_params
}  // namespace ap_common
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5fcommon_2fvehicle_5fparams_2eproto
