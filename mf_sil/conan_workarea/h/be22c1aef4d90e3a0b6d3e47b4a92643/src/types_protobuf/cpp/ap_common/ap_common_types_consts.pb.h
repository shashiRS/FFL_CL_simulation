// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_common/ap_common_types_consts.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto;
namespace pb {
namespace ap_common {
namespace ap_common_types_consts {
class AP_COMMON_TYPES_Consts;
class AP_COMMON_TYPES_ConstsDefaultTypeInternal;
extern AP_COMMON_TYPES_ConstsDefaultTypeInternal _AP_COMMON_TYPES_Consts_default_instance_;
class AP_COMMON_TYPES_Consts_array_port;
class AP_COMMON_TYPES_Consts_array_portDefaultTypeInternal;
extern AP_COMMON_TYPES_Consts_array_portDefaultTypeInternal _AP_COMMON_TYPES_Consts_array_port_default_instance_;
}  // namespace ap_common_types_consts
}  // namespace ap_common
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts* Arena::CreateMaybeMessage<::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts>(Arena*);
template<> ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts_array_port* Arena::CreateMaybeMessage<::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_common {
namespace ap_common_types_consts {

// ===================================================================

class AP_COMMON_TYPES_Consts :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts) */ {
 public:
  AP_COMMON_TYPES_Consts();
  virtual ~AP_COMMON_TYPES_Consts();

  AP_COMMON_TYPES_Consts(const AP_COMMON_TYPES_Consts& from);
  AP_COMMON_TYPES_Consts(AP_COMMON_TYPES_Consts&& from) noexcept
    : AP_COMMON_TYPES_Consts() {
    *this = ::std::move(from);
  }

  inline AP_COMMON_TYPES_Consts& operator=(const AP_COMMON_TYPES_Consts& from) {
    CopyFrom(from);
    return *this;
  }
  inline AP_COMMON_TYPES_Consts& operator=(AP_COMMON_TYPES_Consts&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AP_COMMON_TYPES_Consts& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AP_COMMON_TYPES_Consts* internal_default_instance() {
    return reinterpret_cast<const AP_COMMON_TYPES_Consts*>(
               &_AP_COMMON_TYPES_Consts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AP_COMMON_TYPES_Consts& a, AP_COMMON_TYPES_Consts& b) {
    a.Swap(&b);
  }
  inline void Swap(AP_COMMON_TYPES_Consts* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AP_COMMON_TYPES_Consts* New() const final {
    return CreateMaybeMessage<AP_COMMON_TYPES_Consts>(nullptr);
  }

  AP_COMMON_TYPES_Consts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AP_COMMON_TYPES_Consts>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AP_COMMON_TYPES_Consts& from);
  void MergeFrom(const AP_COMMON_TYPES_Consts& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AP_COMMON_TYPES_Consts* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto);
    return ::descriptor_table_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAPGMAXNUMPTSINVIRTUALLINENUFieldNumber = 440,
    kAPGMAXNUMPSPACEMARKINGSNUFieldNumber = 856,
    kAPGMAXNUMLANESNUFieldNumber = 1065,
    kAPGMAXNUMPTSFORDYNPOLYNUFieldNumber = 1236,
    kAPGMAXNUMUSSENSORSNUFieldNumber = 1249,
    kAPGMAXNUMSTATICOBJNUFieldNumber = 1257,
    kAPGMAXNUMLANEBOUNDPTSNUFieldNumber = 1270,
    kAPVMIRRORSHAPEMAXSIZENUFieldNumber = 1558,
    kAPGMAXNUMVIRTUALLINESNUFieldNumber = 2017,
    kAPGMAXNUMPOSESPREVPATHNUFieldNumber = 2085,
    kAPVWHEELSHAPEMAXSIZENUFieldNumber = 2176,
    kAPVHITCHSHAPEMAXSIZENUFieldNumber = 2187,
    kCOLLGMAXNUMSTATICOBJNUFieldNumber = 2318,
    kAPGNUMPOINTSPERPARKINGLINENUFieldNumber = 2383,
    kAPGMAXNUMPBOXVERTICESNUFieldNumber = 2387,
    kAPGMAXNUMLANEBOUNDARIESNUFieldNumber = 2429,
    kAPGMAXNUMTARGETPOSESNUFieldNumber = 2637,
    kAPVNUMWHEELSNUFieldNumber = 2825,
    kAPGMAXNUMDYNOBJECTSNUFieldNumber = 2944,
    kAPGMAXNUMSENSORTYPESNUFieldNumber = 3049,
    kAPVVEHICLESHAPEMAXSIZENUFieldNumber = 3282,
    kAPGMAXNUMPTSSTATICPOLYNUFieldNumber = 3489,
    kAPGNUMTAPOSINFLATEDOBJNUFieldNumber = 3507,
    kAPGMAXNUMPARKINGBOXESNUFieldNumber = 3635,
    kAPGMAXNUMSVCAMSNUFieldNumber = 3869,
    kAPGMAXNUMEXTERNALPOSESNUFieldNumber = 3879,
    kAPGMAXNUMPBOXDELIMITERSNUFieldNumber = 3995821,
    kCOLLGMAXNUMDYNOBJECTSNUFieldNumber = 8568595,
  };
  // optional uint32 AP_G_MAX_NUM_PTS_IN_VIRTUAL_LINE_NU = 440;
  bool has_ap_g_max_num_pts_in_virtual_line_nu() const;
  private:
  bool _internal_has_ap_g_max_num_pts_in_virtual_line_nu() const;
  public:
  void clear_ap_g_max_num_pts_in_virtual_line_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_pts_in_virtual_line_nu() const;
  void set_ap_g_max_num_pts_in_virtual_line_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_pts_in_virtual_line_nu() const;
  void _internal_set_ap_g_max_num_pts_in_virtual_line_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_P_SPACE_MARKINGS_NU = 856;
  bool has_ap_g_max_num_p_space_markings_nu() const;
  private:
  bool _internal_has_ap_g_max_num_p_space_markings_nu() const;
  public:
  void clear_ap_g_max_num_p_space_markings_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_p_space_markings_nu() const;
  void set_ap_g_max_num_p_space_markings_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_p_space_markings_nu() const;
  void _internal_set_ap_g_max_num_p_space_markings_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_LANES_NU = 1065;
  bool has_ap_g_max_num_lanes_nu() const;
  private:
  bool _internal_has_ap_g_max_num_lanes_nu() const;
  public:
  void clear_ap_g_max_num_lanes_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_lanes_nu() const;
  void set_ap_g_max_num_lanes_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_lanes_nu() const;
  void _internal_set_ap_g_max_num_lanes_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_PTS_FOR_DYN_POLY_NU = 1236;
  bool has_ap_g_max_num_pts_for_dyn_poly_nu() const;
  private:
  bool _internal_has_ap_g_max_num_pts_for_dyn_poly_nu() const;
  public:
  void clear_ap_g_max_num_pts_for_dyn_poly_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_pts_for_dyn_poly_nu() const;
  void set_ap_g_max_num_pts_for_dyn_poly_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_pts_for_dyn_poly_nu() const;
  void _internal_set_ap_g_max_num_pts_for_dyn_poly_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_US_SENSORS_NU = 1249;
  bool has_ap_g_max_num_us_sensors_nu() const;
  private:
  bool _internal_has_ap_g_max_num_us_sensors_nu() const;
  public:
  void clear_ap_g_max_num_us_sensors_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_us_sensors_nu() const;
  void set_ap_g_max_num_us_sensors_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_us_sensors_nu() const;
  void _internal_set_ap_g_max_num_us_sensors_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_STATIC_OBJ_NU = 1257;
  bool has_ap_g_max_num_static_obj_nu() const;
  private:
  bool _internal_has_ap_g_max_num_static_obj_nu() const;
  public:
  void clear_ap_g_max_num_static_obj_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_static_obj_nu() const;
  void set_ap_g_max_num_static_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_static_obj_nu() const;
  void _internal_set_ap_g_max_num_static_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_LANE_BOUND_PTS_NU = 1270;
  bool has_ap_g_max_num_lane_bound_pts_nu() const;
  private:
  bool _internal_has_ap_g_max_num_lane_bound_pts_nu() const;
  public:
  void clear_ap_g_max_num_lane_bound_pts_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_lane_bound_pts_nu() const;
  void set_ap_g_max_num_lane_bound_pts_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_lane_bound_pts_nu() const;
  void _internal_set_ap_g_max_num_lane_bound_pts_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_V_MIRROR_SHAPE_MAX_SIZE_NU = 1558;
  bool has_ap_v_mirror_shape_max_size_nu() const;
  private:
  bool _internal_has_ap_v_mirror_shape_max_size_nu() const;
  public:
  void clear_ap_v_mirror_shape_max_size_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_mirror_shape_max_size_nu() const;
  void set_ap_v_mirror_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_mirror_shape_max_size_nu() const;
  void _internal_set_ap_v_mirror_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_VIRTUAL_LINES_NU = 2017;
  bool has_ap_g_max_num_virtual_lines_nu() const;
  private:
  bool _internal_has_ap_g_max_num_virtual_lines_nu() const;
  public:
  void clear_ap_g_max_num_virtual_lines_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_virtual_lines_nu() const;
  void set_ap_g_max_num_virtual_lines_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_virtual_lines_nu() const;
  void _internal_set_ap_g_max_num_virtual_lines_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_POSES_PREV_PATH_NU = 2085;
  bool has_ap_g_max_num_poses_prev_path_nu() const;
  private:
  bool _internal_has_ap_g_max_num_poses_prev_path_nu() const;
  public:
  void clear_ap_g_max_num_poses_prev_path_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_poses_prev_path_nu() const;
  void set_ap_g_max_num_poses_prev_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_poses_prev_path_nu() const;
  void _internal_set_ap_g_max_num_poses_prev_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_V_WHEEL_SHAPE_MAX_SIZE_NU = 2176;
  bool has_ap_v_wheel_shape_max_size_nu() const;
  private:
  bool _internal_has_ap_v_wheel_shape_max_size_nu() const;
  public:
  void clear_ap_v_wheel_shape_max_size_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_wheel_shape_max_size_nu() const;
  void set_ap_v_wheel_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_wheel_shape_max_size_nu() const;
  void _internal_set_ap_v_wheel_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_V_HITCH_SHAPE_MAX_SIZE_NU = 2187;
  bool has_ap_v_hitch_shape_max_size_nu() const;
  private:
  bool _internal_has_ap_v_hitch_shape_max_size_nu() const;
  public:
  void clear_ap_v_hitch_shape_max_size_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_hitch_shape_max_size_nu() const;
  void set_ap_v_hitch_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_hitch_shape_max_size_nu() const;
  void _internal_set_ap_v_hitch_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 COLL_G_MAX_NUM_STATIC_OBJ_NU = 2318;
  bool has_coll_g_max_num_static_obj_nu() const;
  private:
  bool _internal_has_coll_g_max_num_static_obj_nu() const;
  public:
  void clear_coll_g_max_num_static_obj_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 coll_g_max_num_static_obj_nu() const;
  void set_coll_g_max_num_static_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coll_g_max_num_static_obj_nu() const;
  void _internal_set_coll_g_max_num_static_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_NUM_POINTS_PER_PARKING_LINE_NU = 2383;
  bool has_ap_g_num_points_per_parking_line_nu() const;
  private:
  bool _internal_has_ap_g_num_points_per_parking_line_nu() const;
  public:
  void clear_ap_g_num_points_per_parking_line_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_num_points_per_parking_line_nu() const;
  void set_ap_g_num_points_per_parking_line_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_num_points_per_parking_line_nu() const;
  void _internal_set_ap_g_num_points_per_parking_line_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_P_BOX_VERTICES_NU = 2387;
  bool has_ap_g_max_num_p_box_vertices_nu() const;
  private:
  bool _internal_has_ap_g_max_num_p_box_vertices_nu() const;
  public:
  void clear_ap_g_max_num_p_box_vertices_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_p_box_vertices_nu() const;
  void set_ap_g_max_num_p_box_vertices_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_p_box_vertices_nu() const;
  void _internal_set_ap_g_max_num_p_box_vertices_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_LANE_BOUNDARIES_NU = 2429;
  bool has_ap_g_max_num_lane_boundaries_nu() const;
  private:
  bool _internal_has_ap_g_max_num_lane_boundaries_nu() const;
  public:
  void clear_ap_g_max_num_lane_boundaries_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_lane_boundaries_nu() const;
  void set_ap_g_max_num_lane_boundaries_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_lane_boundaries_nu() const;
  void _internal_set_ap_g_max_num_lane_boundaries_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_TARGET_POSES_NU = 2637;
  bool has_ap_g_max_num_target_poses_nu() const;
  private:
  bool _internal_has_ap_g_max_num_target_poses_nu() const;
  public:
  void clear_ap_g_max_num_target_poses_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_target_poses_nu() const;
  void set_ap_g_max_num_target_poses_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_target_poses_nu() const;
  void _internal_set_ap_g_max_num_target_poses_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_V_NUM_WHEELS_NU = 2825;
  bool has_ap_v_num_wheels_nu() const;
  private:
  bool _internal_has_ap_v_num_wheels_nu() const;
  public:
  void clear_ap_v_num_wheels_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_num_wheels_nu() const;
  void set_ap_v_num_wheels_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_num_wheels_nu() const;
  void _internal_set_ap_v_num_wheels_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_DYN_OBJECTS_NU = 2944;
  bool has_ap_g_max_num_dyn_objects_nu() const;
  private:
  bool _internal_has_ap_g_max_num_dyn_objects_nu() const;
  public:
  void clear_ap_g_max_num_dyn_objects_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_dyn_objects_nu() const;
  void set_ap_g_max_num_dyn_objects_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_dyn_objects_nu() const;
  void _internal_set_ap_g_max_num_dyn_objects_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_SENSOR_TYPES_NU = 3049;
  bool has_ap_g_max_num_sensor_types_nu() const;
  private:
  bool _internal_has_ap_g_max_num_sensor_types_nu() const;
  public:
  void clear_ap_g_max_num_sensor_types_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_sensor_types_nu() const;
  void set_ap_g_max_num_sensor_types_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_sensor_types_nu() const;
  void _internal_set_ap_g_max_num_sensor_types_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_V_VEHICLE_SHAPE_MAX_SIZE_NU = 3282;
  bool has_ap_v_vehicle_shape_max_size_nu() const;
  private:
  bool _internal_has_ap_v_vehicle_shape_max_size_nu() const;
  public:
  void clear_ap_v_vehicle_shape_max_size_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_vehicle_shape_max_size_nu() const;
  void set_ap_v_vehicle_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_v_vehicle_shape_max_size_nu() const;
  void _internal_set_ap_v_vehicle_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_PTS_STATIC_POLY_NU = 3489;
  bool has_ap_g_max_num_pts_static_poly_nu() const;
  private:
  bool _internal_has_ap_g_max_num_pts_static_poly_nu() const;
  public:
  void clear_ap_g_max_num_pts_static_poly_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_pts_static_poly_nu() const;
  void set_ap_g_max_num_pts_static_poly_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_pts_static_poly_nu() const;
  void _internal_set_ap_g_max_num_pts_static_poly_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_NUM_TAPOS_INFLATED_OBJ_NU = 3507;
  bool has_ap_g_num_tapos_inflated_obj_nu() const;
  private:
  bool _internal_has_ap_g_num_tapos_inflated_obj_nu() const;
  public:
  void clear_ap_g_num_tapos_inflated_obj_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_num_tapos_inflated_obj_nu() const;
  void set_ap_g_num_tapos_inflated_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_num_tapos_inflated_obj_nu() const;
  void _internal_set_ap_g_num_tapos_inflated_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_PARKING_BOXES_NU = 3635;
  bool has_ap_g_max_num_parking_boxes_nu() const;
  private:
  bool _internal_has_ap_g_max_num_parking_boxes_nu() const;
  public:
  void clear_ap_g_max_num_parking_boxes_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_parking_boxes_nu() const;
  void set_ap_g_max_num_parking_boxes_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_parking_boxes_nu() const;
  void _internal_set_ap_g_max_num_parking_boxes_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_SV_CAMS_NU = 3869;
  bool has_ap_g_max_num_sv_cams_nu() const;
  private:
  bool _internal_has_ap_g_max_num_sv_cams_nu() const;
  public:
  void clear_ap_g_max_num_sv_cams_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_sv_cams_nu() const;
  void set_ap_g_max_num_sv_cams_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_sv_cams_nu() const;
  void _internal_set_ap_g_max_num_sv_cams_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_EXTERNAL_POSES_NU = 3879;
  bool has_ap_g_max_num_external_poses_nu() const;
  private:
  bool _internal_has_ap_g_max_num_external_poses_nu() const;
  public:
  void clear_ap_g_max_num_external_poses_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_external_poses_nu() const;
  void set_ap_g_max_num_external_poses_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_external_poses_nu() const;
  void _internal_set_ap_g_max_num_external_poses_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_G_MAX_NUM_P_BOX_DELIMITERS_NU = 3995821;
  bool has_ap_g_max_num_p_box_delimiters_nu() const;
  private:
  bool _internal_has_ap_g_max_num_p_box_delimiters_nu() const;
  public:
  void clear_ap_g_max_num_p_box_delimiters_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_p_box_delimiters_nu() const;
  void set_ap_g_max_num_p_box_delimiters_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_g_max_num_p_box_delimiters_nu() const;
  void _internal_set_ap_g_max_num_p_box_delimiters_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 COLL_G_MAX_NUM_DYN_OBJECTS_NU = 8568595;
  bool has_coll_g_max_num_dyn_objects_nu() const;
  private:
  bool _internal_has_coll_g_max_num_dyn_objects_nu() const;
  public:
  void clear_coll_g_max_num_dyn_objects_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 coll_g_max_num_dyn_objects_nu() const;
  void set_coll_g_max_num_dyn_objects_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coll_g_max_num_dyn_objects_nu() const;
  void _internal_set_coll_g_max_num_dyn_objects_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_pts_in_virtual_line_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_p_space_markings_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_lanes_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_pts_for_dyn_poly_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_us_sensors_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_static_obj_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_lane_bound_pts_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_mirror_shape_max_size_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_virtual_lines_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_poses_prev_path_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_wheel_shape_max_size_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_hitch_shape_max_size_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coll_g_max_num_static_obj_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_num_points_per_parking_line_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_p_box_vertices_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_lane_boundaries_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_target_poses_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_num_wheels_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_dyn_objects_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_sensor_types_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_v_vehicle_shape_max_size_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_pts_static_poly_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_num_tapos_inflated_obj_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_parking_boxes_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_sv_cams_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_external_poses_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_g_max_num_p_box_delimiters_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coll_g_max_num_dyn_objects_nu_;
  friend struct ::TableStruct_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto;
};
// -------------------------------------------------------------------

class AP_COMMON_TYPES_Consts_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts_array_port) */ {
 public:
  AP_COMMON_TYPES_Consts_array_port();
  virtual ~AP_COMMON_TYPES_Consts_array_port();

  AP_COMMON_TYPES_Consts_array_port(const AP_COMMON_TYPES_Consts_array_port& from);
  AP_COMMON_TYPES_Consts_array_port(AP_COMMON_TYPES_Consts_array_port&& from) noexcept
    : AP_COMMON_TYPES_Consts_array_port() {
    *this = ::std::move(from);
  }

  inline AP_COMMON_TYPES_Consts_array_port& operator=(const AP_COMMON_TYPES_Consts_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline AP_COMMON_TYPES_Consts_array_port& operator=(AP_COMMON_TYPES_Consts_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AP_COMMON_TYPES_Consts_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AP_COMMON_TYPES_Consts_array_port* internal_default_instance() {
    return reinterpret_cast<const AP_COMMON_TYPES_Consts_array_port*>(
               &_AP_COMMON_TYPES_Consts_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AP_COMMON_TYPES_Consts_array_port& a, AP_COMMON_TYPES_Consts_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(AP_COMMON_TYPES_Consts_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AP_COMMON_TYPES_Consts_array_port* New() const final {
    return CreateMaybeMessage<AP_COMMON_TYPES_Consts_array_port>(nullptr);
  }

  AP_COMMON_TYPES_Consts_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AP_COMMON_TYPES_Consts_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AP_COMMON_TYPES_Consts_array_port& from);
  void MergeFrom(const AP_COMMON_TYPES_Consts_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AP_COMMON_TYPES_Consts_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto);
    return ::descriptor_table_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1176,
  };
  // repeated .pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts data = 1176;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts >*
      mutable_data();
  private:
  const ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts& _internal_data(int index) const;
  ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts* _internal_add_data();
  public:
  const ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts& data(int index) const;
  ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts > data_;
  friend struct ::TableStruct_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AP_COMMON_TYPES_Consts

// optional uint32 AP_G_MAX_NUM_STATIC_OBJ_NU = 1257;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_static_obj_nu() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_static_obj_nu() const {
  return _internal_has_ap_g_max_num_static_obj_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_static_obj_nu() {
  ap_g_max_num_static_obj_nu_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_static_obj_nu() const {
  return ap_g_max_num_static_obj_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_static_obj_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_STATIC_OBJ_NU)
  return _internal_ap_g_max_num_static_obj_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_static_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  ap_g_max_num_static_obj_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_static_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_static_obj_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_STATIC_OBJ_NU)
}

// optional uint32 AP_G_MAX_NUM_SENSOR_TYPES_NU = 3049;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_sensor_types_nu() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_sensor_types_nu() const {
  return _internal_has_ap_g_max_num_sensor_types_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_sensor_types_nu() {
  ap_g_max_num_sensor_types_nu_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_sensor_types_nu() const {
  return ap_g_max_num_sensor_types_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_sensor_types_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_SENSOR_TYPES_NU)
  return _internal_ap_g_max_num_sensor_types_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_sensor_types_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  ap_g_max_num_sensor_types_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_sensor_types_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_sensor_types_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_SENSOR_TYPES_NU)
}

// optional uint32 AP_G_MAX_NUM_PTS_STATIC_POLY_NU = 3489;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_pts_static_poly_nu() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_pts_static_poly_nu() const {
  return _internal_has_ap_g_max_num_pts_static_poly_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_pts_static_poly_nu() {
  ap_g_max_num_pts_static_poly_nu_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_pts_static_poly_nu() const {
  return ap_g_max_num_pts_static_poly_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_pts_static_poly_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_PTS_STATIC_POLY_NU)
  return _internal_ap_g_max_num_pts_static_poly_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_pts_static_poly_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  ap_g_max_num_pts_static_poly_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_pts_static_poly_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_pts_static_poly_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_PTS_STATIC_POLY_NU)
}

// optional uint32 AP_G_MAX_NUM_DYN_OBJECTS_NU = 2944;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_dyn_objects_nu() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_dyn_objects_nu() const {
  return _internal_has_ap_g_max_num_dyn_objects_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_dyn_objects_nu() {
  ap_g_max_num_dyn_objects_nu_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_dyn_objects_nu() const {
  return ap_g_max_num_dyn_objects_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_dyn_objects_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_DYN_OBJECTS_NU)
  return _internal_ap_g_max_num_dyn_objects_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_dyn_objects_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  ap_g_max_num_dyn_objects_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_dyn_objects_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_dyn_objects_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_DYN_OBJECTS_NU)
}

// optional uint32 AP_G_MAX_NUM_PTS_FOR_DYN_POLY_NU = 1236;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_pts_for_dyn_poly_nu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_pts_for_dyn_poly_nu() const {
  return _internal_has_ap_g_max_num_pts_for_dyn_poly_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_pts_for_dyn_poly_nu() {
  ap_g_max_num_pts_for_dyn_poly_nu_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_pts_for_dyn_poly_nu() const {
  return ap_g_max_num_pts_for_dyn_poly_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_pts_for_dyn_poly_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_PTS_FOR_DYN_POLY_NU)
  return _internal_ap_g_max_num_pts_for_dyn_poly_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_pts_for_dyn_poly_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  ap_g_max_num_pts_for_dyn_poly_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_pts_for_dyn_poly_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_pts_for_dyn_poly_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_PTS_FOR_DYN_POLY_NU)
}

// optional uint32 AP_G_MAX_NUM_P_SPACE_MARKINGS_NU = 856;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_p_space_markings_nu() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_p_space_markings_nu() const {
  return _internal_has_ap_g_max_num_p_space_markings_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_p_space_markings_nu() {
  ap_g_max_num_p_space_markings_nu_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_p_space_markings_nu() const {
  return ap_g_max_num_p_space_markings_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_p_space_markings_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_P_SPACE_MARKINGS_NU)
  return _internal_ap_g_max_num_p_space_markings_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_p_space_markings_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ap_g_max_num_p_space_markings_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_p_space_markings_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_p_space_markings_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_P_SPACE_MARKINGS_NU)
}

// optional uint32 AP_G_NUM_POINTS_PER_PARKING_LINE_NU = 2383;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_num_points_per_parking_line_nu() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_num_points_per_parking_line_nu() const {
  return _internal_has_ap_g_num_points_per_parking_line_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_num_points_per_parking_line_nu() {
  ap_g_num_points_per_parking_line_nu_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_num_points_per_parking_line_nu() const {
  return ap_g_num_points_per_parking_line_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_num_points_per_parking_line_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_NUM_POINTS_PER_PARKING_LINE_NU)
  return _internal_ap_g_num_points_per_parking_line_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_num_points_per_parking_line_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  ap_g_num_points_per_parking_line_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_num_points_per_parking_line_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_num_points_per_parking_line_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_NUM_POINTS_PER_PARKING_LINE_NU)
}

// optional uint32 AP_G_MAX_NUM_POSES_PREV_PATH_NU = 2085;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_poses_prev_path_nu() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_poses_prev_path_nu() const {
  return _internal_has_ap_g_max_num_poses_prev_path_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_poses_prev_path_nu() {
  ap_g_max_num_poses_prev_path_nu_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_poses_prev_path_nu() const {
  return ap_g_max_num_poses_prev_path_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_poses_prev_path_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_POSES_PREV_PATH_NU)
  return _internal_ap_g_max_num_poses_prev_path_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_poses_prev_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  ap_g_max_num_poses_prev_path_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_poses_prev_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_poses_prev_path_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_POSES_PREV_PATH_NU)
}

// optional uint32 AP_G_MAX_NUM_LANE_BOUNDARIES_NU = 2429;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_lane_boundaries_nu() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_lane_boundaries_nu() const {
  return _internal_has_ap_g_max_num_lane_boundaries_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_lane_boundaries_nu() {
  ap_g_max_num_lane_boundaries_nu_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_lane_boundaries_nu() const {
  return ap_g_max_num_lane_boundaries_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_lane_boundaries_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_LANE_BOUNDARIES_NU)
  return _internal_ap_g_max_num_lane_boundaries_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_lane_boundaries_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  ap_g_max_num_lane_boundaries_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_lane_boundaries_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_lane_boundaries_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_LANE_BOUNDARIES_NU)
}

// optional uint32 AP_G_MAX_NUM_LANE_BOUND_PTS_NU = 1270;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_lane_bound_pts_nu() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_lane_bound_pts_nu() const {
  return _internal_has_ap_g_max_num_lane_bound_pts_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_lane_bound_pts_nu() {
  ap_g_max_num_lane_bound_pts_nu_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_lane_bound_pts_nu() const {
  return ap_g_max_num_lane_bound_pts_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_lane_bound_pts_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_LANE_BOUND_PTS_NU)
  return _internal_ap_g_max_num_lane_bound_pts_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_lane_bound_pts_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  ap_g_max_num_lane_bound_pts_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_lane_bound_pts_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_lane_bound_pts_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_LANE_BOUND_PTS_NU)
}

// optional uint32 AP_G_MAX_NUM_LANES_NU = 1065;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_lanes_nu() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_lanes_nu() const {
  return _internal_has_ap_g_max_num_lanes_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_lanes_nu() {
  ap_g_max_num_lanes_nu_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_lanes_nu() const {
  return ap_g_max_num_lanes_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_lanes_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_LANES_NU)
  return _internal_ap_g_max_num_lanes_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_lanes_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  ap_g_max_num_lanes_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_lanes_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_lanes_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_LANES_NU)
}

// optional uint32 AP_G_MAX_NUM_US_SENSORS_NU = 1249;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_us_sensors_nu() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_us_sensors_nu() const {
  return _internal_has_ap_g_max_num_us_sensors_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_us_sensors_nu() {
  ap_g_max_num_us_sensors_nu_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_us_sensors_nu() const {
  return ap_g_max_num_us_sensors_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_us_sensors_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_US_SENSORS_NU)
  return _internal_ap_g_max_num_us_sensors_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_us_sensors_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  ap_g_max_num_us_sensors_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_us_sensors_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_us_sensors_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_US_SENSORS_NU)
}

// optional uint32 AP_G_MAX_NUM_PARKING_BOXES_NU = 3635;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_parking_boxes_nu() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_parking_boxes_nu() const {
  return _internal_has_ap_g_max_num_parking_boxes_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_parking_boxes_nu() {
  ap_g_max_num_parking_boxes_nu_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_parking_boxes_nu() const {
  return ap_g_max_num_parking_boxes_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_parking_boxes_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_PARKING_BOXES_NU)
  return _internal_ap_g_max_num_parking_boxes_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_parking_boxes_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  ap_g_max_num_parking_boxes_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_parking_boxes_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_parking_boxes_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_PARKING_BOXES_NU)
}

// optional uint32 AP_G_MAX_NUM_EXTERNAL_POSES_NU = 3879;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_external_poses_nu() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_external_poses_nu() const {
  return _internal_has_ap_g_max_num_external_poses_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_external_poses_nu() {
  ap_g_max_num_external_poses_nu_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_external_poses_nu() const {
  return ap_g_max_num_external_poses_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_external_poses_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_EXTERNAL_POSES_NU)
  return _internal_ap_g_max_num_external_poses_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_external_poses_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  ap_g_max_num_external_poses_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_external_poses_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_external_poses_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_EXTERNAL_POSES_NU)
}

// optional uint32 AP_G_MAX_NUM_SV_CAMS_NU = 3869;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_sv_cams_nu() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_sv_cams_nu() const {
  return _internal_has_ap_g_max_num_sv_cams_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_sv_cams_nu() {
  ap_g_max_num_sv_cams_nu_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_sv_cams_nu() const {
  return ap_g_max_num_sv_cams_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_sv_cams_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_SV_CAMS_NU)
  return _internal_ap_g_max_num_sv_cams_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_sv_cams_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  ap_g_max_num_sv_cams_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_sv_cams_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_sv_cams_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_SV_CAMS_NU)
}

// optional uint32 AP_G_MAX_NUM_P_BOX_VERTICES_NU = 2387;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_p_box_vertices_nu() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_p_box_vertices_nu() const {
  return _internal_has_ap_g_max_num_p_box_vertices_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_p_box_vertices_nu() {
  ap_g_max_num_p_box_vertices_nu_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_p_box_vertices_nu() const {
  return ap_g_max_num_p_box_vertices_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_p_box_vertices_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_P_BOX_VERTICES_NU)
  return _internal_ap_g_max_num_p_box_vertices_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_p_box_vertices_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  ap_g_max_num_p_box_vertices_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_p_box_vertices_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_p_box_vertices_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_P_BOX_VERTICES_NU)
}

// optional uint32 AP_G_MAX_NUM_P_BOX_DELIMITERS_NU = 3995821;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_p_box_delimiters_nu() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_p_box_delimiters_nu() const {
  return _internal_has_ap_g_max_num_p_box_delimiters_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_p_box_delimiters_nu() {
  ap_g_max_num_p_box_delimiters_nu_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_p_box_delimiters_nu() const {
  return ap_g_max_num_p_box_delimiters_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_p_box_delimiters_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_P_BOX_DELIMITERS_NU)
  return _internal_ap_g_max_num_p_box_delimiters_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_p_box_delimiters_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  ap_g_max_num_p_box_delimiters_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_p_box_delimiters_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_p_box_delimiters_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_P_BOX_DELIMITERS_NU)
}

// optional uint32 AP_G_MAX_NUM_VIRTUAL_LINES_NU = 2017;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_virtual_lines_nu() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_virtual_lines_nu() const {
  return _internal_has_ap_g_max_num_virtual_lines_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_virtual_lines_nu() {
  ap_g_max_num_virtual_lines_nu_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_virtual_lines_nu() const {
  return ap_g_max_num_virtual_lines_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_virtual_lines_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_VIRTUAL_LINES_NU)
  return _internal_ap_g_max_num_virtual_lines_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_virtual_lines_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  ap_g_max_num_virtual_lines_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_virtual_lines_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_virtual_lines_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_VIRTUAL_LINES_NU)
}

// optional uint32 AP_G_NUM_TAPOS_INFLATED_OBJ_NU = 3507;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_num_tapos_inflated_obj_nu() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_num_tapos_inflated_obj_nu() const {
  return _internal_has_ap_g_num_tapos_inflated_obj_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_num_tapos_inflated_obj_nu() {
  ap_g_num_tapos_inflated_obj_nu_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_num_tapos_inflated_obj_nu() const {
  return ap_g_num_tapos_inflated_obj_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_num_tapos_inflated_obj_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_NUM_TAPOS_INFLATED_OBJ_NU)
  return _internal_ap_g_num_tapos_inflated_obj_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_num_tapos_inflated_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  ap_g_num_tapos_inflated_obj_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_num_tapos_inflated_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_num_tapos_inflated_obj_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_NUM_TAPOS_INFLATED_OBJ_NU)
}

// optional uint32 AP_G_MAX_NUM_TARGET_POSES_NU = 2637;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_target_poses_nu() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_target_poses_nu() const {
  return _internal_has_ap_g_max_num_target_poses_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_target_poses_nu() {
  ap_g_max_num_target_poses_nu_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_target_poses_nu() const {
  return ap_g_max_num_target_poses_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_target_poses_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_TARGET_POSES_NU)
  return _internal_ap_g_max_num_target_poses_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_target_poses_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  ap_g_max_num_target_poses_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_target_poses_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_target_poses_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_TARGET_POSES_NU)
}

// optional uint32 COLL_G_MAX_NUM_DYN_OBJECTS_NU = 8568595;
inline bool AP_COMMON_TYPES_Consts::_internal_has_coll_g_max_num_dyn_objects_nu() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_coll_g_max_num_dyn_objects_nu() const {
  return _internal_has_coll_g_max_num_dyn_objects_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_coll_g_max_num_dyn_objects_nu() {
  coll_g_max_num_dyn_objects_nu_ = 0u;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_coll_g_max_num_dyn_objects_nu() const {
  return coll_g_max_num_dyn_objects_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::coll_g_max_num_dyn_objects_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.COLL_G_MAX_NUM_DYN_OBJECTS_NU)
  return _internal_coll_g_max_num_dyn_objects_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_coll_g_max_num_dyn_objects_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x08000000u;
  coll_g_max_num_dyn_objects_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_coll_g_max_num_dyn_objects_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coll_g_max_num_dyn_objects_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.COLL_G_MAX_NUM_DYN_OBJECTS_NU)
}

// optional uint32 COLL_G_MAX_NUM_STATIC_OBJ_NU = 2318;
inline bool AP_COMMON_TYPES_Consts::_internal_has_coll_g_max_num_static_obj_nu() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_coll_g_max_num_static_obj_nu() const {
  return _internal_has_coll_g_max_num_static_obj_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_coll_g_max_num_static_obj_nu() {
  coll_g_max_num_static_obj_nu_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_coll_g_max_num_static_obj_nu() const {
  return coll_g_max_num_static_obj_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::coll_g_max_num_static_obj_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.COLL_G_MAX_NUM_STATIC_OBJ_NU)
  return _internal_coll_g_max_num_static_obj_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_coll_g_max_num_static_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  coll_g_max_num_static_obj_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_coll_g_max_num_static_obj_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coll_g_max_num_static_obj_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.COLL_G_MAX_NUM_STATIC_OBJ_NU)
}

// optional uint32 AP_G_MAX_NUM_PTS_IN_VIRTUAL_LINE_NU = 440;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_g_max_num_pts_in_virtual_line_nu() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_g_max_num_pts_in_virtual_line_nu() const {
  return _internal_has_ap_g_max_num_pts_in_virtual_line_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_g_max_num_pts_in_virtual_line_nu() {
  ap_g_max_num_pts_in_virtual_line_nu_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_g_max_num_pts_in_virtual_line_nu() const {
  return ap_g_max_num_pts_in_virtual_line_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_g_max_num_pts_in_virtual_line_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_PTS_IN_VIRTUAL_LINE_NU)
  return _internal_ap_g_max_num_pts_in_virtual_line_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_g_max_num_pts_in_virtual_line_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ap_g_max_num_pts_in_virtual_line_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_g_max_num_pts_in_virtual_line_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_g_max_num_pts_in_virtual_line_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_G_MAX_NUM_PTS_IN_VIRTUAL_LINE_NU)
}

// optional uint32 AP_V_MIRROR_SHAPE_MAX_SIZE_NU = 1558;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_v_mirror_shape_max_size_nu() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_v_mirror_shape_max_size_nu() const {
  return _internal_has_ap_v_mirror_shape_max_size_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_v_mirror_shape_max_size_nu() {
  ap_v_mirror_shape_max_size_nu_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_v_mirror_shape_max_size_nu() const {
  return ap_v_mirror_shape_max_size_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_v_mirror_shape_max_size_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_V_MIRROR_SHAPE_MAX_SIZE_NU)
  return _internal_ap_v_mirror_shape_max_size_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_v_mirror_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  ap_v_mirror_shape_max_size_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_v_mirror_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_mirror_shape_max_size_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_V_MIRROR_SHAPE_MAX_SIZE_NU)
}

// optional uint32 AP_V_HITCH_SHAPE_MAX_SIZE_NU = 2187;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_v_hitch_shape_max_size_nu() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_v_hitch_shape_max_size_nu() const {
  return _internal_has_ap_v_hitch_shape_max_size_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_v_hitch_shape_max_size_nu() {
  ap_v_hitch_shape_max_size_nu_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_v_hitch_shape_max_size_nu() const {
  return ap_v_hitch_shape_max_size_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_v_hitch_shape_max_size_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_V_HITCH_SHAPE_MAX_SIZE_NU)
  return _internal_ap_v_hitch_shape_max_size_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_v_hitch_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  ap_v_hitch_shape_max_size_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_v_hitch_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_hitch_shape_max_size_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_V_HITCH_SHAPE_MAX_SIZE_NU)
}

// optional uint32 AP_V_WHEEL_SHAPE_MAX_SIZE_NU = 2176;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_v_wheel_shape_max_size_nu() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_v_wheel_shape_max_size_nu() const {
  return _internal_has_ap_v_wheel_shape_max_size_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_v_wheel_shape_max_size_nu() {
  ap_v_wheel_shape_max_size_nu_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_v_wheel_shape_max_size_nu() const {
  return ap_v_wheel_shape_max_size_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_v_wheel_shape_max_size_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_V_WHEEL_SHAPE_MAX_SIZE_NU)
  return _internal_ap_v_wheel_shape_max_size_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_v_wheel_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  ap_v_wheel_shape_max_size_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_v_wheel_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_wheel_shape_max_size_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_V_WHEEL_SHAPE_MAX_SIZE_NU)
}

// optional uint32 AP_V_VEHICLE_SHAPE_MAX_SIZE_NU = 3282;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_v_vehicle_shape_max_size_nu() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_v_vehicle_shape_max_size_nu() const {
  return _internal_has_ap_v_vehicle_shape_max_size_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_v_vehicle_shape_max_size_nu() {
  ap_v_vehicle_shape_max_size_nu_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_v_vehicle_shape_max_size_nu() const {
  return ap_v_vehicle_shape_max_size_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_v_vehicle_shape_max_size_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_V_VEHICLE_SHAPE_MAX_SIZE_NU)
  return _internal_ap_v_vehicle_shape_max_size_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_v_vehicle_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  ap_v_vehicle_shape_max_size_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_v_vehicle_shape_max_size_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_vehicle_shape_max_size_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_V_VEHICLE_SHAPE_MAX_SIZE_NU)
}

// optional uint32 AP_V_NUM_WHEELS_NU = 2825;
inline bool AP_COMMON_TYPES_Consts::_internal_has_ap_v_num_wheels_nu() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool AP_COMMON_TYPES_Consts::has_ap_v_num_wheels_nu() const {
  return _internal_has_ap_v_num_wheels_nu();
}
inline void AP_COMMON_TYPES_Consts::clear_ap_v_num_wheels_nu() {
  ap_v_num_wheels_nu_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::_internal_ap_v_num_wheels_nu() const {
  return ap_v_num_wheels_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_COMMON_TYPES_Consts::ap_v_num_wheels_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_V_NUM_WHEELS_NU)
  return _internal_ap_v_num_wheels_nu();
}
inline void AP_COMMON_TYPES_Consts::_internal_set_ap_v_num_wheels_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  ap_v_num_wheels_nu_ = value;
}
inline void AP_COMMON_TYPES_Consts::set_ap_v_num_wheels_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_v_num_wheels_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts.AP_V_NUM_WHEELS_NU)
}

// -------------------------------------------------------------------

// AP_COMMON_TYPES_Consts_array_port

// repeated .pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts data = 1176;
inline int AP_COMMON_TYPES_Consts_array_port::_internal_data_size() const {
  return data_.size();
}
inline int AP_COMMON_TYPES_Consts_array_port::data_size() const {
  return _internal_data_size();
}
inline void AP_COMMON_TYPES_Consts_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts* AP_COMMON_TYPES_Consts_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts >*
AP_COMMON_TYPES_Consts_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts_array_port.data)
  return &data_;
}
inline const ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts& AP_COMMON_TYPES_Consts_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts& AP_COMMON_TYPES_Consts_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts* AP_COMMON_TYPES_Consts_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts* AP_COMMON_TYPES_Consts_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_common::ap_common_types_consts::AP_COMMON_TYPES_Consts >&
AP_COMMON_TYPES_Consts_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_common.ap_common_types_consts.AP_COMMON_TYPES_Consts_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ap_common_types_consts
}  // namespace ap_common
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5fcommon_2fap_5fcommon_5ftypes_5fconsts_2eproto
