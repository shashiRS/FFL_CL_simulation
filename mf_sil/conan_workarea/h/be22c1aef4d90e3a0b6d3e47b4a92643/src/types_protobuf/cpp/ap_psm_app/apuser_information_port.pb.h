// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_psm_app/apuser_information_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "ap_psm_app/remote_mode.pb.h"
#include "ap_psm_app/max_speed10_kphwarning.pb.h"
#include "ap_common/driving_direction.pb.h"
#include "ap_psm_app/garage_parking.pb.h"
#include "ap_commonvehsigprovider/gear.pb.h"
#include "ap_psm_app/hmimessage.pb.h"
#include "ap_psm_app/ppcparking_mode.pb.h"
#include "ap_psm_app/apfinish_type.pb.h"
#include "ap_psm_app/huintr_pause_condition.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto;
namespace pb {
namespace ap_psm_app {
namespace apuser_information_port {
class APUserInformationPort;
class APUserInformationPortDefaultTypeInternal;
extern APUserInformationPortDefaultTypeInternal _APUserInformationPort_default_instance_;
class APUserInformationPort_array_port;
class APUserInformationPort_array_portDefaultTypeInternal;
extern APUserInformationPort_array_portDefaultTypeInternal _APUserInformationPort_array_port_default_instance_;
}  // namespace apuser_information_port
}  // namespace ap_psm_app
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_psm_app::apuser_information_port::APUserInformationPort* Arena::CreateMaybeMessage<::pb::ap_psm_app::apuser_information_port::APUserInformationPort>(Arena*);
template<> ::pb::ap_psm_app::apuser_information_port::APUserInformationPort_array_port* Arena::CreateMaybeMessage<::pb::ap_psm_app::apuser_information_port::APUserInformationPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_psm_app {
namespace apuser_information_port {

// ===================================================================

class APUserInformationPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_psm_app.apuser_information_port.APUserInformationPort) */ {
 public:
  APUserInformationPort();
  virtual ~APUserInformationPort();

  APUserInformationPort(const APUserInformationPort& from);
  APUserInformationPort(APUserInformationPort&& from) noexcept
    : APUserInformationPort() {
    *this = ::std::move(from);
  }

  inline APUserInformationPort& operator=(const APUserInformationPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline APUserInformationPort& operator=(APUserInformationPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const APUserInformationPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const APUserInformationPort* internal_default_instance() {
    return reinterpret_cast<const APUserInformationPort*>(
               &_APUserInformationPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(APUserInformationPort& a, APUserInformationPort& b) {
    a.Swap(&b);
  }
  inline void Swap(APUserInformationPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline APUserInformationPort* New() const final {
    return CreateMaybeMessage<APUserInformationPort>(nullptr);
  }

  APUserInformationPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<APUserInformationPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const APUserInformationPort& from);
  void MergeFrom(const APUserInformationPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(APUserInformationPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_psm_app.apuser_information_port.APUserInformationPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto);
    return ::descriptor_table_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApaIntrPauseConditionFieldNumber = 1809,
    kPreConditionFailureReasonFieldNumber = 2265,
    kSSigHeaderFieldNumber = 1033,
    kRemoteAppActiveNuFieldNumber = 2880,
    kRemoteAppAuthorizedNuFieldNumber = 4015,
    kRemoteAppCodedNuFieldNumber = 3316,
    kRemoteKeySelectedNuFieldNumber = 2272,
    kApaInteractionPauseCountFieldNumber = 394,
    kMaxSpeed10KPHwarningNuFieldNumber = 553,
    kGarageParkingNuFieldNumber = 748,
    kFinishTypeNuFieldNumber = 804,
    kApaInteractionTimerFieldNumber = 1168,
    kCurrentGearNuFieldNumber = 1196,
    kPpcParkingModeNuFieldNumber = 1343,
    kDistanceToStopPercFieldNumber = 1416,
    kRemoteKeyPossNuFieldNumber = 3915,
    kContinuePossNuFieldNumber = 902,
    kRemManPossNuFieldNumber = 643,
    kUndoPossNuFieldNumber = 587,
    kUiVersionNumberFieldNumber = 2124,
    kBtnSemiAutomParkingPossNuFieldNumber = 2070,
    kGarageOpenerAvailNuFieldNumber = 1668,
    kSwitchInputDevPossNuFieldNumber = 2126,
    kReverseAssistPossNuFieldNumber = 2685,
    kDrivingDirectionNuFieldNumber = 2162,
    kSvPossNuFieldNumber = 1740,
    kBtnForwardPossNuFieldNumber = 1679,
    kBtnBackwardPossNuFieldNumber = 3388,
    kBtnFullyAutomParkingPossNuFieldNumber = 2369,
    kRemoteModeActiveNuFieldNumber = 2332,
    kMemoryParkingPossNuFieldNumber = 1914,
    kMpEasyRegisterAvailableFieldNumber = 2727,
    kPreConditionFailureStateFieldNumber = 2445,
    kGeneralUserInformationNuFieldNumber = 2602,
  };
  // repeated .pb.ap_psm_app.huintr_pause_condition.HUIntrPauseCondition apaIntrPauseCondition = 1809;
  int apaintrpausecondition_size() const;
  private:
  int _internal_apaintrpausecondition_size() const;
  public:
  void clear_apaintrpausecondition();
  private:
  ::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition _internal_apaintrpausecondition(int index) const;
  void _internal_add_apaintrpausecondition(::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_apaintrpausecondition();
  public:
  ::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition apaintrpausecondition(int index) const;
  void set_apaintrpausecondition(int index, ::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition value);
  void add_apaintrpausecondition(::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& apaintrpausecondition() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_apaintrpausecondition();

  // repeated bool preConditionFailureReason = 2265;
  int preconditionfailurereason_size() const;
  private:
  int _internal_preconditionfailurereason_size() const;
  public:
  void clear_preconditionfailurereason();
  private:
  bool _internal_preconditionfailurereason(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_preconditionfailurereason() const;
  void _internal_add_preconditionfailurereason(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_preconditionfailurereason();
  public:
  bool preconditionfailurereason(int index) const;
  void set_preconditionfailurereason(int index, bool value);
  void add_preconditionfailurereason(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      preconditionfailurereason() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_preconditionfailurereason();

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional bool remoteAppActive_nu = 2880;
  bool has_remoteappactive_nu() const;
  private:
  bool _internal_has_remoteappactive_nu() const;
  public:
  void clear_remoteappactive_nu();
  bool remoteappactive_nu() const;
  void set_remoteappactive_nu(bool value);
  private:
  bool _internal_remoteappactive_nu() const;
  void _internal_set_remoteappactive_nu(bool value);
  public:

  // optional bool remoteAppAuthorized_nu = 4015;
  bool has_remoteappauthorized_nu() const;
  private:
  bool _internal_has_remoteappauthorized_nu() const;
  public:
  void clear_remoteappauthorized_nu();
  bool remoteappauthorized_nu() const;
  void set_remoteappauthorized_nu(bool value);
  private:
  bool _internal_remoteappauthorized_nu() const;
  void _internal_set_remoteappauthorized_nu(bool value);
  public:

  // optional bool remoteAppCoded_nu = 3316;
  bool has_remoteappcoded_nu() const;
  private:
  bool _internal_has_remoteappcoded_nu() const;
  public:
  void clear_remoteappcoded_nu();
  bool remoteappcoded_nu() const;
  void set_remoteappcoded_nu(bool value);
  private:
  bool _internal_remoteappcoded_nu() const;
  void _internal_set_remoteappcoded_nu(bool value);
  public:

  // optional bool remoteKeySelected_nu = 2272;
  bool has_remotekeyselected_nu() const;
  private:
  bool _internal_has_remotekeyselected_nu() const;
  public:
  void clear_remotekeyselected_nu();
  bool remotekeyselected_nu() const;
  void set_remotekeyselected_nu(bool value);
  private:
  bool _internal_remotekeyselected_nu() const;
  void _internal_set_remotekeyselected_nu(bool value);
  public:

  // optional uint32 apaInteractionPauseCount = 394;
  bool has_apainteractionpausecount() const;
  private:
  bool _internal_has_apainteractionpausecount() const;
  public:
  void clear_apainteractionpausecount();
  ::PROTOBUF_NAMESPACE_ID::uint32 apainteractionpausecount() const;
  void set_apainteractionpausecount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apainteractionpausecount() const;
  void _internal_set_apainteractionpausecount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.ap_psm_app.max_speed10_kphwarning.MaxSpeed10KPHwarning maxSpeed10KPHwarning_nu = 553;
  bool has_maxspeed10kphwarning_nu() const;
  private:
  bool _internal_has_maxspeed10kphwarning_nu() const;
  public:
  void clear_maxspeed10kphwarning_nu();
  ::pb::ap_psm_app::max_speed10_kphwarning::MaxSpeed10KPHwarning maxspeed10kphwarning_nu() const;
  void set_maxspeed10kphwarning_nu(::pb::ap_psm_app::max_speed10_kphwarning::MaxSpeed10KPHwarning value);
  private:
  ::pb::ap_psm_app::max_speed10_kphwarning::MaxSpeed10KPHwarning _internal_maxspeed10kphwarning_nu() const;
  void _internal_set_maxspeed10kphwarning_nu(::pb::ap_psm_app::max_speed10_kphwarning::MaxSpeed10KPHwarning value);
  public:

  // optional .pb.ap_psm_app.garage_parking.GarageParking garageParking_nu = 748;
  bool has_garageparking_nu() const;
  private:
  bool _internal_has_garageparking_nu() const;
  public:
  void clear_garageparking_nu();
  ::pb::ap_psm_app::garage_parking::GarageParking garageparking_nu() const;
  void set_garageparking_nu(::pb::ap_psm_app::garage_parking::GarageParking value);
  private:
  ::pb::ap_psm_app::garage_parking::GarageParking _internal_garageparking_nu() const;
  void _internal_set_garageparking_nu(::pb::ap_psm_app::garage_parking::GarageParking value);
  public:

  // optional .pb.ap_psm_app.apfinish_type.APFinishType finishType_nu = 804;
  bool has_finishtype_nu() const;
  private:
  bool _internal_has_finishtype_nu() const;
  public:
  void clear_finishtype_nu();
  ::pb::ap_psm_app::apfinish_type::APFinishType finishtype_nu() const;
  void set_finishtype_nu(::pb::ap_psm_app::apfinish_type::APFinishType value);
  private:
  ::pb::ap_psm_app::apfinish_type::APFinishType _internal_finishtype_nu() const;
  void _internal_set_finishtype_nu(::pb::ap_psm_app::apfinish_type::APFinishType value);
  public:

  // optional uint32 apaInteractionTimer = 1168;
  bool has_apainteractiontimer() const;
  private:
  bool _internal_has_apainteractiontimer() const;
  public:
  void clear_apainteractiontimer();
  ::PROTOBUF_NAMESPACE_ID::uint32 apainteractiontimer() const;
  void set_apainteractiontimer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apainteractiontimer() const;
  void _internal_set_apainteractiontimer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.ap_commonvehsigprovider.gear.Gear currentGear_nu = 1196;
  bool has_currentgear_nu() const;
  private:
  bool _internal_has_currentgear_nu() const;
  public:
  void clear_currentgear_nu();
  ::pb::ap_commonvehsigprovider::gear::Gear currentgear_nu() const;
  void set_currentgear_nu(::pb::ap_commonvehsigprovider::gear::Gear value);
  private:
  ::pb::ap_commonvehsigprovider::gear::Gear _internal_currentgear_nu() const;
  void _internal_set_currentgear_nu(::pb::ap_commonvehsigprovider::gear::Gear value);
  public:

  // optional .pb.ap_psm_app.ppcparking_mode.PPCParkingMode ppcParkingMode_nu = 1343;
  bool has_ppcparkingmode_nu() const;
  private:
  bool _internal_has_ppcparkingmode_nu() const;
  public:
  void clear_ppcparkingmode_nu();
  ::pb::ap_psm_app::ppcparking_mode::PPCParkingMode ppcparkingmode_nu() const;
  void set_ppcparkingmode_nu(::pb::ap_psm_app::ppcparking_mode::PPCParkingMode value);
  private:
  ::pb::ap_psm_app::ppcparking_mode::PPCParkingMode _internal_ppcparkingmode_nu() const;
  void _internal_set_ppcparkingmode_nu(::pb::ap_psm_app::ppcparking_mode::PPCParkingMode value);
  public:

  // optional uint32 distanceToStop_perc = 1416;
  bool has_distancetostop_perc() const;
  private:
  bool _internal_has_distancetostop_perc() const;
  public:
  void clear_distancetostop_perc();
  ::PROTOBUF_NAMESPACE_ID::uint32 distancetostop_perc() const;
  void set_distancetostop_perc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_distancetostop_perc() const;
  void _internal_set_distancetostop_perc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool remoteKeyPoss_nu = 3915;
  bool has_remotekeyposs_nu() const;
  private:
  bool _internal_has_remotekeyposs_nu() const;
  public:
  void clear_remotekeyposs_nu();
  bool remotekeyposs_nu() const;
  void set_remotekeyposs_nu(bool value);
  private:
  bool _internal_remotekeyposs_nu() const;
  void _internal_set_remotekeyposs_nu(bool value);
  public:

  // optional bool continuePoss_nu = 902;
  bool has_continueposs_nu() const;
  private:
  bool _internal_has_continueposs_nu() const;
  public:
  void clear_continueposs_nu();
  bool continueposs_nu() const;
  void set_continueposs_nu(bool value);
  private:
  bool _internal_continueposs_nu() const;
  void _internal_set_continueposs_nu(bool value);
  public:

  // optional bool remManPoss_nu = 643;
  bool has_remmanposs_nu() const;
  private:
  bool _internal_has_remmanposs_nu() const;
  public:
  void clear_remmanposs_nu();
  bool remmanposs_nu() const;
  void set_remmanposs_nu(bool value);
  private:
  bool _internal_remmanposs_nu() const;
  void _internal_set_remmanposs_nu(bool value);
  public:

  // optional bool undoPoss_nu = 587;
  bool has_undoposs_nu() const;
  private:
  bool _internal_has_undoposs_nu() const;
  public:
  void clear_undoposs_nu();
  bool undoposs_nu() const;
  void set_undoposs_nu(bool value);
  private:
  bool _internal_undoposs_nu() const;
  void _internal_set_undoposs_nu(bool value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool btnSemiAutomParkingPoss_nu = 2070;
  bool has_btnsemiautomparkingposs_nu() const;
  private:
  bool _internal_has_btnsemiautomparkingposs_nu() const;
  public:
  void clear_btnsemiautomparkingposs_nu();
  bool btnsemiautomparkingposs_nu() const;
  void set_btnsemiautomparkingposs_nu(bool value);
  private:
  bool _internal_btnsemiautomparkingposs_nu() const;
  void _internal_set_btnsemiautomparkingposs_nu(bool value);
  public:

  // optional bool garageOpenerAvail_nu = 1668;
  bool has_garageopeneravail_nu() const;
  private:
  bool _internal_has_garageopeneravail_nu() const;
  public:
  void clear_garageopeneravail_nu();
  bool garageopeneravail_nu() const;
  void set_garageopeneravail_nu(bool value);
  private:
  bool _internal_garageopeneravail_nu() const;
  void _internal_set_garageopeneravail_nu(bool value);
  public:

  // optional bool switchInputDevPoss_nu = 2126;
  bool has_switchinputdevposs_nu() const;
  private:
  bool _internal_has_switchinputdevposs_nu() const;
  public:
  void clear_switchinputdevposs_nu();
  bool switchinputdevposs_nu() const;
  void set_switchinputdevposs_nu(bool value);
  private:
  bool _internal_switchinputdevposs_nu() const;
  void _internal_set_switchinputdevposs_nu(bool value);
  public:

  // optional bool reverseAssistPoss_nu = 2685;
  bool has_reverseassistposs_nu() const;
  private:
  bool _internal_has_reverseassistposs_nu() const;
  public:
  void clear_reverseassistposs_nu();
  bool reverseassistposs_nu() const;
  void set_reverseassistposs_nu(bool value);
  private:
  bool _internal_reverseassistposs_nu() const;
  void _internal_set_reverseassistposs_nu(bool value);
  public:

  // optional .pb.ap_common.driving_direction.DrivingDirection drivingDirection_nu = 2162;
  bool has_drivingdirection_nu() const;
  private:
  bool _internal_has_drivingdirection_nu() const;
  public:
  void clear_drivingdirection_nu();
  ::pb::ap_common::driving_direction::DrivingDirection drivingdirection_nu() const;
  void set_drivingdirection_nu(::pb::ap_common::driving_direction::DrivingDirection value);
  private:
  ::pb::ap_common::driving_direction::DrivingDirection _internal_drivingdirection_nu() const;
  void _internal_set_drivingdirection_nu(::pb::ap_common::driving_direction::DrivingDirection value);
  public:

  // optional bool svPoss_nu = 1740;
  bool has_svposs_nu() const;
  private:
  bool _internal_has_svposs_nu() const;
  public:
  void clear_svposs_nu();
  bool svposs_nu() const;
  void set_svposs_nu(bool value);
  private:
  bool _internal_svposs_nu() const;
  void _internal_set_svposs_nu(bool value);
  public:

  // optional bool btnForwardPoss_nu = 1679;
  bool has_btnforwardposs_nu() const;
  private:
  bool _internal_has_btnforwardposs_nu() const;
  public:
  void clear_btnforwardposs_nu();
  bool btnforwardposs_nu() const;
  void set_btnforwardposs_nu(bool value);
  private:
  bool _internal_btnforwardposs_nu() const;
  void _internal_set_btnforwardposs_nu(bool value);
  public:

  // optional bool btnBackwardPoss_nu = 3388;
  bool has_btnbackwardposs_nu() const;
  private:
  bool _internal_has_btnbackwardposs_nu() const;
  public:
  void clear_btnbackwardposs_nu();
  bool btnbackwardposs_nu() const;
  void set_btnbackwardposs_nu(bool value);
  private:
  bool _internal_btnbackwardposs_nu() const;
  void _internal_set_btnbackwardposs_nu(bool value);
  public:

  // optional bool btnFullyAutomParkingPoss_nu = 2369;
  bool has_btnfullyautomparkingposs_nu() const;
  private:
  bool _internal_has_btnfullyautomparkingposs_nu() const;
  public:
  void clear_btnfullyautomparkingposs_nu();
  bool btnfullyautomparkingposs_nu() const;
  void set_btnfullyautomparkingposs_nu(bool value);
  private:
  bool _internal_btnfullyautomparkingposs_nu() const;
  void _internal_set_btnfullyautomparkingposs_nu(bool value);
  public:

  // optional .pb.ap_psm_app.remote_mode.RemoteMode remoteModeActive_nu = 2332;
  bool has_remotemodeactive_nu() const;
  private:
  bool _internal_has_remotemodeactive_nu() const;
  public:
  void clear_remotemodeactive_nu();
  ::pb::ap_psm_app::remote_mode::RemoteMode remotemodeactive_nu() const;
  void set_remotemodeactive_nu(::pb::ap_psm_app::remote_mode::RemoteMode value);
  private:
  ::pb::ap_psm_app::remote_mode::RemoteMode _internal_remotemodeactive_nu() const;
  void _internal_set_remotemodeactive_nu(::pb::ap_psm_app::remote_mode::RemoteMode value);
  public:

  // optional bool memoryParkingPoss_nu = 1914;
  bool has_memoryparkingposs_nu() const;
  private:
  bool _internal_has_memoryparkingposs_nu() const;
  public:
  void clear_memoryparkingposs_nu();
  bool memoryparkingposs_nu() const;
  void set_memoryparkingposs_nu(bool value);
  private:
  bool _internal_memoryparkingposs_nu() const;
  void _internal_set_memoryparkingposs_nu(bool value);
  public:

  // optional bool mpEasyRegisterAvailable = 2727;
  bool has_mpeasyregisteravailable() const;
  private:
  bool _internal_has_mpeasyregisteravailable() const;
  public:
  void clear_mpeasyregisteravailable();
  bool mpeasyregisteravailable() const;
  void set_mpeasyregisteravailable(bool value);
  private:
  bool _internal_mpeasyregisteravailable() const;
  void _internal_set_mpeasyregisteravailable(bool value);
  public:

  // optional bool preConditionFailureState = 2445;
  bool has_preconditionfailurestate() const;
  private:
  bool _internal_has_preconditionfailurestate() const;
  public:
  void clear_preconditionfailurestate();
  bool preconditionfailurestate() const;
  void set_preconditionfailurestate(bool value);
  private:
  bool _internal_preconditionfailurestate() const;
  void _internal_set_preconditionfailurestate(bool value);
  public:

  // optional .pb.ap_psm_app.hmimessage.HMIMessage generalUserInformation_nu = 2602;
  bool has_generaluserinformation_nu() const;
  private:
  bool _internal_has_generaluserinformation_nu() const;
  public:
  void clear_generaluserinformation_nu();
  ::pb::ap_psm_app::hmimessage::HMIMessage generaluserinformation_nu() const;
  void set_generaluserinformation_nu(::pb::ap_psm_app::hmimessage::HMIMessage value);
  private:
  ::pb::ap_psm_app::hmimessage::HMIMessage _internal_generaluserinformation_nu() const;
  void _internal_set_generaluserinformation_nu(::pb::ap_psm_app::hmimessage::HMIMessage value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_psm_app.apuser_information_port.APUserInformationPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> apaintrpausecondition_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > preconditionfailurereason_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  bool remoteappactive_nu_;
  bool remoteappauthorized_nu_;
  bool remoteappcoded_nu_;
  bool remotekeyselected_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apainteractionpausecount_;
  int maxspeed10kphwarning_nu_;
  int garageparking_nu_;
  int finishtype_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apainteractiontimer_;
  int currentgear_nu_;
  int ppcparkingmode_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 distancetostop_perc_;
  bool remotekeyposs_nu_;
  bool continueposs_nu_;
  bool remmanposs_nu_;
  bool undoposs_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  bool btnsemiautomparkingposs_nu_;
  bool garageopeneravail_nu_;
  bool switchinputdevposs_nu_;
  bool reverseassistposs_nu_;
  int drivingdirection_nu_;
  bool svposs_nu_;
  bool btnforwardposs_nu_;
  bool btnbackwardposs_nu_;
  bool btnfullyautomparkingposs_nu_;
  int remotemodeactive_nu_;
  bool memoryparkingposs_nu_;
  bool mpeasyregisteravailable_;
  bool preconditionfailurestate_;
  int generaluserinformation_nu_;
  friend struct ::TableStruct_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto;
};
// -------------------------------------------------------------------

class APUserInformationPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_psm_app.apuser_information_port.APUserInformationPort_array_port) */ {
 public:
  APUserInformationPort_array_port();
  virtual ~APUserInformationPort_array_port();

  APUserInformationPort_array_port(const APUserInformationPort_array_port& from);
  APUserInformationPort_array_port(APUserInformationPort_array_port&& from) noexcept
    : APUserInformationPort_array_port() {
    *this = ::std::move(from);
  }

  inline APUserInformationPort_array_port& operator=(const APUserInformationPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline APUserInformationPort_array_port& operator=(APUserInformationPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const APUserInformationPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const APUserInformationPort_array_port* internal_default_instance() {
    return reinterpret_cast<const APUserInformationPort_array_port*>(
               &_APUserInformationPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(APUserInformationPort_array_port& a, APUserInformationPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(APUserInformationPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline APUserInformationPort_array_port* New() const final {
    return CreateMaybeMessage<APUserInformationPort_array_port>(nullptr);
  }

  APUserInformationPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<APUserInformationPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const APUserInformationPort_array_port& from);
  void MergeFrom(const APUserInformationPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(APUserInformationPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_psm_app.apuser_information_port.APUserInformationPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto);
    return ::descriptor_table_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 70,
  };
  // repeated .pb.ap_psm_app.apuser_information_port.APUserInformationPort data = 70;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_psm_app::apuser_information_port::APUserInformationPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm_app::apuser_information_port::APUserInformationPort >*
      mutable_data();
  private:
  const ::pb::ap_psm_app::apuser_information_port::APUserInformationPort& _internal_data(int index) const;
  ::pb::ap_psm_app::apuser_information_port::APUserInformationPort* _internal_add_data();
  public:
  const ::pb::ap_psm_app::apuser_information_port::APUserInformationPort& data(int index) const;
  ::pb::ap_psm_app::apuser_information_port::APUserInformationPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm_app::apuser_information_port::APUserInformationPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_psm_app.apuser_information_port.APUserInformationPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm_app::apuser_information_port::APUserInformationPort > data_;
  friend struct ::TableStruct_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// APUserInformationPort

// optional uint32 uiVersionNumber = 2124;
inline bool APUserInformationPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void APUserInformationPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 APUserInformationPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 APUserInformationPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void APUserInformationPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  uiversionnumber_ = value;
}
inline void APUserInformationPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool APUserInformationPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool APUserInformationPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& APUserInformationPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& APUserInformationPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* APUserInformationPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.ap_psm_app.apuser_information_port.APUserInformationPort.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* APUserInformationPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* APUserInformationPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.ap_psm_app.apuser_information_port.APUserInformationPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void APUserInformationPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_psm_app.apuser_information_port.APUserInformationPort.sSigHeader)
}

// optional .pb.ap_psm_app.remote_mode.RemoteMode remoteModeActive_nu = 2332;
inline bool APUserInformationPort::_internal_has_remotemodeactive_nu() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_remotemodeactive_nu() const {
  return _internal_has_remotemodeactive_nu();
}
inline void APUserInformationPort::clear_remotemodeactive_nu() {
  remotemodeactive_nu_ = 0;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::pb::ap_psm_app::remote_mode::RemoteMode APUserInformationPort::_internal_remotemodeactive_nu() const {
  return static_cast< ::pb::ap_psm_app::remote_mode::RemoteMode >(remotemodeactive_nu_);
}
inline ::pb::ap_psm_app::remote_mode::RemoteMode APUserInformationPort::remotemodeactive_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteModeActive_nu)
  return _internal_remotemodeactive_nu();
}
inline void APUserInformationPort::_internal_set_remotemodeactive_nu(::pb::ap_psm_app::remote_mode::RemoteMode value) {
  assert(::pb::ap_psm_app::remote_mode::RemoteMode_IsValid(value));
  _has_bits_[0] |= 0x08000000u;
  remotemodeactive_nu_ = value;
}
inline void APUserInformationPort::set_remotemodeactive_nu(::pb::ap_psm_app::remote_mode::RemoteMode value) {
  _internal_set_remotemodeactive_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteModeActive_nu)
}

// optional bool remoteAppActive_nu = 2880;
inline bool APUserInformationPort::_internal_has_remoteappactive_nu() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool APUserInformationPort::has_remoteappactive_nu() const {
  return _internal_has_remoteappactive_nu();
}
inline void APUserInformationPort::clear_remoteappactive_nu() {
  remoteappactive_nu_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool APUserInformationPort::_internal_remoteappactive_nu() const {
  return remoteappactive_nu_;
}
inline bool APUserInformationPort::remoteappactive_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteAppActive_nu)
  return _internal_remoteappactive_nu();
}
inline void APUserInformationPort::_internal_set_remoteappactive_nu(bool value) {
  _has_bits_[0] |= 0x00000002u;
  remoteappactive_nu_ = value;
}
inline void APUserInformationPort::set_remoteappactive_nu(bool value) {
  _internal_set_remoteappactive_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteAppActive_nu)
}

// optional bool remoteAppAuthorized_nu = 4015;
inline bool APUserInformationPort::_internal_has_remoteappauthorized_nu() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool APUserInformationPort::has_remoteappauthorized_nu() const {
  return _internal_has_remoteappauthorized_nu();
}
inline void APUserInformationPort::clear_remoteappauthorized_nu() {
  remoteappauthorized_nu_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool APUserInformationPort::_internal_remoteappauthorized_nu() const {
  return remoteappauthorized_nu_;
}
inline bool APUserInformationPort::remoteappauthorized_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteAppAuthorized_nu)
  return _internal_remoteappauthorized_nu();
}
inline void APUserInformationPort::_internal_set_remoteappauthorized_nu(bool value) {
  _has_bits_[0] |= 0x00000004u;
  remoteappauthorized_nu_ = value;
}
inline void APUserInformationPort::set_remoteappauthorized_nu(bool value) {
  _internal_set_remoteappauthorized_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteAppAuthorized_nu)
}

// optional bool remoteAppCoded_nu = 3316;
inline bool APUserInformationPort::_internal_has_remoteappcoded_nu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool APUserInformationPort::has_remoteappcoded_nu() const {
  return _internal_has_remoteappcoded_nu();
}
inline void APUserInformationPort::clear_remoteappcoded_nu() {
  remoteappcoded_nu_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool APUserInformationPort::_internal_remoteappcoded_nu() const {
  return remoteappcoded_nu_;
}
inline bool APUserInformationPort::remoteappcoded_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteAppCoded_nu)
  return _internal_remoteappcoded_nu();
}
inline void APUserInformationPort::_internal_set_remoteappcoded_nu(bool value) {
  _has_bits_[0] |= 0x00000008u;
  remoteappcoded_nu_ = value;
}
inline void APUserInformationPort::set_remoteappcoded_nu(bool value) {
  _internal_set_remoteappcoded_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteAppCoded_nu)
}

// optional bool remoteKeySelected_nu = 2272;
inline bool APUserInformationPort::_internal_has_remotekeyselected_nu() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool APUserInformationPort::has_remotekeyselected_nu() const {
  return _internal_has_remotekeyselected_nu();
}
inline void APUserInformationPort::clear_remotekeyselected_nu() {
  remotekeyselected_nu_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool APUserInformationPort::_internal_remotekeyselected_nu() const {
  return remotekeyselected_nu_;
}
inline bool APUserInformationPort::remotekeyselected_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteKeySelected_nu)
  return _internal_remotekeyselected_nu();
}
inline void APUserInformationPort::_internal_set_remotekeyselected_nu(bool value) {
  _has_bits_[0] |= 0x00000010u;
  remotekeyselected_nu_ = value;
}
inline void APUserInformationPort::set_remotekeyselected_nu(bool value) {
  _internal_set_remotekeyselected_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteKeySelected_nu)
}

// optional bool remoteKeyPoss_nu = 3915;
inline bool APUserInformationPort::_internal_has_remotekeyposs_nu() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_remotekeyposs_nu() const {
  return _internal_has_remotekeyposs_nu();
}
inline void APUserInformationPort::clear_remotekeyposs_nu() {
  remotekeyposs_nu_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool APUserInformationPort::_internal_remotekeyposs_nu() const {
  return remotekeyposs_nu_;
}
inline bool APUserInformationPort::remotekeyposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteKeyPoss_nu)
  return _internal_remotekeyposs_nu();
}
inline void APUserInformationPort::_internal_set_remotekeyposs_nu(bool value) {
  _has_bits_[0] |= 0x00002000u;
  remotekeyposs_nu_ = value;
}
inline void APUserInformationPort::set_remotekeyposs_nu(bool value) {
  _internal_set_remotekeyposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remoteKeyPoss_nu)
}

// optional bool continuePoss_nu = 902;
inline bool APUserInformationPort::_internal_has_continueposs_nu() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_continueposs_nu() const {
  return _internal_has_continueposs_nu();
}
inline void APUserInformationPort::clear_continueposs_nu() {
  continueposs_nu_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool APUserInformationPort::_internal_continueposs_nu() const {
  return continueposs_nu_;
}
inline bool APUserInformationPort::continueposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.continuePoss_nu)
  return _internal_continueposs_nu();
}
inline void APUserInformationPort::_internal_set_continueposs_nu(bool value) {
  _has_bits_[0] |= 0x00004000u;
  continueposs_nu_ = value;
}
inline void APUserInformationPort::set_continueposs_nu(bool value) {
  _internal_set_continueposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.continuePoss_nu)
}

// optional bool remManPoss_nu = 643;
inline bool APUserInformationPort::_internal_has_remmanposs_nu() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_remmanposs_nu() const {
  return _internal_has_remmanposs_nu();
}
inline void APUserInformationPort::clear_remmanposs_nu() {
  remmanposs_nu_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool APUserInformationPort::_internal_remmanposs_nu() const {
  return remmanposs_nu_;
}
inline bool APUserInformationPort::remmanposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remManPoss_nu)
  return _internal_remmanposs_nu();
}
inline void APUserInformationPort::_internal_set_remmanposs_nu(bool value) {
  _has_bits_[0] |= 0x00008000u;
  remmanposs_nu_ = value;
}
inline void APUserInformationPort::set_remmanposs_nu(bool value) {
  _internal_set_remmanposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.remManPoss_nu)
}

// optional bool undoPoss_nu = 587;
inline bool APUserInformationPort::_internal_has_undoposs_nu() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_undoposs_nu() const {
  return _internal_has_undoposs_nu();
}
inline void APUserInformationPort::clear_undoposs_nu() {
  undoposs_nu_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool APUserInformationPort::_internal_undoposs_nu() const {
  return undoposs_nu_;
}
inline bool APUserInformationPort::undoposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.undoPoss_nu)
  return _internal_undoposs_nu();
}
inline void APUserInformationPort::_internal_set_undoposs_nu(bool value) {
  _has_bits_[0] |= 0x00010000u;
  undoposs_nu_ = value;
}
inline void APUserInformationPort::set_undoposs_nu(bool value) {
  _internal_set_undoposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.undoPoss_nu)
}

// optional bool svPoss_nu = 1740;
inline bool APUserInformationPort::_internal_has_svposs_nu() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_svposs_nu() const {
  return _internal_has_svposs_nu();
}
inline void APUserInformationPort::clear_svposs_nu() {
  svposs_nu_ = false;
  _has_bits_[0] &= ~0x00800000u;
}
inline bool APUserInformationPort::_internal_svposs_nu() const {
  return svposs_nu_;
}
inline bool APUserInformationPort::svposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.svPoss_nu)
  return _internal_svposs_nu();
}
inline void APUserInformationPort::_internal_set_svposs_nu(bool value) {
  _has_bits_[0] |= 0x00800000u;
  svposs_nu_ = value;
}
inline void APUserInformationPort::set_svposs_nu(bool value) {
  _internal_set_svposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.svPoss_nu)
}

// optional bool btnForwardPoss_nu = 1679;
inline bool APUserInformationPort::_internal_has_btnforwardposs_nu() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_btnforwardposs_nu() const {
  return _internal_has_btnforwardposs_nu();
}
inline void APUserInformationPort::clear_btnforwardposs_nu() {
  btnforwardposs_nu_ = false;
  _has_bits_[0] &= ~0x01000000u;
}
inline bool APUserInformationPort::_internal_btnforwardposs_nu() const {
  return btnforwardposs_nu_;
}
inline bool APUserInformationPort::btnforwardposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.btnForwardPoss_nu)
  return _internal_btnforwardposs_nu();
}
inline void APUserInformationPort::_internal_set_btnforwardposs_nu(bool value) {
  _has_bits_[0] |= 0x01000000u;
  btnforwardposs_nu_ = value;
}
inline void APUserInformationPort::set_btnforwardposs_nu(bool value) {
  _internal_set_btnforwardposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.btnForwardPoss_nu)
}

// optional bool btnBackwardPoss_nu = 3388;
inline bool APUserInformationPort::_internal_has_btnbackwardposs_nu() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_btnbackwardposs_nu() const {
  return _internal_has_btnbackwardposs_nu();
}
inline void APUserInformationPort::clear_btnbackwardposs_nu() {
  btnbackwardposs_nu_ = false;
  _has_bits_[0] &= ~0x02000000u;
}
inline bool APUserInformationPort::_internal_btnbackwardposs_nu() const {
  return btnbackwardposs_nu_;
}
inline bool APUserInformationPort::btnbackwardposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.btnBackwardPoss_nu)
  return _internal_btnbackwardposs_nu();
}
inline void APUserInformationPort::_internal_set_btnbackwardposs_nu(bool value) {
  _has_bits_[0] |= 0x02000000u;
  btnbackwardposs_nu_ = value;
}
inline void APUserInformationPort::set_btnbackwardposs_nu(bool value) {
  _internal_set_btnbackwardposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.btnBackwardPoss_nu)
}

// optional bool btnFullyAutomParkingPoss_nu = 2369;
inline bool APUserInformationPort::_internal_has_btnfullyautomparkingposs_nu() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_btnfullyautomparkingposs_nu() const {
  return _internal_has_btnfullyautomparkingposs_nu();
}
inline void APUserInformationPort::clear_btnfullyautomparkingposs_nu() {
  btnfullyautomparkingposs_nu_ = false;
  _has_bits_[0] &= ~0x04000000u;
}
inline bool APUserInformationPort::_internal_btnfullyautomparkingposs_nu() const {
  return btnfullyautomparkingposs_nu_;
}
inline bool APUserInformationPort::btnfullyautomparkingposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.btnFullyAutomParkingPoss_nu)
  return _internal_btnfullyautomparkingposs_nu();
}
inline void APUserInformationPort::_internal_set_btnfullyautomparkingposs_nu(bool value) {
  _has_bits_[0] |= 0x04000000u;
  btnfullyautomparkingposs_nu_ = value;
}
inline void APUserInformationPort::set_btnfullyautomparkingposs_nu(bool value) {
  _internal_set_btnfullyautomparkingposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.btnFullyAutomParkingPoss_nu)
}

// optional bool btnSemiAutomParkingPoss_nu = 2070;
inline bool APUserInformationPort::_internal_has_btnsemiautomparkingposs_nu() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_btnsemiautomparkingposs_nu() const {
  return _internal_has_btnsemiautomparkingposs_nu();
}
inline void APUserInformationPort::clear_btnsemiautomparkingposs_nu() {
  btnsemiautomparkingposs_nu_ = false;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool APUserInformationPort::_internal_btnsemiautomparkingposs_nu() const {
  return btnsemiautomparkingposs_nu_;
}
inline bool APUserInformationPort::btnsemiautomparkingposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.btnSemiAutomParkingPoss_nu)
  return _internal_btnsemiautomparkingposs_nu();
}
inline void APUserInformationPort::_internal_set_btnsemiautomparkingposs_nu(bool value) {
  _has_bits_[0] |= 0x00040000u;
  btnsemiautomparkingposs_nu_ = value;
}
inline void APUserInformationPort::set_btnsemiautomparkingposs_nu(bool value) {
  _internal_set_btnsemiautomparkingposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.btnSemiAutomParkingPoss_nu)
}

// optional bool garageOpenerAvail_nu = 1668;
inline bool APUserInformationPort::_internal_has_garageopeneravail_nu() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_garageopeneravail_nu() const {
  return _internal_has_garageopeneravail_nu();
}
inline void APUserInformationPort::clear_garageopeneravail_nu() {
  garageopeneravail_nu_ = false;
  _has_bits_[0] &= ~0x00080000u;
}
inline bool APUserInformationPort::_internal_garageopeneravail_nu() const {
  return garageopeneravail_nu_;
}
inline bool APUserInformationPort::garageopeneravail_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.garageOpenerAvail_nu)
  return _internal_garageopeneravail_nu();
}
inline void APUserInformationPort::_internal_set_garageopeneravail_nu(bool value) {
  _has_bits_[0] |= 0x00080000u;
  garageopeneravail_nu_ = value;
}
inline void APUserInformationPort::set_garageopeneravail_nu(bool value) {
  _internal_set_garageopeneravail_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.garageOpenerAvail_nu)
}

// optional uint32 distanceToStop_perc = 1416;
inline bool APUserInformationPort::_internal_has_distancetostop_perc() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_distancetostop_perc() const {
  return _internal_has_distancetostop_perc();
}
inline void APUserInformationPort::clear_distancetostop_perc() {
  distancetostop_perc_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 APUserInformationPort::_internal_distancetostop_perc() const {
  return distancetostop_perc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 APUserInformationPort::distancetostop_perc() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.distanceToStop_perc)
  return _internal_distancetostop_perc();
}
inline void APUserInformationPort::_internal_set_distancetostop_perc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  distancetostop_perc_ = value;
}
inline void APUserInformationPort::set_distancetostop_perc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_distancetostop_perc(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.distanceToStop_perc)
}

// optional .pb.ap_psm_app.max_speed10_kphwarning.MaxSpeed10KPHwarning maxSpeed10KPHwarning_nu = 553;
inline bool APUserInformationPort::_internal_has_maxspeed10kphwarning_nu() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool APUserInformationPort::has_maxspeed10kphwarning_nu() const {
  return _internal_has_maxspeed10kphwarning_nu();
}
inline void APUserInformationPort::clear_maxspeed10kphwarning_nu() {
  maxspeed10kphwarning_nu_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::pb::ap_psm_app::max_speed10_kphwarning::MaxSpeed10KPHwarning APUserInformationPort::_internal_maxspeed10kphwarning_nu() const {
  return static_cast< ::pb::ap_psm_app::max_speed10_kphwarning::MaxSpeed10KPHwarning >(maxspeed10kphwarning_nu_);
}
inline ::pb::ap_psm_app::max_speed10_kphwarning::MaxSpeed10KPHwarning APUserInformationPort::maxspeed10kphwarning_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.maxSpeed10KPHwarning_nu)
  return _internal_maxspeed10kphwarning_nu();
}
inline void APUserInformationPort::_internal_set_maxspeed10kphwarning_nu(::pb::ap_psm_app::max_speed10_kphwarning::MaxSpeed10KPHwarning value) {
  assert(::pb::ap_psm_app::max_speed10_kphwarning::MaxSpeed10KPHwarning_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  maxspeed10kphwarning_nu_ = value;
}
inline void APUserInformationPort::set_maxspeed10kphwarning_nu(::pb::ap_psm_app::max_speed10_kphwarning::MaxSpeed10KPHwarning value) {
  _internal_set_maxspeed10kphwarning_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.maxSpeed10KPHwarning_nu)
}

// optional .pb.ap_common.driving_direction.DrivingDirection drivingDirection_nu = 2162;
inline bool APUserInformationPort::_internal_has_drivingdirection_nu() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_drivingdirection_nu() const {
  return _internal_has_drivingdirection_nu();
}
inline void APUserInformationPort::clear_drivingdirection_nu() {
  drivingdirection_nu_ = 0;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::pb::ap_common::driving_direction::DrivingDirection APUserInformationPort::_internal_drivingdirection_nu() const {
  return static_cast< ::pb::ap_common::driving_direction::DrivingDirection >(drivingdirection_nu_);
}
inline ::pb::ap_common::driving_direction::DrivingDirection APUserInformationPort::drivingdirection_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.drivingDirection_nu)
  return _internal_drivingdirection_nu();
}
inline void APUserInformationPort::_internal_set_drivingdirection_nu(::pb::ap_common::driving_direction::DrivingDirection value) {
  assert(::pb::ap_common::driving_direction::DrivingDirection_IsValid(value));
  _has_bits_[0] |= 0x00400000u;
  drivingdirection_nu_ = value;
}
inline void APUserInformationPort::set_drivingdirection_nu(::pb::ap_common::driving_direction::DrivingDirection value) {
  _internal_set_drivingdirection_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.drivingDirection_nu)
}

// optional .pb.ap_psm_app.garage_parking.GarageParking garageParking_nu = 748;
inline bool APUserInformationPort::_internal_has_garageparking_nu() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool APUserInformationPort::has_garageparking_nu() const {
  return _internal_has_garageparking_nu();
}
inline void APUserInformationPort::clear_garageparking_nu() {
  garageparking_nu_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::pb::ap_psm_app::garage_parking::GarageParking APUserInformationPort::_internal_garageparking_nu() const {
  return static_cast< ::pb::ap_psm_app::garage_parking::GarageParking >(garageparking_nu_);
}
inline ::pb::ap_psm_app::garage_parking::GarageParking APUserInformationPort::garageparking_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.garageParking_nu)
  return _internal_garageparking_nu();
}
inline void APUserInformationPort::_internal_set_garageparking_nu(::pb::ap_psm_app::garage_parking::GarageParking value) {
  assert(::pb::ap_psm_app::garage_parking::GarageParking_IsValid(value));
  _has_bits_[0] |= 0x00000080u;
  garageparking_nu_ = value;
}
inline void APUserInformationPort::set_garageparking_nu(::pb::ap_psm_app::garage_parking::GarageParking value) {
  _internal_set_garageparking_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.garageParking_nu)
}

// optional .pb.ap_commonvehsigprovider.gear.Gear currentGear_nu = 1196;
inline bool APUserInformationPort::_internal_has_currentgear_nu() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool APUserInformationPort::has_currentgear_nu() const {
  return _internal_has_currentgear_nu();
}
inline void APUserInformationPort::clear_currentgear_nu() {
  currentgear_nu_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::pb::ap_commonvehsigprovider::gear::Gear APUserInformationPort::_internal_currentgear_nu() const {
  return static_cast< ::pb::ap_commonvehsigprovider::gear::Gear >(currentgear_nu_);
}
inline ::pb::ap_commonvehsigprovider::gear::Gear APUserInformationPort::currentgear_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.currentGear_nu)
  return _internal_currentgear_nu();
}
inline void APUserInformationPort::_internal_set_currentgear_nu(::pb::ap_commonvehsigprovider::gear::Gear value) {
  assert(::pb::ap_commonvehsigprovider::gear::Gear_IsValid(value));
  _has_bits_[0] |= 0x00000400u;
  currentgear_nu_ = value;
}
inline void APUserInformationPort::set_currentgear_nu(::pb::ap_commonvehsigprovider::gear::Gear value) {
  _internal_set_currentgear_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.currentGear_nu)
}

// optional .pb.ap_psm_app.hmimessage.HMIMessage generalUserInformation_nu = 2602;
inline bool APUserInformationPort::_internal_has_generaluserinformation_nu() const {
  bool value = (_has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_generaluserinformation_nu() const {
  return _internal_has_generaluserinformation_nu();
}
inline void APUserInformationPort::clear_generaluserinformation_nu() {
  generaluserinformation_nu_ = 0;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::pb::ap_psm_app::hmimessage::HMIMessage APUserInformationPort::_internal_generaluserinformation_nu() const {
  return static_cast< ::pb::ap_psm_app::hmimessage::HMIMessage >(generaluserinformation_nu_);
}
inline ::pb::ap_psm_app::hmimessage::HMIMessage APUserInformationPort::generaluserinformation_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.generalUserInformation_nu)
  return _internal_generaluserinformation_nu();
}
inline void APUserInformationPort::_internal_set_generaluserinformation_nu(::pb::ap_psm_app::hmimessage::HMIMessage value) {
  assert(::pb::ap_psm_app::hmimessage::HMIMessage_IsValid(value));
  _has_bits_[0] |= 0x80000000u;
  generaluserinformation_nu_ = value;
}
inline void APUserInformationPort::set_generaluserinformation_nu(::pb::ap_psm_app::hmimessage::HMIMessage value) {
  _internal_set_generaluserinformation_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.generalUserInformation_nu)
}

// optional .pb.ap_psm_app.ppcparking_mode.PPCParkingMode ppcParkingMode_nu = 1343;
inline bool APUserInformationPort::_internal_has_ppcparkingmode_nu() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool APUserInformationPort::has_ppcparkingmode_nu() const {
  return _internal_has_ppcparkingmode_nu();
}
inline void APUserInformationPort::clear_ppcparkingmode_nu() {
  ppcparkingmode_nu_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::pb::ap_psm_app::ppcparking_mode::PPCParkingMode APUserInformationPort::_internal_ppcparkingmode_nu() const {
  return static_cast< ::pb::ap_psm_app::ppcparking_mode::PPCParkingMode >(ppcparkingmode_nu_);
}
inline ::pb::ap_psm_app::ppcparking_mode::PPCParkingMode APUserInformationPort::ppcparkingmode_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.ppcParkingMode_nu)
  return _internal_ppcparkingmode_nu();
}
inline void APUserInformationPort::_internal_set_ppcparkingmode_nu(::pb::ap_psm_app::ppcparking_mode::PPCParkingMode value) {
  assert(::pb::ap_psm_app::ppcparking_mode::PPCParkingMode_IsValid(value));
  _has_bits_[0] |= 0x00000800u;
  ppcparkingmode_nu_ = value;
}
inline void APUserInformationPort::set_ppcparkingmode_nu(::pb::ap_psm_app::ppcparking_mode::PPCParkingMode value) {
  _internal_set_ppcparkingmode_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.ppcParkingMode_nu)
}

// optional .pb.ap_psm_app.apfinish_type.APFinishType finishType_nu = 804;
inline bool APUserInformationPort::_internal_has_finishtype_nu() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool APUserInformationPort::has_finishtype_nu() const {
  return _internal_has_finishtype_nu();
}
inline void APUserInformationPort::clear_finishtype_nu() {
  finishtype_nu_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::pb::ap_psm_app::apfinish_type::APFinishType APUserInformationPort::_internal_finishtype_nu() const {
  return static_cast< ::pb::ap_psm_app::apfinish_type::APFinishType >(finishtype_nu_);
}
inline ::pb::ap_psm_app::apfinish_type::APFinishType APUserInformationPort::finishtype_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.finishType_nu)
  return _internal_finishtype_nu();
}
inline void APUserInformationPort::_internal_set_finishtype_nu(::pb::ap_psm_app::apfinish_type::APFinishType value) {
  assert(::pb::ap_psm_app::apfinish_type::APFinishType_IsValid(value));
  _has_bits_[0] |= 0x00000100u;
  finishtype_nu_ = value;
}
inline void APUserInformationPort::set_finishtype_nu(::pb::ap_psm_app::apfinish_type::APFinishType value) {
  _internal_set_finishtype_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.finishType_nu)
}

// optional bool switchInputDevPoss_nu = 2126;
inline bool APUserInformationPort::_internal_has_switchinputdevposs_nu() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_switchinputdevposs_nu() const {
  return _internal_has_switchinputdevposs_nu();
}
inline void APUserInformationPort::clear_switchinputdevposs_nu() {
  switchinputdevposs_nu_ = false;
  _has_bits_[0] &= ~0x00100000u;
}
inline bool APUserInformationPort::_internal_switchinputdevposs_nu() const {
  return switchinputdevposs_nu_;
}
inline bool APUserInformationPort::switchinputdevposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.switchInputDevPoss_nu)
  return _internal_switchinputdevposs_nu();
}
inline void APUserInformationPort::_internal_set_switchinputdevposs_nu(bool value) {
  _has_bits_[0] |= 0x00100000u;
  switchinputdevposs_nu_ = value;
}
inline void APUserInformationPort::set_switchinputdevposs_nu(bool value) {
  _internal_set_switchinputdevposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.switchInputDevPoss_nu)
}

// optional bool reverseAssistPoss_nu = 2685;
inline bool APUserInformationPort::_internal_has_reverseassistposs_nu() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_reverseassistposs_nu() const {
  return _internal_has_reverseassistposs_nu();
}
inline void APUserInformationPort::clear_reverseassistposs_nu() {
  reverseassistposs_nu_ = false;
  _has_bits_[0] &= ~0x00200000u;
}
inline bool APUserInformationPort::_internal_reverseassistposs_nu() const {
  return reverseassistposs_nu_;
}
inline bool APUserInformationPort::reverseassistposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.reverseAssistPoss_nu)
  return _internal_reverseassistposs_nu();
}
inline void APUserInformationPort::_internal_set_reverseassistposs_nu(bool value) {
  _has_bits_[0] |= 0x00200000u;
  reverseassistposs_nu_ = value;
}
inline void APUserInformationPort::set_reverseassistposs_nu(bool value) {
  _internal_set_reverseassistposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.reverseAssistPoss_nu)
}

// optional bool memoryParkingPoss_nu = 1914;
inline bool APUserInformationPort::_internal_has_memoryparkingposs_nu() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_memoryparkingposs_nu() const {
  return _internal_has_memoryparkingposs_nu();
}
inline void APUserInformationPort::clear_memoryparkingposs_nu() {
  memoryparkingposs_nu_ = false;
  _has_bits_[0] &= ~0x10000000u;
}
inline bool APUserInformationPort::_internal_memoryparkingposs_nu() const {
  return memoryparkingposs_nu_;
}
inline bool APUserInformationPort::memoryparkingposs_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.memoryParkingPoss_nu)
  return _internal_memoryparkingposs_nu();
}
inline void APUserInformationPort::_internal_set_memoryparkingposs_nu(bool value) {
  _has_bits_[0] |= 0x10000000u;
  memoryparkingposs_nu_ = value;
}
inline void APUserInformationPort::set_memoryparkingposs_nu(bool value) {
  _internal_set_memoryparkingposs_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.memoryParkingPoss_nu)
}

// optional bool mpEasyRegisterAvailable = 2727;
inline bool APUserInformationPort::_internal_has_mpeasyregisteravailable() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_mpeasyregisteravailable() const {
  return _internal_has_mpeasyregisteravailable();
}
inline void APUserInformationPort::clear_mpeasyregisteravailable() {
  mpeasyregisteravailable_ = false;
  _has_bits_[0] &= ~0x20000000u;
}
inline bool APUserInformationPort::_internal_mpeasyregisteravailable() const {
  return mpeasyregisteravailable_;
}
inline bool APUserInformationPort::mpeasyregisteravailable() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.mpEasyRegisterAvailable)
  return _internal_mpeasyregisteravailable();
}
inline void APUserInformationPort::_internal_set_mpeasyregisteravailable(bool value) {
  _has_bits_[0] |= 0x20000000u;
  mpeasyregisteravailable_ = value;
}
inline void APUserInformationPort::set_mpeasyregisteravailable(bool value) {
  _internal_set_mpeasyregisteravailable(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.mpEasyRegisterAvailable)
}

// optional bool preConditionFailureState = 2445;
inline bool APUserInformationPort::_internal_has_preconditionfailurestate() const {
  bool value = (_has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool APUserInformationPort::has_preconditionfailurestate() const {
  return _internal_has_preconditionfailurestate();
}
inline void APUserInformationPort::clear_preconditionfailurestate() {
  preconditionfailurestate_ = false;
  _has_bits_[0] &= ~0x40000000u;
}
inline bool APUserInformationPort::_internal_preconditionfailurestate() const {
  return preconditionfailurestate_;
}
inline bool APUserInformationPort::preconditionfailurestate() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.preConditionFailureState)
  return _internal_preconditionfailurestate();
}
inline void APUserInformationPort::_internal_set_preconditionfailurestate(bool value) {
  _has_bits_[0] |= 0x40000000u;
  preconditionfailurestate_ = value;
}
inline void APUserInformationPort::set_preconditionfailurestate(bool value) {
  _internal_set_preconditionfailurestate(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.preConditionFailureState)
}

// repeated bool preConditionFailureReason = 2265;
inline int APUserInformationPort::_internal_preconditionfailurereason_size() const {
  return preconditionfailurereason_.size();
}
inline int APUserInformationPort::preconditionfailurereason_size() const {
  return _internal_preconditionfailurereason_size();
}
inline void APUserInformationPort::clear_preconditionfailurereason() {
  preconditionfailurereason_.Clear();
}
inline bool APUserInformationPort::_internal_preconditionfailurereason(int index) const {
  return preconditionfailurereason_.Get(index);
}
inline bool APUserInformationPort::preconditionfailurereason(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.preConditionFailureReason)
  return _internal_preconditionfailurereason(index);
}
inline void APUserInformationPort::set_preconditionfailurereason(int index, bool value) {
  preconditionfailurereason_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.preConditionFailureReason)
}
inline void APUserInformationPort::_internal_add_preconditionfailurereason(bool value) {
  preconditionfailurereason_.Add(value);
}
inline void APUserInformationPort::add_preconditionfailurereason(bool value) {
  _internal_add_preconditionfailurereason(value);
  // @@protoc_insertion_point(field_add:pb.ap_psm_app.apuser_information_port.APUserInformationPort.preConditionFailureReason)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
APUserInformationPort::_internal_preconditionfailurereason() const {
  return preconditionfailurereason_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
APUserInformationPort::preconditionfailurereason() const {
  // @@protoc_insertion_point(field_list:pb.ap_psm_app.apuser_information_port.APUserInformationPort.preConditionFailureReason)
  return _internal_preconditionfailurereason();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
APUserInformationPort::_internal_mutable_preconditionfailurereason() {
  return &preconditionfailurereason_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
APUserInformationPort::mutable_preconditionfailurereason() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_psm_app.apuser_information_port.APUserInformationPort.preConditionFailureReason)
  return _internal_mutable_preconditionfailurereason();
}

// repeated .pb.ap_psm_app.huintr_pause_condition.HUIntrPauseCondition apaIntrPauseCondition = 1809;
inline int APUserInformationPort::_internal_apaintrpausecondition_size() const {
  return apaintrpausecondition_.size();
}
inline int APUserInformationPort::apaintrpausecondition_size() const {
  return _internal_apaintrpausecondition_size();
}
inline void APUserInformationPort::clear_apaintrpausecondition() {
  apaintrpausecondition_.Clear();
}
inline ::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition APUserInformationPort::_internal_apaintrpausecondition(int index) const {
  return static_cast< ::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition >(apaintrpausecondition_.Get(index));
}
inline ::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition APUserInformationPort::apaintrpausecondition(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.apaIntrPauseCondition)
  return _internal_apaintrpausecondition(index);
}
inline void APUserInformationPort::set_apaintrpausecondition(int index, ::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition value) {
  assert(::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition_IsValid(value));
  apaintrpausecondition_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.apaIntrPauseCondition)
}
inline void APUserInformationPort::_internal_add_apaintrpausecondition(::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition value) {
  assert(::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition_IsValid(value));
  apaintrpausecondition_.Add(value);
}
inline void APUserInformationPort::add_apaintrpausecondition(::pb::ap_psm_app::huintr_pause_condition::HUIntrPauseCondition value) {
  // @@protoc_insertion_point(field_add:pb.ap_psm_app.apuser_information_port.APUserInformationPort.apaIntrPauseCondition)
  _internal_add_apaintrpausecondition(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
APUserInformationPort::apaintrpausecondition() const {
  // @@protoc_insertion_point(field_list:pb.ap_psm_app.apuser_information_port.APUserInformationPort.apaIntrPauseCondition)
  return apaintrpausecondition_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
APUserInformationPort::_internal_mutable_apaintrpausecondition() {
  return &apaintrpausecondition_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
APUserInformationPort::mutable_apaintrpausecondition() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_psm_app.apuser_information_port.APUserInformationPort.apaIntrPauseCondition)
  return _internal_mutable_apaintrpausecondition();
}

// optional uint32 apaInteractionPauseCount = 394;
inline bool APUserInformationPort::_internal_has_apainteractionpausecount() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool APUserInformationPort::has_apainteractionpausecount() const {
  return _internal_has_apainteractionpausecount();
}
inline void APUserInformationPort::clear_apainteractionpausecount() {
  apainteractionpausecount_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 APUserInformationPort::_internal_apainteractionpausecount() const {
  return apainteractionpausecount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 APUserInformationPort::apainteractionpausecount() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.apaInteractionPauseCount)
  return _internal_apainteractionpausecount();
}
inline void APUserInformationPort::_internal_set_apainteractionpausecount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  apainteractionpausecount_ = value;
}
inline void APUserInformationPort::set_apainteractionpausecount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apainteractionpausecount(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.apaInteractionPauseCount)
}

// optional uint32 apaInteractionTimer = 1168;
inline bool APUserInformationPort::_internal_has_apainteractiontimer() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool APUserInformationPort::has_apainteractiontimer() const {
  return _internal_has_apainteractiontimer();
}
inline void APUserInformationPort::clear_apainteractiontimer() {
  apainteractiontimer_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 APUserInformationPort::_internal_apainteractiontimer() const {
  return apainteractiontimer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 APUserInformationPort::apainteractiontimer() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort.apaInteractionTimer)
  return _internal_apainteractiontimer();
}
inline void APUserInformationPort::_internal_set_apainteractiontimer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  apainteractiontimer_ = value;
}
inline void APUserInformationPort::set_apainteractiontimer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apainteractiontimer(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.apuser_information_port.APUserInformationPort.apaInteractionTimer)
}

// -------------------------------------------------------------------

// APUserInformationPort_array_port

// repeated .pb.ap_psm_app.apuser_information_port.APUserInformationPort data = 70;
inline int APUserInformationPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int APUserInformationPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void APUserInformationPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_psm_app::apuser_information_port::APUserInformationPort* APUserInformationPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_psm_app.apuser_information_port.APUserInformationPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm_app::apuser_information_port::APUserInformationPort >*
APUserInformationPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_psm_app.apuser_information_port.APUserInformationPort_array_port.data)
  return &data_;
}
inline const ::pb::ap_psm_app::apuser_information_port::APUserInformationPort& APUserInformationPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_psm_app::apuser_information_port::APUserInformationPort& APUserInformationPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.apuser_information_port.APUserInformationPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_psm_app::apuser_information_port::APUserInformationPort* APUserInformationPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_psm_app::apuser_information_port::APUserInformationPort* APUserInformationPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_psm_app.apuser_information_port.APUserInformationPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm_app::apuser_information_port::APUserInformationPort >&
APUserInformationPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_psm_app.apuser_information_port.APUserInformationPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace apuser_information_port
}  // namespace ap_psm_app
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5fpsm_5fapp_2fapuser_5finformation_5fport_2eproto
