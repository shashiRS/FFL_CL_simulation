// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_psm_app/bcmreq.proto

#include "ap_psm_app/bcmreq.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ap_5fpsm_5fapp_2fbcmreq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BCMReq_ap_5fpsm_5fapp_2fbcmreq_2eproto;
namespace pb {
namespace ap_psm_app {
namespace bcmreq {
class BCMReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BCMReq> _instance;
} _BCMReq_default_instance_;
class BCMReq_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BCMReq_array_port> _instance;
} _BCMReq_array_port_default_instance_;
}  // namespace bcmreq
}  // namespace ap_psm_app
}  // namespace pb
static void InitDefaultsscc_info_BCMReq_ap_5fpsm_5fapp_2fbcmreq_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_psm_app::bcmreq::_BCMReq_default_instance_;
    new (ptr) ::pb::ap_psm_app::bcmreq::BCMReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_psm_app::bcmreq::BCMReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BCMReq_ap_5fpsm_5fapp_2fbcmreq_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BCMReq_ap_5fpsm_5fapp_2fbcmreq_2eproto}, {}};

static void InitDefaultsscc_info_BCMReq_array_port_ap_5fpsm_5fapp_2fbcmreq_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_psm_app::bcmreq::_BCMReq_array_port_default_instance_;
    new (ptr) ::pb::ap_psm_app::bcmreq::BCMReq_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_psm_app::bcmreq::BCMReq_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BCMReq_array_port_ap_5fpsm_5fapp_2fbcmreq_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BCMReq_array_port_ap_5fpsm_5fapp_2fbcmreq_2eproto}, {
      &scc_info_BCMReq_ap_5fpsm_5fapp_2fbcmreq_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ap_5fpsm_5fapp_2fbcmreq_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ap_5fpsm_5fapp_2fbcmreq_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ap_5fpsm_5fapp_2fbcmreq_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ap_5fpsm_5fapp_2fbcmreq_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, dirindleftreq_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, dirindrightreq_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, hazardwarning_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, environmentlightreq_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, lowbeamlightreq_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, backuplightreq_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, foldmirrors_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, unfoldmirrors_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq, blockconvtopactivation_nu_),
  5,
  6,
  7,
  8,
  1,
  2,
  3,
  4,
  0,
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm_app::bcmreq::BCMReq_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::pb::ap_psm_app::bcmreq::BCMReq)},
  { 23, 29, sizeof(::pb::ap_psm_app::bcmreq::BCMReq_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_psm_app::bcmreq::_BCMReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_psm_app::bcmreq::_BCMReq_array_port_default_instance_),
};

const char descriptor_table_protodef_ap_5fpsm_5fapp_2fbcmreq_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027ap_psm_app/bcmreq.proto\022\024pb.ap_psm_app"
  ".bcmreq\"\214\002\n\006BCMReq\022\031\n\020dirIndLeftReq_nu\030\213"
  "\036 \001(\010\022\032\n\021dirIndRightReq_nu\030\325\020 \001(\010\022\031\n\020haz"
  "ardWarning_nu\030\222\031 \001(\010\022\037\n\026environmentLight"
  "Req_nu\030\223\002 \001(\010\022\033\n\022lowBeamLightReq_nu\030\303\005 \001"
  "(\010\022\032\n\021backUpLightReq_nu\030\207\006 \001(\010\022\027\n\016foldMi"
  "rrors_nu\030\272\016 \001(\010\022\031\n\020unFoldMirrors_nu\030\306\020 \001"
  "(\010\022\"\n\031blockConvTopActivation_nu\030\326\022 \001(\010\"@"
  "\n\021BCMReq_array_port\022+\n\004data\030\344\021 \003(\0132\034.pb."
  "ap_psm_app.bcmreq.BCMReq"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ap_5fpsm_5fapp_2fbcmreq_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ap_5fpsm_5fapp_2fbcmreq_2eproto_sccs[2] = {
  &scc_info_BCMReq_ap_5fpsm_5fapp_2fbcmreq_2eproto.base,
  &scc_info_BCMReq_array_port_ap_5fpsm_5fapp_2fbcmreq_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ap_5fpsm_5fapp_2fbcmreq_2eproto_once;
static bool descriptor_table_ap_5fpsm_5fapp_2fbcmreq_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fpsm_5fapp_2fbcmreq_2eproto = {
  &descriptor_table_ap_5fpsm_5fapp_2fbcmreq_2eproto_initialized, descriptor_table_protodef_ap_5fpsm_5fapp_2fbcmreq_2eproto, "ap_psm_app/bcmreq.proto", 384,
  &descriptor_table_ap_5fpsm_5fapp_2fbcmreq_2eproto_once, descriptor_table_ap_5fpsm_5fapp_2fbcmreq_2eproto_sccs, descriptor_table_ap_5fpsm_5fapp_2fbcmreq_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_ap_5fpsm_5fapp_2fbcmreq_2eproto::offsets,
  file_level_metadata_ap_5fpsm_5fapp_2fbcmreq_2eproto, 2, file_level_enum_descriptors_ap_5fpsm_5fapp_2fbcmreq_2eproto, file_level_service_descriptors_ap_5fpsm_5fapp_2fbcmreq_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ap_5fpsm_5fapp_2fbcmreq_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ap_5fpsm_5fapp_2fbcmreq_2eproto), true);
namespace pb {
namespace ap_psm_app {
namespace bcmreq {

// ===================================================================

void BCMReq::InitAsDefaultInstance() {
}
class BCMReq::_Internal {
 public:
  using HasBits = decltype(std::declval<BCMReq>()._has_bits_);
  static void set_has_dirindleftreq_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_dirindrightreq_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_hazardwarning_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_environmentlightreq_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_lowbeamlightreq_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_backuplightreq_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_foldmirrors_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_unfoldmirrors_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_blockconvtopactivation_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

BCMReq::BCMReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_psm_app.bcmreq.BCMReq)
}
BCMReq::BCMReq(const BCMReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&blockconvtopactivation_nu_, &from.blockconvtopactivation_nu_,
    static_cast<size_t>(reinterpret_cast<char*>(&environmentlightreq_nu_) -
    reinterpret_cast<char*>(&blockconvtopactivation_nu_)) + sizeof(environmentlightreq_nu_));
  // @@protoc_insertion_point(copy_constructor:pb.ap_psm_app.bcmreq.BCMReq)
}

void BCMReq::SharedCtor() {
  ::memset(&blockconvtopactivation_nu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&environmentlightreq_nu_) -
      reinterpret_cast<char*>(&blockconvtopactivation_nu_)) + sizeof(environmentlightreq_nu_));
}

BCMReq::~BCMReq() {
  // @@protoc_insertion_point(destructor:pb.ap_psm_app.bcmreq.BCMReq)
  SharedDtor();
}

void BCMReq::SharedDtor() {
}

void BCMReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BCMReq& BCMReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BCMReq_ap_5fpsm_5fapp_2fbcmreq_2eproto.base);
  return *internal_default_instance();
}


void BCMReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_psm_app.bcmreq.BCMReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&blockconvtopactivation_nu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hazardwarning_nu_) -
        reinterpret_cast<char*>(&blockconvtopactivation_nu_)) + sizeof(hazardwarning_nu_));
  }
  environmentlightreq_nu_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* BCMReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool environmentLightReq_nu = 275;
      case 275:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_environmentlightreq_nu(&has_bits);
          environmentlightreq_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool lowBeamLightReq_nu = 707;
      case 707:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_lowbeamlightreq_nu(&has_bits);
          lowbeamlightreq_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool backUpLightReq_nu = 775;
      case 775:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_backuplightreq_nu(&has_bits);
          backuplightreq_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool foldMirrors_nu = 1850;
      case 1850:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_foldmirrors_nu(&has_bits);
          foldmirrors_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool unFoldMirrors_nu = 2118;
      case 2118:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_unfoldmirrors_nu(&has_bits);
          unfoldmirrors_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool dirIndRightReq_nu = 2133;
      case 2133:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_dirindrightreq_nu(&has_bits);
          dirindrightreq_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool blockConvTopActivation_nu = 2390;
      case 2390:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_blockconvtopactivation_nu(&has_bits);
          blockconvtopactivation_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool hazardWarning_nu = 3218;
      case 3218:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_hazardwarning_nu(&has_bits);
          hazardwarning_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool dirIndLeftReq_nu = 3851;
      case 3851:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_dirindleftreq_nu(&has_bits);
          dirindleftreq_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BCMReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_psm_app.bcmreq.BCMReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool environmentLightReq_nu = 275;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(275, this->_internal_environmentlightreq_nu(), target);
  }

  // optional bool lowBeamLightReq_nu = 707;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(707, this->_internal_lowbeamlightreq_nu(), target);
  }

  // optional bool backUpLightReq_nu = 775;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(775, this->_internal_backuplightreq_nu(), target);
  }

  // optional bool foldMirrors_nu = 1850;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1850, this->_internal_foldmirrors_nu(), target);
  }

  // optional bool unFoldMirrors_nu = 2118;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2118, this->_internal_unfoldmirrors_nu(), target);
  }

  // optional bool dirIndRightReq_nu = 2133;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2133, this->_internal_dirindrightreq_nu(), target);
  }

  // optional bool blockConvTopActivation_nu = 2390;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2390, this->_internal_blockconvtopactivation_nu(), target);
  }

  // optional bool hazardWarning_nu = 3218;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3218, this->_internal_hazardwarning_nu(), target);
  }

  // optional bool dirIndLeftReq_nu = 3851;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3851, this->_internal_dirindleftreq_nu(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_psm_app.bcmreq.BCMReq)
  return target;
}

size_t BCMReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_psm_app.bcmreq.BCMReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool blockConvTopActivation_nu = 2390;
    if (cached_has_bits & 0x00000001u) {
      total_size += 3 + 1;
    }

    // optional bool lowBeamLightReq_nu = 707;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool backUpLightReq_nu = 775;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool foldMirrors_nu = 1850;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool unFoldMirrors_nu = 2118;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 + 1;
    }

    // optional bool dirIndLeftReq_nu = 3851;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 + 1;
    }

    // optional bool dirIndRightReq_nu = 2133;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3 + 1;
    }

    // optional bool hazardWarning_nu = 3218;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 + 1;
    }

  }
  // optional bool environmentLightReq_nu = 275;
  if (cached_has_bits & 0x00000100u) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BCMReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_psm_app.bcmreq.BCMReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BCMReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BCMReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_psm_app.bcmreq.BCMReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_psm_app.bcmreq.BCMReq)
    MergeFrom(*source);
  }
}

void BCMReq::MergeFrom(const BCMReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_psm_app.bcmreq.BCMReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      blockconvtopactivation_nu_ = from.blockconvtopactivation_nu_;
    }
    if (cached_has_bits & 0x00000002u) {
      lowbeamlightreq_nu_ = from.lowbeamlightreq_nu_;
    }
    if (cached_has_bits & 0x00000004u) {
      backuplightreq_nu_ = from.backuplightreq_nu_;
    }
    if (cached_has_bits & 0x00000008u) {
      foldmirrors_nu_ = from.foldmirrors_nu_;
    }
    if (cached_has_bits & 0x00000010u) {
      unfoldmirrors_nu_ = from.unfoldmirrors_nu_;
    }
    if (cached_has_bits & 0x00000020u) {
      dirindleftreq_nu_ = from.dirindleftreq_nu_;
    }
    if (cached_has_bits & 0x00000040u) {
      dirindrightreq_nu_ = from.dirindrightreq_nu_;
    }
    if (cached_has_bits & 0x00000080u) {
      hazardwarning_nu_ = from.hazardwarning_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_environmentlightreq_nu(from._internal_environmentlightreq_nu());
  }
}

void BCMReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_psm_app.bcmreq.BCMReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BCMReq::CopyFrom(const BCMReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_psm_app.bcmreq.BCMReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BCMReq::IsInitialized() const {
  return true;
}

void BCMReq::InternalSwap(BCMReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(blockconvtopactivation_nu_, other->blockconvtopactivation_nu_);
  swap(lowbeamlightreq_nu_, other->lowbeamlightreq_nu_);
  swap(backuplightreq_nu_, other->backuplightreq_nu_);
  swap(foldmirrors_nu_, other->foldmirrors_nu_);
  swap(unfoldmirrors_nu_, other->unfoldmirrors_nu_);
  swap(dirindleftreq_nu_, other->dirindleftreq_nu_);
  swap(dirindrightreq_nu_, other->dirindrightreq_nu_);
  swap(hazardwarning_nu_, other->hazardwarning_nu_);
  swap(environmentlightreq_nu_, other->environmentlightreq_nu_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BCMReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BCMReq_array_port::InitAsDefaultInstance() {
}
class BCMReq_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<BCMReq_array_port>()._has_bits_);
};

BCMReq_array_port::BCMReq_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_psm_app.bcmreq.BCMReq_array_port)
}
BCMReq_array_port::BCMReq_array_port(const BCMReq_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ap_psm_app.bcmreq.BCMReq_array_port)
}

void BCMReq_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BCMReq_array_port_ap_5fpsm_5fapp_2fbcmreq_2eproto.base);
}

BCMReq_array_port::~BCMReq_array_port() {
  // @@protoc_insertion_point(destructor:pb.ap_psm_app.bcmreq.BCMReq_array_port)
  SharedDtor();
}

void BCMReq_array_port::SharedDtor() {
}

void BCMReq_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BCMReq_array_port& BCMReq_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BCMReq_array_port_ap_5fpsm_5fapp_2fbcmreq_2eproto.base);
  return *internal_default_instance();
}


void BCMReq_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_psm_app.bcmreq.BCMReq_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* BCMReq_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.ap_psm_app.bcmreq.BCMReq data = 2276;
      case 2276:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BCMReq_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_psm_app.bcmreq.BCMReq_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ap_psm_app.bcmreq.BCMReq data = 2276;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2276, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_psm_app.bcmreq.BCMReq_array_port)
  return target;
}

size_t BCMReq_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_psm_app.bcmreq.BCMReq_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.ap_psm_app.bcmreq.BCMReq data = 2276;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BCMReq_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_psm_app.bcmreq.BCMReq_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const BCMReq_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BCMReq_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_psm_app.bcmreq.BCMReq_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_psm_app.bcmreq.BCMReq_array_port)
    MergeFrom(*source);
  }
}

void BCMReq_array_port::MergeFrom(const BCMReq_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_psm_app.bcmreq.BCMReq_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void BCMReq_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_psm_app.bcmreq.BCMReq_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BCMReq_array_port::CopyFrom(const BCMReq_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_psm_app.bcmreq.BCMReq_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BCMReq_array_port::IsInitialized() const {
  return true;
}

void BCMReq_array_port::InternalSwap(BCMReq_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BCMReq_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bcmreq
}  // namespace ap_psm_app
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::ap_psm_app::bcmreq::BCMReq* Arena::CreateMaybeMessage< ::pb::ap_psm_app::bcmreq::BCMReq >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_psm_app::bcmreq::BCMReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ap_psm_app::bcmreq::BCMReq_array_port* Arena::CreateMaybeMessage< ::pb::ap_psm_app::bcmreq::BCMReq_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_psm_app::bcmreq::BCMReq_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
