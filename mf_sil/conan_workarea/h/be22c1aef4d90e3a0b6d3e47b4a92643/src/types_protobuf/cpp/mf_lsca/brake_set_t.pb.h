// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_lsca/brake_set_t.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mf_5flsca_2fbrake_5fset_5ft_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mf_5flsca_2fbrake_5fset_5ft_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mf_lsca/brake_model_t.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mf_5flsca_2fbrake_5fset_5ft_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mf_5flsca_2fbrake_5fset_5ft_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5flsca_2fbrake_5fset_5ft_2eproto;
namespace pb {
namespace mf_lsca {
namespace brake_set_t {
class brakeSet_t;
class brakeSet_tDefaultTypeInternal;
extern brakeSet_tDefaultTypeInternal _brakeSet_t_default_instance_;
class brakeSet_t_array_port;
class brakeSet_t_array_portDefaultTypeInternal;
extern brakeSet_t_array_portDefaultTypeInternal _brakeSet_t_array_port_default_instance_;
}  // namespace brake_set_t
}  // namespace mf_lsca
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::mf_lsca::brake_set_t::brakeSet_t* Arena::CreateMaybeMessage<::pb::mf_lsca::brake_set_t::brakeSet_t>(Arena*);
template<> ::pb::mf_lsca::brake_set_t::brakeSet_t_array_port* Arena::CreateMaybeMessage<::pb::mf_lsca::brake_set_t::brakeSet_t_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace mf_lsca {
namespace brake_set_t {

// ===================================================================

class brakeSet_t :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_lsca.brake_set_t.brakeSet_t) */ {
 public:
  brakeSet_t();
  virtual ~brakeSet_t();

  brakeSet_t(const brakeSet_t& from);
  brakeSet_t(brakeSet_t&& from) noexcept
    : brakeSet_t() {
    *this = ::std::move(from);
  }

  inline brakeSet_t& operator=(const brakeSet_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline brakeSet_t& operator=(brakeSet_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const brakeSet_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const brakeSet_t* internal_default_instance() {
    return reinterpret_cast<const brakeSet_t*>(
               &_brakeSet_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(brakeSet_t& a, brakeSet_t& b) {
    a.Swap(&b);
  }
  inline void Swap(brakeSet_t* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline brakeSet_t* New() const final {
    return CreateMaybeMessage<brakeSet_t>(nullptr);
  }

  brakeSet_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<brakeSet_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const brakeSet_t& from);
  void MergeFrom(const brakeSet_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(brakeSet_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_lsca.brake_set_t.brakeSet_t";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5flsca_2fbrake_5fset_5ft_2eproto);
    return ::descriptor_table_mf_5flsca_2fbrake_5fset_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmergencyBrakingFieldNumber = 326,
    kComfortBrakingFieldNumber = 2881,
  };
  // optional .pb.mf_lsca.brake_model_t.brakeModel_t emergencyBraking = 326;
  bool has_emergencybraking() const;
  private:
  bool _internal_has_emergencybraking() const;
  public:
  void clear_emergencybraking();
  const ::pb::mf_lsca::brake_model_t::brakeModel_t& emergencybraking() const;
  ::pb::mf_lsca::brake_model_t::brakeModel_t* release_emergencybraking();
  ::pb::mf_lsca::brake_model_t::brakeModel_t* mutable_emergencybraking();
  void set_allocated_emergencybraking(::pb::mf_lsca::brake_model_t::brakeModel_t* emergencybraking);
  private:
  const ::pb::mf_lsca::brake_model_t::brakeModel_t& _internal_emergencybraking() const;
  ::pb::mf_lsca::brake_model_t::brakeModel_t* _internal_mutable_emergencybraking();
  public:

  // optional .pb.mf_lsca.brake_model_t.brakeModel_t comfortBraking = 2881;
  bool has_comfortbraking() const;
  private:
  bool _internal_has_comfortbraking() const;
  public:
  void clear_comfortbraking();
  const ::pb::mf_lsca::brake_model_t::brakeModel_t& comfortbraking() const;
  ::pb::mf_lsca::brake_model_t::brakeModel_t* release_comfortbraking();
  ::pb::mf_lsca::brake_model_t::brakeModel_t* mutable_comfortbraking();
  void set_allocated_comfortbraking(::pb::mf_lsca::brake_model_t::brakeModel_t* comfortbraking);
  private:
  const ::pb::mf_lsca::brake_model_t::brakeModel_t& _internal_comfortbraking() const;
  ::pb::mf_lsca::brake_model_t::brakeModel_t* _internal_mutable_comfortbraking();
  public:

  // @@protoc_insertion_point(class_scope:pb.mf_lsca.brake_set_t.brakeSet_t)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::mf_lsca::brake_model_t::brakeModel_t* emergencybraking_;
  ::pb::mf_lsca::brake_model_t::brakeModel_t* comfortbraking_;
  friend struct ::TableStruct_mf_5flsca_2fbrake_5fset_5ft_2eproto;
};
// -------------------------------------------------------------------

class brakeSet_t_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_lsca.brake_set_t.brakeSet_t_array_port) */ {
 public:
  brakeSet_t_array_port();
  virtual ~brakeSet_t_array_port();

  brakeSet_t_array_port(const brakeSet_t_array_port& from);
  brakeSet_t_array_port(brakeSet_t_array_port&& from) noexcept
    : brakeSet_t_array_port() {
    *this = ::std::move(from);
  }

  inline brakeSet_t_array_port& operator=(const brakeSet_t_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline brakeSet_t_array_port& operator=(brakeSet_t_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const brakeSet_t_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const brakeSet_t_array_port* internal_default_instance() {
    return reinterpret_cast<const brakeSet_t_array_port*>(
               &_brakeSet_t_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(brakeSet_t_array_port& a, brakeSet_t_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(brakeSet_t_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline brakeSet_t_array_port* New() const final {
    return CreateMaybeMessage<brakeSet_t_array_port>(nullptr);
  }

  brakeSet_t_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<brakeSet_t_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const brakeSet_t_array_port& from);
  void MergeFrom(const brakeSet_t_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(brakeSet_t_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_lsca.brake_set_t.brakeSet_t_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5flsca_2fbrake_5fset_5ft_2eproto);
    return ::descriptor_table_mf_5flsca_2fbrake_5fset_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 697,
  };
  // repeated .pb.mf_lsca.brake_set_t.brakeSet_t data = 697;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::mf_lsca::brake_set_t::brakeSet_t* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_lsca::brake_set_t::brakeSet_t >*
      mutable_data();
  private:
  const ::pb::mf_lsca::brake_set_t::brakeSet_t& _internal_data(int index) const;
  ::pb::mf_lsca::brake_set_t::brakeSet_t* _internal_add_data();
  public:
  const ::pb::mf_lsca::brake_set_t::brakeSet_t& data(int index) const;
  ::pb::mf_lsca::brake_set_t::brakeSet_t* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_lsca::brake_set_t::brakeSet_t >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.mf_lsca.brake_set_t.brakeSet_t_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_lsca::brake_set_t::brakeSet_t > data_;
  friend struct ::TableStruct_mf_5flsca_2fbrake_5fset_5ft_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// brakeSet_t

// optional .pb.mf_lsca.brake_model_t.brakeModel_t emergencyBraking = 326;
inline bool brakeSet_t::_internal_has_emergencybraking() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || emergencybraking_ != nullptr);
  return value;
}
inline bool brakeSet_t::has_emergencybraking() const {
  return _internal_has_emergencybraking();
}
inline const ::pb::mf_lsca::brake_model_t::brakeModel_t& brakeSet_t::_internal_emergencybraking() const {
  const ::pb::mf_lsca::brake_model_t::brakeModel_t* p = emergencybraking_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_lsca::brake_model_t::brakeModel_t*>(
      &::pb::mf_lsca::brake_model_t::_brakeModel_t_default_instance_);
}
inline const ::pb::mf_lsca::brake_model_t::brakeModel_t& brakeSet_t::emergencybraking() const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.brake_set_t.brakeSet_t.emergencyBraking)
  return _internal_emergencybraking();
}
inline ::pb::mf_lsca::brake_model_t::brakeModel_t* brakeSet_t::release_emergencybraking() {
  // @@protoc_insertion_point(field_release:pb.mf_lsca.brake_set_t.brakeSet_t.emergencyBraking)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::mf_lsca::brake_model_t::brakeModel_t* temp = emergencybraking_;
  emergencybraking_ = nullptr;
  return temp;
}
inline ::pb::mf_lsca::brake_model_t::brakeModel_t* brakeSet_t::_internal_mutable_emergencybraking() {
  _has_bits_[0] |= 0x00000001u;
  if (emergencybraking_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_lsca::brake_model_t::brakeModel_t>(GetArenaNoVirtual());
    emergencybraking_ = p;
  }
  return emergencybraking_;
}
inline ::pb::mf_lsca::brake_model_t::brakeModel_t* brakeSet_t::mutable_emergencybraking() {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.brake_set_t.brakeSet_t.emergencyBraking)
  return _internal_mutable_emergencybraking();
}
inline void brakeSet_t::set_allocated_emergencybraking(::pb::mf_lsca::brake_model_t::brakeModel_t* emergencybraking) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(emergencybraking_);
  }
  if (emergencybraking) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      emergencybraking = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, emergencybraking, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  emergencybraking_ = emergencybraking;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_lsca.brake_set_t.brakeSet_t.emergencyBraking)
}

// optional .pb.mf_lsca.brake_model_t.brakeModel_t comfortBraking = 2881;
inline bool brakeSet_t::_internal_has_comfortbraking() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || comfortbraking_ != nullptr);
  return value;
}
inline bool brakeSet_t::has_comfortbraking() const {
  return _internal_has_comfortbraking();
}
inline const ::pb::mf_lsca::brake_model_t::brakeModel_t& brakeSet_t::_internal_comfortbraking() const {
  const ::pb::mf_lsca::brake_model_t::brakeModel_t* p = comfortbraking_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_lsca::brake_model_t::brakeModel_t*>(
      &::pb::mf_lsca::brake_model_t::_brakeModel_t_default_instance_);
}
inline const ::pb::mf_lsca::brake_model_t::brakeModel_t& brakeSet_t::comfortbraking() const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.brake_set_t.brakeSet_t.comfortBraking)
  return _internal_comfortbraking();
}
inline ::pb::mf_lsca::brake_model_t::brakeModel_t* brakeSet_t::release_comfortbraking() {
  // @@protoc_insertion_point(field_release:pb.mf_lsca.brake_set_t.brakeSet_t.comfortBraking)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::mf_lsca::brake_model_t::brakeModel_t* temp = comfortbraking_;
  comfortbraking_ = nullptr;
  return temp;
}
inline ::pb::mf_lsca::brake_model_t::brakeModel_t* brakeSet_t::_internal_mutable_comfortbraking() {
  _has_bits_[0] |= 0x00000002u;
  if (comfortbraking_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_lsca::brake_model_t::brakeModel_t>(GetArenaNoVirtual());
    comfortbraking_ = p;
  }
  return comfortbraking_;
}
inline ::pb::mf_lsca::brake_model_t::brakeModel_t* brakeSet_t::mutable_comfortbraking() {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.brake_set_t.brakeSet_t.comfortBraking)
  return _internal_mutable_comfortbraking();
}
inline void brakeSet_t::set_allocated_comfortbraking(::pb::mf_lsca::brake_model_t::brakeModel_t* comfortbraking) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(comfortbraking_);
  }
  if (comfortbraking) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      comfortbraking = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, comfortbraking, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  comfortbraking_ = comfortbraking;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_lsca.brake_set_t.brakeSet_t.comfortBraking)
}

// -------------------------------------------------------------------

// brakeSet_t_array_port

// repeated .pb.mf_lsca.brake_set_t.brakeSet_t data = 697;
inline int brakeSet_t_array_port::_internal_data_size() const {
  return data_.size();
}
inline int brakeSet_t_array_port::data_size() const {
  return _internal_data_size();
}
inline void brakeSet_t_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::mf_lsca::brake_set_t::brakeSet_t* brakeSet_t_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.brake_set_t.brakeSet_t_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_lsca::brake_set_t::brakeSet_t >*
brakeSet_t_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_lsca.brake_set_t.brakeSet_t_array_port.data)
  return &data_;
}
inline const ::pb::mf_lsca::brake_set_t::brakeSet_t& brakeSet_t_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::mf_lsca::brake_set_t::brakeSet_t& brakeSet_t_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.brake_set_t.brakeSet_t_array_port.data)
  return _internal_data(index);
}
inline ::pb::mf_lsca::brake_set_t::brakeSet_t* brakeSet_t_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::mf_lsca::brake_set_t::brakeSet_t* brakeSet_t_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.mf_lsca.brake_set_t.brakeSet_t_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_lsca::brake_set_t::brakeSet_t >&
brakeSet_t_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.mf_lsca.brake_set_t.brakeSet_t_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace brake_set_t
}  // namespace mf_lsca
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mf_5flsca_2fbrake_5fset_5ft_2eproto
