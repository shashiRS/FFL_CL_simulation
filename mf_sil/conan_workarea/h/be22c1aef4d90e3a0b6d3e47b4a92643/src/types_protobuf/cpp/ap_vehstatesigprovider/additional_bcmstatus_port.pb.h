// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_vehstatesigprovider/additional_bcmstatus_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "ap_vehstatesigprovider/light.pb.h"
#include "ap_vehstatesigprovider/ignition.pb.h"
#include "ap_vehstatesigprovider/outer_rear_view_mirror.pb.h"
#include "ap_vehstatesigprovider/sunroof_status.pb.h"
#include "ap_vehstatesigprovider/charging_status.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto;
namespace pb {
namespace ap_vehstatesigprovider {
namespace additional_bcmstatus_port {
class AdditionalBCMStatusPort;
class AdditionalBCMStatusPortDefaultTypeInternal;
extern AdditionalBCMStatusPortDefaultTypeInternal _AdditionalBCMStatusPort_default_instance_;
class AdditionalBCMStatusPort_array_port;
class AdditionalBCMStatusPort_array_portDefaultTypeInternal;
extern AdditionalBCMStatusPort_array_portDefaultTypeInternal _AdditionalBCMStatusPort_array_port_default_instance_;
}  // namespace additional_bcmstatus_port
}  // namespace ap_vehstatesigprovider
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort* Arena::CreateMaybeMessage<::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort>(Arena*);
template<> ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port* Arena::CreateMaybeMessage<::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_vehstatesigprovider {
namespace additional_bcmstatus_port {

// ===================================================================

class AdditionalBCMStatusPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort) */ {
 public:
  AdditionalBCMStatusPort();
  virtual ~AdditionalBCMStatusPort();

  AdditionalBCMStatusPort(const AdditionalBCMStatusPort& from);
  AdditionalBCMStatusPort(AdditionalBCMStatusPort&& from) noexcept
    : AdditionalBCMStatusPort() {
    *this = ::std::move(from);
  }

  inline AdditionalBCMStatusPort& operator=(const AdditionalBCMStatusPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdditionalBCMStatusPort& operator=(AdditionalBCMStatusPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AdditionalBCMStatusPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdditionalBCMStatusPort* internal_default_instance() {
    return reinterpret_cast<const AdditionalBCMStatusPort*>(
               &_AdditionalBCMStatusPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AdditionalBCMStatusPort& a, AdditionalBCMStatusPort& b) {
    a.Swap(&b);
  }
  inline void Swap(AdditionalBCMStatusPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AdditionalBCMStatusPort* New() const final {
    return CreateMaybeMessage<AdditionalBCMStatusPort>(nullptr);
  }

  AdditionalBCMStatusPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AdditionalBCMStatusPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AdditionalBCMStatusPort& from);
  void MergeFrom(const AdditionalBCMStatusPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdditionalBCMStatusPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto);
    return ::descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChargingStatusNuFieldNumber = 65,
    kIgnitionFieldNumber = 544,
    kLightFieldNumber = 850,
    kSSigHeaderFieldNumber = 1033,
    kOuterRearViewMirrorStateFieldNumber = 3703,
    kUiVersionNumberFieldNumber = 2124,
    kSunroofStatusNuFieldNumber = 1425,
    kFrontLidOpenNuFieldNumber = 781,
    kTankCapOpenNuFieldNumber = 3301,
  };
  // optional .pb.ap_vehstatesigprovider.charging_status.ChargingStatus chargingStatus_nu = 65;
  bool has_chargingstatus_nu() const;
  private:
  bool _internal_has_chargingstatus_nu() const;
  public:
  void clear_chargingstatus_nu();
  const ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus& chargingstatus_nu() const;
  ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* release_chargingstatus_nu();
  ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* mutable_chargingstatus_nu();
  void set_allocated_chargingstatus_nu(::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* chargingstatus_nu);
  private:
  const ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus& _internal_chargingstatus_nu() const;
  ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* _internal_mutable_chargingstatus_nu();
  public:

  // optional .pb.ap_vehstatesigprovider.ignition.Ignition ignition = 544;
  bool has_ignition() const;
  private:
  bool _internal_has_ignition() const;
  public:
  void clear_ignition();
  const ::pb::ap_vehstatesigprovider::ignition::Ignition& ignition() const;
  ::pb::ap_vehstatesigprovider::ignition::Ignition* release_ignition();
  ::pb::ap_vehstatesigprovider::ignition::Ignition* mutable_ignition();
  void set_allocated_ignition(::pb::ap_vehstatesigprovider::ignition::Ignition* ignition);
  private:
  const ::pb::ap_vehstatesigprovider::ignition::Ignition& _internal_ignition() const;
  ::pb::ap_vehstatesigprovider::ignition::Ignition* _internal_mutable_ignition();
  public:

  // optional .pb.ap_vehstatesigprovider.light.Light light = 850;
  bool has_light() const;
  private:
  bool _internal_has_light() const;
  public:
  void clear_light();
  const ::pb::ap_vehstatesigprovider::light::Light& light() const;
  ::pb::ap_vehstatesigprovider::light::Light* release_light();
  ::pb::ap_vehstatesigprovider::light::Light* mutable_light();
  void set_allocated_light(::pb::ap_vehstatesigprovider::light::Light* light);
  private:
  const ::pb::ap_vehstatesigprovider::light::Light& _internal_light() const;
  ::pb::ap_vehstatesigprovider::light::Light* _internal_mutable_light();
  public:

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional .pb.ap_vehstatesigprovider.outer_rear_view_mirror.OuterRearViewMirror outerRearViewMirrorState = 3703;
  bool has_outerrearviewmirrorstate() const;
  private:
  bool _internal_has_outerrearviewmirrorstate() const;
  public:
  void clear_outerrearviewmirrorstate();
  const ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror& outerrearviewmirrorstate() const;
  ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* release_outerrearviewmirrorstate();
  ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* mutable_outerrearviewmirrorstate();
  void set_allocated_outerrearviewmirrorstate(::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* outerrearviewmirrorstate);
  private:
  const ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror& _internal_outerrearviewmirrorstate() const;
  ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* _internal_mutable_outerrearviewmirrorstate();
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.ap_vehstatesigprovider.sunroof_status.SunroofStatus sunroofStatus_nu = 1425;
  bool has_sunroofstatus_nu() const;
  private:
  bool _internal_has_sunroofstatus_nu() const;
  public:
  void clear_sunroofstatus_nu();
  ::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus sunroofstatus_nu() const;
  void set_sunroofstatus_nu(::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus value);
  private:
  ::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus _internal_sunroofstatus_nu() const;
  void _internal_set_sunroofstatus_nu(::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus value);
  public:

  // optional bool frontLidOpen_nu = 781;
  bool has_frontlidopen_nu() const;
  private:
  bool _internal_has_frontlidopen_nu() const;
  public:
  void clear_frontlidopen_nu();
  bool frontlidopen_nu() const;
  void set_frontlidopen_nu(bool value);
  private:
  bool _internal_frontlidopen_nu() const;
  void _internal_set_frontlidopen_nu(bool value);
  public:

  // optional bool tankCapOpen_nu = 3301;
  bool has_tankcapopen_nu() const;
  private:
  bool _internal_has_tankcapopen_nu() const;
  public:
  void clear_tankcapopen_nu();
  bool tankcapopen_nu() const;
  void set_tankcapopen_nu(bool value);
  private:
  bool _internal_tankcapopen_nu() const;
  void _internal_set_tankcapopen_nu(bool value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* chargingstatus_nu_;
  ::pb::ap_vehstatesigprovider::ignition::Ignition* ignition_;
  ::pb::ap_vehstatesigprovider::light::Light* light_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* outerrearviewmirrorstate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  int sunroofstatus_nu_;
  bool frontlidopen_nu_;
  bool tankcapopen_nu_;
  friend struct ::TableStruct_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto;
};
// -------------------------------------------------------------------

class AdditionalBCMStatusPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port) */ {
 public:
  AdditionalBCMStatusPort_array_port();
  virtual ~AdditionalBCMStatusPort_array_port();

  AdditionalBCMStatusPort_array_port(const AdditionalBCMStatusPort_array_port& from);
  AdditionalBCMStatusPort_array_port(AdditionalBCMStatusPort_array_port&& from) noexcept
    : AdditionalBCMStatusPort_array_port() {
    *this = ::std::move(from);
  }

  inline AdditionalBCMStatusPort_array_port& operator=(const AdditionalBCMStatusPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdditionalBCMStatusPort_array_port& operator=(AdditionalBCMStatusPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AdditionalBCMStatusPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdditionalBCMStatusPort_array_port* internal_default_instance() {
    return reinterpret_cast<const AdditionalBCMStatusPort_array_port*>(
               &_AdditionalBCMStatusPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AdditionalBCMStatusPort_array_port& a, AdditionalBCMStatusPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(AdditionalBCMStatusPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AdditionalBCMStatusPort_array_port* New() const final {
    return CreateMaybeMessage<AdditionalBCMStatusPort_array_port>(nullptr);
  }

  AdditionalBCMStatusPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AdditionalBCMStatusPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AdditionalBCMStatusPort_array_port& from);
  void MergeFrom(const AdditionalBCMStatusPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdditionalBCMStatusPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto);
    return ::descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2924,
  };
  // repeated .pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort data = 2924;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort >*
      mutable_data();
  private:
  const ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort& _internal_data(int index) const;
  ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort* _internal_add_data();
  public:
  const ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort& data(int index) const;
  ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort > data_;
  friend struct ::TableStruct_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AdditionalBCMStatusPort

// optional uint32 uiVersionNumber = 2124;
inline bool AdditionalBCMStatusPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool AdditionalBCMStatusPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void AdditionalBCMStatusPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AdditionalBCMStatusPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AdditionalBCMStatusPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void AdditionalBCMStatusPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  uiversionnumber_ = value;
}
inline void AdditionalBCMStatusPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool AdditionalBCMStatusPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool AdditionalBCMStatusPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& AdditionalBCMStatusPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& AdditionalBCMStatusPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* AdditionalBCMStatusPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.sSigHeader)
  _has_bits_[0] &= ~0x00000008u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* AdditionalBCMStatusPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000008u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* AdditionalBCMStatusPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void AdditionalBCMStatusPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.sSigHeader)
}

// optional .pb.ap_vehstatesigprovider.light.Light light = 850;
inline bool AdditionalBCMStatusPort::_internal_has_light() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || light_ != nullptr);
  return value;
}
inline bool AdditionalBCMStatusPort::has_light() const {
  return _internal_has_light();
}
inline const ::pb::ap_vehstatesigprovider::light::Light& AdditionalBCMStatusPort::_internal_light() const {
  const ::pb::ap_vehstatesigprovider::light::Light* p = light_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::ap_vehstatesigprovider::light::Light*>(
      &::pb::ap_vehstatesigprovider::light::_Light_default_instance_);
}
inline const ::pb::ap_vehstatesigprovider::light::Light& AdditionalBCMStatusPort::light() const {
  // @@protoc_insertion_point(field_get:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.light)
  return _internal_light();
}
inline ::pb::ap_vehstatesigprovider::light::Light* AdditionalBCMStatusPort::release_light() {
  // @@protoc_insertion_point(field_release:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.light)
  _has_bits_[0] &= ~0x00000004u;
  ::pb::ap_vehstatesigprovider::light::Light* temp = light_;
  light_ = nullptr;
  return temp;
}
inline ::pb::ap_vehstatesigprovider::light::Light* AdditionalBCMStatusPort::_internal_mutable_light() {
  _has_bits_[0] |= 0x00000004u;
  if (light_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ap_vehstatesigprovider::light::Light>(GetArenaNoVirtual());
    light_ = p;
  }
  return light_;
}
inline ::pb::ap_vehstatesigprovider::light::Light* AdditionalBCMStatusPort::mutable_light() {
  // @@protoc_insertion_point(field_mutable:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.light)
  return _internal_mutable_light();
}
inline void AdditionalBCMStatusPort::set_allocated_light(::pb::ap_vehstatesigprovider::light::Light* light) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(light_);
  }
  if (light) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      light = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, light, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  light_ = light;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.light)
}

// optional .pb.ap_vehstatesigprovider.ignition.Ignition ignition = 544;
inline bool AdditionalBCMStatusPort::_internal_has_ignition() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || ignition_ != nullptr);
  return value;
}
inline bool AdditionalBCMStatusPort::has_ignition() const {
  return _internal_has_ignition();
}
inline const ::pb::ap_vehstatesigprovider::ignition::Ignition& AdditionalBCMStatusPort::_internal_ignition() const {
  const ::pb::ap_vehstatesigprovider::ignition::Ignition* p = ignition_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::ap_vehstatesigprovider::ignition::Ignition*>(
      &::pb::ap_vehstatesigprovider::ignition::_Ignition_default_instance_);
}
inline const ::pb::ap_vehstatesigprovider::ignition::Ignition& AdditionalBCMStatusPort::ignition() const {
  // @@protoc_insertion_point(field_get:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.ignition)
  return _internal_ignition();
}
inline ::pb::ap_vehstatesigprovider::ignition::Ignition* AdditionalBCMStatusPort::release_ignition() {
  // @@protoc_insertion_point(field_release:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.ignition)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::ap_vehstatesigprovider::ignition::Ignition* temp = ignition_;
  ignition_ = nullptr;
  return temp;
}
inline ::pb::ap_vehstatesigprovider::ignition::Ignition* AdditionalBCMStatusPort::_internal_mutable_ignition() {
  _has_bits_[0] |= 0x00000002u;
  if (ignition_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ap_vehstatesigprovider::ignition::Ignition>(GetArenaNoVirtual());
    ignition_ = p;
  }
  return ignition_;
}
inline ::pb::ap_vehstatesigprovider::ignition::Ignition* AdditionalBCMStatusPort::mutable_ignition() {
  // @@protoc_insertion_point(field_mutable:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.ignition)
  return _internal_mutable_ignition();
}
inline void AdditionalBCMStatusPort::set_allocated_ignition(::pb::ap_vehstatesigprovider::ignition::Ignition* ignition) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ignition_);
  }
  if (ignition) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ignition = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ignition, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  ignition_ = ignition;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.ignition)
}

// optional bool frontLidOpen_nu = 781;
inline bool AdditionalBCMStatusPort::_internal_has_frontlidopen_nu() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool AdditionalBCMStatusPort::has_frontlidopen_nu() const {
  return _internal_has_frontlidopen_nu();
}
inline void AdditionalBCMStatusPort::clear_frontlidopen_nu() {
  frontlidopen_nu_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool AdditionalBCMStatusPort::_internal_frontlidopen_nu() const {
  return frontlidopen_nu_;
}
inline bool AdditionalBCMStatusPort::frontlidopen_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.frontLidOpen_nu)
  return _internal_frontlidopen_nu();
}
inline void AdditionalBCMStatusPort::_internal_set_frontlidopen_nu(bool value) {
  _has_bits_[0] |= 0x00000080u;
  frontlidopen_nu_ = value;
}
inline void AdditionalBCMStatusPort::set_frontlidopen_nu(bool value) {
  _internal_set_frontlidopen_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.frontLidOpen_nu)
}

// optional bool tankCapOpen_nu = 3301;
inline bool AdditionalBCMStatusPort::_internal_has_tankcapopen_nu() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool AdditionalBCMStatusPort::has_tankcapopen_nu() const {
  return _internal_has_tankcapopen_nu();
}
inline void AdditionalBCMStatusPort::clear_tankcapopen_nu() {
  tankcapopen_nu_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool AdditionalBCMStatusPort::_internal_tankcapopen_nu() const {
  return tankcapopen_nu_;
}
inline bool AdditionalBCMStatusPort::tankcapopen_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.tankCapOpen_nu)
  return _internal_tankcapopen_nu();
}
inline void AdditionalBCMStatusPort::_internal_set_tankcapopen_nu(bool value) {
  _has_bits_[0] |= 0x00000100u;
  tankcapopen_nu_ = value;
}
inline void AdditionalBCMStatusPort::set_tankcapopen_nu(bool value) {
  _internal_set_tankcapopen_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.tankCapOpen_nu)
}

// optional .pb.ap_vehstatesigprovider.outer_rear_view_mirror.OuterRearViewMirror outerRearViewMirrorState = 3703;
inline bool AdditionalBCMStatusPort::_internal_has_outerrearviewmirrorstate() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || outerrearviewmirrorstate_ != nullptr);
  return value;
}
inline bool AdditionalBCMStatusPort::has_outerrearviewmirrorstate() const {
  return _internal_has_outerrearviewmirrorstate();
}
inline const ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror& AdditionalBCMStatusPort::_internal_outerrearviewmirrorstate() const {
  const ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* p = outerrearviewmirrorstate_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror*>(
      &::pb::ap_vehstatesigprovider::outer_rear_view_mirror::_OuterRearViewMirror_default_instance_);
}
inline const ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror& AdditionalBCMStatusPort::outerrearviewmirrorstate() const {
  // @@protoc_insertion_point(field_get:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.outerRearViewMirrorState)
  return _internal_outerrearviewmirrorstate();
}
inline ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* AdditionalBCMStatusPort::release_outerrearviewmirrorstate() {
  // @@protoc_insertion_point(field_release:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.outerRearViewMirrorState)
  _has_bits_[0] &= ~0x00000010u;
  ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* temp = outerrearviewmirrorstate_;
  outerrearviewmirrorstate_ = nullptr;
  return temp;
}
inline ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* AdditionalBCMStatusPort::_internal_mutable_outerrearviewmirrorstate() {
  _has_bits_[0] |= 0x00000010u;
  if (outerrearviewmirrorstate_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror>(GetArenaNoVirtual());
    outerrearviewmirrorstate_ = p;
  }
  return outerrearviewmirrorstate_;
}
inline ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* AdditionalBCMStatusPort::mutable_outerrearviewmirrorstate() {
  // @@protoc_insertion_point(field_mutable:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.outerRearViewMirrorState)
  return _internal_mutable_outerrearviewmirrorstate();
}
inline void AdditionalBCMStatusPort::set_allocated_outerrearviewmirrorstate(::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror* outerrearviewmirrorstate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(outerrearviewmirrorstate_);
  }
  if (outerrearviewmirrorstate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      outerrearviewmirrorstate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, outerrearviewmirrorstate, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  outerrearviewmirrorstate_ = outerrearviewmirrorstate;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.outerRearViewMirrorState)
}

// optional .pb.ap_vehstatesigprovider.sunroof_status.SunroofStatus sunroofStatus_nu = 1425;
inline bool AdditionalBCMStatusPort::_internal_has_sunroofstatus_nu() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool AdditionalBCMStatusPort::has_sunroofstatus_nu() const {
  return _internal_has_sunroofstatus_nu();
}
inline void AdditionalBCMStatusPort::clear_sunroofstatus_nu() {
  sunroofstatus_nu_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus AdditionalBCMStatusPort::_internal_sunroofstatus_nu() const {
  return static_cast< ::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus >(sunroofstatus_nu_);
}
inline ::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus AdditionalBCMStatusPort::sunroofstatus_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.sunroofStatus_nu)
  return _internal_sunroofstatus_nu();
}
inline void AdditionalBCMStatusPort::_internal_set_sunroofstatus_nu(::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus value) {
  assert(::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  sunroofstatus_nu_ = value;
}
inline void AdditionalBCMStatusPort::set_sunroofstatus_nu(::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus value) {
  _internal_set_sunroofstatus_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.sunroofStatus_nu)
}

// optional .pb.ap_vehstatesigprovider.charging_status.ChargingStatus chargingStatus_nu = 65;
inline bool AdditionalBCMStatusPort::_internal_has_chargingstatus_nu() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || chargingstatus_nu_ != nullptr);
  return value;
}
inline bool AdditionalBCMStatusPort::has_chargingstatus_nu() const {
  return _internal_has_chargingstatus_nu();
}
inline const ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus& AdditionalBCMStatusPort::_internal_chargingstatus_nu() const {
  const ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* p = chargingstatus_nu_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus*>(
      &::pb::ap_vehstatesigprovider::charging_status::_ChargingStatus_default_instance_);
}
inline const ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus& AdditionalBCMStatusPort::chargingstatus_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.chargingStatus_nu)
  return _internal_chargingstatus_nu();
}
inline ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* AdditionalBCMStatusPort::release_chargingstatus_nu() {
  // @@protoc_insertion_point(field_release:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.chargingStatus_nu)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* temp = chargingstatus_nu_;
  chargingstatus_nu_ = nullptr;
  return temp;
}
inline ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* AdditionalBCMStatusPort::_internal_mutable_chargingstatus_nu() {
  _has_bits_[0] |= 0x00000001u;
  if (chargingstatus_nu_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ap_vehstatesigprovider::charging_status::ChargingStatus>(GetArenaNoVirtual());
    chargingstatus_nu_ = p;
  }
  return chargingstatus_nu_;
}
inline ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* AdditionalBCMStatusPort::mutable_chargingstatus_nu() {
  // @@protoc_insertion_point(field_mutable:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.chargingStatus_nu)
  return _internal_mutable_chargingstatus_nu();
}
inline void AdditionalBCMStatusPort::set_allocated_chargingstatus_nu(::pb::ap_vehstatesigprovider::charging_status::ChargingStatus* chargingstatus_nu) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(chargingstatus_nu_);
  }
  if (chargingstatus_nu) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      chargingstatus_nu = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chargingstatus_nu, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  chargingstatus_nu_ = chargingstatus_nu;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort.chargingStatus_nu)
}

// -------------------------------------------------------------------

// AdditionalBCMStatusPort_array_port

// repeated .pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort data = 2924;
inline int AdditionalBCMStatusPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int AdditionalBCMStatusPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void AdditionalBCMStatusPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort* AdditionalBCMStatusPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort >*
AdditionalBCMStatusPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port.data)
  return &data_;
}
inline const ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort& AdditionalBCMStatusPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort& AdditionalBCMStatusPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort* AdditionalBCMStatusPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort* AdditionalBCMStatusPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort >&
AdditionalBCMStatusPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace additional_bcmstatus_port
}  // namespace ap_vehstatesigprovider
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto
