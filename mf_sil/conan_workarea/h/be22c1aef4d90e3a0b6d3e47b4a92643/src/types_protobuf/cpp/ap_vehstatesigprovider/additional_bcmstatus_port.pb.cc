// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_vehstatesigprovider/additional_bcmstatus_port.proto

#include "ap_vehstatesigprovider/additional_bcmstatus_port.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_AdditionalBCMStatusPort_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ap_5fvehstatesigprovider_2fcharging_5fstatus_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChargingStatus_ap_5fvehstatesigprovider_2fcharging_5fstatus_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ap_5fvehstatesigprovider_2fignition_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ignition_ap_5fvehstatesigprovider_2fignition_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ap_5fvehstatesigprovider_2flight_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Light_ap_5fvehstatesigprovider_2flight_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ap_5fvehstatesigprovider_2fouter_5frear_5fview_5fmirror_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OuterRearViewMirror_ap_5fvehstatesigprovider_2fouter_5frear_5fview_5fmirror_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsignal_5fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto;
namespace pb {
namespace ap_vehstatesigprovider {
namespace additional_bcmstatus_port {
class AdditionalBCMStatusPortDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AdditionalBCMStatusPort> _instance;
} _AdditionalBCMStatusPort_default_instance_;
class AdditionalBCMStatusPort_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AdditionalBCMStatusPort_array_port> _instance;
} _AdditionalBCMStatusPort_array_port_default_instance_;
}  // namespace additional_bcmstatus_port
}  // namespace ap_vehstatesigprovider
}  // namespace pb
static void InitDefaultsscc_info_AdditionalBCMStatusPort_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_vehstatesigprovider::additional_bcmstatus_port::_AdditionalBCMStatusPort_default_instance_;
    new (ptr) ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_AdditionalBCMStatusPort_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_AdditionalBCMStatusPort_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto}, {
      &scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto.base,
      &scc_info_Light_ap_5fvehstatesigprovider_2flight_2eproto.base,
      &scc_info_Ignition_ap_5fvehstatesigprovider_2fignition_2eproto.base,
      &scc_info_OuterRearViewMirror_ap_5fvehstatesigprovider_2fouter_5frear_5fview_5fmirror_2eproto.base,
      &scc_info_ChargingStatus_ap_5fvehstatesigprovider_2fcharging_5fstatus_2eproto.base,}};

static void InitDefaultsscc_info_AdditionalBCMStatusPort_array_port_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_vehstatesigprovider::additional_bcmstatus_port::_AdditionalBCMStatusPort_array_port_default_instance_;
    new (ptr) ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AdditionalBCMStatusPort_array_port_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AdditionalBCMStatusPort_array_port_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto}, {
      &scc_info_AdditionalBCMStatusPort_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, uiversionnumber_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, ssigheader_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, light_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, ignition_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, frontlidopen_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, tankcapopen_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, outerrearviewmirrorstate_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, sunroofstatus_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort, chargingstatus_nu_),
  5,
  3,
  2,
  1,
  7,
  8,
  4,
  6,
  0,
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort)},
  { 23, 29, sizeof(::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_vehstatesigprovider::additional_bcmstatus_port::_AdditionalBCMStatusPort_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_vehstatesigprovider::additional_bcmstatus_port::_AdditionalBCMStatusPort_array_port_default_instance_),
};

const char descriptor_table_protodef_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n6ap_vehstatesigprovider/additional_bcms"
  "tatus_port.proto\0223pb.ap_vehstatesigprovi"
  "der.additional_bcmstatus_port\032\027eco/signa"
  "l_header.proto\032\"ap_vehstatesigprovider/l"
  "ight.proto\032%ap_vehstatesigprovider/ignit"
  "ion.proto\0323ap_vehstatesigprovider/outer_"
  "rear_view_mirror.proto\032+ap_vehstatesigpr"
  "ovider/sunroof_status.proto\032,ap_vehstate"
  "sigprovider/charging_status.proto\"\254\004\n\027Ad"
  "ditionalBCMStatusPort\022\030\n\017uiVersionNumber"
  "\030\314\020 \001(\r\0227\n\nsSigHeader\030\211\010 \001(\0132\".pb.eco.si"
  "gnal_header.SignalHeader\0226\n\005light\030\322\006 \001(\013"
  "2&.pb.ap_vehstatesigprovider.light.Light"
  "\022\?\n\010ignition\030\240\004 \001(\0132,.pb.ap_vehstatesigp"
  "rovider.ignition.Ignition\022\030\n\017frontLidOpe"
  "n_nu\030\215\006 \001(\010\022\027\n\016tankCapOpen_nu\030\345\031 \001(\010\022h\n\030"
  "outerRearViewMirrorState\030\367\034 \001(\0132E.pb.ap_"
  "vehstatesigprovider.outer_rear_view_mirr"
  "or.OuterRearViewMirror\022R\n\020sunroofStatus_"
  "nu\030\221\013 \001(\01627.pb.ap_vehstatesigprovider.su"
  "nroof_status.SunroofStatus\022T\n\021chargingSt"
  "atus_nu\030A \001(\01329.pb.ap_vehstatesigprovide"
  "r.charging_status.ChargingStatus\"\201\001\n\"Add"
  "itionalBCMStatusPort_array_port\022[\n\004data\030"
  "\354\026 \003(\0132L.pb.ap_vehstatesigprovider.addit"
  "ional_bcmstatus_port.AdditionalBCMStatus"
  "Port"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto_deps[6] = {
  &::descriptor_table_ap_5fvehstatesigprovider_2fcharging_5fstatus_2eproto,
  &::descriptor_table_ap_5fvehstatesigprovider_2fignition_2eproto,
  &::descriptor_table_ap_5fvehstatesigprovider_2flight_2eproto,
  &::descriptor_table_ap_5fvehstatesigprovider_2fouter_5frear_5fview_5fmirror_2eproto,
  &::descriptor_table_ap_5fvehstatesigprovider_2fsunroof_5fstatus_2eproto,
  &::descriptor_table_eco_2fsignal_5fheader_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto_sccs[2] = {
  &scc_info_AdditionalBCMStatusPort_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto.base,
  &scc_info_AdditionalBCMStatusPort_array_port_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto_once;
static bool descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto = {
  &descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto_initialized, descriptor_table_protodef_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto, "ap_vehstatesigprovider/additional_bcmstatus_port.proto", 1044,
  &descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto_once, descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto_sccs, descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto_deps, 2, 6,
  schemas, file_default_instances, TableStruct_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto::offsets,
  file_level_metadata_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto, 2, file_level_enum_descriptors_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto, file_level_service_descriptors_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto), true);
namespace pb {
namespace ap_vehstatesigprovider {
namespace additional_bcmstatus_port {

// ===================================================================

void AdditionalBCMStatusPort::InitAsDefaultInstance() {
  ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::_AdditionalBCMStatusPort_default_instance_._instance.get_mutable()->ssigheader_ = const_cast< ::pb::eco::signal_header::SignalHeader*>(
      ::pb::eco::signal_header::SignalHeader::internal_default_instance());
  ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::_AdditionalBCMStatusPort_default_instance_._instance.get_mutable()->light_ = const_cast< ::pb::ap_vehstatesigprovider::light::Light*>(
      ::pb::ap_vehstatesigprovider::light::Light::internal_default_instance());
  ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::_AdditionalBCMStatusPort_default_instance_._instance.get_mutable()->ignition_ = const_cast< ::pb::ap_vehstatesigprovider::ignition::Ignition*>(
      ::pb::ap_vehstatesigprovider::ignition::Ignition::internal_default_instance());
  ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::_AdditionalBCMStatusPort_default_instance_._instance.get_mutable()->outerrearviewmirrorstate_ = const_cast< ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror*>(
      ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror::internal_default_instance());
  ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::_AdditionalBCMStatusPort_default_instance_._instance.get_mutable()->chargingstatus_nu_ = const_cast< ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus*>(
      ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus::internal_default_instance());
}
class AdditionalBCMStatusPort::_Internal {
 public:
  using HasBits = decltype(std::declval<AdditionalBCMStatusPort>()._has_bits_);
  static void set_has_uiversionnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::pb::eco::signal_header::SignalHeader& ssigheader(const AdditionalBCMStatusPort* msg);
  static void set_has_ssigheader(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::pb::ap_vehstatesigprovider::light::Light& light(const AdditionalBCMStatusPort* msg);
  static void set_has_light(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::pb::ap_vehstatesigprovider::ignition::Ignition& ignition(const AdditionalBCMStatusPort* msg);
  static void set_has_ignition(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_frontlidopen_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_tankcapopen_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror& outerrearviewmirrorstate(const AdditionalBCMStatusPort* msg);
  static void set_has_outerrearviewmirrorstate(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_sunroofstatus_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus& chargingstatus_nu(const AdditionalBCMStatusPort* msg);
  static void set_has_chargingstatus_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::pb::eco::signal_header::SignalHeader&
AdditionalBCMStatusPort::_Internal::ssigheader(const AdditionalBCMStatusPort* msg) {
  return *msg->ssigheader_;
}
const ::pb::ap_vehstatesigprovider::light::Light&
AdditionalBCMStatusPort::_Internal::light(const AdditionalBCMStatusPort* msg) {
  return *msg->light_;
}
const ::pb::ap_vehstatesigprovider::ignition::Ignition&
AdditionalBCMStatusPort::_Internal::ignition(const AdditionalBCMStatusPort* msg) {
  return *msg->ignition_;
}
const ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror&
AdditionalBCMStatusPort::_Internal::outerrearviewmirrorstate(const AdditionalBCMStatusPort* msg) {
  return *msg->outerrearviewmirrorstate_;
}
const ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus&
AdditionalBCMStatusPort::_Internal::chargingstatus_nu(const AdditionalBCMStatusPort* msg) {
  return *msg->chargingstatus_nu_;
}
void AdditionalBCMStatusPort::clear_ssigheader() {
  if (ssigheader_ != nullptr) ssigheader_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void AdditionalBCMStatusPort::clear_light() {
  if (light_ != nullptr) light_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void AdditionalBCMStatusPort::clear_ignition() {
  if (ignition_ != nullptr) ignition_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void AdditionalBCMStatusPort::clear_outerrearviewmirrorstate() {
  if (outerrearviewmirrorstate_ != nullptr) outerrearviewmirrorstate_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void AdditionalBCMStatusPort::clear_chargingstatus_nu() {
  if (chargingstatus_nu_ != nullptr) chargingstatus_nu_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
AdditionalBCMStatusPort::AdditionalBCMStatusPort()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
}
AdditionalBCMStatusPort::AdditionalBCMStatusPort(const AdditionalBCMStatusPort& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_chargingstatus_nu()) {
    chargingstatus_nu_ = new ::pb::ap_vehstatesigprovider::charging_status::ChargingStatus(*from.chargingstatus_nu_);
  } else {
    chargingstatus_nu_ = nullptr;
  }
  if (from._internal_has_ignition()) {
    ignition_ = new ::pb::ap_vehstatesigprovider::ignition::Ignition(*from.ignition_);
  } else {
    ignition_ = nullptr;
  }
  if (from._internal_has_light()) {
    light_ = new ::pb::ap_vehstatesigprovider::light::Light(*from.light_);
  } else {
    light_ = nullptr;
  }
  if (from._internal_has_ssigheader()) {
    ssigheader_ = new ::pb::eco::signal_header::SignalHeader(*from.ssigheader_);
  } else {
    ssigheader_ = nullptr;
  }
  if (from._internal_has_outerrearviewmirrorstate()) {
    outerrearviewmirrorstate_ = new ::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror(*from.outerrearviewmirrorstate_);
  } else {
    outerrearviewmirrorstate_ = nullptr;
  }
  ::memcpy(&uiversionnumber_, &from.uiversionnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&tankcapopen_nu_) -
    reinterpret_cast<char*>(&uiversionnumber_)) + sizeof(tankcapopen_nu_));
  // @@protoc_insertion_point(copy_constructor:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
}

void AdditionalBCMStatusPort::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AdditionalBCMStatusPort_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto.base);
  ::memset(&chargingstatus_nu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tankcapopen_nu_) -
      reinterpret_cast<char*>(&chargingstatus_nu_)) + sizeof(tankcapopen_nu_));
}

AdditionalBCMStatusPort::~AdditionalBCMStatusPort() {
  // @@protoc_insertion_point(destructor:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
  SharedDtor();
}

void AdditionalBCMStatusPort::SharedDtor() {
  if (this != internal_default_instance()) delete chargingstatus_nu_;
  if (this != internal_default_instance()) delete ignition_;
  if (this != internal_default_instance()) delete light_;
  if (this != internal_default_instance()) delete ssigheader_;
  if (this != internal_default_instance()) delete outerrearviewmirrorstate_;
}

void AdditionalBCMStatusPort::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AdditionalBCMStatusPort& AdditionalBCMStatusPort::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AdditionalBCMStatusPort_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto.base);
  return *internal_default_instance();
}


void AdditionalBCMStatusPort::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(chargingstatus_nu_ != nullptr);
      chargingstatus_nu_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ignition_ != nullptr);
      ignition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(light_ != nullptr);
      light_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(ssigheader_ != nullptr);
      ssigheader_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(outerrearviewmirrorstate_ != nullptr);
      outerrearviewmirrorstate_->Clear();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&uiversionnumber_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&frontlidopen_nu_) -
        reinterpret_cast<char*>(&uiversionnumber_)) + sizeof(frontlidopen_nu_));
  }
  tankcapopen_nu_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* AdditionalBCMStatusPort::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.ap_vehstatesigprovider.charging_status.ChargingStatus chargingStatus_nu = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chargingstatus_nu(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_vehstatesigprovider.ignition.Ignition ignition = 544;
      case 544:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_ignition(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool frontLidOpen_nu = 781;
      case 781:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_frontlidopen_nu(&has_bits);
          frontlidopen_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_vehstatesigprovider.light.Light light = 850;
      case 850:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_light(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_ssigheader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_vehstatesigprovider.sunroof_status.SunroofStatus sunroofStatus_nu = 1425;
      case 1425:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus_IsValid(val))) {
            _internal_set_sunroofstatus_nu(static_cast<::pb::ap_vehstatesigprovider::sunroof_status::SunroofStatus>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1425, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 uiVersionNumber = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_uiversionnumber(&has_bits);
          uiversionnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool tankCapOpen_nu = 3301;
      case 3301:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_tankcapopen_nu(&has_bits);
          tankcapopen_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_vehstatesigprovider.outer_rear_view_mirror.OuterRearViewMirror outerRearViewMirrorState = 3703;
      case 3703:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_outerrearviewmirrorstate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AdditionalBCMStatusPort::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.ap_vehstatesigprovider.charging_status.ChargingStatus chargingStatus_nu = 65;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        65, _Internal::chargingstatus_nu(this), target, stream);
  }

  // optional .pb.ap_vehstatesigprovider.ignition.Ignition ignition = 544;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        544, _Internal::ignition(this), target, stream);
  }

  // optional bool frontLidOpen_nu = 781;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(781, this->_internal_frontlidopen_nu(), target);
  }

  // optional .pb.ap_vehstatesigprovider.light.Light light = 850;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        850, _Internal::light(this), target, stream);
  }

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::ssigheader(this), target, stream);
  }

  // optional .pb.ap_vehstatesigprovider.sunroof_status.SunroofStatus sunroofStatus_nu = 1425;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1425, this->_internal_sunroofstatus_nu(), target);
  }

  // optional uint32 uiVersionNumber = 2124;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2124, this->_internal_uiversionnumber(), target);
  }

  // optional bool tankCapOpen_nu = 3301;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3301, this->_internal_tankcapopen_nu(), target);
  }

  // optional .pb.ap_vehstatesigprovider.outer_rear_view_mirror.OuterRearViewMirror outerRearViewMirrorState = 3703;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3703, _Internal::outerrearviewmirrorstate(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
  return target;
}

size_t AdditionalBCMStatusPort::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .pb.ap_vehstatesigprovider.charging_status.ChargingStatus chargingStatus_nu = 65;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *chargingstatus_nu_);
    }

    // optional .pb.ap_vehstatesigprovider.ignition.Ignition ignition = 544;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ignition_);
    }

    // optional .pb.ap_vehstatesigprovider.light.Light light = 850;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *light_);
    }

    // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ssigheader_);
    }

    // optional .pb.ap_vehstatesigprovider.outer_rear_view_mirror.OuterRearViewMirror outerRearViewMirrorState = 3703;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *outerrearviewmirrorstate_);
    }

    // optional uint32 uiVersionNumber = 2124;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uiversionnumber());
    }

    // optional .pb.ap_vehstatesigprovider.sunroof_status.SunroofStatus sunroofStatus_nu = 1425;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_sunroofstatus_nu());
    }

    // optional bool frontLidOpen_nu = 781;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  // optional bool tankCapOpen_nu = 3301;
  if (cached_has_bits & 0x00000100u) {
    total_size += 3 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdditionalBCMStatusPort::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
  GOOGLE_DCHECK_NE(&from, this);
  const AdditionalBCMStatusPort* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AdditionalBCMStatusPort>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
    MergeFrom(*source);
  }
}

void AdditionalBCMStatusPort::MergeFrom(const AdditionalBCMStatusPort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_chargingstatus_nu()->::pb::ap_vehstatesigprovider::charging_status::ChargingStatus::MergeFrom(from._internal_chargingstatus_nu());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_ignition()->::pb::ap_vehstatesigprovider::ignition::Ignition::MergeFrom(from._internal_ignition());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_light()->::pb::ap_vehstatesigprovider::light::Light::MergeFrom(from._internal_light());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_ssigheader()->::pb::eco::signal_header::SignalHeader::MergeFrom(from._internal_ssigheader());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_outerrearviewmirrorstate()->::pb::ap_vehstatesigprovider::outer_rear_view_mirror::OuterRearViewMirror::MergeFrom(from._internal_outerrearviewmirrorstate());
    }
    if (cached_has_bits & 0x00000020u) {
      uiversionnumber_ = from.uiversionnumber_;
    }
    if (cached_has_bits & 0x00000040u) {
      sunroofstatus_nu_ = from.sunroofstatus_nu_;
    }
    if (cached_has_bits & 0x00000080u) {
      frontlidopen_nu_ = from.frontlidopen_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_tankcapopen_nu(from._internal_tankcapopen_nu());
  }
}

void AdditionalBCMStatusPort::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdditionalBCMStatusPort::CopyFrom(const AdditionalBCMStatusPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdditionalBCMStatusPort::IsInitialized() const {
  return true;
}

void AdditionalBCMStatusPort::InternalSwap(AdditionalBCMStatusPort* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(chargingstatus_nu_, other->chargingstatus_nu_);
  swap(ignition_, other->ignition_);
  swap(light_, other->light_);
  swap(ssigheader_, other->ssigheader_);
  swap(outerrearviewmirrorstate_, other->outerrearviewmirrorstate_);
  swap(uiversionnumber_, other->uiversionnumber_);
  swap(sunroofstatus_nu_, other->sunroofstatus_nu_);
  swap(frontlidopen_nu_, other->frontlidopen_nu_);
  swap(tankcapopen_nu_, other->tankcapopen_nu_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AdditionalBCMStatusPort::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AdditionalBCMStatusPort_array_port::InitAsDefaultInstance() {
}
class AdditionalBCMStatusPort_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<AdditionalBCMStatusPort_array_port>()._has_bits_);
};

AdditionalBCMStatusPort_array_port::AdditionalBCMStatusPort_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
}
AdditionalBCMStatusPort_array_port::AdditionalBCMStatusPort_array_port(const AdditionalBCMStatusPort_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
}

void AdditionalBCMStatusPort_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AdditionalBCMStatusPort_array_port_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto.base);
}

AdditionalBCMStatusPort_array_port::~AdditionalBCMStatusPort_array_port() {
  // @@protoc_insertion_point(destructor:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
  SharedDtor();
}

void AdditionalBCMStatusPort_array_port::SharedDtor() {
}

void AdditionalBCMStatusPort_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AdditionalBCMStatusPort_array_port& AdditionalBCMStatusPort_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AdditionalBCMStatusPort_array_port_ap_5fvehstatesigprovider_2fadditional_5fbcmstatus_5fport_2eproto.base);
  return *internal_default_instance();
}


void AdditionalBCMStatusPort_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* AdditionalBCMStatusPort_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort data = 2924;
      case 2924:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AdditionalBCMStatusPort_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort data = 2924;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2924, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
  return target;
}

size_t AdditionalBCMStatusPort_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort data = 2924;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdditionalBCMStatusPort_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const AdditionalBCMStatusPort_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AdditionalBCMStatusPort_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
    MergeFrom(*source);
  }
}

void AdditionalBCMStatusPort_array_port::MergeFrom(const AdditionalBCMStatusPort_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void AdditionalBCMStatusPort_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdditionalBCMStatusPort_array_port::CopyFrom(const AdditionalBCMStatusPort_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_vehstatesigprovider.additional_bcmstatus_port.AdditionalBCMStatusPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdditionalBCMStatusPort_array_port::IsInitialized() const {
  return true;
}

void AdditionalBCMStatusPort_array_port::InternalSwap(AdditionalBCMStatusPort_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AdditionalBCMStatusPort_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace additional_bcmstatus_port
}  // namespace ap_vehstatesigprovider
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort* Arena::CreateMaybeMessage< ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port* Arena::CreateMaybeMessage< ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_vehstatesigprovider::additional_bcmstatus_port::AdditionalBCMStatusPort_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
