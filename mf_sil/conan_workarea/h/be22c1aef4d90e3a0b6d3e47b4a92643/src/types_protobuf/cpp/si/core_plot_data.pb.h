// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: si/core_plot_data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_si_2fcore_5fplot_5fdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_si_2fcore_5fplot_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "si/pull_corner_rect_serializable.pb.h"
#include "si/pull_corner_poly_serializable.pb.h"
#include "si/quadrilateral_serializable.pb.h"
#include "si/core_slot_prototype.pb.h"
#include "si/quadrilateral_serializable_array.pb.h"
#include "si/optimization_result_serializable.pb.h"
#include "si/line_segment_serializable_array.pb.h"
#include "si/new_detected_slot_candidate_serializable.pb.h"
#include "si/parking_scenario_types.pb.h"
#include "si/parking_scenario_side_types.pb.h"
#include "si/uint16_serializable.pb.h"
#include "si/sint32_serializable.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_si_2fcore_5fplot_5fdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_si_2fcore_5fplot_5fdata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_si_2fcore_5fplot_5fdata_2eproto;
namespace pb {
namespace si {
namespace core_plot_data {
class CorePlotData;
class CorePlotDataDefaultTypeInternal;
extern CorePlotDataDefaultTypeInternal _CorePlotData_default_instance_;
class CorePlotData_array_port;
class CorePlotData_array_portDefaultTypeInternal;
extern CorePlotData_array_portDefaultTypeInternal _CorePlotData_array_port_default_instance_;
}  // namespace core_plot_data
}  // namespace si
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::si::core_plot_data::CorePlotData* Arena::CreateMaybeMessage<::pb::si::core_plot_data::CorePlotData>(Arena*);
template<> ::pb::si::core_plot_data::CorePlotData_array_port* Arena::CreateMaybeMessage<::pb::si::core_plot_data::CorePlotData_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace si {
namespace core_plot_data {

// ===================================================================

class CorePlotData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.si.core_plot_data.CorePlotData) */ {
 public:
  CorePlotData();
  virtual ~CorePlotData();

  CorePlotData(const CorePlotData& from);
  CorePlotData(CorePlotData&& from) noexcept
    : CorePlotData() {
    *this = ::std::move(from);
  }

  inline CorePlotData& operator=(const CorePlotData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CorePlotData& operator=(CorePlotData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CorePlotData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CorePlotData* internal_default_instance() {
    return reinterpret_cast<const CorePlotData*>(
               &_CorePlotData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CorePlotData& a, CorePlotData& b) {
    a.Swap(&b);
  }
  inline void Swap(CorePlotData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CorePlotData* New() const final {
    return CreateMaybeMessage<CorePlotData>(nullptr);
  }

  CorePlotData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CorePlotData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CorePlotData& from);
  void MergeFrom(const CorePlotData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CorePlotData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.si.core_plot_data.CorePlotData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_si_2fcore_5fplot_5fdata_2eproto);
    return ::descriptor_table_si_2fcore_5fplot_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiRightFieldNumber = 125,
    kParallelFieldNumber = 307,
    kBlowUpManagerRoiLeftFieldNumber = 383,
    kRoiRightCoreFieldNumber = 476,
    kBlowUpManagerRoiRightFieldNumber = 775,
    kPositionManagerAdjustedRoisFieldNumber = 954,
    kRawGpParkingSlotsFieldNumber = 1115,
    kDiagonalActualFieldNumber = 1314,
    kParkingSlotTrackingRoiFieldNumber = 1635,
    kBlowUpManagerAdjustedRoiCurbFieldNumber = 1692,
    kNewDetectedSlotCandidateFieldNumber = 1748,
    kPerpendicularFieldNumber = 1935,
    kPullRectsFieldNumber = 1959,
    kRoiLeftFieldNumber = 2251,
    kCollisionManagerResultFieldNumber = 2335,
    kGarageFieldNumber = 2699,
    kPositionManagerInitialSlotsFieldNumber = 2707,
    kBlowUpManagerAdjustedRoiRightFieldNumber = 2929,
    kRoiFrontFieldNumber = 2974,
    kBlowUpManagerRoiCurbFieldNumber = 2994,
    kScoresFieldNumber = 3041,
    kBlowUpManagerAdjustedRoiLeftFieldNumber = 3153,
    kSlotOpeningBeforeExtensionFieldNumber = 3421,
    kIrrelevantObjIdFieldNumber = 3460,
    kParkingSlotUpdateRoiFieldNumber = 3496,
    kPositionManagerRoisFieldNumber = 3598,
    kRoiLeftCoreFieldNumber = 3807,
    kPullPolysFieldNumber = 3858,
    kSensingAreaFieldNumber = 3961,
    kLastEstimatedScenarioSideNuFieldNumber = 3630,
    kLastEstimatedScenarioNuFieldNumber = 1280,
    kSelectedSlotNuFieldNumber = 3226,
  };
  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiRight = 125;
  bool has_roiright() const;
  private:
  bool _internal_has_roiright() const;
  public:
  void clear_roiright();
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& roiright() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* release_roiright();
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* mutable_roiright();
  void set_allocated_roiright(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roiright);
  private:
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& _internal_roiright() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* _internal_mutable_roiright();
  public:

  // optional .pb.si.core_slot_prototype.CoreSlotPrototype parallel = 307;
  bool has_parallel() const;
  private:
  bool _internal_has_parallel() const;
  public:
  void clear_parallel();
  const ::pb::si::core_slot_prototype::CoreSlotPrototype& parallel() const;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* release_parallel();
  ::pb::si::core_slot_prototype::CoreSlotPrototype* mutable_parallel();
  void set_allocated_parallel(::pb::si::core_slot_prototype::CoreSlotPrototype* parallel);
  private:
  const ::pb::si::core_slot_prototype::CoreSlotPrototype& _internal_parallel() const;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* _internal_mutable_parallel();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiLeft = 383;
  bool has_blowupmanagerroileft() const;
  private:
  bool _internal_has_blowupmanagerroileft() const;
  public:
  void clear_blowupmanagerroileft();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanagerroileft() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_blowupmanagerroileft();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_blowupmanagerroileft();
  void set_allocated_blowupmanagerroileft(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanagerroileft);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_blowupmanagerroileft() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_blowupmanagerroileft();
  public:

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiRightCore = 476;
  bool has_roirightcore() const;
  private:
  bool _internal_has_roirightcore() const;
  public:
  void clear_roirightcore();
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& roirightcore() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* release_roirightcore();
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* mutable_roirightcore();
  void set_allocated_roirightcore(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roirightcore);
  private:
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& _internal_roirightcore() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* _internal_mutable_roirightcore();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiRight = 775;
  bool has_blowupmanagerroiright() const;
  private:
  bool _internal_has_blowupmanagerroiright() const;
  public:
  void clear_blowupmanagerroiright();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanagerroiright() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_blowupmanagerroiright();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_blowupmanagerroiright();
  void set_allocated_blowupmanagerroiright(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanagerroiright);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_blowupmanagerroiright() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_blowupmanagerroiright();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerAdjustedRois = 954;
  bool has_positionmanageradjustedrois() const;
  private:
  bool _internal_has_positionmanageradjustedrois() const;
  public:
  void clear_positionmanageradjustedrois();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& positionmanageradjustedrois() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_positionmanageradjustedrois();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_positionmanageradjustedrois();
  void set_allocated_positionmanageradjustedrois(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* positionmanageradjustedrois);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_positionmanageradjustedrois() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_positionmanageradjustedrois();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray rawGpParkingSlots = 1115;
  bool has_rawgpparkingslots() const;
  private:
  bool _internal_has_rawgpparkingslots() const;
  public:
  void clear_rawgpparkingslots();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& rawgpparkingslots() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_rawgpparkingslots();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_rawgpparkingslots();
  void set_allocated_rawgpparkingslots(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* rawgpparkingslots);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_rawgpparkingslots() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_rawgpparkingslots();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray diagonalActual = 1314;
  bool has_diagonalactual() const;
  private:
  bool _internal_has_diagonalactual() const;
  public:
  void clear_diagonalactual();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& diagonalactual() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_diagonalactual();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_diagonalactual();
  void set_allocated_diagonalactual(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* diagonalactual);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_diagonalactual() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_diagonalactual();
  public:

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable parkingSlotTrackingRoi = 1635;
  bool has_parkingslottrackingroi() const;
  private:
  bool _internal_has_parkingslottrackingroi() const;
  public:
  void clear_parkingslottrackingroi();
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& parkingslottrackingroi() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* release_parkingslottrackingroi();
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* mutable_parkingslottrackingroi();
  void set_allocated_parkingslottrackingroi(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* parkingslottrackingroi);
  private:
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& _internal_parkingslottrackingroi() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* _internal_mutable_parkingslottrackingroi();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiCurb = 1692;
  bool has_blowupmanageradjustedroicurb() const;
  private:
  bool _internal_has_blowupmanageradjustedroicurb() const;
  public:
  void clear_blowupmanageradjustedroicurb();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanageradjustedroicurb() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_blowupmanageradjustedroicurb();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_blowupmanageradjustedroicurb();
  void set_allocated_blowupmanageradjustedroicurb(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanageradjustedroicurb);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_blowupmanageradjustedroicurb() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_blowupmanageradjustedroicurb();
  public:

  // optional .pb.si.new_detected_slot_candidate_serializable.NewDetectedSlotCandidateSerializable newDetectedSlotCandidate = 1748;
  bool has_newdetectedslotcandidate() const;
  private:
  bool _internal_has_newdetectedslotcandidate() const;
  public:
  void clear_newdetectedslotcandidate();
  const ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable& newdetectedslotcandidate() const;
  ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* release_newdetectedslotcandidate();
  ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* mutable_newdetectedslotcandidate();
  void set_allocated_newdetectedslotcandidate(::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* newdetectedslotcandidate);
  private:
  const ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable& _internal_newdetectedslotcandidate() const;
  ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* _internal_mutable_newdetectedslotcandidate();
  public:

  // optional .pb.si.core_slot_prototype.CoreSlotPrototype perpendicular = 1935;
  bool has_perpendicular() const;
  private:
  bool _internal_has_perpendicular() const;
  public:
  void clear_perpendicular();
  const ::pb::si::core_slot_prototype::CoreSlotPrototype& perpendicular() const;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* release_perpendicular();
  ::pb::si::core_slot_prototype::CoreSlotPrototype* mutable_perpendicular();
  void set_allocated_perpendicular(::pb::si::core_slot_prototype::CoreSlotPrototype* perpendicular);
  private:
  const ::pb::si::core_slot_prototype::CoreSlotPrototype& _internal_perpendicular() const;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* _internal_mutable_perpendicular();
  public:

  // optional .pb.si.pull_corner_rect_serializable.PullCornerRectSerializable pullRects = 1959;
  bool has_pullrects() const;
  private:
  bool _internal_has_pullrects() const;
  public:
  void clear_pullrects();
  const ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable& pullrects() const;
  ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* release_pullrects();
  ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* mutable_pullrects();
  void set_allocated_pullrects(::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* pullrects);
  private:
  const ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable& _internal_pullrects() const;
  ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* _internal_mutable_pullrects();
  public:

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiLeft = 2251;
  bool has_roileft() const;
  private:
  bool _internal_has_roileft() const;
  public:
  void clear_roileft();
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& roileft() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* release_roileft();
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* mutable_roileft();
  void set_allocated_roileft(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roileft);
  private:
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& _internal_roileft() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* _internal_mutable_roileft();
  public:

  // optional .pb.si.optimization_result_serializable.OptimizationResultSerializable collisionManagerResult = 2335;
  bool has_collisionmanagerresult() const;
  private:
  bool _internal_has_collisionmanagerresult() const;
  public:
  void clear_collisionmanagerresult();
  const ::pb::si::optimization_result_serializable::OptimizationResultSerializable& collisionmanagerresult() const;
  ::pb::si::optimization_result_serializable::OptimizationResultSerializable* release_collisionmanagerresult();
  ::pb::si::optimization_result_serializable::OptimizationResultSerializable* mutable_collisionmanagerresult();
  void set_allocated_collisionmanagerresult(::pb::si::optimization_result_serializable::OptimizationResultSerializable* collisionmanagerresult);
  private:
  const ::pb::si::optimization_result_serializable::OptimizationResultSerializable& _internal_collisionmanagerresult() const;
  ::pb::si::optimization_result_serializable::OptimizationResultSerializable* _internal_mutable_collisionmanagerresult();
  public:

  // optional .pb.si.core_slot_prototype.CoreSlotPrototype garage = 2699;
  bool has_garage() const;
  private:
  bool _internal_has_garage() const;
  public:
  void clear_garage();
  const ::pb::si::core_slot_prototype::CoreSlotPrototype& garage() const;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* release_garage();
  ::pb::si::core_slot_prototype::CoreSlotPrototype* mutable_garage();
  void set_allocated_garage(::pb::si::core_slot_prototype::CoreSlotPrototype* garage);
  private:
  const ::pb::si::core_slot_prototype::CoreSlotPrototype& _internal_garage() const;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* _internal_mutable_garage();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerInitialSlots = 2707;
  bool has_positionmanagerinitialslots() const;
  private:
  bool _internal_has_positionmanagerinitialslots() const;
  public:
  void clear_positionmanagerinitialslots();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& positionmanagerinitialslots() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_positionmanagerinitialslots();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_positionmanagerinitialslots();
  void set_allocated_positionmanagerinitialslots(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* positionmanagerinitialslots);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_positionmanagerinitialslots() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_positionmanagerinitialslots();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiRight = 2929;
  bool has_blowupmanageradjustedroiright() const;
  private:
  bool _internal_has_blowupmanageradjustedroiright() const;
  public:
  void clear_blowupmanageradjustedroiright();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanageradjustedroiright() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_blowupmanageradjustedroiright();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_blowupmanageradjustedroiright();
  void set_allocated_blowupmanageradjustedroiright(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanageradjustedroiright);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_blowupmanageradjustedroiright() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_blowupmanageradjustedroiright();
  public:

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiFront = 2974;
  bool has_roifront() const;
  private:
  bool _internal_has_roifront() const;
  public:
  void clear_roifront();
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& roifront() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* release_roifront();
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* mutable_roifront();
  void set_allocated_roifront(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roifront);
  private:
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& _internal_roifront() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* _internal_mutable_roifront();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiCurb = 2994;
  bool has_blowupmanagerroicurb() const;
  private:
  bool _internal_has_blowupmanagerroicurb() const;
  public:
  void clear_blowupmanagerroicurb();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanagerroicurb() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_blowupmanagerroicurb();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_blowupmanagerroicurb();
  void set_allocated_blowupmanagerroicurb(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanagerroicurb);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_blowupmanagerroicurb() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_blowupmanagerroicurb();
  public:

  // optional .pb.si.sint32_serializable.Sint32Serializable scores = 3041;
  bool has_scores() const;
  private:
  bool _internal_has_scores() const;
  public:
  void clear_scores();
  const ::pb::si::sint32_serializable::Sint32Serializable& scores() const;
  ::pb::si::sint32_serializable::Sint32Serializable* release_scores();
  ::pb::si::sint32_serializable::Sint32Serializable* mutable_scores();
  void set_allocated_scores(::pb::si::sint32_serializable::Sint32Serializable* scores);
  private:
  const ::pb::si::sint32_serializable::Sint32Serializable& _internal_scores() const;
  ::pb::si::sint32_serializable::Sint32Serializable* _internal_mutable_scores();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiLeft = 3153;
  bool has_blowupmanageradjustedroileft() const;
  private:
  bool _internal_has_blowupmanageradjustedroileft() const;
  public:
  void clear_blowupmanageradjustedroileft();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanageradjustedroileft() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_blowupmanageradjustedroileft();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_blowupmanageradjustedroileft();
  void set_allocated_blowupmanageradjustedroileft(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanageradjustedroileft);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_blowupmanageradjustedroileft() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_blowupmanageradjustedroileft();
  public:

  // optional .pb.si.line_segment_serializable_array.LineSegmentSerializableArray slotOpeningBeforeExtension = 3421;
  bool has_slotopeningbeforeextension() const;
  private:
  bool _internal_has_slotopeningbeforeextension() const;
  public:
  void clear_slotopeningbeforeextension();
  const ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray& slotopeningbeforeextension() const;
  ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* release_slotopeningbeforeextension();
  ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* mutable_slotopeningbeforeextension();
  void set_allocated_slotopeningbeforeextension(::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* slotopeningbeforeextension);
  private:
  const ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray& _internal_slotopeningbeforeextension() const;
  ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* _internal_mutable_slotopeningbeforeextension();
  public:

  // optional .pb.si.uint16_serializable.Uint16Serializable irrelevantObjId = 3460;
  bool has_irrelevantobjid() const;
  private:
  bool _internal_has_irrelevantobjid() const;
  public:
  void clear_irrelevantobjid();
  const ::pb::si::uint16_serializable::Uint16Serializable& irrelevantobjid() const;
  ::pb::si::uint16_serializable::Uint16Serializable* release_irrelevantobjid();
  ::pb::si::uint16_serializable::Uint16Serializable* mutable_irrelevantobjid();
  void set_allocated_irrelevantobjid(::pb::si::uint16_serializable::Uint16Serializable* irrelevantobjid);
  private:
  const ::pb::si::uint16_serializable::Uint16Serializable& _internal_irrelevantobjid() const;
  ::pb::si::uint16_serializable::Uint16Serializable* _internal_mutable_irrelevantobjid();
  public:

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable parkingSlotUpdateRoi = 3496;
  bool has_parkingslotupdateroi() const;
  private:
  bool _internal_has_parkingslotupdateroi() const;
  public:
  void clear_parkingslotupdateroi();
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& parkingslotupdateroi() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* release_parkingslotupdateroi();
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* mutable_parkingslotupdateroi();
  void set_allocated_parkingslotupdateroi(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* parkingslotupdateroi);
  private:
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& _internal_parkingslotupdateroi() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* _internal_mutable_parkingslotupdateroi();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerRois = 3598;
  bool has_positionmanagerrois() const;
  private:
  bool _internal_has_positionmanagerrois() const;
  public:
  void clear_positionmanagerrois();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& positionmanagerrois() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_positionmanagerrois();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_positionmanagerrois();
  void set_allocated_positionmanagerrois(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* positionmanagerrois);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_positionmanagerrois() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_positionmanagerrois();
  public:

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiLeftCore = 3807;
  bool has_roileftcore() const;
  private:
  bool _internal_has_roileftcore() const;
  public:
  void clear_roileftcore();
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& roileftcore() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* release_roileftcore();
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* mutable_roileftcore();
  void set_allocated_roileftcore(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roileftcore);
  private:
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& _internal_roileftcore() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* _internal_mutable_roileftcore();
  public:

  // optional .pb.si.pull_corner_poly_serializable.PullCornerPolySerializable pullPolys = 3858;
  bool has_pullpolys() const;
  private:
  bool _internal_has_pullpolys() const;
  public:
  void clear_pullpolys();
  const ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable& pullpolys() const;
  ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* release_pullpolys();
  ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* mutable_pullpolys();
  void set_allocated_pullpolys(::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* pullpolys);
  private:
  const ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable& _internal_pullpolys() const;
  ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* _internal_mutable_pullpolys();
  public:

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable sensingArea = 3961;
  bool has_sensingarea() const;
  private:
  bool _internal_has_sensingarea() const;
  public:
  void clear_sensingarea();
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& sensingarea() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* release_sensingarea();
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* mutable_sensingarea();
  void set_allocated_sensingarea(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* sensingarea);
  private:
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& _internal_sensingarea() const;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* _internal_mutable_sensingarea();
  public:

  // optional .pb.si.parking_scenario_side_types.ParkingScenarioSideTypes lastEstimatedScenarioSide_nu = 3630;
  bool has_lastestimatedscenarioside_nu() const;
  private:
  bool _internal_has_lastestimatedscenarioside_nu() const;
  public:
  void clear_lastestimatedscenarioside_nu();
  ::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes lastestimatedscenarioside_nu() const;
  void set_lastestimatedscenarioside_nu(::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes value);
  private:
  ::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes _internal_lastestimatedscenarioside_nu() const;
  void _internal_set_lastestimatedscenarioside_nu(::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes value);
  public:

  // optional .pb.si.parking_scenario_types.ParkingScenarioTypes lastEstimatedScenario_nu = 1280;
  bool has_lastestimatedscenario_nu() const;
  private:
  bool _internal_has_lastestimatedscenario_nu() const;
  public:
  void clear_lastestimatedscenario_nu();
  ::pb::si::parking_scenario_types::ParkingScenarioTypes lastestimatedscenario_nu() const;
  void set_lastestimatedscenario_nu(::pb::si::parking_scenario_types::ParkingScenarioTypes value);
  private:
  ::pb::si::parking_scenario_types::ParkingScenarioTypes _internal_lastestimatedscenario_nu() const;
  void _internal_set_lastestimatedscenario_nu(::pb::si::parking_scenario_types::ParkingScenarioTypes value);
  public:

  // optional uint32 selectedSlot_nu = 3226;
  bool has_selectedslot_nu() const;
  private:
  bool _internal_has_selectedslot_nu() const;
  public:
  void clear_selectedslot_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 selectedslot_nu() const;
  void set_selectedslot_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_selectedslot_nu() const;
  void _internal_set_selectedslot_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.si.core_plot_data.CorePlotData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roiright_;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* parallel_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanagerroileft_;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roirightcore_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanagerroiright_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* positionmanageradjustedrois_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* rawgpparkingslots_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* diagonalactual_;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* parkingslottrackingroi_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanageradjustedroicurb_;
  ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* newdetectedslotcandidate_;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* perpendicular_;
  ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* pullrects_;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roileft_;
  ::pb::si::optimization_result_serializable::OptimizationResultSerializable* collisionmanagerresult_;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* garage_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* positionmanagerinitialslots_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanageradjustedroiright_;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roifront_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanagerroicurb_;
  ::pb::si::sint32_serializable::Sint32Serializable* scores_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanageradjustedroileft_;
  ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* slotopeningbeforeextension_;
  ::pb::si::uint16_serializable::Uint16Serializable* irrelevantobjid_;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* parkingslotupdateroi_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* positionmanagerrois_;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roileftcore_;
  ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* pullpolys_;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* sensingarea_;
  int lastestimatedscenarioside_nu_;
  int lastestimatedscenario_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 selectedslot_nu_;
  friend struct ::TableStruct_si_2fcore_5fplot_5fdata_2eproto;
};
// -------------------------------------------------------------------

class CorePlotData_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.si.core_plot_data.CorePlotData_array_port) */ {
 public:
  CorePlotData_array_port();
  virtual ~CorePlotData_array_port();

  CorePlotData_array_port(const CorePlotData_array_port& from);
  CorePlotData_array_port(CorePlotData_array_port&& from) noexcept
    : CorePlotData_array_port() {
    *this = ::std::move(from);
  }

  inline CorePlotData_array_port& operator=(const CorePlotData_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline CorePlotData_array_port& operator=(CorePlotData_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CorePlotData_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CorePlotData_array_port* internal_default_instance() {
    return reinterpret_cast<const CorePlotData_array_port*>(
               &_CorePlotData_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CorePlotData_array_port& a, CorePlotData_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(CorePlotData_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CorePlotData_array_port* New() const final {
    return CreateMaybeMessage<CorePlotData_array_port>(nullptr);
  }

  CorePlotData_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CorePlotData_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CorePlotData_array_port& from);
  void MergeFrom(const CorePlotData_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CorePlotData_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.si.core_plot_data.CorePlotData_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_si_2fcore_5fplot_5fdata_2eproto);
    return ::descriptor_table_si_2fcore_5fplot_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 728,
  };
  // repeated .pb.si.core_plot_data.CorePlotData data = 728;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::si::core_plot_data::CorePlotData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::core_plot_data::CorePlotData >*
      mutable_data();
  private:
  const ::pb::si::core_plot_data::CorePlotData& _internal_data(int index) const;
  ::pb::si::core_plot_data::CorePlotData* _internal_add_data();
  public:
  const ::pb::si::core_plot_data::CorePlotData& data(int index) const;
  ::pb::si::core_plot_data::CorePlotData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::core_plot_data::CorePlotData >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.si.core_plot_data.CorePlotData_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::core_plot_data::CorePlotData > data_;
  friend struct ::TableStruct_si_2fcore_5fplot_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CorePlotData

// optional .pb.si.pull_corner_rect_serializable.PullCornerRectSerializable pullRects = 1959;
inline bool CorePlotData::_internal_has_pullrects() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || pullrects_ != nullptr);
  return value;
}
inline bool CorePlotData::has_pullrects() const {
  return _internal_has_pullrects();
}
inline const ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable& CorePlotData::_internal_pullrects() const {
  const ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* p = pullrects_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable*>(
      &::pb::si::pull_corner_rect_serializable::_PullCornerRectSerializable_default_instance_);
}
inline const ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable& CorePlotData::pullrects() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.pullRects)
  return _internal_pullrects();
}
inline ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* CorePlotData::release_pullrects() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.pullRects)
  _has_bits_[0] &= ~0x00001000u;
  ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* temp = pullrects_;
  pullrects_ = nullptr;
  return temp;
}
inline ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* CorePlotData::_internal_mutable_pullrects() {
  _has_bits_[0] |= 0x00001000u;
  if (pullrects_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable>(GetArenaNoVirtual());
    pullrects_ = p;
  }
  return pullrects_;
}
inline ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* CorePlotData::mutable_pullrects() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.pullRects)
  return _internal_mutable_pullrects();
}
inline void CorePlotData::set_allocated_pullrects(::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable* pullrects) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pullrects_);
  }
  if (pullrects) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pullrects = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pullrects, submessage_arena);
    }
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  pullrects_ = pullrects;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.pullRects)
}

// optional .pb.si.pull_corner_poly_serializable.PullCornerPolySerializable pullPolys = 3858;
inline bool CorePlotData::_internal_has_pullpolys() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  PROTOBUF_ASSUME(!value || pullpolys_ != nullptr);
  return value;
}
inline bool CorePlotData::has_pullpolys() const {
  return _internal_has_pullpolys();
}
inline const ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable& CorePlotData::_internal_pullpolys() const {
  const ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* p = pullpolys_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable*>(
      &::pb::si::pull_corner_poly_serializable::_PullCornerPolySerializable_default_instance_);
}
inline const ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable& CorePlotData::pullpolys() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.pullPolys)
  return _internal_pullpolys();
}
inline ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* CorePlotData::release_pullpolys() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.pullPolys)
  _has_bits_[0] &= ~0x08000000u;
  ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* temp = pullpolys_;
  pullpolys_ = nullptr;
  return temp;
}
inline ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* CorePlotData::_internal_mutable_pullpolys() {
  _has_bits_[0] |= 0x08000000u;
  if (pullpolys_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable>(GetArenaNoVirtual());
    pullpolys_ = p;
  }
  return pullpolys_;
}
inline ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* CorePlotData::mutable_pullpolys() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.pullPolys)
  return _internal_mutable_pullpolys();
}
inline void CorePlotData::set_allocated_pullpolys(::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable* pullpolys) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pullpolys_);
  }
  if (pullpolys) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pullpolys = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pullpolys, submessage_arena);
    }
    _has_bits_[0] |= 0x08000000u;
  } else {
    _has_bits_[0] &= ~0x08000000u;
  }
  pullpolys_ = pullpolys;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.pullPolys)
}

// optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable parkingSlotUpdateRoi = 3496;
inline bool CorePlotData::_internal_has_parkingslotupdateroi() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  PROTOBUF_ASSUME(!value || parkingslotupdateroi_ != nullptr);
  return value;
}
inline bool CorePlotData::has_parkingslotupdateroi() const {
  return _internal_has_parkingslotupdateroi();
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::_internal_parkingslotupdateroi() const {
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* p = parkingslotupdateroi_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      &::pb::si::quadrilateral_serializable::_QuadrilateralSerializable_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::parkingslotupdateroi() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.parkingSlotUpdateRoi)
  return _internal_parkingslotupdateroi();
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::release_parkingslotupdateroi() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.parkingSlotUpdateRoi)
  _has_bits_[0] &= ~0x01000000u;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* temp = parkingslotupdateroi_;
  parkingslotupdateroi_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::_internal_mutable_parkingslotupdateroi() {
  _has_bits_[0] |= 0x01000000u;
  if (parkingslotupdateroi_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable::QuadrilateralSerializable>(GetArenaNoVirtual());
    parkingslotupdateroi_ = p;
  }
  return parkingslotupdateroi_;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::mutable_parkingslotupdateroi() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.parkingSlotUpdateRoi)
  return _internal_mutable_parkingslotupdateroi();
}
inline void CorePlotData::set_allocated_parkingslotupdateroi(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* parkingslotupdateroi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(parkingslotupdateroi_);
  }
  if (parkingslotupdateroi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      parkingslotupdateroi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parkingslotupdateroi, submessage_arena);
    }
    _has_bits_[0] |= 0x01000000u;
  } else {
    _has_bits_[0] &= ~0x01000000u;
  }
  parkingslotupdateroi_ = parkingslotupdateroi;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.parkingSlotUpdateRoi)
}

// optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable parkingSlotTrackingRoi = 1635;
inline bool CorePlotData::_internal_has_parkingslottrackingroi() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || parkingslottrackingroi_ != nullptr);
  return value;
}
inline bool CorePlotData::has_parkingslottrackingroi() const {
  return _internal_has_parkingslottrackingroi();
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::_internal_parkingslottrackingroi() const {
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* p = parkingslottrackingroi_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      &::pb::si::quadrilateral_serializable::_QuadrilateralSerializable_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::parkingslottrackingroi() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.parkingSlotTrackingRoi)
  return _internal_parkingslottrackingroi();
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::release_parkingslottrackingroi() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.parkingSlotTrackingRoi)
  _has_bits_[0] &= ~0x00000100u;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* temp = parkingslottrackingroi_;
  parkingslottrackingroi_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::_internal_mutable_parkingslottrackingroi() {
  _has_bits_[0] |= 0x00000100u;
  if (parkingslottrackingroi_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable::QuadrilateralSerializable>(GetArenaNoVirtual());
    parkingslottrackingroi_ = p;
  }
  return parkingslottrackingroi_;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::mutable_parkingslottrackingroi() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.parkingSlotTrackingRoi)
  return _internal_mutable_parkingslottrackingroi();
}
inline void CorePlotData::set_allocated_parkingslottrackingroi(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* parkingslottrackingroi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(parkingslottrackingroi_);
  }
  if (parkingslottrackingroi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      parkingslottrackingroi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parkingslottrackingroi, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  parkingslottrackingroi_ = parkingslottrackingroi;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.parkingSlotTrackingRoi)
}

// optional .pb.si.core_slot_prototype.CoreSlotPrototype perpendicular = 1935;
inline bool CorePlotData::_internal_has_perpendicular() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || perpendicular_ != nullptr);
  return value;
}
inline bool CorePlotData::has_perpendicular() const {
  return _internal_has_perpendicular();
}
inline const ::pb::si::core_slot_prototype::CoreSlotPrototype& CorePlotData::_internal_perpendicular() const {
  const ::pb::si::core_slot_prototype::CoreSlotPrototype* p = perpendicular_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::core_slot_prototype::CoreSlotPrototype*>(
      &::pb::si::core_slot_prototype::_CoreSlotPrototype_default_instance_);
}
inline const ::pb::si::core_slot_prototype::CoreSlotPrototype& CorePlotData::perpendicular() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.perpendicular)
  return _internal_perpendicular();
}
inline ::pb::si::core_slot_prototype::CoreSlotPrototype* CorePlotData::release_perpendicular() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.perpendicular)
  _has_bits_[0] &= ~0x00000800u;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* temp = perpendicular_;
  perpendicular_ = nullptr;
  return temp;
}
inline ::pb::si::core_slot_prototype::CoreSlotPrototype* CorePlotData::_internal_mutable_perpendicular() {
  _has_bits_[0] |= 0x00000800u;
  if (perpendicular_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::core_slot_prototype::CoreSlotPrototype>(GetArenaNoVirtual());
    perpendicular_ = p;
  }
  return perpendicular_;
}
inline ::pb::si::core_slot_prototype::CoreSlotPrototype* CorePlotData::mutable_perpendicular() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.perpendicular)
  return _internal_mutable_perpendicular();
}
inline void CorePlotData::set_allocated_perpendicular(::pb::si::core_slot_prototype::CoreSlotPrototype* perpendicular) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(perpendicular_);
  }
  if (perpendicular) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      perpendicular = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, perpendicular, submessage_arena);
    }
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  perpendicular_ = perpendicular;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.perpendicular)
}

// optional .pb.si.core_slot_prototype.CoreSlotPrototype parallel = 307;
inline bool CorePlotData::_internal_has_parallel() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || parallel_ != nullptr);
  return value;
}
inline bool CorePlotData::has_parallel() const {
  return _internal_has_parallel();
}
inline const ::pb::si::core_slot_prototype::CoreSlotPrototype& CorePlotData::_internal_parallel() const {
  const ::pb::si::core_slot_prototype::CoreSlotPrototype* p = parallel_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::core_slot_prototype::CoreSlotPrototype*>(
      &::pb::si::core_slot_prototype::_CoreSlotPrototype_default_instance_);
}
inline const ::pb::si::core_slot_prototype::CoreSlotPrototype& CorePlotData::parallel() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.parallel)
  return _internal_parallel();
}
inline ::pb::si::core_slot_prototype::CoreSlotPrototype* CorePlotData::release_parallel() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.parallel)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* temp = parallel_;
  parallel_ = nullptr;
  return temp;
}
inline ::pb::si::core_slot_prototype::CoreSlotPrototype* CorePlotData::_internal_mutable_parallel() {
  _has_bits_[0] |= 0x00000002u;
  if (parallel_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::core_slot_prototype::CoreSlotPrototype>(GetArenaNoVirtual());
    parallel_ = p;
  }
  return parallel_;
}
inline ::pb::si::core_slot_prototype::CoreSlotPrototype* CorePlotData::mutable_parallel() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.parallel)
  return _internal_mutable_parallel();
}
inline void CorePlotData::set_allocated_parallel(::pb::si::core_slot_prototype::CoreSlotPrototype* parallel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(parallel_);
  }
  if (parallel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      parallel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parallel, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  parallel_ = parallel;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.parallel)
}

// optional .pb.si.core_slot_prototype.CoreSlotPrototype garage = 2699;
inline bool CorePlotData::_internal_has_garage() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || garage_ != nullptr);
  return value;
}
inline bool CorePlotData::has_garage() const {
  return _internal_has_garage();
}
inline const ::pb::si::core_slot_prototype::CoreSlotPrototype& CorePlotData::_internal_garage() const {
  const ::pb::si::core_slot_prototype::CoreSlotPrototype* p = garage_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::core_slot_prototype::CoreSlotPrototype*>(
      &::pb::si::core_slot_prototype::_CoreSlotPrototype_default_instance_);
}
inline const ::pb::si::core_slot_prototype::CoreSlotPrototype& CorePlotData::garage() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.garage)
  return _internal_garage();
}
inline ::pb::si::core_slot_prototype::CoreSlotPrototype* CorePlotData::release_garage() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.garage)
  _has_bits_[0] &= ~0x00008000u;
  ::pb::si::core_slot_prototype::CoreSlotPrototype* temp = garage_;
  garage_ = nullptr;
  return temp;
}
inline ::pb::si::core_slot_prototype::CoreSlotPrototype* CorePlotData::_internal_mutable_garage() {
  _has_bits_[0] |= 0x00008000u;
  if (garage_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::core_slot_prototype::CoreSlotPrototype>(GetArenaNoVirtual());
    garage_ = p;
  }
  return garage_;
}
inline ::pb::si::core_slot_prototype::CoreSlotPrototype* CorePlotData::mutable_garage() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.garage)
  return _internal_mutable_garage();
}
inline void CorePlotData::set_allocated_garage(::pb::si::core_slot_prototype::CoreSlotPrototype* garage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(garage_);
  }
  if (garage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      garage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, garage, submessage_arena);
    }
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  garage_ = garage;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.garage)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray rawGpParkingSlots = 1115;
inline bool CorePlotData::_internal_has_rawgpparkingslots() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || rawgpparkingslots_ != nullptr);
  return value;
}
inline bool CorePlotData::has_rawgpparkingslots() const {
  return _internal_has_rawgpparkingslots();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_rawgpparkingslots() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = rawgpparkingslots_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::rawgpparkingslots() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.rawGpParkingSlots)
  return _internal_rawgpparkingslots();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_rawgpparkingslots() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.rawGpParkingSlots)
  _has_bits_[0] &= ~0x00000040u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = rawgpparkingslots_;
  rawgpparkingslots_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_rawgpparkingslots() {
  _has_bits_[0] |= 0x00000040u;
  if (rawgpparkingslots_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    rawgpparkingslots_ = p;
  }
  return rawgpparkingslots_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_rawgpparkingslots() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.rawGpParkingSlots)
  return _internal_mutable_rawgpparkingslots();
}
inline void CorePlotData::set_allocated_rawgpparkingslots(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* rawgpparkingslots) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rawgpparkingslots_);
  }
  if (rawgpparkingslots) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rawgpparkingslots = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rawgpparkingslots, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  rawgpparkingslots_ = rawgpparkingslots;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.rawGpParkingSlots)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray diagonalActual = 1314;
inline bool CorePlotData::_internal_has_diagonalactual() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || diagonalactual_ != nullptr);
  return value;
}
inline bool CorePlotData::has_diagonalactual() const {
  return _internal_has_diagonalactual();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_diagonalactual() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = diagonalactual_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::diagonalactual() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.diagonalActual)
  return _internal_diagonalactual();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_diagonalactual() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.diagonalActual)
  _has_bits_[0] &= ~0x00000080u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = diagonalactual_;
  diagonalactual_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_diagonalactual() {
  _has_bits_[0] |= 0x00000080u;
  if (diagonalactual_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    diagonalactual_ = p;
  }
  return diagonalactual_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_diagonalactual() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.diagonalActual)
  return _internal_mutable_diagonalactual();
}
inline void CorePlotData::set_allocated_diagonalactual(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* diagonalactual) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(diagonalactual_);
  }
  if (diagonalactual) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      diagonalactual = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, diagonalactual, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  diagonalactual_ = diagonalactual;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.diagonalActual)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerInitialSlots = 2707;
inline bool CorePlotData::_internal_has_positionmanagerinitialslots() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || positionmanagerinitialslots_ != nullptr);
  return value;
}
inline bool CorePlotData::has_positionmanagerinitialslots() const {
  return _internal_has_positionmanagerinitialslots();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_positionmanagerinitialslots() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = positionmanagerinitialslots_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::positionmanagerinitialslots() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.positionManagerInitialSlots)
  return _internal_positionmanagerinitialslots();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_positionmanagerinitialslots() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.positionManagerInitialSlots)
  _has_bits_[0] &= ~0x00010000u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = positionmanagerinitialslots_;
  positionmanagerinitialslots_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_positionmanagerinitialslots() {
  _has_bits_[0] |= 0x00010000u;
  if (positionmanagerinitialslots_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    positionmanagerinitialslots_ = p;
  }
  return positionmanagerinitialslots_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_positionmanagerinitialslots() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.positionManagerInitialSlots)
  return _internal_mutable_positionmanagerinitialslots();
}
inline void CorePlotData::set_allocated_positionmanagerinitialslots(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* positionmanagerinitialslots) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(positionmanagerinitialslots_);
  }
  if (positionmanagerinitialslots) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      positionmanagerinitialslots = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, positionmanagerinitialslots, submessage_arena);
    }
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  positionmanagerinitialslots_ = positionmanagerinitialslots;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.positionManagerInitialSlots)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerRois = 3598;
inline bool CorePlotData::_internal_has_positionmanagerrois() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  PROTOBUF_ASSUME(!value || positionmanagerrois_ != nullptr);
  return value;
}
inline bool CorePlotData::has_positionmanagerrois() const {
  return _internal_has_positionmanagerrois();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_positionmanagerrois() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = positionmanagerrois_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::positionmanagerrois() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.positionManagerRois)
  return _internal_positionmanagerrois();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_positionmanagerrois() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.positionManagerRois)
  _has_bits_[0] &= ~0x02000000u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = positionmanagerrois_;
  positionmanagerrois_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_positionmanagerrois() {
  _has_bits_[0] |= 0x02000000u;
  if (positionmanagerrois_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    positionmanagerrois_ = p;
  }
  return positionmanagerrois_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_positionmanagerrois() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.positionManagerRois)
  return _internal_mutable_positionmanagerrois();
}
inline void CorePlotData::set_allocated_positionmanagerrois(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* positionmanagerrois) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(positionmanagerrois_);
  }
  if (positionmanagerrois) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      positionmanagerrois = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, positionmanagerrois, submessage_arena);
    }
    _has_bits_[0] |= 0x02000000u;
  } else {
    _has_bits_[0] &= ~0x02000000u;
  }
  positionmanagerrois_ = positionmanagerrois;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.positionManagerRois)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerAdjustedRois = 954;
inline bool CorePlotData::_internal_has_positionmanageradjustedrois() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || positionmanageradjustedrois_ != nullptr);
  return value;
}
inline bool CorePlotData::has_positionmanageradjustedrois() const {
  return _internal_has_positionmanageradjustedrois();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_positionmanageradjustedrois() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = positionmanageradjustedrois_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::positionmanageradjustedrois() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.positionManagerAdjustedRois)
  return _internal_positionmanageradjustedrois();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_positionmanageradjustedrois() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.positionManagerAdjustedRois)
  _has_bits_[0] &= ~0x00000020u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = positionmanageradjustedrois_;
  positionmanageradjustedrois_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_positionmanageradjustedrois() {
  _has_bits_[0] |= 0x00000020u;
  if (positionmanageradjustedrois_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    positionmanageradjustedrois_ = p;
  }
  return positionmanageradjustedrois_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_positionmanageradjustedrois() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.positionManagerAdjustedRois)
  return _internal_mutable_positionmanageradjustedrois();
}
inline void CorePlotData::set_allocated_positionmanageradjustedrois(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* positionmanageradjustedrois) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(positionmanageradjustedrois_);
  }
  if (positionmanageradjustedrois) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      positionmanageradjustedrois = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, positionmanageradjustedrois, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  positionmanageradjustedrois_ = positionmanageradjustedrois;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.positionManagerAdjustedRois)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiLeft = 383;
inline bool CorePlotData::_internal_has_blowupmanagerroileft() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || blowupmanagerroileft_ != nullptr);
  return value;
}
inline bool CorePlotData::has_blowupmanagerroileft() const {
  return _internal_has_blowupmanagerroileft();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_blowupmanagerroileft() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = blowupmanagerroileft_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::blowupmanagerroileft() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiLeft)
  return _internal_blowupmanagerroileft();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_blowupmanagerroileft() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiLeft)
  _has_bits_[0] &= ~0x00000004u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = blowupmanagerroileft_;
  blowupmanagerroileft_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_blowupmanagerroileft() {
  _has_bits_[0] |= 0x00000004u;
  if (blowupmanagerroileft_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    blowupmanagerroileft_ = p;
  }
  return blowupmanagerroileft_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_blowupmanagerroileft() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiLeft)
  return _internal_mutable_blowupmanagerroileft();
}
inline void CorePlotData::set_allocated_blowupmanagerroileft(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanagerroileft) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blowupmanagerroileft_);
  }
  if (blowupmanagerroileft) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      blowupmanagerroileft = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blowupmanagerroileft, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  blowupmanagerroileft_ = blowupmanagerroileft;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiLeft)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiLeft = 3153;
inline bool CorePlotData::_internal_has_blowupmanageradjustedroileft() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  PROTOBUF_ASSUME(!value || blowupmanageradjustedroileft_ != nullptr);
  return value;
}
inline bool CorePlotData::has_blowupmanageradjustedroileft() const {
  return _internal_has_blowupmanageradjustedroileft();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_blowupmanageradjustedroileft() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = blowupmanageradjustedroileft_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::blowupmanageradjustedroileft() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiLeft)
  return _internal_blowupmanageradjustedroileft();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_blowupmanageradjustedroileft() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiLeft)
  _has_bits_[0] &= ~0x00200000u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = blowupmanageradjustedroileft_;
  blowupmanageradjustedroileft_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_blowupmanageradjustedroileft() {
  _has_bits_[0] |= 0x00200000u;
  if (blowupmanageradjustedroileft_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    blowupmanageradjustedroileft_ = p;
  }
  return blowupmanageradjustedroileft_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_blowupmanageradjustedroileft() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiLeft)
  return _internal_mutable_blowupmanageradjustedroileft();
}
inline void CorePlotData::set_allocated_blowupmanageradjustedroileft(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanageradjustedroileft) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blowupmanageradjustedroileft_);
  }
  if (blowupmanageradjustedroileft) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      blowupmanageradjustedroileft = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blowupmanageradjustedroileft, submessage_arena);
    }
    _has_bits_[0] |= 0x00200000u;
  } else {
    _has_bits_[0] &= ~0x00200000u;
  }
  blowupmanageradjustedroileft_ = blowupmanageradjustedroileft;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiLeft)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiRight = 775;
inline bool CorePlotData::_internal_has_blowupmanagerroiright() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || blowupmanagerroiright_ != nullptr);
  return value;
}
inline bool CorePlotData::has_blowupmanagerroiright() const {
  return _internal_has_blowupmanagerroiright();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_blowupmanagerroiright() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = blowupmanagerroiright_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::blowupmanagerroiright() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiRight)
  return _internal_blowupmanagerroiright();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_blowupmanagerroiright() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiRight)
  _has_bits_[0] &= ~0x00000010u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = blowupmanagerroiright_;
  blowupmanagerroiright_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_blowupmanagerroiright() {
  _has_bits_[0] |= 0x00000010u;
  if (blowupmanagerroiright_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    blowupmanagerroiright_ = p;
  }
  return blowupmanagerroiright_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_blowupmanagerroiright() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiRight)
  return _internal_mutable_blowupmanagerroiright();
}
inline void CorePlotData::set_allocated_blowupmanagerroiright(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanagerroiright) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blowupmanagerroiright_);
  }
  if (blowupmanagerroiright) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      blowupmanagerroiright = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blowupmanagerroiright, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  blowupmanagerroiright_ = blowupmanagerroiright;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiRight)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiRight = 2929;
inline bool CorePlotData::_internal_has_blowupmanageradjustedroiright() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || blowupmanageradjustedroiright_ != nullptr);
  return value;
}
inline bool CorePlotData::has_blowupmanageradjustedroiright() const {
  return _internal_has_blowupmanageradjustedroiright();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_blowupmanageradjustedroiright() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = blowupmanageradjustedroiright_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::blowupmanageradjustedroiright() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiRight)
  return _internal_blowupmanageradjustedroiright();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_blowupmanageradjustedroiright() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiRight)
  _has_bits_[0] &= ~0x00020000u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = blowupmanageradjustedroiright_;
  blowupmanageradjustedroiright_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_blowupmanageradjustedroiright() {
  _has_bits_[0] |= 0x00020000u;
  if (blowupmanageradjustedroiright_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    blowupmanageradjustedroiright_ = p;
  }
  return blowupmanageradjustedroiright_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_blowupmanageradjustedroiright() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiRight)
  return _internal_mutable_blowupmanageradjustedroiright();
}
inline void CorePlotData::set_allocated_blowupmanageradjustedroiright(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanageradjustedroiright) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blowupmanageradjustedroiright_);
  }
  if (blowupmanageradjustedroiright) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      blowupmanageradjustedroiright = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blowupmanageradjustedroiright, submessage_arena);
    }
    _has_bits_[0] |= 0x00020000u;
  } else {
    _has_bits_[0] &= ~0x00020000u;
  }
  blowupmanageradjustedroiright_ = blowupmanageradjustedroiright;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiRight)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiCurb = 2994;
inline bool CorePlotData::_internal_has_blowupmanagerroicurb() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  PROTOBUF_ASSUME(!value || blowupmanagerroicurb_ != nullptr);
  return value;
}
inline bool CorePlotData::has_blowupmanagerroicurb() const {
  return _internal_has_blowupmanagerroicurb();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_blowupmanagerroicurb() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = blowupmanagerroicurb_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::blowupmanagerroicurb() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiCurb)
  return _internal_blowupmanagerroicurb();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_blowupmanagerroicurb() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiCurb)
  _has_bits_[0] &= ~0x00080000u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = blowupmanagerroicurb_;
  blowupmanagerroicurb_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_blowupmanagerroicurb() {
  _has_bits_[0] |= 0x00080000u;
  if (blowupmanagerroicurb_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    blowupmanagerroicurb_ = p;
  }
  return blowupmanagerroicurb_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_blowupmanagerroicurb() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiCurb)
  return _internal_mutable_blowupmanagerroicurb();
}
inline void CorePlotData::set_allocated_blowupmanagerroicurb(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanagerroicurb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blowupmanagerroicurb_);
  }
  if (blowupmanagerroicurb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      blowupmanagerroicurb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blowupmanagerroicurb, submessage_arena);
    }
    _has_bits_[0] |= 0x00080000u;
  } else {
    _has_bits_[0] &= ~0x00080000u;
  }
  blowupmanagerroicurb_ = blowupmanagerroicurb;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.blowUpManagerRoiCurb)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiCurb = 1692;
inline bool CorePlotData::_internal_has_blowupmanageradjustedroicurb() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || blowupmanageradjustedroicurb_ != nullptr);
  return value;
}
inline bool CorePlotData::has_blowupmanageradjustedroicurb() const {
  return _internal_has_blowupmanageradjustedroicurb();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::_internal_blowupmanageradjustedroicurb() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = blowupmanageradjustedroicurb_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& CorePlotData::blowupmanageradjustedroicurb() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiCurb)
  return _internal_blowupmanageradjustedroicurb();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::release_blowupmanageradjustedroicurb() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiCurb)
  _has_bits_[0] &= ~0x00000200u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = blowupmanageradjustedroicurb_;
  blowupmanageradjustedroicurb_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::_internal_mutable_blowupmanageradjustedroicurb() {
  _has_bits_[0] |= 0x00000200u;
  if (blowupmanageradjustedroicurb_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    blowupmanageradjustedroicurb_ = p;
  }
  return blowupmanageradjustedroicurb_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* CorePlotData::mutable_blowupmanageradjustedroicurb() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiCurb)
  return _internal_mutable_blowupmanageradjustedroicurb();
}
inline void CorePlotData::set_allocated_blowupmanageradjustedroicurb(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* blowupmanageradjustedroicurb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blowupmanageradjustedroicurb_);
  }
  if (blowupmanageradjustedroicurb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      blowupmanageradjustedroicurb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blowupmanageradjustedroicurb, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  blowupmanageradjustedroicurb_ = blowupmanageradjustedroicurb;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.blowUpManagerAdjustedRoiCurb)
}

// optional .pb.si.optimization_result_serializable.OptimizationResultSerializable collisionManagerResult = 2335;
inline bool CorePlotData::_internal_has_collisionmanagerresult() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || collisionmanagerresult_ != nullptr);
  return value;
}
inline bool CorePlotData::has_collisionmanagerresult() const {
  return _internal_has_collisionmanagerresult();
}
inline const ::pb::si::optimization_result_serializable::OptimizationResultSerializable& CorePlotData::_internal_collisionmanagerresult() const {
  const ::pb::si::optimization_result_serializable::OptimizationResultSerializable* p = collisionmanagerresult_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::optimization_result_serializable::OptimizationResultSerializable*>(
      &::pb::si::optimization_result_serializable::_OptimizationResultSerializable_default_instance_);
}
inline const ::pb::si::optimization_result_serializable::OptimizationResultSerializable& CorePlotData::collisionmanagerresult() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.collisionManagerResult)
  return _internal_collisionmanagerresult();
}
inline ::pb::si::optimization_result_serializable::OptimizationResultSerializable* CorePlotData::release_collisionmanagerresult() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.collisionManagerResult)
  _has_bits_[0] &= ~0x00004000u;
  ::pb::si::optimization_result_serializable::OptimizationResultSerializable* temp = collisionmanagerresult_;
  collisionmanagerresult_ = nullptr;
  return temp;
}
inline ::pb::si::optimization_result_serializable::OptimizationResultSerializable* CorePlotData::_internal_mutable_collisionmanagerresult() {
  _has_bits_[0] |= 0x00004000u;
  if (collisionmanagerresult_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::optimization_result_serializable::OptimizationResultSerializable>(GetArenaNoVirtual());
    collisionmanagerresult_ = p;
  }
  return collisionmanagerresult_;
}
inline ::pb::si::optimization_result_serializable::OptimizationResultSerializable* CorePlotData::mutable_collisionmanagerresult() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.collisionManagerResult)
  return _internal_mutable_collisionmanagerresult();
}
inline void CorePlotData::set_allocated_collisionmanagerresult(::pb::si::optimization_result_serializable::OptimizationResultSerializable* collisionmanagerresult) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(collisionmanagerresult_);
  }
  if (collisionmanagerresult) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      collisionmanagerresult = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, collisionmanagerresult, submessage_arena);
    }
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  collisionmanagerresult_ = collisionmanagerresult;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.collisionManagerResult)
}

// optional .pb.si.line_segment_serializable_array.LineSegmentSerializableArray slotOpeningBeforeExtension = 3421;
inline bool CorePlotData::_internal_has_slotopeningbeforeextension() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  PROTOBUF_ASSUME(!value || slotopeningbeforeextension_ != nullptr);
  return value;
}
inline bool CorePlotData::has_slotopeningbeforeextension() const {
  return _internal_has_slotopeningbeforeextension();
}
inline const ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray& CorePlotData::_internal_slotopeningbeforeextension() const {
  const ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* p = slotopeningbeforeextension_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray*>(
      &::pb::si::line_segment_serializable_array::_LineSegmentSerializableArray_default_instance_);
}
inline const ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray& CorePlotData::slotopeningbeforeextension() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.slotOpeningBeforeExtension)
  return _internal_slotopeningbeforeextension();
}
inline ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* CorePlotData::release_slotopeningbeforeextension() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.slotOpeningBeforeExtension)
  _has_bits_[0] &= ~0x00400000u;
  ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* temp = slotopeningbeforeextension_;
  slotopeningbeforeextension_ = nullptr;
  return temp;
}
inline ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* CorePlotData::_internal_mutable_slotopeningbeforeextension() {
  _has_bits_[0] |= 0x00400000u;
  if (slotopeningbeforeextension_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::line_segment_serializable_array::LineSegmentSerializableArray>(GetArenaNoVirtual());
    slotopeningbeforeextension_ = p;
  }
  return slotopeningbeforeextension_;
}
inline ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* CorePlotData::mutable_slotopeningbeforeextension() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.slotOpeningBeforeExtension)
  return _internal_mutable_slotopeningbeforeextension();
}
inline void CorePlotData::set_allocated_slotopeningbeforeextension(::pb::si::line_segment_serializable_array::LineSegmentSerializableArray* slotopeningbeforeextension) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(slotopeningbeforeextension_);
  }
  if (slotopeningbeforeextension) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      slotopeningbeforeextension = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, slotopeningbeforeextension, submessage_arena);
    }
    _has_bits_[0] |= 0x00400000u;
  } else {
    _has_bits_[0] &= ~0x00400000u;
  }
  slotopeningbeforeextension_ = slotopeningbeforeextension;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.slotOpeningBeforeExtension)
}

// optional uint32 selectedSlot_nu = 3226;
inline bool CorePlotData::_internal_has_selectedslot_nu() const {
  bool value = (_has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline bool CorePlotData::has_selectedslot_nu() const {
  return _internal_has_selectedslot_nu();
}
inline void CorePlotData::clear_selectedslot_nu() {
  selectedslot_nu_ = 0u;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CorePlotData::_internal_selectedslot_nu() const {
  return selectedslot_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CorePlotData::selectedslot_nu() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.selectedSlot_nu)
  return _internal_selectedslot_nu();
}
inline void CorePlotData::_internal_set_selectedslot_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x80000000u;
  selectedslot_nu_ = value;
}
inline void CorePlotData::set_selectedslot_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_selectedslot_nu(value);
  // @@protoc_insertion_point(field_set:pb.si.core_plot_data.CorePlotData.selectedSlot_nu)
}

// optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable sensingArea = 3961;
inline bool CorePlotData::_internal_has_sensingarea() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  PROTOBUF_ASSUME(!value || sensingarea_ != nullptr);
  return value;
}
inline bool CorePlotData::has_sensingarea() const {
  return _internal_has_sensingarea();
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::_internal_sensingarea() const {
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* p = sensingarea_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      &::pb::si::quadrilateral_serializable::_QuadrilateralSerializable_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::sensingarea() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.sensingArea)
  return _internal_sensingarea();
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::release_sensingarea() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.sensingArea)
  _has_bits_[0] &= ~0x10000000u;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* temp = sensingarea_;
  sensingarea_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::_internal_mutable_sensingarea() {
  _has_bits_[0] |= 0x10000000u;
  if (sensingarea_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable::QuadrilateralSerializable>(GetArenaNoVirtual());
    sensingarea_ = p;
  }
  return sensingarea_;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::mutable_sensingarea() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.sensingArea)
  return _internal_mutable_sensingarea();
}
inline void CorePlotData::set_allocated_sensingarea(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* sensingarea) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sensingarea_);
  }
  if (sensingarea) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sensingarea = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sensingarea, submessage_arena);
    }
    _has_bits_[0] |= 0x10000000u;
  } else {
    _has_bits_[0] &= ~0x10000000u;
  }
  sensingarea_ = sensingarea;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.sensingArea)
}

// optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiLeft = 2251;
inline bool CorePlotData::_internal_has_roileft() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || roileft_ != nullptr);
  return value;
}
inline bool CorePlotData::has_roileft() const {
  return _internal_has_roileft();
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::_internal_roileft() const {
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* p = roileft_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      &::pb::si::quadrilateral_serializable::_QuadrilateralSerializable_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::roileft() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.roiLeft)
  return _internal_roileft();
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::release_roileft() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.roiLeft)
  _has_bits_[0] &= ~0x00002000u;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* temp = roileft_;
  roileft_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::_internal_mutable_roileft() {
  _has_bits_[0] |= 0x00002000u;
  if (roileft_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable::QuadrilateralSerializable>(GetArenaNoVirtual());
    roileft_ = p;
  }
  return roileft_;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::mutable_roileft() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.roiLeft)
  return _internal_mutable_roileft();
}
inline void CorePlotData::set_allocated_roileft(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roileft) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(roileft_);
  }
  if (roileft) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      roileft = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roileft, submessage_arena);
    }
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  roileft_ = roileft;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.roiLeft)
}

// optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiRight = 125;
inline bool CorePlotData::_internal_has_roiright() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || roiright_ != nullptr);
  return value;
}
inline bool CorePlotData::has_roiright() const {
  return _internal_has_roiright();
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::_internal_roiright() const {
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* p = roiright_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      &::pb::si::quadrilateral_serializable::_QuadrilateralSerializable_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::roiright() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.roiRight)
  return _internal_roiright();
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::release_roiright() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.roiRight)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* temp = roiright_;
  roiright_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::_internal_mutable_roiright() {
  _has_bits_[0] |= 0x00000001u;
  if (roiright_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable::QuadrilateralSerializable>(GetArenaNoVirtual());
    roiright_ = p;
  }
  return roiright_;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::mutable_roiright() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.roiRight)
  return _internal_mutable_roiright();
}
inline void CorePlotData::set_allocated_roiright(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roiright) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(roiright_);
  }
  if (roiright) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      roiright = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roiright, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  roiright_ = roiright;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.roiRight)
}

// optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiFront = 2974;
inline bool CorePlotData::_internal_has_roifront() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  PROTOBUF_ASSUME(!value || roifront_ != nullptr);
  return value;
}
inline bool CorePlotData::has_roifront() const {
  return _internal_has_roifront();
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::_internal_roifront() const {
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* p = roifront_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      &::pb::si::quadrilateral_serializable::_QuadrilateralSerializable_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::roifront() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.roiFront)
  return _internal_roifront();
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::release_roifront() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.roiFront)
  _has_bits_[0] &= ~0x00040000u;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* temp = roifront_;
  roifront_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::_internal_mutable_roifront() {
  _has_bits_[0] |= 0x00040000u;
  if (roifront_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable::QuadrilateralSerializable>(GetArenaNoVirtual());
    roifront_ = p;
  }
  return roifront_;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::mutable_roifront() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.roiFront)
  return _internal_mutable_roifront();
}
inline void CorePlotData::set_allocated_roifront(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roifront) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(roifront_);
  }
  if (roifront) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      roifront = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roifront, submessage_arena);
    }
    _has_bits_[0] |= 0x00040000u;
  } else {
    _has_bits_[0] &= ~0x00040000u;
  }
  roifront_ = roifront;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.roiFront)
}

// optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiLeftCore = 3807;
inline bool CorePlotData::_internal_has_roileftcore() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  PROTOBUF_ASSUME(!value || roileftcore_ != nullptr);
  return value;
}
inline bool CorePlotData::has_roileftcore() const {
  return _internal_has_roileftcore();
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::_internal_roileftcore() const {
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* p = roileftcore_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      &::pb::si::quadrilateral_serializable::_QuadrilateralSerializable_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::roileftcore() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.roiLeftCore)
  return _internal_roileftcore();
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::release_roileftcore() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.roiLeftCore)
  _has_bits_[0] &= ~0x04000000u;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* temp = roileftcore_;
  roileftcore_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::_internal_mutable_roileftcore() {
  _has_bits_[0] |= 0x04000000u;
  if (roileftcore_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable::QuadrilateralSerializable>(GetArenaNoVirtual());
    roileftcore_ = p;
  }
  return roileftcore_;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::mutable_roileftcore() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.roiLeftCore)
  return _internal_mutable_roileftcore();
}
inline void CorePlotData::set_allocated_roileftcore(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roileftcore) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(roileftcore_);
  }
  if (roileftcore) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      roileftcore = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roileftcore, submessage_arena);
    }
    _has_bits_[0] |= 0x04000000u;
  } else {
    _has_bits_[0] &= ~0x04000000u;
  }
  roileftcore_ = roileftcore;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.roiLeftCore)
}

// optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiRightCore = 476;
inline bool CorePlotData::_internal_has_roirightcore() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || roirightcore_ != nullptr);
  return value;
}
inline bool CorePlotData::has_roirightcore() const {
  return _internal_has_roirightcore();
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::_internal_roirightcore() const {
  const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* p = roirightcore_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      &::pb::si::quadrilateral_serializable::_QuadrilateralSerializable_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& CorePlotData::roirightcore() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.roiRightCore)
  return _internal_roirightcore();
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::release_roirightcore() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.roiRightCore)
  _has_bits_[0] &= ~0x00000008u;
  ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* temp = roirightcore_;
  roirightcore_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::_internal_mutable_roirightcore() {
  _has_bits_[0] |= 0x00000008u;
  if (roirightcore_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable::QuadrilateralSerializable>(GetArenaNoVirtual());
    roirightcore_ = p;
  }
  return roirightcore_;
}
inline ::pb::si::quadrilateral_serializable::QuadrilateralSerializable* CorePlotData::mutable_roirightcore() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.roiRightCore)
  return _internal_mutable_roirightcore();
}
inline void CorePlotData::set_allocated_roirightcore(::pb::si::quadrilateral_serializable::QuadrilateralSerializable* roirightcore) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(roirightcore_);
  }
  if (roirightcore) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      roirightcore = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roirightcore, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  roirightcore_ = roirightcore;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.roiRightCore)
}

// optional .pb.si.new_detected_slot_candidate_serializable.NewDetectedSlotCandidateSerializable newDetectedSlotCandidate = 1748;
inline bool CorePlotData::_internal_has_newdetectedslotcandidate() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || newdetectedslotcandidate_ != nullptr);
  return value;
}
inline bool CorePlotData::has_newdetectedslotcandidate() const {
  return _internal_has_newdetectedslotcandidate();
}
inline const ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable& CorePlotData::_internal_newdetectedslotcandidate() const {
  const ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* p = newdetectedslotcandidate_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable*>(
      &::pb::si::new_detected_slot_candidate_serializable::_NewDetectedSlotCandidateSerializable_default_instance_);
}
inline const ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable& CorePlotData::newdetectedslotcandidate() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.newDetectedSlotCandidate)
  return _internal_newdetectedslotcandidate();
}
inline ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* CorePlotData::release_newdetectedslotcandidate() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.newDetectedSlotCandidate)
  _has_bits_[0] &= ~0x00000400u;
  ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* temp = newdetectedslotcandidate_;
  newdetectedslotcandidate_ = nullptr;
  return temp;
}
inline ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* CorePlotData::_internal_mutable_newdetectedslotcandidate() {
  _has_bits_[0] |= 0x00000400u;
  if (newdetectedslotcandidate_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable>(GetArenaNoVirtual());
    newdetectedslotcandidate_ = p;
  }
  return newdetectedslotcandidate_;
}
inline ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* CorePlotData::mutable_newdetectedslotcandidate() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.newDetectedSlotCandidate)
  return _internal_mutable_newdetectedslotcandidate();
}
inline void CorePlotData::set_allocated_newdetectedslotcandidate(::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable* newdetectedslotcandidate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(newdetectedslotcandidate_);
  }
  if (newdetectedslotcandidate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      newdetectedslotcandidate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newdetectedslotcandidate, submessage_arena);
    }
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  newdetectedslotcandidate_ = newdetectedslotcandidate;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.newDetectedSlotCandidate)
}

// optional .pb.si.parking_scenario_types.ParkingScenarioTypes lastEstimatedScenario_nu = 1280;
inline bool CorePlotData::_internal_has_lastestimatedscenario_nu() const {
  bool value = (_has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool CorePlotData::has_lastestimatedscenario_nu() const {
  return _internal_has_lastestimatedscenario_nu();
}
inline void CorePlotData::clear_lastestimatedscenario_nu() {
  lastestimatedscenario_nu_ = 0;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::pb::si::parking_scenario_types::ParkingScenarioTypes CorePlotData::_internal_lastestimatedscenario_nu() const {
  return static_cast< ::pb::si::parking_scenario_types::ParkingScenarioTypes >(lastestimatedscenario_nu_);
}
inline ::pb::si::parking_scenario_types::ParkingScenarioTypes CorePlotData::lastestimatedscenario_nu() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.lastEstimatedScenario_nu)
  return _internal_lastestimatedscenario_nu();
}
inline void CorePlotData::_internal_set_lastestimatedscenario_nu(::pb::si::parking_scenario_types::ParkingScenarioTypes value) {
  assert(::pb::si::parking_scenario_types::ParkingScenarioTypes_IsValid(value));
  _has_bits_[0] |= 0x40000000u;
  lastestimatedscenario_nu_ = value;
}
inline void CorePlotData::set_lastestimatedscenario_nu(::pb::si::parking_scenario_types::ParkingScenarioTypes value) {
  _internal_set_lastestimatedscenario_nu(value);
  // @@protoc_insertion_point(field_set:pb.si.core_plot_data.CorePlotData.lastEstimatedScenario_nu)
}

// optional .pb.si.parking_scenario_side_types.ParkingScenarioSideTypes lastEstimatedScenarioSide_nu = 3630;
inline bool CorePlotData::_internal_has_lastestimatedscenarioside_nu() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool CorePlotData::has_lastestimatedscenarioside_nu() const {
  return _internal_has_lastestimatedscenarioside_nu();
}
inline void CorePlotData::clear_lastestimatedscenarioside_nu() {
  lastestimatedscenarioside_nu_ = 0;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes CorePlotData::_internal_lastestimatedscenarioside_nu() const {
  return static_cast< ::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes >(lastestimatedscenarioside_nu_);
}
inline ::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes CorePlotData::lastestimatedscenarioside_nu() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.lastEstimatedScenarioSide_nu)
  return _internal_lastestimatedscenarioside_nu();
}
inline void CorePlotData::_internal_set_lastestimatedscenarioside_nu(::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes value) {
  assert(::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes_IsValid(value));
  _has_bits_[0] |= 0x20000000u;
  lastestimatedscenarioside_nu_ = value;
}
inline void CorePlotData::set_lastestimatedscenarioside_nu(::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes value) {
  _internal_set_lastestimatedscenarioside_nu(value);
  // @@protoc_insertion_point(field_set:pb.si.core_plot_data.CorePlotData.lastEstimatedScenarioSide_nu)
}

// optional .pb.si.uint16_serializable.Uint16Serializable irrelevantObjId = 3460;
inline bool CorePlotData::_internal_has_irrelevantobjid() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  PROTOBUF_ASSUME(!value || irrelevantobjid_ != nullptr);
  return value;
}
inline bool CorePlotData::has_irrelevantobjid() const {
  return _internal_has_irrelevantobjid();
}
inline const ::pb::si::uint16_serializable::Uint16Serializable& CorePlotData::_internal_irrelevantobjid() const {
  const ::pb::si::uint16_serializable::Uint16Serializable* p = irrelevantobjid_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::uint16_serializable::Uint16Serializable*>(
      &::pb::si::uint16_serializable::_Uint16Serializable_default_instance_);
}
inline const ::pb::si::uint16_serializable::Uint16Serializable& CorePlotData::irrelevantobjid() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.irrelevantObjId)
  return _internal_irrelevantobjid();
}
inline ::pb::si::uint16_serializable::Uint16Serializable* CorePlotData::release_irrelevantobjid() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.irrelevantObjId)
  _has_bits_[0] &= ~0x00800000u;
  ::pb::si::uint16_serializable::Uint16Serializable* temp = irrelevantobjid_;
  irrelevantobjid_ = nullptr;
  return temp;
}
inline ::pb::si::uint16_serializable::Uint16Serializable* CorePlotData::_internal_mutable_irrelevantobjid() {
  _has_bits_[0] |= 0x00800000u;
  if (irrelevantobjid_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::uint16_serializable::Uint16Serializable>(GetArenaNoVirtual());
    irrelevantobjid_ = p;
  }
  return irrelevantobjid_;
}
inline ::pb::si::uint16_serializable::Uint16Serializable* CorePlotData::mutable_irrelevantobjid() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.irrelevantObjId)
  return _internal_mutable_irrelevantobjid();
}
inline void CorePlotData::set_allocated_irrelevantobjid(::pb::si::uint16_serializable::Uint16Serializable* irrelevantobjid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(irrelevantobjid_);
  }
  if (irrelevantobjid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      irrelevantobjid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, irrelevantobjid, submessage_arena);
    }
    _has_bits_[0] |= 0x00800000u;
  } else {
    _has_bits_[0] &= ~0x00800000u;
  }
  irrelevantobjid_ = irrelevantobjid;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.irrelevantObjId)
}

// optional .pb.si.sint32_serializable.Sint32Serializable scores = 3041;
inline bool CorePlotData::_internal_has_scores() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  PROTOBUF_ASSUME(!value || scores_ != nullptr);
  return value;
}
inline bool CorePlotData::has_scores() const {
  return _internal_has_scores();
}
inline const ::pb::si::sint32_serializable::Sint32Serializable& CorePlotData::_internal_scores() const {
  const ::pb::si::sint32_serializable::Sint32Serializable* p = scores_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::sint32_serializable::Sint32Serializable*>(
      &::pb::si::sint32_serializable::_Sint32Serializable_default_instance_);
}
inline const ::pb::si::sint32_serializable::Sint32Serializable& CorePlotData::scores() const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData.scores)
  return _internal_scores();
}
inline ::pb::si::sint32_serializable::Sint32Serializable* CorePlotData::release_scores() {
  // @@protoc_insertion_point(field_release:pb.si.core_plot_data.CorePlotData.scores)
  _has_bits_[0] &= ~0x00100000u;
  ::pb::si::sint32_serializable::Sint32Serializable* temp = scores_;
  scores_ = nullptr;
  return temp;
}
inline ::pb::si::sint32_serializable::Sint32Serializable* CorePlotData::_internal_mutable_scores() {
  _has_bits_[0] |= 0x00100000u;
  if (scores_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::sint32_serializable::Sint32Serializable>(GetArenaNoVirtual());
    scores_ = p;
  }
  return scores_;
}
inline ::pb::si::sint32_serializable::Sint32Serializable* CorePlotData::mutable_scores() {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData.scores)
  return _internal_mutable_scores();
}
inline void CorePlotData::set_allocated_scores(::pb::si::sint32_serializable::Sint32Serializable* scores) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(scores_);
  }
  if (scores) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      scores = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scores, submessage_arena);
    }
    _has_bits_[0] |= 0x00100000u;
  } else {
    _has_bits_[0] &= ~0x00100000u;
  }
  scores_ = scores;
  // @@protoc_insertion_point(field_set_allocated:pb.si.core_plot_data.CorePlotData.scores)
}

// -------------------------------------------------------------------

// CorePlotData_array_port

// repeated .pb.si.core_plot_data.CorePlotData data = 728;
inline int CorePlotData_array_port::_internal_data_size() const {
  return data_.size();
}
inline int CorePlotData_array_port::data_size() const {
  return _internal_data_size();
}
inline void CorePlotData_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::si::core_plot_data::CorePlotData* CorePlotData_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.si.core_plot_data.CorePlotData_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::core_plot_data::CorePlotData >*
CorePlotData_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.si.core_plot_data.CorePlotData_array_port.data)
  return &data_;
}
inline const ::pb::si::core_plot_data::CorePlotData& CorePlotData_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::si::core_plot_data::CorePlotData& CorePlotData_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.si.core_plot_data.CorePlotData_array_port.data)
  return _internal_data(index);
}
inline ::pb::si::core_plot_data::CorePlotData* CorePlotData_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::si::core_plot_data::CorePlotData* CorePlotData_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.si.core_plot_data.CorePlotData_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::core_plot_data::CorePlotData >&
CorePlotData_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.si.core_plot_data.CorePlotData_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace core_plot_data
}  // namespace si
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_si_2fcore_5fplot_5fdata_2eproto
