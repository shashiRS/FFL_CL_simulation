// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: si/slot_surrounding_lines.proto

#include "si/slot_surrounding_lines.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_si_2fline_5fsegment_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LineSegmentSerializable_si_2fline_5fsegment_5fserializable_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fslot_5fsurrounding_5flines_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SlotSurroundingLines_si_2fslot_5fsurrounding_5flines_2eproto;
namespace pb {
namespace si {
namespace slot_surrounding_lines {
class SlotSurroundingLinesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SlotSurroundingLines> _instance;
} _SlotSurroundingLines_default_instance_;
class SlotSurroundingLines_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SlotSurroundingLines_array_port> _instance;
} _SlotSurroundingLines_array_port_default_instance_;
}  // namespace slot_surrounding_lines
}  // namespace si
}  // namespace pb
static void InitDefaultsscc_info_SlotSurroundingLines_si_2fslot_5fsurrounding_5flines_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::si::slot_surrounding_lines::_SlotSurroundingLines_default_instance_;
    new (ptr) ::pb::si::slot_surrounding_lines::SlotSurroundingLines();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::si::slot_surrounding_lines::SlotSurroundingLines::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SlotSurroundingLines_si_2fslot_5fsurrounding_5flines_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SlotSurroundingLines_si_2fslot_5fsurrounding_5flines_2eproto}, {
      &scc_info_LineSegmentSerializable_si_2fline_5fsegment_5fserializable_2eproto.base,}};

static void InitDefaultsscc_info_SlotSurroundingLines_array_port_si_2fslot_5fsurrounding_5flines_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::si::slot_surrounding_lines::_SlotSurroundingLines_array_port_default_instance_;
    new (ptr) ::pb::si::slot_surrounding_lines::SlotSurroundingLines_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::si::slot_surrounding_lines::SlotSurroundingLines_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SlotSurroundingLines_array_port_si_2fslot_5fsurrounding_5flines_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SlotSurroundingLines_array_port_si_2fslot_5fsurrounding_5flines_2eproto}, {
      &scc_info_SlotSurroundingLines_si_2fslot_5fsurrounding_5flines_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_si_2fslot_5fsurrounding_5flines_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_si_2fslot_5fsurrounding_5flines_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_si_2fslot_5fsurrounding_5flines_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_si_2fslot_5fsurrounding_5flines_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::si::slot_surrounding_lines::SlotSurroundingLines, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::si::slot_surrounding_lines::SlotSurroundingLines, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::si::slot_surrounding_lines::SlotSurroundingLines, leftline_),
  PROTOBUF_FIELD_OFFSET(::pb::si::slot_surrounding_lines::SlotSurroundingLines, rightline_),
  PROTOBUF_FIELD_OFFSET(::pb::si::slot_surrounding_lines::SlotSurroundingLines, roadline_),
  PROTOBUF_FIELD_OFFSET(::pb::si::slot_surrounding_lines::SlotSurroundingLines, curbline_),
  0,
  3,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::pb::si::slot_surrounding_lines::SlotSurroundingLines_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::si::slot_surrounding_lines::SlotSurroundingLines_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::si::slot_surrounding_lines::SlotSurroundingLines_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::pb::si::slot_surrounding_lines::SlotSurroundingLines)},
  { 13, 19, sizeof(::pb::si::slot_surrounding_lines::SlotSurroundingLines_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::si::slot_surrounding_lines::_SlotSurroundingLines_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::si::slot_surrounding_lines::_SlotSurroundingLines_array_port_default_instance_),
};

const char descriptor_table_protodef_si_2fslot_5fsurrounding_5flines_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037si/slot_surrounding_lines.proto\022\034pb.si"
  ".slot_surrounding_lines\032\"si/line_segment"
  "_serializable.proto\"\313\002\n\024SlotSurroundingL"
  "ines\022K\n\010leftLine\030\244\017 \001(\01328.pb.si.line_seg"
  "ment_serializable.LineSegmentSerializabl"
  "e\022L\n\trightLine\030\317\034 \001(\01328.pb.si.line_segme"
  "nt_serializable.LineSegmentSerializable\022"
  "K\n\010roadLine\030\324\026 \001(\01328.pb.si.line_segment_"
  "serializable.LineSegmentSerializable\022K\n\010"
  "curbLine\030\347\031 \001(\01328.pb.si.line_segment_ser"
  "ializable.LineSegmentSerializable\"d\n\037Slo"
  "tSurroundingLines_array_port\022A\n\004data\030\245\025 "
  "\003(\01322.pb.si.slot_surrounding_lines.SlotS"
  "urroundingLines"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_si_2fslot_5fsurrounding_5flines_2eproto_deps[1] = {
  &::descriptor_table_si_2fline_5fsegment_5fserializable_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_si_2fslot_5fsurrounding_5flines_2eproto_sccs[2] = {
  &scc_info_SlotSurroundingLines_si_2fslot_5fsurrounding_5flines_2eproto.base,
  &scc_info_SlotSurroundingLines_array_port_si_2fslot_5fsurrounding_5flines_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_si_2fslot_5fsurrounding_5flines_2eproto_once;
static bool descriptor_table_si_2fslot_5fsurrounding_5flines_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_si_2fslot_5fsurrounding_5flines_2eproto = {
  &descriptor_table_si_2fslot_5fsurrounding_5flines_2eproto_initialized, descriptor_table_protodef_si_2fslot_5fsurrounding_5flines_2eproto, "si/slot_surrounding_lines.proto", 535,
  &descriptor_table_si_2fslot_5fsurrounding_5flines_2eproto_once, descriptor_table_si_2fslot_5fsurrounding_5flines_2eproto_sccs, descriptor_table_si_2fslot_5fsurrounding_5flines_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_si_2fslot_5fsurrounding_5flines_2eproto::offsets,
  file_level_metadata_si_2fslot_5fsurrounding_5flines_2eproto, 2, file_level_enum_descriptors_si_2fslot_5fsurrounding_5flines_2eproto, file_level_service_descriptors_si_2fslot_5fsurrounding_5flines_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_si_2fslot_5fsurrounding_5flines_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_si_2fslot_5fsurrounding_5flines_2eproto), true);
namespace pb {
namespace si {
namespace slot_surrounding_lines {

// ===================================================================

void SlotSurroundingLines::InitAsDefaultInstance() {
  ::pb::si::slot_surrounding_lines::_SlotSurroundingLines_default_instance_._instance.get_mutable()->leftline_ = const_cast< ::pb::si::line_segment_serializable::LineSegmentSerializable*>(
      ::pb::si::line_segment_serializable::LineSegmentSerializable::internal_default_instance());
  ::pb::si::slot_surrounding_lines::_SlotSurroundingLines_default_instance_._instance.get_mutable()->rightline_ = const_cast< ::pb::si::line_segment_serializable::LineSegmentSerializable*>(
      ::pb::si::line_segment_serializable::LineSegmentSerializable::internal_default_instance());
  ::pb::si::slot_surrounding_lines::_SlotSurroundingLines_default_instance_._instance.get_mutable()->roadline_ = const_cast< ::pb::si::line_segment_serializable::LineSegmentSerializable*>(
      ::pb::si::line_segment_serializable::LineSegmentSerializable::internal_default_instance());
  ::pb::si::slot_surrounding_lines::_SlotSurroundingLines_default_instance_._instance.get_mutable()->curbline_ = const_cast< ::pb::si::line_segment_serializable::LineSegmentSerializable*>(
      ::pb::si::line_segment_serializable::LineSegmentSerializable::internal_default_instance());
}
class SlotSurroundingLines::_Internal {
 public:
  using HasBits = decltype(std::declval<SlotSurroundingLines>()._has_bits_);
  static const ::pb::si::line_segment_serializable::LineSegmentSerializable& leftline(const SlotSurroundingLines* msg);
  static void set_has_leftline(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb::si::line_segment_serializable::LineSegmentSerializable& rightline(const SlotSurroundingLines* msg);
  static void set_has_rightline(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::pb::si::line_segment_serializable::LineSegmentSerializable& roadline(const SlotSurroundingLines* msg);
  static void set_has_roadline(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::pb::si::line_segment_serializable::LineSegmentSerializable& curbline(const SlotSurroundingLines* msg);
  static void set_has_curbline(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::pb::si::line_segment_serializable::LineSegmentSerializable&
SlotSurroundingLines::_Internal::leftline(const SlotSurroundingLines* msg) {
  return *msg->leftline_;
}
const ::pb::si::line_segment_serializable::LineSegmentSerializable&
SlotSurroundingLines::_Internal::rightline(const SlotSurroundingLines* msg) {
  return *msg->rightline_;
}
const ::pb::si::line_segment_serializable::LineSegmentSerializable&
SlotSurroundingLines::_Internal::roadline(const SlotSurroundingLines* msg) {
  return *msg->roadline_;
}
const ::pb::si::line_segment_serializable::LineSegmentSerializable&
SlotSurroundingLines::_Internal::curbline(const SlotSurroundingLines* msg) {
  return *msg->curbline_;
}
void SlotSurroundingLines::clear_leftline() {
  if (leftline_ != nullptr) leftline_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void SlotSurroundingLines::clear_rightline() {
  if (rightline_ != nullptr) rightline_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void SlotSurroundingLines::clear_roadline() {
  if (roadline_ != nullptr) roadline_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void SlotSurroundingLines::clear_curbline() {
  if (curbline_ != nullptr) curbline_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
SlotSurroundingLines::SlotSurroundingLines()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.si.slot_surrounding_lines.SlotSurroundingLines)
}
SlotSurroundingLines::SlotSurroundingLines(const SlotSurroundingLines& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_leftline()) {
    leftline_ = new ::pb::si::line_segment_serializable::LineSegmentSerializable(*from.leftline_);
  } else {
    leftline_ = nullptr;
  }
  if (from._internal_has_roadline()) {
    roadline_ = new ::pb::si::line_segment_serializable::LineSegmentSerializable(*from.roadline_);
  } else {
    roadline_ = nullptr;
  }
  if (from._internal_has_curbline()) {
    curbline_ = new ::pb::si::line_segment_serializable::LineSegmentSerializable(*from.curbline_);
  } else {
    curbline_ = nullptr;
  }
  if (from._internal_has_rightline()) {
    rightline_ = new ::pb::si::line_segment_serializable::LineSegmentSerializable(*from.rightline_);
  } else {
    rightline_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pb.si.slot_surrounding_lines.SlotSurroundingLines)
}

void SlotSurroundingLines::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SlotSurroundingLines_si_2fslot_5fsurrounding_5flines_2eproto.base);
  ::memset(&leftline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rightline_) -
      reinterpret_cast<char*>(&leftline_)) + sizeof(rightline_));
}

SlotSurroundingLines::~SlotSurroundingLines() {
  // @@protoc_insertion_point(destructor:pb.si.slot_surrounding_lines.SlotSurroundingLines)
  SharedDtor();
}

void SlotSurroundingLines::SharedDtor() {
  if (this != internal_default_instance()) delete leftline_;
  if (this != internal_default_instance()) delete roadline_;
  if (this != internal_default_instance()) delete curbline_;
  if (this != internal_default_instance()) delete rightline_;
}

void SlotSurroundingLines::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SlotSurroundingLines& SlotSurroundingLines::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SlotSurroundingLines_si_2fslot_5fsurrounding_5flines_2eproto.base);
  return *internal_default_instance();
}


void SlotSurroundingLines::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.si.slot_surrounding_lines.SlotSurroundingLines)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(leftline_ != nullptr);
      leftline_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(roadline_ != nullptr);
      roadline_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(curbline_ != nullptr);
      curbline_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(rightline_ != nullptr);
      rightline_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* SlotSurroundingLines::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.si.line_segment_serializable.LineSegmentSerializable leftLine = 1956;
      case 1956:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftline(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.line_segment_serializable.LineSegmentSerializable roadLine = 2900;
      case 2900:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_roadline(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.line_segment_serializable.LineSegmentSerializable curbLine = 3303;
      case 3303:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_curbline(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.line_segment_serializable.LineSegmentSerializable rightLine = 3663;
      case 3663:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightline(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SlotSurroundingLines::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.si.slot_surrounding_lines.SlotSurroundingLines)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.si.line_segment_serializable.LineSegmentSerializable leftLine = 1956;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1956, _Internal::leftline(this), target, stream);
  }

  // optional .pb.si.line_segment_serializable.LineSegmentSerializable roadLine = 2900;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2900, _Internal::roadline(this), target, stream);
  }

  // optional .pb.si.line_segment_serializable.LineSegmentSerializable curbLine = 3303;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3303, _Internal::curbline(this), target, stream);
  }

  // optional .pb.si.line_segment_serializable.LineSegmentSerializable rightLine = 3663;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3663, _Internal::rightline(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.si.slot_surrounding_lines.SlotSurroundingLines)
  return target;
}

size_t SlotSurroundingLines::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.si.slot_surrounding_lines.SlotSurroundingLines)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .pb.si.line_segment_serializable.LineSegmentSerializable leftLine = 1956;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *leftline_);
    }

    // optional .pb.si.line_segment_serializable.LineSegmentSerializable roadLine = 2900;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *roadline_);
    }

    // optional .pb.si.line_segment_serializable.LineSegmentSerializable curbLine = 3303;
    if (cached_has_bits & 0x00000004u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *curbline_);
    }

    // optional .pb.si.line_segment_serializable.LineSegmentSerializable rightLine = 3663;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *rightline_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SlotSurroundingLines::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.si.slot_surrounding_lines.SlotSurroundingLines)
  GOOGLE_DCHECK_NE(&from, this);
  const SlotSurroundingLines* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SlotSurroundingLines>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.si.slot_surrounding_lines.SlotSurroundingLines)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.si.slot_surrounding_lines.SlotSurroundingLines)
    MergeFrom(*source);
  }
}

void SlotSurroundingLines::MergeFrom(const SlotSurroundingLines& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.si.slot_surrounding_lines.SlotSurroundingLines)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_leftline()->::pb::si::line_segment_serializable::LineSegmentSerializable::MergeFrom(from._internal_leftline());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_roadline()->::pb::si::line_segment_serializable::LineSegmentSerializable::MergeFrom(from._internal_roadline());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_curbline()->::pb::si::line_segment_serializable::LineSegmentSerializable::MergeFrom(from._internal_curbline());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_rightline()->::pb::si::line_segment_serializable::LineSegmentSerializable::MergeFrom(from._internal_rightline());
    }
  }
}

void SlotSurroundingLines::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.si.slot_surrounding_lines.SlotSurroundingLines)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlotSurroundingLines::CopyFrom(const SlotSurroundingLines& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.si.slot_surrounding_lines.SlotSurroundingLines)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlotSurroundingLines::IsInitialized() const {
  return true;
}

void SlotSurroundingLines::InternalSwap(SlotSurroundingLines* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(leftline_, other->leftline_);
  swap(roadline_, other->roadline_);
  swap(curbline_, other->curbline_);
  swap(rightline_, other->rightline_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SlotSurroundingLines::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SlotSurroundingLines_array_port::InitAsDefaultInstance() {
}
class SlotSurroundingLines_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<SlotSurroundingLines_array_port>()._has_bits_);
};

SlotSurroundingLines_array_port::SlotSurroundingLines_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
}
SlotSurroundingLines_array_port::SlotSurroundingLines_array_port(const SlotSurroundingLines_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
}

void SlotSurroundingLines_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SlotSurroundingLines_array_port_si_2fslot_5fsurrounding_5flines_2eproto.base);
}

SlotSurroundingLines_array_port::~SlotSurroundingLines_array_port() {
  // @@protoc_insertion_point(destructor:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
  SharedDtor();
}

void SlotSurroundingLines_array_port::SharedDtor() {
}

void SlotSurroundingLines_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SlotSurroundingLines_array_port& SlotSurroundingLines_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SlotSurroundingLines_array_port_si_2fslot_5fsurrounding_5flines_2eproto.base);
  return *internal_default_instance();
}


void SlotSurroundingLines_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* SlotSurroundingLines_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.si.slot_surrounding_lines.SlotSurroundingLines data = 2725;
      case 2725:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SlotSurroundingLines_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.si.slot_surrounding_lines.SlotSurroundingLines data = 2725;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2725, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
  return target;
}

size_t SlotSurroundingLines_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.si.slot_surrounding_lines.SlotSurroundingLines data = 2725;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SlotSurroundingLines_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const SlotSurroundingLines_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SlotSurroundingLines_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
    MergeFrom(*source);
  }
}

void SlotSurroundingLines_array_port::MergeFrom(const SlotSurroundingLines_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void SlotSurroundingLines_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlotSurroundingLines_array_port::CopyFrom(const SlotSurroundingLines_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.si.slot_surrounding_lines.SlotSurroundingLines_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlotSurroundingLines_array_port::IsInitialized() const {
  return true;
}

void SlotSurroundingLines_array_port::InternalSwap(SlotSurroundingLines_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SlotSurroundingLines_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace slot_surrounding_lines
}  // namespace si
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::si::slot_surrounding_lines::SlotSurroundingLines* Arena::CreateMaybeMessage< ::pb::si::slot_surrounding_lines::SlotSurroundingLines >(Arena* arena) {
  return Arena::CreateInternal< ::pb::si::slot_surrounding_lines::SlotSurroundingLines >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::si::slot_surrounding_lines::SlotSurroundingLines_array_port* Arena::CreateMaybeMessage< ::pb::si::slot_surrounding_lines::SlotSurroundingLines_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::si::slot_surrounding_lines::SlotSurroundingLines_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
