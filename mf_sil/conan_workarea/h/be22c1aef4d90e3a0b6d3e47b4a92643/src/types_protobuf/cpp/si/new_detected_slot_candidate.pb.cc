// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: si/new_detected_slot_candidate.proto

#include "si/new_detected_slot_candidate.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_cml_2fvec2_5fdf_5fpod_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec2Df_POD_cml_2fvec2_5fdf_5fpod_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NewDetectedSlotCandidate_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto;
namespace pb {
namespace si {
namespace new_detected_slot_candidate {
class NewDetectedSlotCandidateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NewDetectedSlotCandidate> _instance;
} _NewDetectedSlotCandidate_default_instance_;
class NewDetectedSlotCandidate_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NewDetectedSlotCandidate_array_port> _instance;
} _NewDetectedSlotCandidate_array_port_default_instance_;
}  // namespace new_detected_slot_candidate
}  // namespace si
}  // namespace pb
static void InitDefaultsscc_info_NewDetectedSlotCandidate_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::si::new_detected_slot_candidate::_NewDetectedSlotCandidate_default_instance_;
    new (ptr) ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NewDetectedSlotCandidate_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_NewDetectedSlotCandidate_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto}, {
      &scc_info_Vec2Df_POD_cml_2fvec2_5fdf_5fpod_2eproto.base,}};

static void InitDefaultsscc_info_NewDetectedSlotCandidate_array_port_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::si::new_detected_slot_candidate::_NewDetectedSlotCandidate_array_port_default_instance_;
    new (ptr) ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NewDetectedSlotCandidate_array_port_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_NewDetectedSlotCandidate_array_port_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto}, {
      &scc_info_NewDetectedSlotCandidate_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate, start_),
  PROTOBUF_FIELD_OFFSET(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate, end_),
  PROTOBUF_FIELD_OFFSET(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate, side_),
  PROTOBUF_FIELD_OFFSET(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate, status_),
  0,
  1,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate)},
  { 13, 19, sizeof(::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::si::new_detected_slot_candidate::_NewDetectedSlotCandidate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::si::new_detected_slot_candidate::_NewDetectedSlotCandidate_array_port_default_instance_),
};

const char descriptor_table_protodef_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$si/new_detected_slot_candidate.proto\022!"
  "pb.si.new_detected_slot_candidate\032\025cml/v"
  "ec2_df_pod.proto\032\020si/pb_side.proto\032\024si/s"
  "lot_status.proto\"\317\001\n\030NewDetectedSlotCand"
  "idate\022.\n\005start\030\333\020 \001(\0132\036.pb.cml.vec2_df_p"
  "od.Vec2Df_POD\022,\n\003end\030\371\032 \001(\0132\036.pb.cml.vec"
  "2_df_pod.Vec2Df_POD\022%\n\004side\030\212\037 \001(\0162\026.pb."
  "si.pb_side.PB_Side\022.\n\006status\030\371\003 \001(\0162\035.pb"
  ".si.slot_status.SlotStatus\"q\n#NewDetecte"
  "dSlotCandidate_array_port\022J\n\004data\030\225\031 \003(\013"
  "2;.pb.si.new_detected_slot_candidate.New"
  "DetectedSlotCandidate"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto_deps[3] = {
  &::descriptor_table_cml_2fvec2_5fdf_5fpod_2eproto,
  &::descriptor_table_si_2fpb_5fside_2eproto,
  &::descriptor_table_si_2fslot_5fstatus_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto_sccs[2] = {
  &scc_info_NewDetectedSlotCandidate_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto.base,
  &scc_info_NewDetectedSlotCandidate_array_port_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto_once;
static bool descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto = {
  &descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto_initialized, descriptor_table_protodef_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto, "si/new_detected_slot_candidate.proto", 461,
  &descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto_once, descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto_sccs, descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto_deps, 2, 3,
  schemas, file_default_instances, TableStruct_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto::offsets,
  file_level_metadata_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto, 2, file_level_enum_descriptors_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto, file_level_service_descriptors_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto), true);
namespace pb {
namespace si {
namespace new_detected_slot_candidate {

// ===================================================================

void NewDetectedSlotCandidate::InitAsDefaultInstance() {
  ::pb::si::new_detected_slot_candidate::_NewDetectedSlotCandidate_default_instance_._instance.get_mutable()->start_ = const_cast< ::pb::cml::vec2_df_pod::Vec2Df_POD*>(
      ::pb::cml::vec2_df_pod::Vec2Df_POD::internal_default_instance());
  ::pb::si::new_detected_slot_candidate::_NewDetectedSlotCandidate_default_instance_._instance.get_mutable()->end_ = const_cast< ::pb::cml::vec2_df_pod::Vec2Df_POD*>(
      ::pb::cml::vec2_df_pod::Vec2Df_POD::internal_default_instance());
}
class NewDetectedSlotCandidate::_Internal {
 public:
  using HasBits = decltype(std::declval<NewDetectedSlotCandidate>()._has_bits_);
  static const ::pb::cml::vec2_df_pod::Vec2Df_POD& start(const NewDetectedSlotCandidate* msg);
  static void set_has_start(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb::cml::vec2_df_pod::Vec2Df_POD& end(const NewDetectedSlotCandidate* msg);
  static void set_has_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_side(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::pb::cml::vec2_df_pod::Vec2Df_POD&
NewDetectedSlotCandidate::_Internal::start(const NewDetectedSlotCandidate* msg) {
  return *msg->start_;
}
const ::pb::cml::vec2_df_pod::Vec2Df_POD&
NewDetectedSlotCandidate::_Internal::end(const NewDetectedSlotCandidate* msg) {
  return *msg->end_;
}
void NewDetectedSlotCandidate::clear_start() {
  if (start_ != nullptr) start_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void NewDetectedSlotCandidate::clear_end() {
  if (end_ != nullptr) end_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
NewDetectedSlotCandidate::NewDetectedSlotCandidate()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
}
NewDetectedSlotCandidate::NewDetectedSlotCandidate(const NewDetectedSlotCandidate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_start()) {
    start_ = new ::pb::cml::vec2_df_pod::Vec2Df_POD(*from.start_);
  } else {
    start_ = nullptr;
  }
  if (from._internal_has_end()) {
    end_ = new ::pb::cml::vec2_df_pod::Vec2Df_POD(*from.end_);
  } else {
    end_ = nullptr;
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&side_) -
    reinterpret_cast<char*>(&status_)) + sizeof(side_));
  // @@protoc_insertion_point(copy_constructor:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
}

void NewDetectedSlotCandidate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NewDetectedSlotCandidate_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto.base);
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&start_)) + sizeof(side_));
}

NewDetectedSlotCandidate::~NewDetectedSlotCandidate() {
  // @@protoc_insertion_point(destructor:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
  SharedDtor();
}

void NewDetectedSlotCandidate::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void NewDetectedSlotCandidate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NewDetectedSlotCandidate& NewDetectedSlotCandidate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NewDetectedSlotCandidate_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto.base);
  return *internal_default_instance();
}


void NewDetectedSlotCandidate::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(start_ != nullptr);
      start_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(end_ != nullptr);
      end_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&side_) -
        reinterpret_cast<char*>(&status_)) + sizeof(side_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* NewDetectedSlotCandidate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.si.slot_status.SlotStatus status = 505;
      case 505:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::si::slot_status::SlotStatus_IsValid(val))) {
            _internal_set_status(static_cast<::pb::si::slot_status::SlotStatus>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(505, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.cml.vec2_df_pod.Vec2Df_POD start = 2139;
      case 2139:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_start(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.cml.vec2_df_pod.Vec2Df_POD end = 3449;
      case 3449:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_end(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.pb_side.PB_Side side = 3978;
      case 3978:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::si::pb_side::PB_Side_IsValid(val))) {
            _internal_set_side(static_cast<::pb::si::pb_side::PB_Side>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3978, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NewDetectedSlotCandidate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.si.slot_status.SlotStatus status = 505;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      505, this->_internal_status(), target);
  }

  // optional .pb.cml.vec2_df_pod.Vec2Df_POD start = 2139;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2139, _Internal::start(this), target, stream);
  }

  // optional .pb.cml.vec2_df_pod.Vec2Df_POD end = 3449;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3449, _Internal::end(this), target, stream);
  }

  // optional .pb.si.pb_side.PB_Side side = 3978;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3978, this->_internal_side(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
  return target;
}

size_t NewDetectedSlotCandidate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .pb.cml.vec2_df_pod.Vec2Df_POD start = 2139;
    if (cached_has_bits & 0x00000001u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_);
    }

    // optional .pb.cml.vec2_df_pod.Vec2Df_POD end = 3449;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *end_);
    }

    // optional .pb.si.slot_status.SlotStatus status = 505;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
    }

    // optional .pb.si.pb_side.PB_Side side = 3978;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_side());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewDetectedSlotCandidate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
  GOOGLE_DCHECK_NE(&from, this);
  const NewDetectedSlotCandidate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NewDetectedSlotCandidate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
    MergeFrom(*source);
  }
}

void NewDetectedSlotCandidate::MergeFrom(const NewDetectedSlotCandidate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_start()->::pb::cml::vec2_df_pod::Vec2Df_POD::MergeFrom(from._internal_start());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_end()->::pb::cml::vec2_df_pod::Vec2Df_POD::MergeFrom(from._internal_end());
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000008u) {
      side_ = from.side_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NewDetectedSlotCandidate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewDetectedSlotCandidate::CopyFrom(const NewDetectedSlotCandidate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewDetectedSlotCandidate::IsInitialized() const {
  return true;
}

void NewDetectedSlotCandidate::InternalSwap(NewDetectedSlotCandidate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(status_, other->status_);
  swap(side_, other->side_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NewDetectedSlotCandidate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NewDetectedSlotCandidate_array_port::InitAsDefaultInstance() {
}
class NewDetectedSlotCandidate_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<NewDetectedSlotCandidate_array_port>()._has_bits_);
};

NewDetectedSlotCandidate_array_port::NewDetectedSlotCandidate_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
}
NewDetectedSlotCandidate_array_port::NewDetectedSlotCandidate_array_port(const NewDetectedSlotCandidate_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
}

void NewDetectedSlotCandidate_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NewDetectedSlotCandidate_array_port_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto.base);
}

NewDetectedSlotCandidate_array_port::~NewDetectedSlotCandidate_array_port() {
  // @@protoc_insertion_point(destructor:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
  SharedDtor();
}

void NewDetectedSlotCandidate_array_port::SharedDtor() {
}

void NewDetectedSlotCandidate_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NewDetectedSlotCandidate_array_port& NewDetectedSlotCandidate_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NewDetectedSlotCandidate_array_port_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto.base);
  return *internal_default_instance();
}


void NewDetectedSlotCandidate_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* NewDetectedSlotCandidate_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate data = 3221;
      case 3221:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NewDetectedSlotCandidate_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate data = 3221;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3221, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
  return target;
}

size_t NewDetectedSlotCandidate_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate data = 3221;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewDetectedSlotCandidate_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const NewDetectedSlotCandidate_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NewDetectedSlotCandidate_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
    MergeFrom(*source);
  }
}

void NewDetectedSlotCandidate_array_port::MergeFrom(const NewDetectedSlotCandidate_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void NewDetectedSlotCandidate_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewDetectedSlotCandidate_array_port::CopyFrom(const NewDetectedSlotCandidate_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewDetectedSlotCandidate_array_port::IsInitialized() const {
  return true;
}

void NewDetectedSlotCandidate_array_port::InternalSwap(NewDetectedSlotCandidate_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NewDetectedSlotCandidate_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace new_detected_slot_candidate
}  // namespace si
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate* Arena::CreateMaybeMessage< ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate >(Arena* arena) {
  return Arena::CreateInternal< ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port* Arena::CreateMaybeMessage< ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
