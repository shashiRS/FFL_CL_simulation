// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_psm/planning_ctrl_commands.proto

#include "ap_psm/planning_ctrl_commands.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlanningCtrlCommands_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto;
namespace pb {
namespace ap_psm {
namespace planning_ctrl_commands {
class PlanningCtrlCommandsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlanningCtrlCommands> _instance;
} _PlanningCtrlCommands_default_instance_;
class PlanningCtrlCommands_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlanningCtrlCommands_array_port> _instance;
} _PlanningCtrlCommands_array_port_default_instance_;
}  // namespace planning_ctrl_commands
}  // namespace ap_psm
}  // namespace pb
static void InitDefaultsscc_info_PlanningCtrlCommands_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_psm::planning_ctrl_commands::_PlanningCtrlCommands_default_instance_;
    new (ptr) ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlanningCtrlCommands_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlanningCtrlCommands_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto}, {}};

static void InitDefaultsscc_info_PlanningCtrlCommands_array_port_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_psm::planning_ctrl_commands::_PlanningCtrlCommands_array_port_default_instance_;
    new (ptr) ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlanningCtrlCommands_array_port_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PlanningCtrlCommands_array_port_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto}, {
      &scc_info_PlanningCtrlCommands_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands, apchosentargetposeid_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands, apstate_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands, applanningspecification_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands, rmstate_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands, gpstate_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands, mpstate_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands, tpstate_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands, rastate_),
  0,
  3,
  5,
  6,
  7,
  2,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands)},
  { 21, 27, sizeof(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_psm::planning_ctrl_commands::_PlanningCtrlCommands_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_psm::planning_ctrl_commands::_PlanningCtrlCommands_array_port_default_instance_),
};

const char descriptor_table_protodef_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#ap_psm/planning_ctrl_commands.proto\022 p"
  "b.ap_psm.planning_ctrl_commands\032\024ap_psm/"
  "apstate.proto\032%ap_psm/applanning_specifi"
  "cation.proto\032\024ap_psm/rmstate.proto\032\024ap_p"
  "sm/gpstate.proto\032\024ap_psm/mpstate.proto\032\024"
  "ap_psm/tpstate.proto\032\024ap_psm/rastate.pro"
  "to\"\253\003\n\024PlanningCtrlCommands\022 \n\027apChosenT"
  "argetPoseId_nu\030\302\005 \001(\r\022,\n\007apState\030\335\016 \001(\0162"
  "\032.pb.ap_psm.apstate.APState\022]\n\027apPlannin"
  "gSpecification\030\307\024 \001(\0162;.pb.ap_psm.applan"
  "ning_specification.APPlanningSpecificati"
  "on\022,\n\007rmState\030\203\031 \001(\0162\032.pb.ap_psm.rmstate"
  ".RMState\022,\n\007gpState\030\210\034 \001(\0162\032.pb.ap_psm.g"
  "pstate.GPState\022,\n\007mpState\030\367\013 \001(\0162\032.pb.ap"
  "_psm.mpstate.MPState\022,\n\007tpState\030\265\006 \001(\0162\032"
  ".pb.ap_psm.tpstate.TPState\022,\n\007raState\030\314\020"
  " \001(\0162\032.pb.ap_psm.rastate.RAState\"h\n\037Plan"
  "ningCtrlCommands_array_port\022E\n\004data\030\370\013 \003"
  "(\01326.pb.ap_psm.planning_ctrl_commands.Pl"
  "anningCtrlCommands"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto_deps[7] = {
  &::descriptor_table_ap_5fpsm_2fapplanning_5fspecification_2eproto,
  &::descriptor_table_ap_5fpsm_2fapstate_2eproto,
  &::descriptor_table_ap_5fpsm_2fgpstate_2eproto,
  &::descriptor_table_ap_5fpsm_2fmpstate_2eproto,
  &::descriptor_table_ap_5fpsm_2frastate_2eproto,
  &::descriptor_table_ap_5fpsm_2frmstate_2eproto,
  &::descriptor_table_ap_5fpsm_2ftpstate_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto_sccs[2] = {
  &scc_info_PlanningCtrlCommands_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto.base,
  &scc_info_PlanningCtrlCommands_array_port_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto_once;
static bool descriptor_table_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto = {
  &descriptor_table_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto_initialized, descriptor_table_protodef_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto, "ap_psm/planning_ctrl_commands.proto", 778,
  &descriptor_table_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto_once, descriptor_table_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto_sccs, descriptor_table_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto_deps, 2, 7,
  schemas, file_default_instances, TableStruct_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto::offsets,
  file_level_metadata_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto, 2, file_level_enum_descriptors_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto, file_level_service_descriptors_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto), true);
namespace pb {
namespace ap_psm {
namespace planning_ctrl_commands {

// ===================================================================

void PlanningCtrlCommands::InitAsDefaultInstance() {
}
class PlanningCtrlCommands::_Internal {
 public:
  using HasBits = decltype(std::declval<PlanningCtrlCommands>()._has_bits_);
  static void set_has_apchosentargetposeid_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_apstate(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_applanningspecification(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_rmstate(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_gpstate(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_mpstate(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_tpstate(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rastate(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

PlanningCtrlCommands::PlanningCtrlCommands()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
}
PlanningCtrlCommands::PlanningCtrlCommands(const PlanningCtrlCommands& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apchosentargetposeid_nu_, &from.apchosentargetposeid_nu_,
    static_cast<size_t>(reinterpret_cast<char*>(&gpstate_) -
    reinterpret_cast<char*>(&apchosentargetposeid_nu_)) + sizeof(gpstate_));
  // @@protoc_insertion_point(copy_constructor:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
}

void PlanningCtrlCommands::SharedCtor() {
  ::memset(&apchosentargetposeid_nu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gpstate_) -
      reinterpret_cast<char*>(&apchosentargetposeid_nu_)) + sizeof(gpstate_));
}

PlanningCtrlCommands::~PlanningCtrlCommands() {
  // @@protoc_insertion_point(destructor:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
  SharedDtor();
}

void PlanningCtrlCommands::SharedDtor() {
}

void PlanningCtrlCommands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlanningCtrlCommands& PlanningCtrlCommands::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlanningCtrlCommands_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto.base);
  return *internal_default_instance();
}


void PlanningCtrlCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&apchosentargetposeid_nu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gpstate_) -
        reinterpret_cast<char*>(&apchosentargetposeid_nu_)) + sizeof(gpstate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* PlanningCtrlCommands::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 apChosenTargetPoseId_nu = 706;
      case 706:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_apchosentargetposeid_nu(&has_bits);
          apchosentargetposeid_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_psm.tpstate.TPState tpState = 821;
      case 821:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_psm::tpstate::TPState_IsValid(val))) {
            _internal_set_tpstate(static_cast<::pb::ap_psm::tpstate::TPState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(821, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_psm.mpstate.MPState mpState = 1527;
      case 1527:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_psm::mpstate::MPState_IsValid(val))) {
            _internal_set_mpstate(static_cast<::pb::ap_psm::mpstate::MPState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1527, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_psm.apstate.APState apState = 1885;
      case 1885:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_psm::apstate::APState_IsValid(val))) {
            _internal_set_apstate(static_cast<::pb::ap_psm::apstate::APState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1885, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_psm.rastate.RAState raState = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_psm::rastate::RAState_IsValid(val))) {
            _internal_set_rastate(static_cast<::pb::ap_psm::rastate::RAState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2124, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_psm.applanning_specification.APPlanningSpecification apPlanningSpecification = 2631;
      case 2631:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_psm::applanning_specification::APPlanningSpecification_IsValid(val))) {
            _internal_set_applanningspecification(static_cast<::pb::ap_psm::applanning_specification::APPlanningSpecification>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2631, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_psm.rmstate.RMState rmState = 3203;
      case 3203:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_psm::rmstate::RMState_IsValid(val))) {
            _internal_set_rmstate(static_cast<::pb::ap_psm::rmstate::RMState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3203, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_psm.gpstate.GPState gpState = 3592;
      case 3592:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_psm::gpstate::GPState_IsValid(val))) {
            _internal_set_gpstate(static_cast<::pb::ap_psm::gpstate::GPState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3592, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlanningCtrlCommands::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 apChosenTargetPoseId_nu = 706;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(706, this->_internal_apchosentargetposeid_nu(), target);
  }

  // optional .pb.ap_psm.tpstate.TPState tpState = 821;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      821, this->_internal_tpstate(), target);
  }

  // optional .pb.ap_psm.mpstate.MPState mpState = 1527;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1527, this->_internal_mpstate(), target);
  }

  // optional .pb.ap_psm.apstate.APState apState = 1885;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1885, this->_internal_apstate(), target);
  }

  // optional .pb.ap_psm.rastate.RAState raState = 2124;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2124, this->_internal_rastate(), target);
  }

  // optional .pb.ap_psm.applanning_specification.APPlanningSpecification apPlanningSpecification = 2631;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2631, this->_internal_applanningspecification(), target);
  }

  // optional .pb.ap_psm.rmstate.RMState rmState = 3203;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3203, this->_internal_rmstate(), target);
  }

  // optional .pb.ap_psm.gpstate.GPState gpState = 3592;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3592, this->_internal_gpstate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
  return target;
}

size_t PlanningCtrlCommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint32 apChosenTargetPoseId_nu = 706;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_apchosentargetposeid_nu());
    }

    // optional .pb.ap_psm.tpstate.TPState tpState = 821;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_tpstate());
    }

    // optional .pb.ap_psm.mpstate.MPState mpState = 1527;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mpstate());
    }

    // optional .pb.ap_psm.apstate.APState apState = 1885;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_apstate());
    }

    // optional .pb.ap_psm.rastate.RAState raState = 2124;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rastate());
    }

    // optional .pb.ap_psm.applanning_specification.APPlanningSpecification apPlanningSpecification = 2631;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_applanningspecification());
    }

    // optional .pb.ap_psm.rmstate.RMState rmState = 3203;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rmstate());
    }

    // optional .pb.ap_psm.gpstate.GPState gpState = 3592;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_gpstate());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanningCtrlCommands::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanningCtrlCommands* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlanningCtrlCommands>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
    MergeFrom(*source);
  }
}

void PlanningCtrlCommands::MergeFrom(const PlanningCtrlCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      apchosentargetposeid_nu_ = from.apchosentargetposeid_nu_;
    }
    if (cached_has_bits & 0x00000002u) {
      tpstate_ = from.tpstate_;
    }
    if (cached_has_bits & 0x00000004u) {
      mpstate_ = from.mpstate_;
    }
    if (cached_has_bits & 0x00000008u) {
      apstate_ = from.apstate_;
    }
    if (cached_has_bits & 0x00000010u) {
      rastate_ = from.rastate_;
    }
    if (cached_has_bits & 0x00000020u) {
      applanningspecification_ = from.applanningspecification_;
    }
    if (cached_has_bits & 0x00000040u) {
      rmstate_ = from.rmstate_;
    }
    if (cached_has_bits & 0x00000080u) {
      gpstate_ = from.gpstate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlanningCtrlCommands::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanningCtrlCommands::CopyFrom(const PlanningCtrlCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanningCtrlCommands::IsInitialized() const {
  return true;
}

void PlanningCtrlCommands::InternalSwap(PlanningCtrlCommands* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(apchosentargetposeid_nu_, other->apchosentargetposeid_nu_);
  swap(tpstate_, other->tpstate_);
  swap(mpstate_, other->mpstate_);
  swap(apstate_, other->apstate_);
  swap(rastate_, other->rastate_);
  swap(applanningspecification_, other->applanningspecification_);
  swap(rmstate_, other->rmstate_);
  swap(gpstate_, other->gpstate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlanningCtrlCommands::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlanningCtrlCommands_array_port::InitAsDefaultInstance() {
}
class PlanningCtrlCommands_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<PlanningCtrlCommands_array_port>()._has_bits_);
};

PlanningCtrlCommands_array_port::PlanningCtrlCommands_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
}
PlanningCtrlCommands_array_port::PlanningCtrlCommands_array_port(const PlanningCtrlCommands_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
}

void PlanningCtrlCommands_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlanningCtrlCommands_array_port_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto.base);
}

PlanningCtrlCommands_array_port::~PlanningCtrlCommands_array_port() {
  // @@protoc_insertion_point(destructor:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
  SharedDtor();
}

void PlanningCtrlCommands_array_port::SharedDtor() {
}

void PlanningCtrlCommands_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlanningCtrlCommands_array_port& PlanningCtrlCommands_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlanningCtrlCommands_array_port_ap_5fpsm_2fplanning_5fctrl_5fcommands_2eproto.base);
  return *internal_default_instance();
}


void PlanningCtrlCommands_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* PlanningCtrlCommands_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands data = 1528;
      case 1528:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<12226>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlanningCtrlCommands_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands data = 1528;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1528, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
  return target;
}

size_t PlanningCtrlCommands_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands data = 1528;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanningCtrlCommands_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanningCtrlCommands_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlanningCtrlCommands_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
    MergeFrom(*source);
  }
}

void PlanningCtrlCommands_array_port::MergeFrom(const PlanningCtrlCommands_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void PlanningCtrlCommands_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanningCtrlCommands_array_port::CopyFrom(const PlanningCtrlCommands_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanningCtrlCommands_array_port::IsInitialized() const {
  return true;
}

void PlanningCtrlCommands_array_port::InternalSwap(PlanningCtrlCommands_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlanningCtrlCommands_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace planning_ctrl_commands
}  // namespace ap_psm
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* Arena::CreateMaybeMessage< ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands_array_port* Arena::CreateMaybeMessage< ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
