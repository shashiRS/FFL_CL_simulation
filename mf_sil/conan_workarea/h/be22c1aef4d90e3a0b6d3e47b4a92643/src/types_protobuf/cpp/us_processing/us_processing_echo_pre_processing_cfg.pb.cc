// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_processing/us_processing_echo_pre_processing_cfg.proto

#include "us_processing/us_processing_echo_pre_processing_cfg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsProcessingEchoPreProcessingCfg_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto;
namespace pb {
namespace us_processing {
namespace us_processing_echo_pre_processing_cfg {
class UsProcessingEchoPreProcessingCfgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsProcessingEchoPreProcessingCfg> _instance;
} _UsProcessingEchoPreProcessingCfg_default_instance_;
class UsProcessingEchoPreProcessingCfg_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsProcessingEchoPreProcessingCfg_array_port> _instance;
} _UsProcessingEchoPreProcessingCfg_array_port_default_instance_;
}  // namespace us_processing_echo_pre_processing_cfg
}  // namespace us_processing
}  // namespace pb
static void InitDefaultsscc_info_UsProcessingEchoPreProcessingCfg_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_processing::us_processing_echo_pre_processing_cfg::_UsProcessingEchoPreProcessingCfg_default_instance_;
    new (ptr) ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsProcessingEchoPreProcessingCfg_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UsProcessingEchoPreProcessingCfg_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto}, {}};

static void InitDefaultsscc_info_UsProcessingEchoPreProcessingCfg_array_port_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_processing::us_processing_echo_pre_processing_cfg::_UsProcessingEchoPreProcessingCfg_array_port_default_instance_;
    new (ptr) ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsProcessingEchoPreProcessingCfg_array_port_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UsProcessingEchoPreProcessingCfg_array_port_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto}, {
      &scc_info_UsProcessingEchoPreProcessingCfg_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg, echo_filter_timestamp_threshold_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg, echo_filter_distance_threshold_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg, echo_filter_distance_correction_factor_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg, echo_filter_distance_correction_weight_1_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg, echo_filter_distance_correction_weight_2_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg, echo_filter_delta_min_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg, echo_filter_delta_max_),
  6,
  4,
  2,
  0,
  1,
  5,
  3,
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg)},
  { 19, 25, sizeof(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_processing::us_processing_echo_pre_processing_cfg::_UsProcessingEchoPreProcessingCfg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_processing::us_processing_echo_pre_processing_cfg::_UsProcessingEchoPreProcessingCfg_array_port_default_instance_),
};

const char descriptor_table_protodef_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n9us_processing/us_processing_echo_pre_p"
  "rocessing_cfg.proto\0226pb.us_processing.us"
  "_processing_echo_pre_processing_cfg\"\314\002\n "
  "UsProcessingEchoPreProcessingCfg\022(\n\037echo"
  "_filter_timestamp_threshold\030\345\036 \001(\004\022\'\n\036ec"
  "ho_filter_distance_threshold\030\322\022 \001(\002\022/\n&e"
  "cho_filter_distance_correction_factor\030\226\n"
  " \001(\002\0221\n(echo_filter_distance_correction_"
  "weight_1\030\226\005 \001(\002\0221\n(echo_filter_distance_"
  "correction_weight_2\030\365\005 \001(\002\022\036\n\025echo_filte"
  "r_delta_min\030\210\034 \001(\002\022\036\n\025echo_filter_delta_"
  "max\030\326\n \001(\002\"\226\001\n+UsProcessingEchoPreProces"
  "singCfg_array_port\022g\n\004data\030\216\031 \003(\0132X.pb.u"
  "s_processing.us_processing_echo_pre_proc"
  "essing_cfg.UsProcessingEchoPreProcessing"
  "Cfg"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto_sccs[2] = {
  &scc_info_UsProcessingEchoPreProcessingCfg_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto.base,
  &scc_info_UsProcessingEchoPreProcessingCfg_array_port_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto_once;
static bool descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto = {
  &descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto_initialized, descriptor_table_protodef_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto, "us_processing/us_processing_echo_pre_processing_cfg.proto", 603,
  &descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto_once, descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto_sccs, descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto::offsets,
  file_level_metadata_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto, 2, file_level_enum_descriptors_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto, file_level_service_descriptors_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto), true);
namespace pb {
namespace us_processing {
namespace us_processing_echo_pre_processing_cfg {

// ===================================================================

void UsProcessingEchoPreProcessingCfg::InitAsDefaultInstance() {
}
class UsProcessingEchoPreProcessingCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<UsProcessingEchoPreProcessingCfg>()._has_bits_);
  static void set_has_echo_filter_timestamp_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_echo_filter_distance_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_echo_filter_distance_correction_factor(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_echo_filter_distance_correction_weight_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_echo_filter_distance_correction_weight_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_echo_filter_delta_min(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_echo_filter_delta_max(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

UsProcessingEchoPreProcessingCfg::UsProcessingEchoPreProcessingCfg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
}
UsProcessingEchoPreProcessingCfg::UsProcessingEchoPreProcessingCfg(const UsProcessingEchoPreProcessingCfg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&echo_filter_distance_correction_weight_1_, &from.echo_filter_distance_correction_weight_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&echo_filter_timestamp_threshold_) -
    reinterpret_cast<char*>(&echo_filter_distance_correction_weight_1_)) + sizeof(echo_filter_timestamp_threshold_));
  // @@protoc_insertion_point(copy_constructor:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
}

void UsProcessingEchoPreProcessingCfg::SharedCtor() {
  ::memset(&echo_filter_distance_correction_weight_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&echo_filter_timestamp_threshold_) -
      reinterpret_cast<char*>(&echo_filter_distance_correction_weight_1_)) + sizeof(echo_filter_timestamp_threshold_));
}

UsProcessingEchoPreProcessingCfg::~UsProcessingEchoPreProcessingCfg() {
  // @@protoc_insertion_point(destructor:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
  SharedDtor();
}

void UsProcessingEchoPreProcessingCfg::SharedDtor() {
}

void UsProcessingEchoPreProcessingCfg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsProcessingEchoPreProcessingCfg& UsProcessingEchoPreProcessingCfg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsProcessingEchoPreProcessingCfg_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto.base);
  return *internal_default_instance();
}


void UsProcessingEchoPreProcessingCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&echo_filter_distance_correction_weight_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&echo_filter_timestamp_threshold_) -
        reinterpret_cast<char*>(&echo_filter_distance_correction_weight_1_)) + sizeof(echo_filter_timestamp_threshold_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsProcessingEchoPreProcessingCfg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional float echo_filter_distance_correction_weight_1 = 662;
      case 662:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 181)) {
          _Internal::set_has_echo_filter_distance_correction_weight_1(&has_bits);
          echo_filter_distance_correction_weight_1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float echo_filter_distance_correction_weight_2 = 757;
      case 757:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 173)) {
          _Internal::set_has_echo_filter_distance_correction_weight_2(&has_bits);
          echo_filter_distance_correction_weight_2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float echo_filter_distance_correction_factor = 1302;
      case 1302:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 181)) {
          _Internal::set_has_echo_filter_distance_correction_factor(&has_bits);
          echo_filter_distance_correction_factor_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float echo_filter_delta_max = 1366;
      case 1366:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 181)) {
          _Internal::set_has_echo_filter_delta_max(&has_bits);
          echo_filter_delta_max_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float echo_filter_distance_threshold = 2386;
      case 2386:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 149)) {
          _Internal::set_has_echo_filter_distance_threshold(&has_bits);
          echo_filter_distance_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float echo_filter_delta_min = 3592;
      case 3592:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          _Internal::set_has_echo_filter_delta_min(&has_bits);
          echo_filter_delta_min_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional uint64 echo_filter_timestamp_threshold = 3941;
      case 3941:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_echo_filter_timestamp_threshold(&has_bits);
          echo_filter_timestamp_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsProcessingEchoPreProcessingCfg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float echo_filter_distance_correction_weight_1 = 662;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(662, this->_internal_echo_filter_distance_correction_weight_1(), target);
  }

  // optional float echo_filter_distance_correction_weight_2 = 757;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(757, this->_internal_echo_filter_distance_correction_weight_2(), target);
  }

  // optional float echo_filter_distance_correction_factor = 1302;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1302, this->_internal_echo_filter_distance_correction_factor(), target);
  }

  // optional float echo_filter_delta_max = 1366;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1366, this->_internal_echo_filter_delta_max(), target);
  }

  // optional float echo_filter_distance_threshold = 2386;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2386, this->_internal_echo_filter_distance_threshold(), target);
  }

  // optional float echo_filter_delta_min = 3592;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3592, this->_internal_echo_filter_delta_min(), target);
  }

  // optional uint64 echo_filter_timestamp_threshold = 3941;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3941, this->_internal_echo_filter_timestamp_threshold(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
  return target;
}

size_t UsProcessingEchoPreProcessingCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional float echo_filter_distance_correction_weight_1 = 662;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 4;
    }

    // optional float echo_filter_distance_correction_weight_2 = 757;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 4;
    }

    // optional float echo_filter_distance_correction_factor = 1302;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 4;
    }

    // optional float echo_filter_delta_max = 1366;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 4;
    }

    // optional float echo_filter_distance_threshold = 2386;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 + 4;
    }

    // optional float echo_filter_delta_min = 3592;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 + 4;
    }

    // optional uint64 echo_filter_timestamp_threshold = 3941;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_echo_filter_timestamp_threshold());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsProcessingEchoPreProcessingCfg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
  GOOGLE_DCHECK_NE(&from, this);
  const UsProcessingEchoPreProcessingCfg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsProcessingEchoPreProcessingCfg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
    MergeFrom(*source);
  }
}

void UsProcessingEchoPreProcessingCfg::MergeFrom(const UsProcessingEchoPreProcessingCfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      echo_filter_distance_correction_weight_1_ = from.echo_filter_distance_correction_weight_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      echo_filter_distance_correction_weight_2_ = from.echo_filter_distance_correction_weight_2_;
    }
    if (cached_has_bits & 0x00000004u) {
      echo_filter_distance_correction_factor_ = from.echo_filter_distance_correction_factor_;
    }
    if (cached_has_bits & 0x00000008u) {
      echo_filter_delta_max_ = from.echo_filter_delta_max_;
    }
    if (cached_has_bits & 0x00000010u) {
      echo_filter_distance_threshold_ = from.echo_filter_distance_threshold_;
    }
    if (cached_has_bits & 0x00000020u) {
      echo_filter_delta_min_ = from.echo_filter_delta_min_;
    }
    if (cached_has_bits & 0x00000040u) {
      echo_filter_timestamp_threshold_ = from.echo_filter_timestamp_threshold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UsProcessingEchoPreProcessingCfg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsProcessingEchoPreProcessingCfg::CopyFrom(const UsProcessingEchoPreProcessingCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsProcessingEchoPreProcessingCfg::IsInitialized() const {
  return true;
}

void UsProcessingEchoPreProcessingCfg::InternalSwap(UsProcessingEchoPreProcessingCfg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(echo_filter_distance_correction_weight_1_, other->echo_filter_distance_correction_weight_1_);
  swap(echo_filter_distance_correction_weight_2_, other->echo_filter_distance_correction_weight_2_);
  swap(echo_filter_distance_correction_factor_, other->echo_filter_distance_correction_factor_);
  swap(echo_filter_delta_max_, other->echo_filter_delta_max_);
  swap(echo_filter_distance_threshold_, other->echo_filter_distance_threshold_);
  swap(echo_filter_delta_min_, other->echo_filter_delta_min_);
  swap(echo_filter_timestamp_threshold_, other->echo_filter_timestamp_threshold_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsProcessingEchoPreProcessingCfg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UsProcessingEchoPreProcessingCfg_array_port::InitAsDefaultInstance() {
}
class UsProcessingEchoPreProcessingCfg_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<UsProcessingEchoPreProcessingCfg_array_port>()._has_bits_);
};

UsProcessingEchoPreProcessingCfg_array_port::UsProcessingEchoPreProcessingCfg_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
}
UsProcessingEchoPreProcessingCfg_array_port::UsProcessingEchoPreProcessingCfg_array_port(const UsProcessingEchoPreProcessingCfg_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
}

void UsProcessingEchoPreProcessingCfg_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UsProcessingEchoPreProcessingCfg_array_port_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto.base);
}

UsProcessingEchoPreProcessingCfg_array_port::~UsProcessingEchoPreProcessingCfg_array_port() {
  // @@protoc_insertion_point(destructor:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
  SharedDtor();
}

void UsProcessingEchoPreProcessingCfg_array_port::SharedDtor() {
}

void UsProcessingEchoPreProcessingCfg_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsProcessingEchoPreProcessingCfg_array_port& UsProcessingEchoPreProcessingCfg_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsProcessingEchoPreProcessingCfg_array_port_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto.base);
  return *internal_default_instance();
}


void UsProcessingEchoPreProcessingCfg_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsProcessingEchoPreProcessingCfg_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg data = 3214;
      case 3214:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsProcessingEchoPreProcessingCfg_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg data = 3214;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3214, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
  return target;
}

size_t UsProcessingEchoPreProcessingCfg_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg data = 3214;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsProcessingEchoPreProcessingCfg_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const UsProcessingEchoPreProcessingCfg_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsProcessingEchoPreProcessingCfg_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
    MergeFrom(*source);
  }
}

void UsProcessingEchoPreProcessingCfg_array_port::MergeFrom(const UsProcessingEchoPreProcessingCfg_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void UsProcessingEchoPreProcessingCfg_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsProcessingEchoPreProcessingCfg_array_port::CopyFrom(const UsProcessingEchoPreProcessingCfg_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsProcessingEchoPreProcessingCfg_array_port::IsInitialized() const {
  return true;
}

void UsProcessingEchoPreProcessingCfg_array_port::InternalSwap(UsProcessingEchoPreProcessingCfg_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsProcessingEchoPreProcessingCfg_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace us_processing_echo_pre_processing_cfg
}  // namespace us_processing
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* Arena::CreateMaybeMessage< ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port* Arena::CreateMaybeMessage< ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
