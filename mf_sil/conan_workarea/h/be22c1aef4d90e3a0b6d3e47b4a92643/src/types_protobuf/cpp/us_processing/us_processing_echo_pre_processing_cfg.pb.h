// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_processing/us_processing_echo_pre_processing_cfg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto;
namespace pb {
namespace us_processing {
namespace us_processing_echo_pre_processing_cfg {
class UsProcessingEchoPreProcessingCfg;
class UsProcessingEchoPreProcessingCfgDefaultTypeInternal;
extern UsProcessingEchoPreProcessingCfgDefaultTypeInternal _UsProcessingEchoPreProcessingCfg_default_instance_;
class UsProcessingEchoPreProcessingCfg_array_port;
class UsProcessingEchoPreProcessingCfg_array_portDefaultTypeInternal;
extern UsProcessingEchoPreProcessingCfg_array_portDefaultTypeInternal _UsProcessingEchoPreProcessingCfg_array_port_default_instance_;
}  // namespace us_processing_echo_pre_processing_cfg
}  // namespace us_processing
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* Arena::CreateMaybeMessage<::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg>(Arena*);
template<> ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port* Arena::CreateMaybeMessage<::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace us_processing {
namespace us_processing_echo_pre_processing_cfg {

// ===================================================================

class UsProcessingEchoPreProcessingCfg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg) */ {
 public:
  UsProcessingEchoPreProcessingCfg();
  virtual ~UsProcessingEchoPreProcessingCfg();

  UsProcessingEchoPreProcessingCfg(const UsProcessingEchoPreProcessingCfg& from);
  UsProcessingEchoPreProcessingCfg(UsProcessingEchoPreProcessingCfg&& from) noexcept
    : UsProcessingEchoPreProcessingCfg() {
    *this = ::std::move(from);
  }

  inline UsProcessingEchoPreProcessingCfg& operator=(const UsProcessingEchoPreProcessingCfg& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsProcessingEchoPreProcessingCfg& operator=(UsProcessingEchoPreProcessingCfg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsProcessingEchoPreProcessingCfg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsProcessingEchoPreProcessingCfg* internal_default_instance() {
    return reinterpret_cast<const UsProcessingEchoPreProcessingCfg*>(
               &_UsProcessingEchoPreProcessingCfg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UsProcessingEchoPreProcessingCfg& a, UsProcessingEchoPreProcessingCfg& b) {
    a.Swap(&b);
  }
  inline void Swap(UsProcessingEchoPreProcessingCfg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsProcessingEchoPreProcessingCfg* New() const final {
    return CreateMaybeMessage<UsProcessingEchoPreProcessingCfg>(nullptr);
  }

  UsProcessingEchoPreProcessingCfg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsProcessingEchoPreProcessingCfg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsProcessingEchoPreProcessingCfg& from);
  void MergeFrom(const UsProcessingEchoPreProcessingCfg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsProcessingEchoPreProcessingCfg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto);
    return ::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEchoFilterDistanceCorrectionWeight1FieldNumber = 662,
    kEchoFilterDistanceCorrectionWeight2FieldNumber = 757,
    kEchoFilterDistanceCorrectionFactorFieldNumber = 1302,
    kEchoFilterDeltaMaxFieldNumber = 1366,
    kEchoFilterDistanceThresholdFieldNumber = 2386,
    kEchoFilterDeltaMinFieldNumber = 3592,
    kEchoFilterTimestampThresholdFieldNumber = 3941,
  };
  // optional float echo_filter_distance_correction_weight_1 = 662;
  bool has_echo_filter_distance_correction_weight_1() const;
  private:
  bool _internal_has_echo_filter_distance_correction_weight_1() const;
  public:
  void clear_echo_filter_distance_correction_weight_1();
  float echo_filter_distance_correction_weight_1() const;
  void set_echo_filter_distance_correction_weight_1(float value);
  private:
  float _internal_echo_filter_distance_correction_weight_1() const;
  void _internal_set_echo_filter_distance_correction_weight_1(float value);
  public:

  // optional float echo_filter_distance_correction_weight_2 = 757;
  bool has_echo_filter_distance_correction_weight_2() const;
  private:
  bool _internal_has_echo_filter_distance_correction_weight_2() const;
  public:
  void clear_echo_filter_distance_correction_weight_2();
  float echo_filter_distance_correction_weight_2() const;
  void set_echo_filter_distance_correction_weight_2(float value);
  private:
  float _internal_echo_filter_distance_correction_weight_2() const;
  void _internal_set_echo_filter_distance_correction_weight_2(float value);
  public:

  // optional float echo_filter_distance_correction_factor = 1302;
  bool has_echo_filter_distance_correction_factor() const;
  private:
  bool _internal_has_echo_filter_distance_correction_factor() const;
  public:
  void clear_echo_filter_distance_correction_factor();
  float echo_filter_distance_correction_factor() const;
  void set_echo_filter_distance_correction_factor(float value);
  private:
  float _internal_echo_filter_distance_correction_factor() const;
  void _internal_set_echo_filter_distance_correction_factor(float value);
  public:

  // optional float echo_filter_delta_max = 1366;
  bool has_echo_filter_delta_max() const;
  private:
  bool _internal_has_echo_filter_delta_max() const;
  public:
  void clear_echo_filter_delta_max();
  float echo_filter_delta_max() const;
  void set_echo_filter_delta_max(float value);
  private:
  float _internal_echo_filter_delta_max() const;
  void _internal_set_echo_filter_delta_max(float value);
  public:

  // optional float echo_filter_distance_threshold = 2386;
  bool has_echo_filter_distance_threshold() const;
  private:
  bool _internal_has_echo_filter_distance_threshold() const;
  public:
  void clear_echo_filter_distance_threshold();
  float echo_filter_distance_threshold() const;
  void set_echo_filter_distance_threshold(float value);
  private:
  float _internal_echo_filter_distance_threshold() const;
  void _internal_set_echo_filter_distance_threshold(float value);
  public:

  // optional float echo_filter_delta_min = 3592;
  bool has_echo_filter_delta_min() const;
  private:
  bool _internal_has_echo_filter_delta_min() const;
  public:
  void clear_echo_filter_delta_min();
  float echo_filter_delta_min() const;
  void set_echo_filter_delta_min(float value);
  private:
  float _internal_echo_filter_delta_min() const;
  void _internal_set_echo_filter_delta_min(float value);
  public:

  // optional uint64 echo_filter_timestamp_threshold = 3941;
  bool has_echo_filter_timestamp_threshold() const;
  private:
  bool _internal_has_echo_filter_timestamp_threshold() const;
  public:
  void clear_echo_filter_timestamp_threshold();
  ::PROTOBUF_NAMESPACE_ID::uint64 echo_filter_timestamp_threshold() const;
  void set_echo_filter_timestamp_threshold(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_echo_filter_timestamp_threshold() const;
  void _internal_set_echo_filter_timestamp_threshold(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float echo_filter_distance_correction_weight_1_;
  float echo_filter_distance_correction_weight_2_;
  float echo_filter_distance_correction_factor_;
  float echo_filter_delta_max_;
  float echo_filter_distance_threshold_;
  float echo_filter_delta_min_;
  ::PROTOBUF_NAMESPACE_ID::uint64 echo_filter_timestamp_threshold_;
  friend struct ::TableStruct_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto;
};
// -------------------------------------------------------------------

class UsProcessingEchoPreProcessingCfg_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port) */ {
 public:
  UsProcessingEchoPreProcessingCfg_array_port();
  virtual ~UsProcessingEchoPreProcessingCfg_array_port();

  UsProcessingEchoPreProcessingCfg_array_port(const UsProcessingEchoPreProcessingCfg_array_port& from);
  UsProcessingEchoPreProcessingCfg_array_port(UsProcessingEchoPreProcessingCfg_array_port&& from) noexcept
    : UsProcessingEchoPreProcessingCfg_array_port() {
    *this = ::std::move(from);
  }

  inline UsProcessingEchoPreProcessingCfg_array_port& operator=(const UsProcessingEchoPreProcessingCfg_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsProcessingEchoPreProcessingCfg_array_port& operator=(UsProcessingEchoPreProcessingCfg_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsProcessingEchoPreProcessingCfg_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsProcessingEchoPreProcessingCfg_array_port* internal_default_instance() {
    return reinterpret_cast<const UsProcessingEchoPreProcessingCfg_array_port*>(
               &_UsProcessingEchoPreProcessingCfg_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UsProcessingEchoPreProcessingCfg_array_port& a, UsProcessingEchoPreProcessingCfg_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(UsProcessingEchoPreProcessingCfg_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsProcessingEchoPreProcessingCfg_array_port* New() const final {
    return CreateMaybeMessage<UsProcessingEchoPreProcessingCfg_array_port>(nullptr);
  }

  UsProcessingEchoPreProcessingCfg_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsProcessingEchoPreProcessingCfg_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsProcessingEchoPreProcessingCfg_array_port& from);
  void MergeFrom(const UsProcessingEchoPreProcessingCfg_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsProcessingEchoPreProcessingCfg_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto);
    return ::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3214,
  };
  // repeated .pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg data = 3214;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg >*
      mutable_data();
  private:
  const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg& _internal_data(int index) const;
  ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* _internal_add_data();
  public:
  const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg& data(int index) const;
  ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg > data_;
  friend struct ::TableStruct_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UsProcessingEchoPreProcessingCfg

// optional uint64 echo_filter_timestamp_threshold = 3941;
inline bool UsProcessingEchoPreProcessingCfg::_internal_has_echo_filter_timestamp_threshold() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool UsProcessingEchoPreProcessingCfg::has_echo_filter_timestamp_threshold() const {
  return _internal_has_echo_filter_timestamp_threshold();
}
inline void UsProcessingEchoPreProcessingCfg::clear_echo_filter_timestamp_threshold() {
  echo_filter_timestamp_threshold_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UsProcessingEchoPreProcessingCfg::_internal_echo_filter_timestamp_threshold() const {
  return echo_filter_timestamp_threshold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UsProcessingEchoPreProcessingCfg::echo_filter_timestamp_threshold() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_timestamp_threshold)
  return _internal_echo_filter_timestamp_threshold();
}
inline void UsProcessingEchoPreProcessingCfg::_internal_set_echo_filter_timestamp_threshold(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  echo_filter_timestamp_threshold_ = value;
}
inline void UsProcessingEchoPreProcessingCfg::set_echo_filter_timestamp_threshold(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_echo_filter_timestamp_threshold(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_timestamp_threshold)
}

// optional float echo_filter_distance_threshold = 2386;
inline bool UsProcessingEchoPreProcessingCfg::_internal_has_echo_filter_distance_threshold() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool UsProcessingEchoPreProcessingCfg::has_echo_filter_distance_threshold() const {
  return _internal_has_echo_filter_distance_threshold();
}
inline void UsProcessingEchoPreProcessingCfg::clear_echo_filter_distance_threshold() {
  echo_filter_distance_threshold_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float UsProcessingEchoPreProcessingCfg::_internal_echo_filter_distance_threshold() const {
  return echo_filter_distance_threshold_;
}
inline float UsProcessingEchoPreProcessingCfg::echo_filter_distance_threshold() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_distance_threshold)
  return _internal_echo_filter_distance_threshold();
}
inline void UsProcessingEchoPreProcessingCfg::_internal_set_echo_filter_distance_threshold(float value) {
  _has_bits_[0] |= 0x00000010u;
  echo_filter_distance_threshold_ = value;
}
inline void UsProcessingEchoPreProcessingCfg::set_echo_filter_distance_threshold(float value) {
  _internal_set_echo_filter_distance_threshold(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_distance_threshold)
}

// optional float echo_filter_distance_correction_factor = 1302;
inline bool UsProcessingEchoPreProcessingCfg::_internal_has_echo_filter_distance_correction_factor() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UsProcessingEchoPreProcessingCfg::has_echo_filter_distance_correction_factor() const {
  return _internal_has_echo_filter_distance_correction_factor();
}
inline void UsProcessingEchoPreProcessingCfg::clear_echo_filter_distance_correction_factor() {
  echo_filter_distance_correction_factor_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float UsProcessingEchoPreProcessingCfg::_internal_echo_filter_distance_correction_factor() const {
  return echo_filter_distance_correction_factor_;
}
inline float UsProcessingEchoPreProcessingCfg::echo_filter_distance_correction_factor() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_distance_correction_factor)
  return _internal_echo_filter_distance_correction_factor();
}
inline void UsProcessingEchoPreProcessingCfg::_internal_set_echo_filter_distance_correction_factor(float value) {
  _has_bits_[0] |= 0x00000004u;
  echo_filter_distance_correction_factor_ = value;
}
inline void UsProcessingEchoPreProcessingCfg::set_echo_filter_distance_correction_factor(float value) {
  _internal_set_echo_filter_distance_correction_factor(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_distance_correction_factor)
}

// optional float echo_filter_distance_correction_weight_1 = 662;
inline bool UsProcessingEchoPreProcessingCfg::_internal_has_echo_filter_distance_correction_weight_1() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UsProcessingEchoPreProcessingCfg::has_echo_filter_distance_correction_weight_1() const {
  return _internal_has_echo_filter_distance_correction_weight_1();
}
inline void UsProcessingEchoPreProcessingCfg::clear_echo_filter_distance_correction_weight_1() {
  echo_filter_distance_correction_weight_1_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float UsProcessingEchoPreProcessingCfg::_internal_echo_filter_distance_correction_weight_1() const {
  return echo_filter_distance_correction_weight_1_;
}
inline float UsProcessingEchoPreProcessingCfg::echo_filter_distance_correction_weight_1() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_distance_correction_weight_1)
  return _internal_echo_filter_distance_correction_weight_1();
}
inline void UsProcessingEchoPreProcessingCfg::_internal_set_echo_filter_distance_correction_weight_1(float value) {
  _has_bits_[0] |= 0x00000001u;
  echo_filter_distance_correction_weight_1_ = value;
}
inline void UsProcessingEchoPreProcessingCfg::set_echo_filter_distance_correction_weight_1(float value) {
  _internal_set_echo_filter_distance_correction_weight_1(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_distance_correction_weight_1)
}

// optional float echo_filter_distance_correction_weight_2 = 757;
inline bool UsProcessingEchoPreProcessingCfg::_internal_has_echo_filter_distance_correction_weight_2() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UsProcessingEchoPreProcessingCfg::has_echo_filter_distance_correction_weight_2() const {
  return _internal_has_echo_filter_distance_correction_weight_2();
}
inline void UsProcessingEchoPreProcessingCfg::clear_echo_filter_distance_correction_weight_2() {
  echo_filter_distance_correction_weight_2_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float UsProcessingEchoPreProcessingCfg::_internal_echo_filter_distance_correction_weight_2() const {
  return echo_filter_distance_correction_weight_2_;
}
inline float UsProcessingEchoPreProcessingCfg::echo_filter_distance_correction_weight_2() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_distance_correction_weight_2)
  return _internal_echo_filter_distance_correction_weight_2();
}
inline void UsProcessingEchoPreProcessingCfg::_internal_set_echo_filter_distance_correction_weight_2(float value) {
  _has_bits_[0] |= 0x00000002u;
  echo_filter_distance_correction_weight_2_ = value;
}
inline void UsProcessingEchoPreProcessingCfg::set_echo_filter_distance_correction_weight_2(float value) {
  _internal_set_echo_filter_distance_correction_weight_2(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_distance_correction_weight_2)
}

// optional float echo_filter_delta_min = 3592;
inline bool UsProcessingEchoPreProcessingCfg::_internal_has_echo_filter_delta_min() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool UsProcessingEchoPreProcessingCfg::has_echo_filter_delta_min() const {
  return _internal_has_echo_filter_delta_min();
}
inline void UsProcessingEchoPreProcessingCfg::clear_echo_filter_delta_min() {
  echo_filter_delta_min_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float UsProcessingEchoPreProcessingCfg::_internal_echo_filter_delta_min() const {
  return echo_filter_delta_min_;
}
inline float UsProcessingEchoPreProcessingCfg::echo_filter_delta_min() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_delta_min)
  return _internal_echo_filter_delta_min();
}
inline void UsProcessingEchoPreProcessingCfg::_internal_set_echo_filter_delta_min(float value) {
  _has_bits_[0] |= 0x00000020u;
  echo_filter_delta_min_ = value;
}
inline void UsProcessingEchoPreProcessingCfg::set_echo_filter_delta_min(float value) {
  _internal_set_echo_filter_delta_min(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_delta_min)
}

// optional float echo_filter_delta_max = 1366;
inline bool UsProcessingEchoPreProcessingCfg::_internal_has_echo_filter_delta_max() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool UsProcessingEchoPreProcessingCfg::has_echo_filter_delta_max() const {
  return _internal_has_echo_filter_delta_max();
}
inline void UsProcessingEchoPreProcessingCfg::clear_echo_filter_delta_max() {
  echo_filter_delta_max_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float UsProcessingEchoPreProcessingCfg::_internal_echo_filter_delta_max() const {
  return echo_filter_delta_max_;
}
inline float UsProcessingEchoPreProcessingCfg::echo_filter_delta_max() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_delta_max)
  return _internal_echo_filter_delta_max();
}
inline void UsProcessingEchoPreProcessingCfg::_internal_set_echo_filter_delta_max(float value) {
  _has_bits_[0] |= 0x00000008u;
  echo_filter_delta_max_ = value;
}
inline void UsProcessingEchoPreProcessingCfg::set_echo_filter_delta_max(float value) {
  _internal_set_echo_filter_delta_max(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg.echo_filter_delta_max)
}

// -------------------------------------------------------------------

// UsProcessingEchoPreProcessingCfg_array_port

// repeated .pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg data = 3214;
inline int UsProcessingEchoPreProcessingCfg_array_port::_internal_data_size() const {
  return data_.size();
}
inline int UsProcessingEchoPreProcessingCfg_array_port::data_size() const {
  return _internal_data_size();
}
inline void UsProcessingEchoPreProcessingCfg_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* UsProcessingEchoPreProcessingCfg_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg >*
UsProcessingEchoPreProcessingCfg_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port.data)
  return &data_;
}
inline const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg& UsProcessingEchoPreProcessingCfg_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg& UsProcessingEchoPreProcessingCfg_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port.data)
  return _internal_data(index);
}
inline ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* UsProcessingEchoPreProcessingCfg_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* UsProcessingEchoPreProcessingCfg_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg >&
UsProcessingEchoPreProcessingCfg_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace us_processing_echo_pre_processing_cfg
}  // namespace us_processing
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto
