// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_processing/us_processing_params.proto

#include "us_processing/us_processing_params.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsignal_5fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fdyn_5fparams_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsProcessingDynParams_us_5fprocessing_2fus_5fprocessing_5fdyn_5fparams_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsProcessingEchoPreProcessingCfg_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fobject_5ftracking_5fcfg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsProcessingObjectTrackingCfg_us_5fprocessing_2fus_5fprocessing_5fobject_5ftracking_5fcfg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_UsProcessingParams_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5freflection_5ftracking_5fcfg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsProcessingReflectionTrackingCfg_us_5fprocessing_2fus_5fprocessing_5freflection_5ftracking_5fcfg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fsensor_5fparameters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsProcessingSensorParameters_us_5fprocessing_2fus_5fprocessing_5fsensor_5fparameters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fstate_5fmanagement_5fcfg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsProcessingStateManagementCfg_us_5fprocessing_2fus_5fprocessing_5fstate_5fmanagement_5fcfg_2eproto;
namespace pb {
namespace us_processing {
namespace us_processing_params {
class UsProcessingParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsProcessingParams> _instance;
} _UsProcessingParams_default_instance_;
class UsProcessingParams_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsProcessingParams_array_port> _instance;
} _UsProcessingParams_array_port_default_instance_;
}  // namespace us_processing_params
}  // namespace us_processing
}  // namespace pb
static void InitDefaultsscc_info_UsProcessingParams_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_processing::us_processing_params::_UsProcessingParams_default_instance_;
    new (ptr) ::pb::us_processing::us_processing_params::UsProcessingParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_processing::us_processing_params::UsProcessingParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_UsProcessingParams_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 7, 0, InitDefaultsscc_info_UsProcessingParams_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto}, {
      &scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto.base,
      &scc_info_UsProcessingStateManagementCfg_us_5fprocessing_2fus_5fprocessing_5fstate_5fmanagement_5fcfg_2eproto.base,
      &scc_info_UsProcessingEchoPreProcessingCfg_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto.base,
      &scc_info_UsProcessingReflectionTrackingCfg_us_5fprocessing_2fus_5fprocessing_5freflection_5ftracking_5fcfg_2eproto.base,
      &scc_info_UsProcessingObjectTrackingCfg_us_5fprocessing_2fus_5fprocessing_5fobject_5ftracking_5fcfg_2eproto.base,
      &scc_info_UsProcessingSensorParameters_us_5fprocessing_2fus_5fprocessing_5fsensor_5fparameters_2eproto.base,
      &scc_info_UsProcessingDynParams_us_5fprocessing_2fus_5fprocessing_5fdyn_5fparams_2eproto.base,}};

static void InitDefaultsscc_info_UsProcessingParams_array_port_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_processing::us_processing_params::_UsProcessingParams_array_port_default_instance_;
    new (ptr) ::pb::us_processing::us_processing_params::UsProcessingParams_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_processing::us_processing_params::UsProcessingParams_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsProcessingParams_array_port_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UsProcessingParams_array_port_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto}, {
      &scc_info_UsProcessingParams_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams, uiversionnumber_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams, ssigheader_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams, ustmparams_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams, usepparams_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams, rftrparams_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams, objtparams_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams, sensparams_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams, dynparams_),
  7,
  0,
  5,
  1,
  3,
  2,
  4,
  6,
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_params::UsProcessingParams_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::pb::us_processing::us_processing_params::UsProcessingParams)},
  { 21, 27, sizeof(::pb::us_processing::us_processing_params::UsProcessingParams_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_processing::us_processing_params::_UsProcessingParams_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_processing::us_processing_params::_UsProcessingParams_array_port_default_instance_),
};

const char descriptor_table_protodef_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n(us_processing/us_processing_params.pro"
  "to\022%pb.us_processing.us_processing_param"
  "s\032\027eco/signal_header.proto\0326us_processin"
  "g/us_processing_state_management_cfg.pro"
  "to\0329us_processing/us_processing_echo_pre"
  "_processing_cfg.proto\0329us_processing/us_"
  "processing_reflection_tracking_cfg.proto"
  "\0325us_processing/us_processing_object_tra"
  "cking_cfg.proto\0323us_processing/us_proces"
  "sing_sensor_parameters.proto\032,us_process"
  "ing/us_processing_dyn_params.proto\"\323\005\n\022U"
  "sProcessingParams\022\030\n\017uiVersionNumber\030\314\020 "
  "\001(\r\0227\n\nsSigHeader\030\211\010 \001(\0132\".pb.eco.signal"
  "_header.SignalHeader\022h\n\nustmParams\030\202\030 \001("
  "\0132S.pb.us_processing.us_processing_state"
  "_management_cfg.UsProcessingStateManagem"
  "entCfg\022m\n\nusepParams\030\307\017 \001(\0132X.pb.us_proc"
  "essing.us_processing_echo_pre_processing"
  "_cfg.UsProcessingEchoPreProcessingCfg\022n\n"
  "\nrftrParams\030\214\022 \001(\0132Y.pb.us_processing.us"
  "_processing_reflection_tracking_cfg.UsPr"
  "ocessingReflectionTrackingCfg\022f\n\nobjtPar"
  "ams\030\266\020 \001(\0132Q.pb.us_processing.us_process"
  "ing_object_tracking_cfg.UsProcessingObje"
  "ctTrackingCfg\022c\n\nsensParams\030\312\023 \001(\0132N.pb."
  "us_processing.us_processing_sensor_param"
  "eters.UsProcessingSensorParameters\022T\n\tdy"
  "nParams\030\344\037 \001(\0132@.pb.us_processing.us_pro"
  "cessing_dyn_params.UsProcessingDynParams"
  "\"i\n\035UsProcessingParams_array_port\022H\n\004dat"
  "a\030\264\032 \003(\01329.pb.us_processing.us_processin"
  "g_params.UsProcessingParams"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto_deps[7] = {
  &::descriptor_table_eco_2fsignal_5fheader_2eproto,
  &::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fdyn_5fparams_2eproto,
  &::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fecho_5fpre_5fprocessing_5fcfg_2eproto,
  &::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_5ftracking_5fcfg_2eproto,
  &::descriptor_table_us_5fprocessing_2fus_5fprocessing_5freflection_5ftracking_5fcfg_2eproto,
  &::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fsensor_5fparameters_2eproto,
  &::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fstate_5fmanagement_5fcfg_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto_sccs[2] = {
  &scc_info_UsProcessingParams_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto.base,
  &scc_info_UsProcessingParams_array_port_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto_once;
static bool descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto = {
  &descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto_initialized, descriptor_table_protodef_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto, "us_processing/us_processing_params.proto", 1267,
  &descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto_once, descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto_sccs, descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto_deps, 2, 7,
  schemas, file_default_instances, TableStruct_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto::offsets,
  file_level_metadata_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto, 2, file_level_enum_descriptors_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto, file_level_service_descriptors_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto), true);
namespace pb {
namespace us_processing {
namespace us_processing_params {

// ===================================================================

void UsProcessingParams::InitAsDefaultInstance() {
  ::pb::us_processing::us_processing_params::_UsProcessingParams_default_instance_._instance.get_mutable()->ssigheader_ = const_cast< ::pb::eco::signal_header::SignalHeader*>(
      ::pb::eco::signal_header::SignalHeader::internal_default_instance());
  ::pb::us_processing::us_processing_params::_UsProcessingParams_default_instance_._instance.get_mutable()->ustmparams_ = const_cast< ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg*>(
      ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg::internal_default_instance());
  ::pb::us_processing::us_processing_params::_UsProcessingParams_default_instance_._instance.get_mutable()->usepparams_ = const_cast< ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg*>(
      ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg::internal_default_instance());
  ::pb::us_processing::us_processing_params::_UsProcessingParams_default_instance_._instance.get_mutable()->rftrparams_ = const_cast< ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg*>(
      ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg::internal_default_instance());
  ::pb::us_processing::us_processing_params::_UsProcessingParams_default_instance_._instance.get_mutable()->objtparams_ = const_cast< ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg*>(
      ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg::internal_default_instance());
  ::pb::us_processing::us_processing_params::_UsProcessingParams_default_instance_._instance.get_mutable()->sensparams_ = const_cast< ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters*>(
      ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters::internal_default_instance());
  ::pb::us_processing::us_processing_params::_UsProcessingParams_default_instance_._instance.get_mutable()->dynparams_ = const_cast< ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams*>(
      ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams::internal_default_instance());
}
class UsProcessingParams::_Internal {
 public:
  using HasBits = decltype(std::declval<UsProcessingParams>()._has_bits_);
  static void set_has_uiversionnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::pb::eco::signal_header::SignalHeader& ssigheader(const UsProcessingParams* msg);
  static void set_has_ssigheader(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg& ustmparams(const UsProcessingParams* msg);
  static void set_has_ustmparams(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg& usepparams(const UsProcessingParams* msg);
  static void set_has_usepparams(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg& rftrparams(const UsProcessingParams* msg);
  static void set_has_rftrparams(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg& objtparams(const UsProcessingParams* msg);
  static void set_has_objtparams(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters& sensparams(const UsProcessingParams* msg);
  static void set_has_sensparams(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams& dynparams(const UsProcessingParams* msg);
  static void set_has_dynparams(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::pb::eco::signal_header::SignalHeader&
UsProcessingParams::_Internal::ssigheader(const UsProcessingParams* msg) {
  return *msg->ssigheader_;
}
const ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg&
UsProcessingParams::_Internal::ustmparams(const UsProcessingParams* msg) {
  return *msg->ustmparams_;
}
const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg&
UsProcessingParams::_Internal::usepparams(const UsProcessingParams* msg) {
  return *msg->usepparams_;
}
const ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg&
UsProcessingParams::_Internal::rftrparams(const UsProcessingParams* msg) {
  return *msg->rftrparams_;
}
const ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg&
UsProcessingParams::_Internal::objtparams(const UsProcessingParams* msg) {
  return *msg->objtparams_;
}
const ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters&
UsProcessingParams::_Internal::sensparams(const UsProcessingParams* msg) {
  return *msg->sensparams_;
}
const ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams&
UsProcessingParams::_Internal::dynparams(const UsProcessingParams* msg) {
  return *msg->dynparams_;
}
void UsProcessingParams::clear_ssigheader() {
  if (ssigheader_ != nullptr) ssigheader_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void UsProcessingParams::clear_ustmparams() {
  if (ustmparams_ != nullptr) ustmparams_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void UsProcessingParams::clear_usepparams() {
  if (usepparams_ != nullptr) usepparams_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void UsProcessingParams::clear_rftrparams() {
  if (rftrparams_ != nullptr) rftrparams_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void UsProcessingParams::clear_objtparams() {
  if (objtparams_ != nullptr) objtparams_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void UsProcessingParams::clear_sensparams() {
  if (sensparams_ != nullptr) sensparams_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void UsProcessingParams::clear_dynparams() {
  if (dynparams_ != nullptr) dynparams_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
UsProcessingParams::UsProcessingParams()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_processing.us_processing_params.UsProcessingParams)
}
UsProcessingParams::UsProcessingParams(const UsProcessingParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_ssigheader()) {
    ssigheader_ = new ::pb::eco::signal_header::SignalHeader(*from.ssigheader_);
  } else {
    ssigheader_ = nullptr;
  }
  if (from._internal_has_usepparams()) {
    usepparams_ = new ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg(*from.usepparams_);
  } else {
    usepparams_ = nullptr;
  }
  if (from._internal_has_objtparams()) {
    objtparams_ = new ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg(*from.objtparams_);
  } else {
    objtparams_ = nullptr;
  }
  if (from._internal_has_rftrparams()) {
    rftrparams_ = new ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg(*from.rftrparams_);
  } else {
    rftrparams_ = nullptr;
  }
  if (from._internal_has_sensparams()) {
    sensparams_ = new ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters(*from.sensparams_);
  } else {
    sensparams_ = nullptr;
  }
  if (from._internal_has_ustmparams()) {
    ustmparams_ = new ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg(*from.ustmparams_);
  } else {
    ustmparams_ = nullptr;
  }
  if (from._internal_has_dynparams()) {
    dynparams_ = new ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams(*from.dynparams_);
  } else {
    dynparams_ = nullptr;
  }
  uiversionnumber_ = from.uiversionnumber_;
  // @@protoc_insertion_point(copy_constructor:pb.us_processing.us_processing_params.UsProcessingParams)
}

void UsProcessingParams::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UsProcessingParams_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto.base);
  ::memset(&ssigheader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiversionnumber_) -
      reinterpret_cast<char*>(&ssigheader_)) + sizeof(uiversionnumber_));
}

UsProcessingParams::~UsProcessingParams() {
  // @@protoc_insertion_point(destructor:pb.us_processing.us_processing_params.UsProcessingParams)
  SharedDtor();
}

void UsProcessingParams::SharedDtor() {
  if (this != internal_default_instance()) delete ssigheader_;
  if (this != internal_default_instance()) delete usepparams_;
  if (this != internal_default_instance()) delete objtparams_;
  if (this != internal_default_instance()) delete rftrparams_;
  if (this != internal_default_instance()) delete sensparams_;
  if (this != internal_default_instance()) delete ustmparams_;
  if (this != internal_default_instance()) delete dynparams_;
}

void UsProcessingParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsProcessingParams& UsProcessingParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsProcessingParams_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto.base);
  return *internal_default_instance();
}


void UsProcessingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_processing.us_processing_params.UsProcessingParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(ssigheader_ != nullptr);
      ssigheader_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(usepparams_ != nullptr);
      usepparams_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(objtparams_ != nullptr);
      objtparams_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(rftrparams_ != nullptr);
      rftrparams_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(sensparams_ != nullptr);
      sensparams_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(ustmparams_ != nullptr);
      ustmparams_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(dynparams_ != nullptr);
      dynparams_->Clear();
    }
  }
  uiversionnumber_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsProcessingParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_ssigheader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg usepParams = 1991;
      case 1991:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_usepparams(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.us_processing.us_processing_object_tracking_cfg.UsProcessingObjectTrackingCfg objtParams = 2102;
      case 2102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_objtparams(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 uiVersionNumber = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_uiversionnumber(&has_bits);
          uiversionnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.us_processing.us_processing_reflection_tracking_cfg.UsProcessingReflectionTrackingCfg rftrParams = 2316;
      case 2316:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_rftrparams(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.us_processing.us_processing_sensor_parameters.UsProcessingSensorParameters sensParams = 2506;
      case 2506:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_sensparams(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.us_processing.us_processing_state_management_cfg.UsProcessingStateManagementCfg ustmParams = 3074;
      case 3074:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ustmparams(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.us_processing.us_processing_dyn_params.UsProcessingDynParams dynParams = 4068;
      case 4068:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_dynparams(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsProcessingParams::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_processing.us_processing_params.UsProcessingParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::ssigheader(this), target, stream);
  }

  // optional .pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg usepParams = 1991;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1991, _Internal::usepparams(this), target, stream);
  }

  // optional .pb.us_processing.us_processing_object_tracking_cfg.UsProcessingObjectTrackingCfg objtParams = 2102;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2102, _Internal::objtparams(this), target, stream);
  }

  // optional uint32 uiVersionNumber = 2124;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2124, this->_internal_uiversionnumber(), target);
  }

  // optional .pb.us_processing.us_processing_reflection_tracking_cfg.UsProcessingReflectionTrackingCfg rftrParams = 2316;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2316, _Internal::rftrparams(this), target, stream);
  }

  // optional .pb.us_processing.us_processing_sensor_parameters.UsProcessingSensorParameters sensParams = 2506;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2506, _Internal::sensparams(this), target, stream);
  }

  // optional .pb.us_processing.us_processing_state_management_cfg.UsProcessingStateManagementCfg ustmParams = 3074;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3074, _Internal::ustmparams(this), target, stream);
  }

  // optional .pb.us_processing.us_processing_dyn_params.UsProcessingDynParams dynParams = 4068;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4068, _Internal::dynparams(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_processing.us_processing_params.UsProcessingParams)
  return target;
}

size_t UsProcessingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_processing.us_processing_params.UsProcessingParams)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ssigheader_);
    }

    // optional .pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg usepParams = 1991;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *usepparams_);
    }

    // optional .pb.us_processing.us_processing_object_tracking_cfg.UsProcessingObjectTrackingCfg objtParams = 2102;
    if (cached_has_bits & 0x00000004u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objtparams_);
    }

    // optional .pb.us_processing.us_processing_reflection_tracking_cfg.UsProcessingReflectionTrackingCfg rftrParams = 2316;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *rftrparams_);
    }

    // optional .pb.us_processing.us_processing_sensor_parameters.UsProcessingSensorParameters sensParams = 2506;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sensparams_);
    }

    // optional .pb.us_processing.us_processing_state_management_cfg.UsProcessingStateManagementCfg ustmParams = 3074;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ustmparams_);
    }

    // optional .pb.us_processing.us_processing_dyn_params.UsProcessingDynParams dynParams = 4068;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *dynparams_);
    }

    // optional uint32 uiVersionNumber = 2124;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uiversionnumber());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsProcessingParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_processing.us_processing_params.UsProcessingParams)
  GOOGLE_DCHECK_NE(&from, this);
  const UsProcessingParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsProcessingParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_processing.us_processing_params.UsProcessingParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_processing.us_processing_params.UsProcessingParams)
    MergeFrom(*source);
  }
}

void UsProcessingParams::MergeFrom(const UsProcessingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_processing.us_processing_params.UsProcessingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_ssigheader()->::pb::eco::signal_header::SignalHeader::MergeFrom(from._internal_ssigheader());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_usepparams()->::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg::MergeFrom(from._internal_usepparams());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_objtparams()->::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg::MergeFrom(from._internal_objtparams());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_rftrparams()->::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg::MergeFrom(from._internal_rftrparams());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_sensparams()->::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters::MergeFrom(from._internal_sensparams());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_ustmparams()->::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg::MergeFrom(from._internal_ustmparams());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_dynparams()->::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams::MergeFrom(from._internal_dynparams());
    }
    if (cached_has_bits & 0x00000080u) {
      uiversionnumber_ = from.uiversionnumber_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UsProcessingParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_processing.us_processing_params.UsProcessingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsProcessingParams::CopyFrom(const UsProcessingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_processing.us_processing_params.UsProcessingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsProcessingParams::IsInitialized() const {
  return true;
}

void UsProcessingParams::InternalSwap(UsProcessingParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ssigheader_, other->ssigheader_);
  swap(usepparams_, other->usepparams_);
  swap(objtparams_, other->objtparams_);
  swap(rftrparams_, other->rftrparams_);
  swap(sensparams_, other->sensparams_);
  swap(ustmparams_, other->ustmparams_);
  swap(dynparams_, other->dynparams_);
  swap(uiversionnumber_, other->uiversionnumber_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsProcessingParams::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UsProcessingParams_array_port::InitAsDefaultInstance() {
}
class UsProcessingParams_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<UsProcessingParams_array_port>()._has_bits_);
};

UsProcessingParams_array_port::UsProcessingParams_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
}
UsProcessingParams_array_port::UsProcessingParams_array_port(const UsProcessingParams_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
}

void UsProcessingParams_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UsProcessingParams_array_port_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto.base);
}

UsProcessingParams_array_port::~UsProcessingParams_array_port() {
  // @@protoc_insertion_point(destructor:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
  SharedDtor();
}

void UsProcessingParams_array_port::SharedDtor() {
}

void UsProcessingParams_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsProcessingParams_array_port& UsProcessingParams_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsProcessingParams_array_port_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto.base);
  return *internal_default_instance();
}


void UsProcessingParams_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsProcessingParams_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.us_processing.us_processing_params.UsProcessingParams data = 3380;
      case 3380:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsProcessingParams_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.us_processing.us_processing_params.UsProcessingParams data = 3380;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3380, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
  return target;
}

size_t UsProcessingParams_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.us_processing.us_processing_params.UsProcessingParams data = 3380;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsProcessingParams_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const UsProcessingParams_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsProcessingParams_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
    MergeFrom(*source);
  }
}

void UsProcessingParams_array_port::MergeFrom(const UsProcessingParams_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void UsProcessingParams_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsProcessingParams_array_port::CopyFrom(const UsProcessingParams_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsProcessingParams_array_port::IsInitialized() const {
  return true;
}

void UsProcessingParams_array_port::InternalSwap(UsProcessingParams_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsProcessingParams_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace us_processing_params
}  // namespace us_processing
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::us_processing::us_processing_params::UsProcessingParams* Arena::CreateMaybeMessage< ::pb::us_processing::us_processing_params::UsProcessingParams >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_processing::us_processing_params::UsProcessingParams >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::us_processing::us_processing_params::UsProcessingParams_array_port* Arena::CreateMaybeMessage< ::pb::us_processing::us_processing_params::UsProcessingParams_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_processing::us_processing_params::UsProcessingParams_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
