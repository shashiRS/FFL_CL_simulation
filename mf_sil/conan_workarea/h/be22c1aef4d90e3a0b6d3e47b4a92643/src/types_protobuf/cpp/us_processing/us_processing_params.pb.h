// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_processing/us_processing_params.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "us_processing/us_processing_state_management_cfg.pb.h"
#include "us_processing/us_processing_echo_pre_processing_cfg.pb.h"
#include "us_processing/us_processing_reflection_tracking_cfg.pb.h"
#include "us_processing/us_processing_object_tracking_cfg.pb.h"
#include "us_processing/us_processing_sensor_parameters.pb.h"
#include "us_processing/us_processing_dyn_params.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto;
namespace pb {
namespace us_processing {
namespace us_processing_params {
class UsProcessingParams;
class UsProcessingParamsDefaultTypeInternal;
extern UsProcessingParamsDefaultTypeInternal _UsProcessingParams_default_instance_;
class UsProcessingParams_array_port;
class UsProcessingParams_array_portDefaultTypeInternal;
extern UsProcessingParams_array_portDefaultTypeInternal _UsProcessingParams_array_port_default_instance_;
}  // namespace us_processing_params
}  // namespace us_processing
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::us_processing::us_processing_params::UsProcessingParams* Arena::CreateMaybeMessage<::pb::us_processing::us_processing_params::UsProcessingParams>(Arena*);
template<> ::pb::us_processing::us_processing_params::UsProcessingParams_array_port* Arena::CreateMaybeMessage<::pb::us_processing::us_processing_params::UsProcessingParams_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace us_processing {
namespace us_processing_params {

// ===================================================================

class UsProcessingParams :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_processing.us_processing_params.UsProcessingParams) */ {
 public:
  UsProcessingParams();
  virtual ~UsProcessingParams();

  UsProcessingParams(const UsProcessingParams& from);
  UsProcessingParams(UsProcessingParams&& from) noexcept
    : UsProcessingParams() {
    *this = ::std::move(from);
  }

  inline UsProcessingParams& operator=(const UsProcessingParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsProcessingParams& operator=(UsProcessingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsProcessingParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsProcessingParams* internal_default_instance() {
    return reinterpret_cast<const UsProcessingParams*>(
               &_UsProcessingParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UsProcessingParams& a, UsProcessingParams& b) {
    a.Swap(&b);
  }
  inline void Swap(UsProcessingParams* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsProcessingParams* New() const final {
    return CreateMaybeMessage<UsProcessingParams>(nullptr);
  }

  UsProcessingParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsProcessingParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsProcessingParams& from);
  void MergeFrom(const UsProcessingParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsProcessingParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_processing.us_processing_params.UsProcessingParams";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto);
    return ::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSSigHeaderFieldNumber = 1033,
    kUsepParamsFieldNumber = 1991,
    kObjtParamsFieldNumber = 2102,
    kRftrParamsFieldNumber = 2316,
    kSensParamsFieldNumber = 2506,
    kUstmParamsFieldNumber = 3074,
    kDynParamsFieldNumber = 4068,
    kUiVersionNumberFieldNumber = 2124,
  };
  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional .pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg usepParams = 1991;
  bool has_usepparams() const;
  private:
  bool _internal_has_usepparams() const;
  public:
  void clear_usepparams();
  const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg& usepparams() const;
  ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* release_usepparams();
  ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* mutable_usepparams();
  void set_allocated_usepparams(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* usepparams);
  private:
  const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg& _internal_usepparams() const;
  ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* _internal_mutable_usepparams();
  public:

  // optional .pb.us_processing.us_processing_object_tracking_cfg.UsProcessingObjectTrackingCfg objtParams = 2102;
  bool has_objtparams() const;
  private:
  bool _internal_has_objtparams() const;
  public:
  void clear_objtparams();
  const ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg& objtparams() const;
  ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* release_objtparams();
  ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* mutable_objtparams();
  void set_allocated_objtparams(::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* objtparams);
  private:
  const ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg& _internal_objtparams() const;
  ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* _internal_mutable_objtparams();
  public:

  // optional .pb.us_processing.us_processing_reflection_tracking_cfg.UsProcessingReflectionTrackingCfg rftrParams = 2316;
  bool has_rftrparams() const;
  private:
  bool _internal_has_rftrparams() const;
  public:
  void clear_rftrparams();
  const ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg& rftrparams() const;
  ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* release_rftrparams();
  ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* mutable_rftrparams();
  void set_allocated_rftrparams(::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* rftrparams);
  private:
  const ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg& _internal_rftrparams() const;
  ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* _internal_mutable_rftrparams();
  public:

  // optional .pb.us_processing.us_processing_sensor_parameters.UsProcessingSensorParameters sensParams = 2506;
  bool has_sensparams() const;
  private:
  bool _internal_has_sensparams() const;
  public:
  void clear_sensparams();
  const ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters& sensparams() const;
  ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* release_sensparams();
  ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* mutable_sensparams();
  void set_allocated_sensparams(::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* sensparams);
  private:
  const ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters& _internal_sensparams() const;
  ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* _internal_mutable_sensparams();
  public:

  // optional .pb.us_processing.us_processing_state_management_cfg.UsProcessingStateManagementCfg ustmParams = 3074;
  bool has_ustmparams() const;
  private:
  bool _internal_has_ustmparams() const;
  public:
  void clear_ustmparams();
  const ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg& ustmparams() const;
  ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* release_ustmparams();
  ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* mutable_ustmparams();
  void set_allocated_ustmparams(::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* ustmparams);
  private:
  const ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg& _internal_ustmparams() const;
  ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* _internal_mutable_ustmparams();
  public:

  // optional .pb.us_processing.us_processing_dyn_params.UsProcessingDynParams dynParams = 4068;
  bool has_dynparams() const;
  private:
  bool _internal_has_dynparams() const;
  public:
  void clear_dynparams();
  const ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams& dynparams() const;
  ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* release_dynparams();
  ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* mutable_dynparams();
  void set_allocated_dynparams(::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* dynparams);
  private:
  const ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams& _internal_dynparams() const;
  ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* _internal_mutable_dynparams();
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.us_processing.us_processing_params.UsProcessingParams)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* usepparams_;
  ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* objtparams_;
  ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* rftrparams_;
  ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* sensparams_;
  ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* ustmparams_;
  ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* dynparams_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  friend struct ::TableStruct_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto;
};
// -------------------------------------------------------------------

class UsProcessingParams_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_processing.us_processing_params.UsProcessingParams_array_port) */ {
 public:
  UsProcessingParams_array_port();
  virtual ~UsProcessingParams_array_port();

  UsProcessingParams_array_port(const UsProcessingParams_array_port& from);
  UsProcessingParams_array_port(UsProcessingParams_array_port&& from) noexcept
    : UsProcessingParams_array_port() {
    *this = ::std::move(from);
  }

  inline UsProcessingParams_array_port& operator=(const UsProcessingParams_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsProcessingParams_array_port& operator=(UsProcessingParams_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsProcessingParams_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsProcessingParams_array_port* internal_default_instance() {
    return reinterpret_cast<const UsProcessingParams_array_port*>(
               &_UsProcessingParams_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UsProcessingParams_array_port& a, UsProcessingParams_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(UsProcessingParams_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsProcessingParams_array_port* New() const final {
    return CreateMaybeMessage<UsProcessingParams_array_port>(nullptr);
  }

  UsProcessingParams_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsProcessingParams_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsProcessingParams_array_port& from);
  void MergeFrom(const UsProcessingParams_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsProcessingParams_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_processing.us_processing_params.UsProcessingParams_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto);
    return ::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3380,
  };
  // repeated .pb.us_processing.us_processing_params.UsProcessingParams data = 3380;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::us_processing::us_processing_params::UsProcessingParams* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_params::UsProcessingParams >*
      mutable_data();
  private:
  const ::pb::us_processing::us_processing_params::UsProcessingParams& _internal_data(int index) const;
  ::pb::us_processing::us_processing_params::UsProcessingParams* _internal_add_data();
  public:
  const ::pb::us_processing::us_processing_params::UsProcessingParams& data(int index) const;
  ::pb::us_processing::us_processing_params::UsProcessingParams* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_params::UsProcessingParams >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.us_processing.us_processing_params.UsProcessingParams_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_params::UsProcessingParams > data_;
  friend struct ::TableStruct_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UsProcessingParams

// optional uint32 uiVersionNumber = 2124;
inline bool UsProcessingParams::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool UsProcessingParams::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void UsProcessingParams::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingParams::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingParams::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_params.UsProcessingParams.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void UsProcessingParams::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  uiversionnumber_ = value;
}
inline void UsProcessingParams::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_params.UsProcessingParams.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool UsProcessingParams::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool UsProcessingParams::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& UsProcessingParams::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& UsProcessingParams::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_params.UsProcessingParams.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* UsProcessingParams::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.us_processing.us_processing_params.UsProcessingParams.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* UsProcessingParams::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* UsProcessingParams::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.us_processing.us_processing_params.UsProcessingParams.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void UsProcessingParams::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.us_processing.us_processing_params.UsProcessingParams.sSigHeader)
}

// optional .pb.us_processing.us_processing_state_management_cfg.UsProcessingStateManagementCfg ustmParams = 3074;
inline bool UsProcessingParams::_internal_has_ustmparams() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || ustmparams_ != nullptr);
  return value;
}
inline bool UsProcessingParams::has_ustmparams() const {
  return _internal_has_ustmparams();
}
inline const ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg& UsProcessingParams::_internal_ustmparams() const {
  const ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* p = ustmparams_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg*>(
      &::pb::us_processing::us_processing_state_management_cfg::_UsProcessingStateManagementCfg_default_instance_);
}
inline const ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg& UsProcessingParams::ustmparams() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_params.UsProcessingParams.ustmParams)
  return _internal_ustmparams();
}
inline ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* UsProcessingParams::release_ustmparams() {
  // @@protoc_insertion_point(field_release:pb.us_processing.us_processing_params.UsProcessingParams.ustmParams)
  _has_bits_[0] &= ~0x00000020u;
  ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* temp = ustmparams_;
  ustmparams_ = nullptr;
  return temp;
}
inline ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* UsProcessingParams::_internal_mutable_ustmparams() {
  _has_bits_[0] |= 0x00000020u;
  if (ustmparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg>(GetArenaNoVirtual());
    ustmparams_ = p;
  }
  return ustmparams_;
}
inline ::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* UsProcessingParams::mutable_ustmparams() {
  // @@protoc_insertion_point(field_mutable:pb.us_processing.us_processing_params.UsProcessingParams.ustmParams)
  return _internal_mutable_ustmparams();
}
inline void UsProcessingParams::set_allocated_ustmparams(::pb::us_processing::us_processing_state_management_cfg::UsProcessingStateManagementCfg* ustmparams) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ustmparams_);
  }
  if (ustmparams) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ustmparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ustmparams, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  ustmparams_ = ustmparams;
  // @@protoc_insertion_point(field_set_allocated:pb.us_processing.us_processing_params.UsProcessingParams.ustmParams)
}

// optional .pb.us_processing.us_processing_echo_pre_processing_cfg.UsProcessingEchoPreProcessingCfg usepParams = 1991;
inline bool UsProcessingParams::_internal_has_usepparams() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || usepparams_ != nullptr);
  return value;
}
inline bool UsProcessingParams::has_usepparams() const {
  return _internal_has_usepparams();
}
inline const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg& UsProcessingParams::_internal_usepparams() const {
  const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* p = usepparams_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg*>(
      &::pb::us_processing::us_processing_echo_pre_processing_cfg::_UsProcessingEchoPreProcessingCfg_default_instance_);
}
inline const ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg& UsProcessingParams::usepparams() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_params.UsProcessingParams.usepParams)
  return _internal_usepparams();
}
inline ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* UsProcessingParams::release_usepparams() {
  // @@protoc_insertion_point(field_release:pb.us_processing.us_processing_params.UsProcessingParams.usepParams)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* temp = usepparams_;
  usepparams_ = nullptr;
  return temp;
}
inline ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* UsProcessingParams::_internal_mutable_usepparams() {
  _has_bits_[0] |= 0x00000002u;
  if (usepparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg>(GetArenaNoVirtual());
    usepparams_ = p;
  }
  return usepparams_;
}
inline ::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* UsProcessingParams::mutable_usepparams() {
  // @@protoc_insertion_point(field_mutable:pb.us_processing.us_processing_params.UsProcessingParams.usepParams)
  return _internal_mutable_usepparams();
}
inline void UsProcessingParams::set_allocated_usepparams(::pb::us_processing::us_processing_echo_pre_processing_cfg::UsProcessingEchoPreProcessingCfg* usepparams) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(usepparams_);
  }
  if (usepparams) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      usepparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, usepparams, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  usepparams_ = usepparams;
  // @@protoc_insertion_point(field_set_allocated:pb.us_processing.us_processing_params.UsProcessingParams.usepParams)
}

// optional .pb.us_processing.us_processing_reflection_tracking_cfg.UsProcessingReflectionTrackingCfg rftrParams = 2316;
inline bool UsProcessingParams::_internal_has_rftrparams() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || rftrparams_ != nullptr);
  return value;
}
inline bool UsProcessingParams::has_rftrparams() const {
  return _internal_has_rftrparams();
}
inline const ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg& UsProcessingParams::_internal_rftrparams() const {
  const ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* p = rftrparams_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg*>(
      &::pb::us_processing::us_processing_reflection_tracking_cfg::_UsProcessingReflectionTrackingCfg_default_instance_);
}
inline const ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg& UsProcessingParams::rftrparams() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_params.UsProcessingParams.rftrParams)
  return _internal_rftrparams();
}
inline ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* UsProcessingParams::release_rftrparams() {
  // @@protoc_insertion_point(field_release:pb.us_processing.us_processing_params.UsProcessingParams.rftrParams)
  _has_bits_[0] &= ~0x00000008u;
  ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* temp = rftrparams_;
  rftrparams_ = nullptr;
  return temp;
}
inline ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* UsProcessingParams::_internal_mutable_rftrparams() {
  _has_bits_[0] |= 0x00000008u;
  if (rftrparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg>(GetArenaNoVirtual());
    rftrparams_ = p;
  }
  return rftrparams_;
}
inline ::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* UsProcessingParams::mutable_rftrparams() {
  // @@protoc_insertion_point(field_mutable:pb.us_processing.us_processing_params.UsProcessingParams.rftrParams)
  return _internal_mutable_rftrparams();
}
inline void UsProcessingParams::set_allocated_rftrparams(::pb::us_processing::us_processing_reflection_tracking_cfg::UsProcessingReflectionTrackingCfg* rftrparams) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rftrparams_);
  }
  if (rftrparams) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rftrparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rftrparams, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  rftrparams_ = rftrparams;
  // @@protoc_insertion_point(field_set_allocated:pb.us_processing.us_processing_params.UsProcessingParams.rftrParams)
}

// optional .pb.us_processing.us_processing_object_tracking_cfg.UsProcessingObjectTrackingCfg objtParams = 2102;
inline bool UsProcessingParams::_internal_has_objtparams() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || objtparams_ != nullptr);
  return value;
}
inline bool UsProcessingParams::has_objtparams() const {
  return _internal_has_objtparams();
}
inline const ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg& UsProcessingParams::_internal_objtparams() const {
  const ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* p = objtparams_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg*>(
      &::pb::us_processing::us_processing_object_tracking_cfg::_UsProcessingObjectTrackingCfg_default_instance_);
}
inline const ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg& UsProcessingParams::objtparams() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_params.UsProcessingParams.objtParams)
  return _internal_objtparams();
}
inline ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* UsProcessingParams::release_objtparams() {
  // @@protoc_insertion_point(field_release:pb.us_processing.us_processing_params.UsProcessingParams.objtParams)
  _has_bits_[0] &= ~0x00000004u;
  ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* temp = objtparams_;
  objtparams_ = nullptr;
  return temp;
}
inline ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* UsProcessingParams::_internal_mutable_objtparams() {
  _has_bits_[0] |= 0x00000004u;
  if (objtparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg>(GetArenaNoVirtual());
    objtparams_ = p;
  }
  return objtparams_;
}
inline ::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* UsProcessingParams::mutable_objtparams() {
  // @@protoc_insertion_point(field_mutable:pb.us_processing.us_processing_params.UsProcessingParams.objtParams)
  return _internal_mutable_objtparams();
}
inline void UsProcessingParams::set_allocated_objtparams(::pb::us_processing::us_processing_object_tracking_cfg::UsProcessingObjectTrackingCfg* objtparams) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(objtparams_);
  }
  if (objtparams) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      objtparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, objtparams, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  objtparams_ = objtparams;
  // @@protoc_insertion_point(field_set_allocated:pb.us_processing.us_processing_params.UsProcessingParams.objtParams)
}

// optional .pb.us_processing.us_processing_sensor_parameters.UsProcessingSensorParameters sensParams = 2506;
inline bool UsProcessingParams::_internal_has_sensparams() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || sensparams_ != nullptr);
  return value;
}
inline bool UsProcessingParams::has_sensparams() const {
  return _internal_has_sensparams();
}
inline const ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters& UsProcessingParams::_internal_sensparams() const {
  const ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* p = sensparams_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters*>(
      &::pb::us_processing::us_processing_sensor_parameters::_UsProcessingSensorParameters_default_instance_);
}
inline const ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters& UsProcessingParams::sensparams() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_params.UsProcessingParams.sensParams)
  return _internal_sensparams();
}
inline ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* UsProcessingParams::release_sensparams() {
  // @@protoc_insertion_point(field_release:pb.us_processing.us_processing_params.UsProcessingParams.sensParams)
  _has_bits_[0] &= ~0x00000010u;
  ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* temp = sensparams_;
  sensparams_ = nullptr;
  return temp;
}
inline ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* UsProcessingParams::_internal_mutable_sensparams() {
  _has_bits_[0] |= 0x00000010u;
  if (sensparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters>(GetArenaNoVirtual());
    sensparams_ = p;
  }
  return sensparams_;
}
inline ::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* UsProcessingParams::mutable_sensparams() {
  // @@protoc_insertion_point(field_mutable:pb.us_processing.us_processing_params.UsProcessingParams.sensParams)
  return _internal_mutable_sensparams();
}
inline void UsProcessingParams::set_allocated_sensparams(::pb::us_processing::us_processing_sensor_parameters::UsProcessingSensorParameters* sensparams) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sensparams_);
  }
  if (sensparams) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sensparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sensparams, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  sensparams_ = sensparams;
  // @@protoc_insertion_point(field_set_allocated:pb.us_processing.us_processing_params.UsProcessingParams.sensParams)
}

// optional .pb.us_processing.us_processing_dyn_params.UsProcessingDynParams dynParams = 4068;
inline bool UsProcessingParams::_internal_has_dynparams() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || dynparams_ != nullptr);
  return value;
}
inline bool UsProcessingParams::has_dynparams() const {
  return _internal_has_dynparams();
}
inline const ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams& UsProcessingParams::_internal_dynparams() const {
  const ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* p = dynparams_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams*>(
      &::pb::us_processing::us_processing_dyn_params::_UsProcessingDynParams_default_instance_);
}
inline const ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams& UsProcessingParams::dynparams() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_params.UsProcessingParams.dynParams)
  return _internal_dynparams();
}
inline ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* UsProcessingParams::release_dynparams() {
  // @@protoc_insertion_point(field_release:pb.us_processing.us_processing_params.UsProcessingParams.dynParams)
  _has_bits_[0] &= ~0x00000040u;
  ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* temp = dynparams_;
  dynparams_ = nullptr;
  return temp;
}
inline ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* UsProcessingParams::_internal_mutable_dynparams() {
  _has_bits_[0] |= 0x00000040u;
  if (dynparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams>(GetArenaNoVirtual());
    dynparams_ = p;
  }
  return dynparams_;
}
inline ::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* UsProcessingParams::mutable_dynparams() {
  // @@protoc_insertion_point(field_mutable:pb.us_processing.us_processing_params.UsProcessingParams.dynParams)
  return _internal_mutable_dynparams();
}
inline void UsProcessingParams::set_allocated_dynparams(::pb::us_processing::us_processing_dyn_params::UsProcessingDynParams* dynparams) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dynparams_);
  }
  if (dynparams) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dynparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dynparams, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  dynparams_ = dynparams;
  // @@protoc_insertion_point(field_set_allocated:pb.us_processing.us_processing_params.UsProcessingParams.dynParams)
}

// -------------------------------------------------------------------

// UsProcessingParams_array_port

// repeated .pb.us_processing.us_processing_params.UsProcessingParams data = 3380;
inline int UsProcessingParams_array_port::_internal_data_size() const {
  return data_.size();
}
inline int UsProcessingParams_array_port::data_size() const {
  return _internal_data_size();
}
inline void UsProcessingParams_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::us_processing::us_processing_params::UsProcessingParams* UsProcessingParams_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_processing.us_processing_params.UsProcessingParams_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_params::UsProcessingParams >*
UsProcessingParams_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_processing.us_processing_params.UsProcessingParams_array_port.data)
  return &data_;
}
inline const ::pb::us_processing::us_processing_params::UsProcessingParams& UsProcessingParams_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::us_processing::us_processing_params::UsProcessingParams& UsProcessingParams_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_params.UsProcessingParams_array_port.data)
  return _internal_data(index);
}
inline ::pb::us_processing::us_processing_params::UsProcessingParams* UsProcessingParams_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::us_processing::us_processing_params::UsProcessingParams* UsProcessingParams_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.us_processing.us_processing_params.UsProcessingParams_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_params::UsProcessingParams >&
UsProcessingParams_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.us_processing.us_processing_params.UsProcessingParams_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace us_processing_params
}  // namespace us_processing
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_us_5fprocessing_2fus_5fprocessing_5fparams_2eproto
