// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_hmitoap/visu_input_data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "ap_hmitoap/screen_types.pb.h"
#include "ap_hmitoap/gesture_code.pb.h"
#include "ap_hmitoap/blind_spot_view.pb.h"
#include "ap_hmitoap/parking_augmentation_type.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto;
namespace pb {
namespace ap_hmitoap {
namespace visu_input_data {
class VisuInputData;
class VisuInputDataDefaultTypeInternal;
extern VisuInputDataDefaultTypeInternal _VisuInputData_default_instance_;
class VisuInputData_array_port;
class VisuInputData_array_portDefaultTypeInternal;
extern VisuInputData_array_portDefaultTypeInternal _VisuInputData_array_port_default_instance_;
}  // namespace visu_input_data
}  // namespace ap_hmitoap
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_hmitoap::visu_input_data::VisuInputData* Arena::CreateMaybeMessage<::pb::ap_hmitoap::visu_input_data::VisuInputData>(Arena*);
template<> ::pb::ap_hmitoap::visu_input_data::VisuInputData_array_port* Arena::CreateMaybeMessage<::pb::ap_hmitoap::visu_input_data::VisuInputData_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_hmitoap {
namespace visu_input_data {

// ===================================================================

class VisuInputData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_hmitoap.visu_input_data.VisuInputData) */ {
 public:
  VisuInputData();
  virtual ~VisuInputData();

  VisuInputData(const VisuInputData& from);
  VisuInputData(VisuInputData&& from) noexcept
    : VisuInputData() {
    *this = ::std::move(from);
  }

  inline VisuInputData& operator=(const VisuInputData& from) {
    CopyFrom(from);
    return *this;
  }
  inline VisuInputData& operator=(VisuInputData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VisuInputData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VisuInputData* internal_default_instance() {
    return reinterpret_cast<const VisuInputData*>(
               &_VisuInputData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VisuInputData& a, VisuInputData& b) {
    a.Swap(&b);
  }
  inline void Swap(VisuInputData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VisuInputData* New() const final {
    return CreateMaybeMessage<VisuInputData>(nullptr);
  }

  VisuInputData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VisuInputData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VisuInputData& from);
  void MergeFrom(const VisuInputData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VisuInputData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_hmitoap.visu_input_data.VisuInputData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto);
    return ::descriptor_table_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSSigHeaderFieldNumber = 1033,
    kBlindSpotActivatedNuFieldNumber = 3957,
    kSecondClickEventYPxU16FieldNumber = 352,
    kParkingAugmentationTypeNuFieldNumber = 370,
    kHmiOutUserActScreenReqU8FieldNumber = 626,
    kGestureCodeNuU8FieldNumber = 992,
    kVisibilityTagsNuFieldNumber = 1147,
    kGestureCounterNuFieldNumber = 1476,
    kSecondClickEventXPxU16FieldNumber = 1715,
    kUiVersionNumberFieldNumber = 2124,
    kGestureFingerNuU8FieldNumber = 2378,
    kVideoRecorderRequestNuFieldNumber = 3902,
    kScreenCaptureRequestNuFieldNumber = 1805,
    kIsSequenceNuFieldNumber = 1750,
    kFirstClickEventXPxU16FieldNumber = 2717,
    kFirstClickEventYPxU16FieldNumber = 3406,
  };
  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional .pb.ap_hmitoap.blind_spot_view.BlindSpotView blindSpotActivated_nu = 3957;
  bool has_blindspotactivated_nu() const;
  private:
  bool _internal_has_blindspotactivated_nu() const;
  public:
  void clear_blindspotactivated_nu();
  ::pb::ap_hmitoap::blind_spot_view::BlindSpotView blindspotactivated_nu() const;
  void set_blindspotactivated_nu(::pb::ap_hmitoap::blind_spot_view::BlindSpotView value);
  private:
  ::pb::ap_hmitoap::blind_spot_view::BlindSpotView _internal_blindspotactivated_nu() const;
  void _internal_set_blindspotactivated_nu(::pb::ap_hmitoap::blind_spot_view::BlindSpotView value);
  public:

  // optional sint32 secondClickEventY_px_u16 = 352;
  bool has_secondclickeventy_px_u16() const;
  private:
  bool _internal_has_secondclickeventy_px_u16() const;
  public:
  void clear_secondclickeventy_px_u16();
  ::PROTOBUF_NAMESPACE_ID::int32 secondclickeventy_px_u16() const;
  void set_secondclickeventy_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_secondclickeventy_px_u16() const;
  void _internal_set_secondclickeventy_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional .pb.ap_hmitoap.parking_augmentation_type.ParkingAugmentationType parkingAugmentationType_nu = 370;
  bool has_parkingaugmentationtype_nu() const;
  private:
  bool _internal_has_parkingaugmentationtype_nu() const;
  public:
  void clear_parkingaugmentationtype_nu();
  ::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType parkingaugmentationtype_nu() const;
  void set_parkingaugmentationtype_nu(::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType value);
  private:
  ::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType _internal_parkingaugmentationtype_nu() const;
  void _internal_set_parkingaugmentationtype_nu(::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType value);
  public:

  // optional .pb.ap_hmitoap.screen_types.ScreenTypes HmiOutUserActScreenReq_u8 = 626;
  bool has_hmioutuseractscreenreq_u8() const;
  private:
  bool _internal_has_hmioutuseractscreenreq_u8() const;
  public:
  void clear_hmioutuseractscreenreq_u8();
  ::pb::ap_hmitoap::screen_types::ScreenTypes hmioutuseractscreenreq_u8() const;
  void set_hmioutuseractscreenreq_u8(::pb::ap_hmitoap::screen_types::ScreenTypes value);
  private:
  ::pb::ap_hmitoap::screen_types::ScreenTypes _internal_hmioutuseractscreenreq_u8() const;
  void _internal_set_hmioutuseractscreenreq_u8(::pb::ap_hmitoap::screen_types::ScreenTypes value);
  public:

  // optional .pb.ap_hmitoap.gesture_code.GestureCode GestureCode_nu_u8 = 992;
  bool has_gesturecode_nu_u8() const;
  private:
  bool _internal_has_gesturecode_nu_u8() const;
  public:
  void clear_gesturecode_nu_u8();
  ::pb::ap_hmitoap::gesture_code::GestureCode gesturecode_nu_u8() const;
  void set_gesturecode_nu_u8(::pb::ap_hmitoap::gesture_code::GestureCode value);
  private:
  ::pb::ap_hmitoap::gesture_code::GestureCode _internal_gesturecode_nu_u8() const;
  void _internal_set_gesturecode_nu_u8(::pb::ap_hmitoap::gesture_code::GestureCode value);
  public:

  // optional uint32 visibilityTags_nu = 1147;
  bool has_visibilitytags_nu() const;
  private:
  bool _internal_has_visibilitytags_nu() const;
  public:
  void clear_visibilitytags_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 visibilitytags_nu() const;
  void set_visibilitytags_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_visibilitytags_nu() const;
  void _internal_set_visibilitytags_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gestureCounter_nu = 1476;
  bool has_gesturecounter_nu() const;
  private:
  bool _internal_has_gesturecounter_nu() const;
  public:
  void clear_gesturecounter_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 gesturecounter_nu() const;
  void set_gesturecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gesturecounter_nu() const;
  void _internal_set_gesturecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional sint32 secondClickEventX_px_u16 = 1715;
  bool has_secondclickeventx_px_u16() const;
  private:
  bool _internal_has_secondclickeventx_px_u16() const;
  public:
  void clear_secondclickeventx_px_u16();
  ::PROTOBUF_NAMESPACE_ID::int32 secondclickeventx_px_u16() const;
  void set_secondclickeventx_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_secondclickeventx_px_u16() const;
  void _internal_set_secondclickeventx_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 GestureFinger_nu_u8 = 2378;
  bool has_gesturefinger_nu_u8() const;
  private:
  bool _internal_has_gesturefinger_nu_u8() const;
  public:
  void clear_gesturefinger_nu_u8();
  ::PROTOBUF_NAMESPACE_ID::uint32 gesturefinger_nu_u8() const;
  void set_gesturefinger_nu_u8(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gesturefinger_nu_u8() const;
  void _internal_set_gesturefinger_nu_u8(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool videoRecorderRequest_nu = 3902;
  bool has_videorecorderrequest_nu() const;
  private:
  bool _internal_has_videorecorderrequest_nu() const;
  public:
  void clear_videorecorderrequest_nu();
  bool videorecorderrequest_nu() const;
  void set_videorecorderrequest_nu(bool value);
  private:
  bool _internal_videorecorderrequest_nu() const;
  void _internal_set_videorecorderrequest_nu(bool value);
  public:

  // optional bool screenCaptureRequest_nu = 1805;
  bool has_screencapturerequest_nu() const;
  private:
  bool _internal_has_screencapturerequest_nu() const;
  public:
  void clear_screencapturerequest_nu();
  bool screencapturerequest_nu() const;
  void set_screencapturerequest_nu(bool value);
  private:
  bool _internal_screencapturerequest_nu() const;
  void _internal_set_screencapturerequest_nu(bool value);
  public:

  // optional bool isSequence_nu = 1750;
  bool has_issequence_nu() const;
  private:
  bool _internal_has_issequence_nu() const;
  public:
  void clear_issequence_nu();
  bool issequence_nu() const;
  void set_issequence_nu(bool value);
  private:
  bool _internal_issequence_nu() const;
  void _internal_set_issequence_nu(bool value);
  public:

  // optional sint32 firstClickEventX_px_u16 = 2717;
  bool has_firstclickeventx_px_u16() const;
  private:
  bool _internal_has_firstclickeventx_px_u16() const;
  public:
  void clear_firstclickeventx_px_u16();
  ::PROTOBUF_NAMESPACE_ID::int32 firstclickeventx_px_u16() const;
  void set_firstclickeventx_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_firstclickeventx_px_u16() const;
  void _internal_set_firstclickeventx_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional sint32 firstClickEventY_px_u16 = 3406;
  bool has_firstclickeventy_px_u16() const;
  private:
  bool _internal_has_firstclickeventy_px_u16() const;
  public:
  void clear_firstclickeventy_px_u16();
  ::PROTOBUF_NAMESPACE_ID::int32 firstclickeventy_px_u16() const;
  void set_firstclickeventy_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_firstclickeventy_px_u16() const;
  void _internal_set_firstclickeventy_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_hmitoap.visu_input_data.VisuInputData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  int blindspotactivated_nu_;
  ::PROTOBUF_NAMESPACE_ID::int32 secondclickeventy_px_u16_;
  int parkingaugmentationtype_nu_;
  int hmioutuseractscreenreq_u8_;
  int gesturecode_nu_u8_;
  ::PROTOBUF_NAMESPACE_ID::uint32 visibilitytags_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gesturecounter_nu_;
  ::PROTOBUF_NAMESPACE_ID::int32 secondclickeventx_px_u16_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gesturefinger_nu_u8_;
  bool videorecorderrequest_nu_;
  bool screencapturerequest_nu_;
  bool issequence_nu_;
  ::PROTOBUF_NAMESPACE_ID::int32 firstclickeventx_px_u16_;
  ::PROTOBUF_NAMESPACE_ID::int32 firstclickeventy_px_u16_;
  friend struct ::TableStruct_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto;
};
// -------------------------------------------------------------------

class VisuInputData_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_hmitoap.visu_input_data.VisuInputData_array_port) */ {
 public:
  VisuInputData_array_port();
  virtual ~VisuInputData_array_port();

  VisuInputData_array_port(const VisuInputData_array_port& from);
  VisuInputData_array_port(VisuInputData_array_port&& from) noexcept
    : VisuInputData_array_port() {
    *this = ::std::move(from);
  }

  inline VisuInputData_array_port& operator=(const VisuInputData_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline VisuInputData_array_port& operator=(VisuInputData_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VisuInputData_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VisuInputData_array_port* internal_default_instance() {
    return reinterpret_cast<const VisuInputData_array_port*>(
               &_VisuInputData_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(VisuInputData_array_port& a, VisuInputData_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(VisuInputData_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VisuInputData_array_port* New() const final {
    return CreateMaybeMessage<VisuInputData_array_port>(nullptr);
  }

  VisuInputData_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VisuInputData_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VisuInputData_array_port& from);
  void MergeFrom(const VisuInputData_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VisuInputData_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_hmitoap.visu_input_data.VisuInputData_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto);
    return ::descriptor_table_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3860,
  };
  // repeated .pb.ap_hmitoap.visu_input_data.VisuInputData data = 3860;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_hmitoap::visu_input_data::VisuInputData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_hmitoap::visu_input_data::VisuInputData >*
      mutable_data();
  private:
  const ::pb::ap_hmitoap::visu_input_data::VisuInputData& _internal_data(int index) const;
  ::pb::ap_hmitoap::visu_input_data::VisuInputData* _internal_add_data();
  public:
  const ::pb::ap_hmitoap::visu_input_data::VisuInputData& data(int index) const;
  ::pb::ap_hmitoap::visu_input_data::VisuInputData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_hmitoap::visu_input_data::VisuInputData >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_hmitoap.visu_input_data.VisuInputData_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_hmitoap::visu_input_data::VisuInputData > data_;
  friend struct ::TableStruct_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VisuInputData

// optional uint32 uiVersionNumber = 2124;
inline bool VisuInputData::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool VisuInputData::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void VisuInputData::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuInputData::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuInputData::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void VisuInputData::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  uiversionnumber_ = value;
}
inline void VisuInputData::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool VisuInputData::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool VisuInputData::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& VisuInputData::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& VisuInputData::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* VisuInputData::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.ap_hmitoap.visu_input_data.VisuInputData.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* VisuInputData::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* VisuInputData::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.ap_hmitoap.visu_input_data.VisuInputData.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void VisuInputData::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_hmitoap.visu_input_data.VisuInputData.sSigHeader)
}

// optional sint32 firstClickEventX_px_u16 = 2717;
inline bool VisuInputData::_internal_has_firstclickeventx_px_u16() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool VisuInputData::has_firstclickeventx_px_u16() const {
  return _internal_has_firstclickeventx_px_u16();
}
inline void VisuInputData::clear_firstclickeventx_px_u16() {
  firstclickeventx_px_u16_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VisuInputData::_internal_firstclickeventx_px_u16() const {
  return firstclickeventx_px_u16_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VisuInputData::firstclickeventx_px_u16() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.firstClickEventX_px_u16)
  return _internal_firstclickeventx_px_u16();
}
inline void VisuInputData::_internal_set_firstclickeventx_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  firstclickeventx_px_u16_ = value;
}
inline void VisuInputData::set_firstclickeventx_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_firstclickeventx_px_u16(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.firstClickEventX_px_u16)
}

// optional sint32 firstClickEventY_px_u16 = 3406;
inline bool VisuInputData::_internal_has_firstclickeventy_px_u16() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool VisuInputData::has_firstclickeventy_px_u16() const {
  return _internal_has_firstclickeventy_px_u16();
}
inline void VisuInputData::clear_firstclickeventy_px_u16() {
  firstclickeventy_px_u16_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VisuInputData::_internal_firstclickeventy_px_u16() const {
  return firstclickeventy_px_u16_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VisuInputData::firstclickeventy_px_u16() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.firstClickEventY_px_u16)
  return _internal_firstclickeventy_px_u16();
}
inline void VisuInputData::_internal_set_firstclickeventy_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  firstclickeventy_px_u16_ = value;
}
inline void VisuInputData::set_firstclickeventy_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_firstclickeventy_px_u16(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.firstClickEventY_px_u16)
}

// optional sint32 secondClickEventX_px_u16 = 1715;
inline bool VisuInputData::_internal_has_secondclickeventx_px_u16() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool VisuInputData::has_secondclickeventx_px_u16() const {
  return _internal_has_secondclickeventx_px_u16();
}
inline void VisuInputData::clear_secondclickeventx_px_u16() {
  secondclickeventx_px_u16_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VisuInputData::_internal_secondclickeventx_px_u16() const {
  return secondclickeventx_px_u16_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VisuInputData::secondclickeventx_px_u16() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.secondClickEventX_px_u16)
  return _internal_secondclickeventx_px_u16();
}
inline void VisuInputData::_internal_set_secondclickeventx_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  secondclickeventx_px_u16_ = value;
}
inline void VisuInputData::set_secondclickeventx_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_secondclickeventx_px_u16(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.secondClickEventX_px_u16)
}

// optional sint32 secondClickEventY_px_u16 = 352;
inline bool VisuInputData::_internal_has_secondclickeventy_px_u16() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool VisuInputData::has_secondclickeventy_px_u16() const {
  return _internal_has_secondclickeventy_px_u16();
}
inline void VisuInputData::clear_secondclickeventy_px_u16() {
  secondclickeventy_px_u16_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VisuInputData::_internal_secondclickeventy_px_u16() const {
  return secondclickeventy_px_u16_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VisuInputData::secondclickeventy_px_u16() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.secondClickEventY_px_u16)
  return _internal_secondclickeventy_px_u16();
}
inline void VisuInputData::_internal_set_secondclickeventy_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  secondclickeventy_px_u16_ = value;
}
inline void VisuInputData::set_secondclickeventy_px_u16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_secondclickeventy_px_u16(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.secondClickEventY_px_u16)
}

// optional .pb.ap_hmitoap.screen_types.ScreenTypes HmiOutUserActScreenReq_u8 = 626;
inline bool VisuInputData::_internal_has_hmioutuseractscreenreq_u8() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool VisuInputData::has_hmioutuseractscreenreq_u8() const {
  return _internal_has_hmioutuseractscreenreq_u8();
}
inline void VisuInputData::clear_hmioutuseractscreenreq_u8() {
  hmioutuseractscreenreq_u8_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::pb::ap_hmitoap::screen_types::ScreenTypes VisuInputData::_internal_hmioutuseractscreenreq_u8() const {
  return static_cast< ::pb::ap_hmitoap::screen_types::ScreenTypes >(hmioutuseractscreenreq_u8_);
}
inline ::pb::ap_hmitoap::screen_types::ScreenTypes VisuInputData::hmioutuseractscreenreq_u8() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.HmiOutUserActScreenReq_u8)
  return _internal_hmioutuseractscreenreq_u8();
}
inline void VisuInputData::_internal_set_hmioutuseractscreenreq_u8(::pb::ap_hmitoap::screen_types::ScreenTypes value) {
  assert(::pb::ap_hmitoap::screen_types::ScreenTypes_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  hmioutuseractscreenreq_u8_ = value;
}
inline void VisuInputData::set_hmioutuseractscreenreq_u8(::pb::ap_hmitoap::screen_types::ScreenTypes value) {
  _internal_set_hmioutuseractscreenreq_u8(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.HmiOutUserActScreenReq_u8)
}

// optional .pb.ap_hmitoap.gesture_code.GestureCode GestureCode_nu_u8 = 992;
inline bool VisuInputData::_internal_has_gesturecode_nu_u8() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool VisuInputData::has_gesturecode_nu_u8() const {
  return _internal_has_gesturecode_nu_u8();
}
inline void VisuInputData::clear_gesturecode_nu_u8() {
  gesturecode_nu_u8_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::pb::ap_hmitoap::gesture_code::GestureCode VisuInputData::_internal_gesturecode_nu_u8() const {
  return static_cast< ::pb::ap_hmitoap::gesture_code::GestureCode >(gesturecode_nu_u8_);
}
inline ::pb::ap_hmitoap::gesture_code::GestureCode VisuInputData::gesturecode_nu_u8() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.GestureCode_nu_u8)
  return _internal_gesturecode_nu_u8();
}
inline void VisuInputData::_internal_set_gesturecode_nu_u8(::pb::ap_hmitoap::gesture_code::GestureCode value) {
  assert(::pb::ap_hmitoap::gesture_code::GestureCode_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  gesturecode_nu_u8_ = value;
}
inline void VisuInputData::set_gesturecode_nu_u8(::pb::ap_hmitoap::gesture_code::GestureCode value) {
  _internal_set_gesturecode_nu_u8(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.GestureCode_nu_u8)
}

// optional .pb.ap_hmitoap.blind_spot_view.BlindSpotView blindSpotActivated_nu = 3957;
inline bool VisuInputData::_internal_has_blindspotactivated_nu() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool VisuInputData::has_blindspotactivated_nu() const {
  return _internal_has_blindspotactivated_nu();
}
inline void VisuInputData::clear_blindspotactivated_nu() {
  blindspotactivated_nu_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::pb::ap_hmitoap::blind_spot_view::BlindSpotView VisuInputData::_internal_blindspotactivated_nu() const {
  return static_cast< ::pb::ap_hmitoap::blind_spot_view::BlindSpotView >(blindspotactivated_nu_);
}
inline ::pb::ap_hmitoap::blind_spot_view::BlindSpotView VisuInputData::blindspotactivated_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.blindSpotActivated_nu)
  return _internal_blindspotactivated_nu();
}
inline void VisuInputData::_internal_set_blindspotactivated_nu(::pb::ap_hmitoap::blind_spot_view::BlindSpotView value) {
  assert(::pb::ap_hmitoap::blind_spot_view::BlindSpotView_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  blindspotactivated_nu_ = value;
}
inline void VisuInputData::set_blindspotactivated_nu(::pb::ap_hmitoap::blind_spot_view::BlindSpotView value) {
  _internal_set_blindspotactivated_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.blindSpotActivated_nu)
}

// optional .pb.ap_hmitoap.parking_augmentation_type.ParkingAugmentationType parkingAugmentationType_nu = 370;
inline bool VisuInputData::_internal_has_parkingaugmentationtype_nu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool VisuInputData::has_parkingaugmentationtype_nu() const {
  return _internal_has_parkingaugmentationtype_nu();
}
inline void VisuInputData::clear_parkingaugmentationtype_nu() {
  parkingaugmentationtype_nu_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType VisuInputData::_internal_parkingaugmentationtype_nu() const {
  return static_cast< ::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType >(parkingaugmentationtype_nu_);
}
inline ::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType VisuInputData::parkingaugmentationtype_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.parkingAugmentationType_nu)
  return _internal_parkingaugmentationtype_nu();
}
inline void VisuInputData::_internal_set_parkingaugmentationtype_nu(::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType value) {
  assert(::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  parkingaugmentationtype_nu_ = value;
}
inline void VisuInputData::set_parkingaugmentationtype_nu(::pb::ap_hmitoap::parking_augmentation_type::ParkingAugmentationType value) {
  _internal_set_parkingaugmentationtype_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.parkingAugmentationType_nu)
}

// optional uint32 GestureFinger_nu_u8 = 2378;
inline bool VisuInputData::_internal_has_gesturefinger_nu_u8() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool VisuInputData::has_gesturefinger_nu_u8() const {
  return _internal_has_gesturefinger_nu_u8();
}
inline void VisuInputData::clear_gesturefinger_nu_u8() {
  gesturefinger_nu_u8_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuInputData::_internal_gesturefinger_nu_u8() const {
  return gesturefinger_nu_u8_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuInputData::gesturefinger_nu_u8() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.GestureFinger_nu_u8)
  return _internal_gesturefinger_nu_u8();
}
inline void VisuInputData::_internal_set_gesturefinger_nu_u8(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  gesturefinger_nu_u8_ = value;
}
inline void VisuInputData::set_gesturefinger_nu_u8(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gesturefinger_nu_u8(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.GestureFinger_nu_u8)
}

// optional uint32 gestureCounter_nu = 1476;
inline bool VisuInputData::_internal_has_gesturecounter_nu() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool VisuInputData::has_gesturecounter_nu() const {
  return _internal_has_gesturecounter_nu();
}
inline void VisuInputData::clear_gesturecounter_nu() {
  gesturecounter_nu_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuInputData::_internal_gesturecounter_nu() const {
  return gesturecounter_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuInputData::gesturecounter_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.gestureCounter_nu)
  return _internal_gesturecounter_nu();
}
inline void VisuInputData::_internal_set_gesturecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  gesturecounter_nu_ = value;
}
inline void VisuInputData::set_gesturecounter_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gesturecounter_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.gestureCounter_nu)
}

// optional uint32 visibilityTags_nu = 1147;
inline bool VisuInputData::_internal_has_visibilitytags_nu() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool VisuInputData::has_visibilitytags_nu() const {
  return _internal_has_visibilitytags_nu();
}
inline void VisuInputData::clear_visibilitytags_nu() {
  visibilitytags_nu_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuInputData::_internal_visibilitytags_nu() const {
  return visibilitytags_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuInputData::visibilitytags_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.visibilityTags_nu)
  return _internal_visibilitytags_nu();
}
inline void VisuInputData::_internal_set_visibilitytags_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  visibilitytags_nu_ = value;
}
inline void VisuInputData::set_visibilitytags_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_visibilitytags_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.visibilityTags_nu)
}

// optional bool videoRecorderRequest_nu = 3902;
inline bool VisuInputData::_internal_has_videorecorderrequest_nu() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool VisuInputData::has_videorecorderrequest_nu() const {
  return _internal_has_videorecorderrequest_nu();
}
inline void VisuInputData::clear_videorecorderrequest_nu() {
  videorecorderrequest_nu_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool VisuInputData::_internal_videorecorderrequest_nu() const {
  return videorecorderrequest_nu_;
}
inline bool VisuInputData::videorecorderrequest_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.videoRecorderRequest_nu)
  return _internal_videorecorderrequest_nu();
}
inline void VisuInputData::_internal_set_videorecorderrequest_nu(bool value) {
  _has_bits_[0] |= 0x00000800u;
  videorecorderrequest_nu_ = value;
}
inline void VisuInputData::set_videorecorderrequest_nu(bool value) {
  _internal_set_videorecorderrequest_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.videoRecorderRequest_nu)
}

// optional bool screenCaptureRequest_nu = 1805;
inline bool VisuInputData::_internal_has_screencapturerequest_nu() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool VisuInputData::has_screencapturerequest_nu() const {
  return _internal_has_screencapturerequest_nu();
}
inline void VisuInputData::clear_screencapturerequest_nu() {
  screencapturerequest_nu_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool VisuInputData::_internal_screencapturerequest_nu() const {
  return screencapturerequest_nu_;
}
inline bool VisuInputData::screencapturerequest_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.screenCaptureRequest_nu)
  return _internal_screencapturerequest_nu();
}
inline void VisuInputData::_internal_set_screencapturerequest_nu(bool value) {
  _has_bits_[0] |= 0x00001000u;
  screencapturerequest_nu_ = value;
}
inline void VisuInputData::set_screencapturerequest_nu(bool value) {
  _internal_set_screencapturerequest_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.screenCaptureRequest_nu)
}

// optional bool isSequence_nu = 1750;
inline bool VisuInputData::_internal_has_issequence_nu() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool VisuInputData::has_issequence_nu() const {
  return _internal_has_issequence_nu();
}
inline void VisuInputData::clear_issequence_nu() {
  issequence_nu_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool VisuInputData::_internal_issequence_nu() const {
  return issequence_nu_;
}
inline bool VisuInputData::issequence_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData.isSequence_nu)
  return _internal_issequence_nu();
}
inline void VisuInputData::_internal_set_issequence_nu(bool value) {
  _has_bits_[0] |= 0x00002000u;
  issequence_nu_ = value;
}
inline void VisuInputData::set_issequence_nu(bool value) {
  _internal_set_issequence_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_hmitoap.visu_input_data.VisuInputData.isSequence_nu)
}

// -------------------------------------------------------------------

// VisuInputData_array_port

// repeated .pb.ap_hmitoap.visu_input_data.VisuInputData data = 3860;
inline int VisuInputData_array_port::_internal_data_size() const {
  return data_.size();
}
inline int VisuInputData_array_port::data_size() const {
  return _internal_data_size();
}
inline void VisuInputData_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_hmitoap::visu_input_data::VisuInputData* VisuInputData_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_hmitoap.visu_input_data.VisuInputData_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_hmitoap::visu_input_data::VisuInputData >*
VisuInputData_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_hmitoap.visu_input_data.VisuInputData_array_port.data)
  return &data_;
}
inline const ::pb::ap_hmitoap::visu_input_data::VisuInputData& VisuInputData_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_hmitoap::visu_input_data::VisuInputData& VisuInputData_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_hmitoap.visu_input_data.VisuInputData_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_hmitoap::visu_input_data::VisuInputData* VisuInputData_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_hmitoap::visu_input_data::VisuInputData* VisuInputData_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_hmitoap.visu_input_data.VisuInputData_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_hmitoap::visu_input_data::VisuInputData >&
VisuInputData_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_hmitoap.visu_input_data.VisuInputData_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace visu_input_data
}  // namespace ap_hmitoap
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5fhmitoap_2fvisu_5finput_5fdata_2eproto
