// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_hmitoap/screen_types.proto

#include "ap_hmitoap/screen_types.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace pb {
namespace ap_hmitoap {
namespace screen_types {
}  // namespace screen_types
}  // namespace ap_hmitoap
}  // namespace pb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_ap_5fhmitoap_2fscreen_5ftypes_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ap_5fhmitoap_2fscreen_5ftypes_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ap_5fhmitoap_2fscreen_5ftypes_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ap_5fhmitoap_2fscreen_5ftypes_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_ap_5fhmitoap_2fscreen_5ftypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035ap_hmitoap/screen_types.proto\022\032pb.ap_h"
  "mitoap.screen_types*\237\030\n\013ScreenTypes\022\020\n\014B"
  "LANK_SCREEN\020\000\022\017\n\013BOWL_VIEW_1\020\001\022\017\n\013BOWL_V"
  "IEW_2\020\002\022\017\n\013BOWL_VIEW_3\020\003\022\017\n\013BOWL_VIEW_4\020"
  "\004\022\017\n\013BOWL_VIEW_5\020\005\022\017\n\013BOWL_VIEW_6\020\006\022\017\n\013B"
  "OWL_VIEW_7\020\007\022\017\n\013BOWL_VIEW_8\020\010\022\017\n\013BOWL_VI"
  "EW_9\020\t\022\020\n\014BOWL_VIEW_10\020\n\022\020\n\014BOWL_VIEW_11"
  "\020\013\022\020\n\014BOWL_VIEW_12\020\014\022\020\n\014BOWL_VIEW_13\020\r\022\020"
  "\n\014BOWL_VIEW_14\020\016\022\026\n\022BOWL_VIEW_MODIFIED\020\017"
  "\022\023\n\017FRONT_VIEW_FULL\020\020\022\024\n\020FRONT_VIEW_SPLI"
  "T\020\021\022\030\n\024PANORAMIC_FRONT_VIEW\020\022\022\020\n\014BLACK_S"
  "CREEN\020\023\022\022\n\016FRONT_TOP_ZOOM\020\024\022\023\n\017LAST_FRON"
  "T_VIEW\020\036\022\014\n\010TOP_VIEW\020\037\022\020\n\014TOP_VIEW_SFM\020 "
  "\022\020\n\014TOP_VIEW_PSD\020!\022\020\n\014TOP_VIEW_PMD\020\"\022\021\n\r"
  "LAST_TOP_VIEW\020-\022\022\n\016REAR_VIEW_FULL\020.\022\023\n\017R"
  "EAR_VIEW_SPLIT\020/\022\027\n\023PANORAMIC_REAR_VIEW\020"
  "0\022\020\n\014TRAILER_VIEW\0201\022\021\n\rREAR_TOP_ZOOM\0202\022\022"
  "\n\016LAST_REAR_VIEW\020<\022\023\n\017KERB_VIEW_FRONT\020=\022"
  "\022\n\016KERB_VIEW_REAR\020>\022\022\n\016LAST_KERB_VIEW\020K\022"
  "\023\n\017ARA_REAR_NORMAL\020L\022\026\n\022ARA_REAR_IRREGUL"
  "AR\020M\022\030\n\024ARA_PANORAMIC_NORMAL\020N\022\033\n\027ARA_PA"
  "NORAMIC_IRREGULAR\020O\022\023\n\017LEFT_VIEW_SPLIT\020P"
  "\022\022\n\016LEFT_VIEW_FULL\020Q\022\027\n\023PANORAMIC_LEFT_V"
  "IEW\020R\022\024\n\020RIGHT_VIEW_SPLIT\020S\022\023\n\017RIGHT_VIE"
  "W_FULL\020T\022\030\n\024PANORAMIC_RIGHT_VIEW\020U\022\021\n\rLA"
  "ST_ARA_VIEW\020Z\022\022\n\016IPA_FRONT_VIEW\020[\022\021\n\rIPA"
  "_REAR_VIEW\020\\\022\020\n\014IPA_TOP_VIEW\020]\022\023\n\017PARK_F"
  "RONT_VIEW\020^\022\022\n\016PARK_REAR_VIEW\020_\022\021\n\rPARK_"
  "TOP_VIEW\020`\022\030\n\024PARK_SPACES_TOP_VIEW\020a\022\026\n\022"
  "PARK_WARN_TOP_VIEW\020b\022\030\n\024PARK_TRANSPARENT"
  "_PDW\020c\022\021\n\rLAST_IPA_VIEW\020i\022\017\n\013MORPH_FRONT"
  "\020j\022\024\n\020MORPH_FRONT_FULL\020k\022\024\n\020LAST_MORPH_F"
  "RONT\020x\022\016\n\nMORPH_REAR\020y\022\023\n\017MORPH_REAR_FUL"
  "L\020z\022\r\n\tMORPH_ARA\020{\022\024\n\017LAST_MORPH_VIEW\020\207\001"
  "\022\024\n\017SMARTPHONE_VIEW\020\227\001\022\024\n\017BLIND_SPOT_LEF"
  "T\020\230\001\022\025\n\020BLIND_SPOT_RIGHT\020\231\001\022\026\n\021LAST_SPEC"
  "IAL_VIEW\020\245\001\022\025\n\020TRANSPARENT_HOOD\020\246\001\022\026\n\021TR"
  "ANSPARENT_ALPHA\020\247\001\022\026\n\021TRANSPARENT_GHOST\020"
  "\250\001\022\026\n\021TRANSPARENT_TRUNK\020\251\001\022\034\n\027TRANSPAREN"
  "T_ALPHA_SPLIT\020\252\001\022\033\n\026TRANSPARENT_HOOD_SPL"
  "IT\020\253\001\022\034\n\027TRANSPARENT_TRUNK_SPLIT\020\254\001\022\027\n\022A"
  "DAPTIVE_FULL_BOWL\020\255\001\022\020\n\013STATIC_BOWL\020\256\001\022\030"
  "\n\023ADAPTIVE_SPLIT_BOWL\020\257\001\022\026\n\021STATIC_SPLIT"
  "_BOWL\020\260\001\022\020\n\013RAW_CAMERAS\020\265\001\022\024\n\017RAW_CAMERA"
  "S_SFM\020\266\001\022\036\n\031DEBUG_FRONT_CAMERA_EXTERN\020\310\001"
  "\022\037\n\032DEBUG_FRONT_CAMERA_VECTORS\020\311\001\022\035\n\030DEB"
  "UG_FRONT_CAMERA_EDGES\020\312\001\022 \n\033DEBUG_FRONT_"
  "CAMERA_CLEANING\020\313\001\022\035\n\030DEBUG_REAR_CAMERA_"
  "EXTERN\020\314\001\022\036\n\031DEBUG_REAR_CAMERA_VECTORS\020\315"
  "\001\022\034\n\027DEBUG_REAR_CAMERA_EDGES\020\316\001\022\037\n\032DEBUG"
  "_REAR_CAMERA_CLEANING\020\317\001\022\035\n\030DEBUG_LEFT_C"
  "AMERA_EXTERN\020\320\001\022\036\n\031DEBUG_LEFT_CAMERA_VEC"
  "TORS\020\321\001\022\034\n\027DEBUG_LEFT_CAMERA_EDGES\020\322\001\022\037\n"
  "\032DEBUG_LEFT_CAMERA_CLEANING\020\323\001\022\036\n\031DEBUG_"
  "RIGHT_CAMERA_EXTERN\020\324\001\022\037\n\032DEBUG_RIGHT_CA"
  "MERA_VECTORS\020\325\001\022\035\n\030DEBUG_RIGHT_CAMERA_ED"
  "GES\020\326\001\022 \n\033DEBUG_RIGHT_CAMERA_CLEANING\020\327\001"
  "\022%\n DEBUG_CALIBRATION_FLMC_QUAD_VIEW\020\330\001\022"
  "$\n\037DEBUG_CALIBRATION_PGM_QUAD_VIEW\020\331\001\022\034\n"
  "\027DEBUG_TESTSCREEN_4_CAMS\020\332\001\022%\n DEBUG_CAL"
  "IBRATION_OLMC_QUAD_VIEW\020\333\001\022\026\n\021DEBUG_COLO"
  "UR_BARS\020\334\001\022\026\n\021DEBUG_RAW_CAMERAS\020\335\001\022\032\n\025DE"
  "BUG_RAW_CAMERAS_SFM\020\336\001\022\031\n\024DEBUG_CURB_MES"
  "H_DEMO\020\337\001\022\025\n\020DEBUG_HEIGHT_MAP\020\340\001\022\033\n\026DEBU"
  "G_PGM_QUAD_OVERLAY\020\341\001\022\036\n\031DEBUG_IMAGE_HAR"
  "MONIZATION\020\342\001\022#\n\036PARKING_IN_SLOT_SELECTI"
  "ON_VIEW\020\343\001\022&\n!PARKING_IN_SLOT_CONFIRMATI"
  "ON_VIEW\020\344\001\022+\n&PARKING_IN_MANEUVER_PHASE_"
  "FORWARD_VIEW\020\345\001\022,\n\'PARKING_IN_MANEUVER_P"
  "HASE_BACKWARD_VIEW\020\346\001\022,\n\'PARKING_IN_MANE"
  "UVER_APPROACH_PHASE_VIEW\020\347\001\022A\n<PARKING_I"
  "N_MANEUVER_APPROACH_WHEELSTOPPER_PHASE_F"
  "ORWARD_VIEW\020\350\001\022B\n=PARKING_IN_MANEUVER_AP"
  "PROACH_WHEELSTOPPER_PHASE_BACKWARD_VIEW\020"
  "\351\001\022)\n$PARKING_OUT_DIRECTION_SELECTION_VI"
  "EW\020\352\001\022&\n!PARKING_OUT_MANEUVER_FORWARD_VI"
  "EW\020\353\001\022\'\n\"PARKING_OUT_MANEUVER_BACKWARD_V"
  "IEW\020\354\001\022+\n&PARKING_OUT_MANEUVER_FINISH_PH"
  "ASE_VIEW\020\355\001\022\025\n\020NO_STREAM_CHANGE\020\377\001\022\t\n\004SI"
  "ZE\020\200\002"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto_once;
static bool descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto = {
  &descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto_initialized, descriptor_table_protodef_ap_5fhmitoap_2fscreen_5ftypes_2eproto, "ap_hmitoap/screen_types.proto", 3165,
  &descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto_once, descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto_sccs, descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_ap_5fhmitoap_2fscreen_5ftypes_2eproto::offsets,
  file_level_metadata_ap_5fhmitoap_2fscreen_5ftypes_2eproto, 0, file_level_enum_descriptors_ap_5fhmitoap_2fscreen_5ftypes_2eproto, file_level_service_descriptors_ap_5fhmitoap_2fscreen_5ftypes_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ap_5fhmitoap_2fscreen_5ftypes_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto), true);
namespace pb {
namespace ap_hmitoap {
namespace screen_types {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ScreenTypes_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ap_5fhmitoap_2fscreen_5ftypes_2eproto);
  return file_level_enum_descriptors_ap_5fhmitoap_2fscreen_5ftypes_2eproto[0];
}
bool ScreenTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 60:
    case 61:
    case 62:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 105:
    case 106:
    case 107:
    case 120:
    case 121:
    case 122:
    case 123:
    case 135:
    case 151:
    case 152:
    case 153:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 181:
    case 182:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 255:
    case 256:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace screen_types
}  // namespace ap_hmitoap
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
