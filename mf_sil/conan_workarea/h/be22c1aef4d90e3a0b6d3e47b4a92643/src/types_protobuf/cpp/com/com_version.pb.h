// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/com_version.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_com_2fcom_5fversion_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_com_2fcom_5fversion_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_com_2fcom_5fversion_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_com_2fcom_5fversion_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_com_2fcom_5fversion_2eproto;
namespace pb {
namespace com {
namespace com_version {
class ComVersion;
class ComVersionDefaultTypeInternal;
extern ComVersionDefaultTypeInternal _ComVersion_default_instance_;
class ComVersion_array_port;
class ComVersion_array_portDefaultTypeInternal;
extern ComVersion_array_portDefaultTypeInternal _ComVersion_array_port_default_instance_;
}  // namespace com_version
}  // namespace com
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::com::com_version::ComVersion* Arena::CreateMaybeMessage<::pb::com::com_version::ComVersion>(Arena*);
template<> ::pb::com::com_version::ComVersion_array_port* Arena::CreateMaybeMessage<::pb::com::com_version::ComVersion_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace com {
namespace com_version {

// ===================================================================

class ComVersion :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.com.com_version.ComVersion) */ {
 public:
  ComVersion();
  virtual ~ComVersion();

  ComVersion(const ComVersion& from);
  ComVersion(ComVersion&& from) noexcept
    : ComVersion() {
    *this = ::std::move(from);
  }

  inline ComVersion& operator=(const ComVersion& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComVersion& operator=(ComVersion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComVersion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComVersion* internal_default_instance() {
    return reinterpret_cast<const ComVersion*>(
               &_ComVersion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ComVersion& a, ComVersion& b) {
    a.Swap(&b);
  }
  inline void Swap(ComVersion* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComVersion* New() const final {
    return CreateMaybeMessage<ComVersion>(nullptr);
  }

  ComVersion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComVersion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComVersion& from);
  void MergeFrom(const ComVersion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComVersion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.com.com_version.ComVersion";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_com_2fcom_5fversion_2eproto);
    return ::descriptor_table_com_2fcom_5fversion_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMajorFieldNumber = 2223,
    kMinorFieldNumber = 428,
    kPatchFieldNumber = 1019,
  };
  // optional uint32 major = 2223;
  bool has_major() const;
  private:
  bool _internal_has_major() const;
  public:
  void clear_major();
  ::PROTOBUF_NAMESPACE_ID::uint32 major() const;
  void set_major(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_major() const;
  void _internal_set_major(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 minor = 428;
  bool has_minor() const;
  private:
  bool _internal_has_minor() const;
  public:
  void clear_minor();
  ::PROTOBUF_NAMESPACE_ID::uint32 minor() const;
  void set_minor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_minor() const;
  void _internal_set_minor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 patch = 1019;
  bool has_patch() const;
  private:
  bool _internal_has_patch() const;
  public:
  void clear_patch();
  ::PROTOBUF_NAMESPACE_ID::uint32 patch() const;
  void set_patch(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_patch() const;
  void _internal_set_patch(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.com.com_version.ComVersion)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 major_;
  ::PROTOBUF_NAMESPACE_ID::uint32 minor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 patch_;
  friend struct ::TableStruct_com_2fcom_5fversion_2eproto;
};
// -------------------------------------------------------------------

class ComVersion_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.com.com_version.ComVersion_array_port) */ {
 public:
  ComVersion_array_port();
  virtual ~ComVersion_array_port();

  ComVersion_array_port(const ComVersion_array_port& from);
  ComVersion_array_port(ComVersion_array_port&& from) noexcept
    : ComVersion_array_port() {
    *this = ::std::move(from);
  }

  inline ComVersion_array_port& operator=(const ComVersion_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComVersion_array_port& operator=(ComVersion_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComVersion_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComVersion_array_port* internal_default_instance() {
    return reinterpret_cast<const ComVersion_array_port*>(
               &_ComVersion_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ComVersion_array_port& a, ComVersion_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(ComVersion_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComVersion_array_port* New() const final {
    return CreateMaybeMessage<ComVersion_array_port>(nullptr);
  }

  ComVersion_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComVersion_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComVersion_array_port& from);
  void MergeFrom(const ComVersion_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComVersion_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.com.com_version.ComVersion_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_com_2fcom_5fversion_2eproto);
    return ::descriptor_table_com_2fcom_5fversion_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2996,
  };
  // repeated .pb.com.com_version.ComVersion data = 2996;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::com::com_version::ComVersion* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::com::com_version::ComVersion >*
      mutable_data();
  private:
  const ::pb::com::com_version::ComVersion& _internal_data(int index) const;
  ::pb::com::com_version::ComVersion* _internal_add_data();
  public:
  const ::pb::com::com_version::ComVersion& data(int index) const;
  ::pb::com::com_version::ComVersion* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::com::com_version::ComVersion >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.com.com_version.ComVersion_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::com::com_version::ComVersion > data_;
  friend struct ::TableStruct_com_2fcom_5fversion_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ComVersion

// optional uint32 major = 2223;
inline bool ComVersion::_internal_has_major() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComVersion::has_major() const {
  return _internal_has_major();
}
inline void ComVersion::clear_major() {
  major_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ComVersion::_internal_major() const {
  return major_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ComVersion::major() const {
  // @@protoc_insertion_point(field_get:pb.com.com_version.ComVersion.major)
  return _internal_major();
}
inline void ComVersion::_internal_set_major(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  major_ = value;
}
inline void ComVersion::set_major(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_major(value);
  // @@protoc_insertion_point(field_set:pb.com.com_version.ComVersion.major)
}

// optional uint32 minor = 428;
inline bool ComVersion::_internal_has_minor() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ComVersion::has_minor() const {
  return _internal_has_minor();
}
inline void ComVersion::clear_minor() {
  minor_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ComVersion::_internal_minor() const {
  return minor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ComVersion::minor() const {
  // @@protoc_insertion_point(field_get:pb.com.com_version.ComVersion.minor)
  return _internal_minor();
}
inline void ComVersion::_internal_set_minor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  minor_ = value;
}
inline void ComVersion::set_minor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_minor(value);
  // @@protoc_insertion_point(field_set:pb.com.com_version.ComVersion.minor)
}

// optional uint32 patch = 1019;
inline bool ComVersion::_internal_has_patch() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ComVersion::has_patch() const {
  return _internal_has_patch();
}
inline void ComVersion::clear_patch() {
  patch_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ComVersion::_internal_patch() const {
  return patch_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ComVersion::patch() const {
  // @@protoc_insertion_point(field_get:pb.com.com_version.ComVersion.patch)
  return _internal_patch();
}
inline void ComVersion::_internal_set_patch(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  patch_ = value;
}
inline void ComVersion::set_patch(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_patch(value);
  // @@protoc_insertion_point(field_set:pb.com.com_version.ComVersion.patch)
}

// -------------------------------------------------------------------

// ComVersion_array_port

// repeated .pb.com.com_version.ComVersion data = 2996;
inline int ComVersion_array_port::_internal_data_size() const {
  return data_.size();
}
inline int ComVersion_array_port::data_size() const {
  return _internal_data_size();
}
inline void ComVersion_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::com::com_version::ComVersion* ComVersion_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.com.com_version.ComVersion_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::com::com_version::ComVersion >*
ComVersion_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.com.com_version.ComVersion_array_port.data)
  return &data_;
}
inline const ::pb::com::com_version::ComVersion& ComVersion_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::com::com_version::ComVersion& ComVersion_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.com.com_version.ComVersion_array_port.data)
  return _internal_data(index);
}
inline ::pb::com::com_version::ComVersion* ComVersion_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::com::com_version::ComVersion* ComVersion_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.com.com_version.ComVersion_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::com::com_version::ComVersion >&
ComVersion_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.com.com_version.ComVersion_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace com_version
}  // namespace com
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_com_2fcom_5fversion_2eproto
