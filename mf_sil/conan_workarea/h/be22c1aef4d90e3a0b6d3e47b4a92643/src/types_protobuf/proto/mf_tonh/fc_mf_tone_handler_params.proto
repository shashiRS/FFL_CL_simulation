
syntax = "proto2";

import "eco/signal_header.proto";

package pb.mf_tonh.fc_mf_tone_handler_params;

message FC_MF_ToneHandler_Params{
  optional uint32 uiVersionNumber = 2124;
  optional pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  optional float TH_ACK_TONE_DELAY_S = 698;
  optional float TH_ACK_TONE_DURATION_S = 1607;
  optional float TH_ERR_TONE_DURATION_S = 1381;
  optional float TH_SOUND_PULSE_LEN_S = 1397;
  optional float TH_LVMD_SOUND_PULSE_LEN_S = 2219;
  optional float TH_CONT_TONE_LIMIT_M = 2652;
  optional float TH_PING_PONG_DURATION_S = 3893;
  optional float TH_MIN_PAUSE_DURATION_S = 2633;
  optional float TH_MAX_PAUSE_DURATION_S = 2156;
  optional float TH_ACK_PAUSE_DURATION_S = 3467;
  optional float TH_WHP_LOW_PAUSE_DURATION_S = 420;
  optional float TH_WHP_HIGH_PAUSE_DURATION_S = 1335;
  optional float TH_LSCA_PAUSE_DURATION_S = 1350;
  optional float TH_ACTIVE_DISTANCE_M = 376;
  optional uint32 TH_VOLUME_FRONT_NU = 1642;
  optional uint32 TH_VOLUME_REAR_NU = 319;
  optional uint32 TH_ACK_TONE_PITCH_NU = 3030;
  optional uint32 TH_ACK_TONE_VOL_OFFSET_NU = 2676;
  optional uint32 TH_ERR_TONE_VOL_OFFSET_NU = 1367;
  optional uint32 TH_ERR_TONE_PITCH_NU = 1091;
  optional uint32 TH_WARN_TONE_PITCH_NU = 3000;
  optional uint32 TH_WHP_WARN_TONE_PITCH_NU = 3769;
  optional uint32 TH_LSCA_LOW_TONE_PITCH_NU = 3342;
  optional uint32 TH_LSCA_HIGH_TONE_PITCH_NU = 3641;
  optional uint32 TH_LVMD_TONE_PITCH_NU = 1145;
  optional uint32 TH_WEAK_VOLUME_NU = 3912;
  optional bool TH_ENABLED_NU = 463;
  optional bool TH_DIFFERENT_TONES_NU = 4019;
  optional bool TH_ACK_ACTIVE_NU = 1227;
}

message FC_MF_ToneHandler_Params_array_port{
   repeated pb.mf_tonh.fc_mf_tone_handler_params.FC_MF_ToneHandler_Params data = 3897;
}
