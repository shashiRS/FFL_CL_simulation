
syntax = "proto2";

import "eco/signal_header.proto";
import "mf_manager/lo_ctrl_request_type.proto";
import "mf_manager/activate_lo_ctrl_type.proto";
import "mf_manager/directed_lo_ctrl_request.proto";
import "mf_manager/lo_ctrl_request_source.proto";

package pb.mf_manager.lo_ctrl_request_port;

message LoCtrlRequestPort{
  optional uint32 uiVersionNumber = 2124;
  optional pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  optional bool activateLoCtrl = 3767;
  optional pb.mf_manager.lo_ctrl_request_type.LoCtrlRequestType loCtrlRequestType = 576;
  optional pb.mf_manager.activate_lo_ctrl_type.ActivateLoCtrlType activateLoCtrlType_nu = 49;
  optional bool secureInStandstill = 2614;
  optional bool comfortStopRequest = 3303;
  optional pb.mf_manager.directed_lo_ctrl_request.DirectedLoCtrlRequest distanceToStopReq_m = 3970;
  optional pb.mf_manager.directed_lo_ctrl_request.DirectedLoCtrlRequest velocityReq_mps = 2080;
  optional pb.mf_manager.directed_lo_ctrl_request.DirectedLoCtrlRequest accelerationReq_mps2 = 1727;
  optional pb.mf_manager.lo_ctrl_request_source.loCtrlRequestSource loCtrlRequestSource_nu = 2679;
  optional bool remoteSelfTest = 2369;
}

message LoCtrlRequestPort_array_port{
   repeated pb.mf_manager.lo_ctrl_request_port.LoCtrlRequestPort data = 2949;
}
