
syntax = "proto2";

import "eco/signal_header.proto";
import "ap_trjctl/lo_dmcctrl_request_source_type.proto";
import "ap_trjctl/lo_dmcctrl_request_interface_type.proto";
import "ap_trjctl/lo_dmcctrl_request_type.proto";
import "ap_trjctl/lo_dmchold_request_type.proto";

package pb.ap_trjctl.lo_dmcctrl_request_port;

message LoDMCCtrlRequestPort{
  optional uint32 uiVersionNumber = 2124;
  optional pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  optional float distanceToStopReq_m = 3322;
  optional float velocityLimitReq_mps = 2513;
  optional float accelerationReq_mps2 = 2750;
  optional pb.ap_trjctl.lo_dmcctrl_request_source_type.LoDMCCtrlRequestSourceType loDMCCtrlRequestSource_nu = 2228;
  optional pb.ap_trjctl.lo_dmcctrl_request_interface_type.LoDMCCtrlRequestInterfaceType loDMCCtrlRequestInterface_nu = 2388;
  optional pb.ap_trjctl.lo_dmcctrl_request_type.LoDMCCtrlRequestType loDMCCtrlRequest_nu = 2073;
  optional pb.ap_trjctl.lo_dmchold_request_type.LoDMCHoldRequestType holdReq_nu = 484;
  optional bool emergencyHoldReq_nu = 2839;
  optional bool secureReq_nu = 1971;
  optional bool drivingForwardReq_nu = 3147;
  optional bool trajectoryReset_nu = 3791;
}

message LoDMCCtrlRequestPort_array_port{
   repeated pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort data = 2432;
}
