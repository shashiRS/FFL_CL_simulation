// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef ECU_CTRL_ECU_HEALTH_STATUS_PORT_H_
#define ECU_CTRL_ECU_HEALTH_STATUS_PORT_H_

#include "Platform_Types.h"
#include "ecu_ctrl/ecu_state.h"
#include "ecu_ctrl/voltage_state.h"
#include "ecu_ctrl/comm_state.h"
#include "ecu_ctrl/temp_state.h"
#include "eco/memset.h"


namespace ecu_ctrl
{

  struct EcuHealthStatusPort
  {
    uint64 timestamp_us_u64;
    float32 ecuVoltageValue_V;
    EcuState globalState_e;
    VoltageState ecuVoltageState_e;
    CommState commState_e;
    TempState temperatureState_e;
  };

  inline ::ecu_ctrl::EcuHealthStatusPort createEcuHealthStatusPort()
  {
    EcuHealthStatusPort m;
    (void)::eco::memset(&m, 0U, sizeof(EcuHealthStatusPort));
    return m;
  }

} // namespace ecu_ctrl

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::ecu_ctrl::EcuHealthStatusPort create_default()
  {
      return ::ecu_ctrl::createEcuHealthStatusPort();
  }
}


#endif // ECU_CTRL_ECU_HEALTH_STATUS_PORT_H_
