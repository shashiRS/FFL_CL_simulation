// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef LSM_VEDODO_ODO_NVMDATA_H_
#define LSM_VEDODO_ODO_NVMDATA_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "lsm_vedodo/odo_nv_st_whl_ang_cal_t.h"
#include "lsm_vedodo/yw_rate_t.h"
#include "lsm_vedodo/lat_acc_t.h"
#include "lsm_vedodo/odo_nvm_state_t.h"
#include "eco/memset.h"


namespace lsm_vedodo
{

  struct OdoNVMData
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ::eco::SignalHeader sSigHeader;
    OdoNvStWhlAngCal_t StWhlAng;
    YwRate_t YwRate;
    LatAcc_t LatAcc;
    OdoNvmState_t State;
  };

  inline ::lsm_vedodo::OdoNVMData createOdoNVMData()
  {
    OdoNVMData m;
    (void)::eco::memset(&m, 0U, sizeof(OdoNVMData));
    m.sSigHeader = ::eco::createSignalHeader();
    m.StWhlAng = createOdoNvStWhlAngCal_t();
    m.YwRate = createYwRate_t();
    m.LatAcc = createLatAcc_t();
    m.State = createOdoNvmState_t();
    return m;
  }

} // namespace lsm_vedodo

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::lsm_vedodo::OdoNVMData create_default()
  {
      return ::lsm_vedodo::createOdoNVMData();
  }
}


#endif // LSM_VEDODO_ODO_NVMDATA_H_
