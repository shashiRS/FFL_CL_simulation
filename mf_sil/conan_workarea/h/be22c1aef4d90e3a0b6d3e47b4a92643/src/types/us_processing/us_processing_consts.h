// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef US_PROCESSING_US_PROCESSING_CONSTS_H_
#define US_PROCESSING_US_PROCESSING_CONSTS_H_

#include "Platform_Types.h"
#include "eco/memset.h"


namespace us_processing
{

  struct US_PROCESSING_Consts
  {
    enum { US_PROCESSING_MAX_NUM_SENSORS = 12U};
    enum { US_PROCESSING_MAX_NUM_SENSOR_GROUPS = 4U};
    enum { US_PROCESSING_MAX_NUM_POINTS = 255U};
    enum { US_PROCESSING_MAX_NUM_OBJECTS = 20U};
    enum { US_PROCESSING_MAX_NUM_VERTICES = 240U};
    enum { US_PROCESSING_MAX_NUM_ECHOES = 720U};
  };

  inline ::us_processing::US_PROCESSING_Consts createUS_PROCESSING_Consts()
  {
    US_PROCESSING_Consts m;
    (void)::eco::memset(&m, 0U, sizeof(US_PROCESSING_Consts));
    return m;
  }

} // namespace us_processing

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::us_processing::US_PROCESSING_Consts create_default()
  {
      return ::us_processing::createUS_PROCESSING_Consts();
  }
}


#endif // US_PROCESSING_US_PROCESSING_CONSTS_H_
