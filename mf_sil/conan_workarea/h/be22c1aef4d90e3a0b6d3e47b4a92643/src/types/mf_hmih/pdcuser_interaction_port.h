// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_HMIH_PDCUSER_INTERACTION_PORT_H_
#define MF_HMIH_PDCUSER_INTERACTION_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "mf_hmih/pdcuser_action_head_unit.h"
#include "mf_hmih/whpuser_action_head_unit.h"
#include "Platform_Types.h"
#include "eco/memset.h"


namespace mf_hmih
{

  /// User interaction with HMI hander regarding PDW and WHP.
  struct PDCUserInteractionPort
  {
    ///Provide a upconversion for old measurement to newer interfaces(needed as the first field in a port).
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ///Common header for all structured data types (e.g. timestamp)
    ::eco::SignalHeader sSigHeader;
    ///@range{0,2}
    ///User interaction with HMI handler (Head Unit) regarding PDW
    PDCUserActionHeadUnit pdcUserActionHeadUnit_nu;
    ///@range{0,2}
    ///User interaction with HMI handler (Head Unit) regarding WHP
    WHPUserActionHeadUnit whpUserActionHeadUnit_nu;
    ///True if PDW should auto activate.
    boolean pdwAutoActivate_nu;
    ///True if LSCA should auto activate.
    boolean lscaAutoActivate_nu;
  };

  inline ::mf_hmih::PDCUserInteractionPort createPDCUserInteractionPort()
  {
    PDCUserInteractionPort m;
    (void)::eco::memset(&m, 0U, sizeof(PDCUserInteractionPort));
    m.sSigHeader = ::eco::createSignalHeader();
    return m;
  }

} // namespace mf_hmih

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_hmih::PDCUserInteractionPort create_default()
  {
      return ::mf_hmih::createPDCUserInteractionPort();
  }
}


#endif // MF_HMIH_PDCUSER_INTERACTION_PORT_H_
