// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_HMIH_APUSER_INTERACTION_PORT_H_
#define MF_HMIH_APUSER_INTERACTION_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "mf_hmih/remote_device_interaction.h"
#include "mf_hmih/head_unit_interaction.h"
#include "Platform_Types.h"
#include "eco/memset.h"


namespace mf_hmih
{

  /// Store information about user action.
  struct APUserInteractionPort
  {
    ///Provide a upconversion for old measurement to newer interfaces(needed as the first field in a port).
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ///Common header for all structured data types (e.g. timestamp)
    ::eco::SignalHeader sSigHeader;
    ///@unit{nu}
    ///Keep information about the status of the remote device.
    RemoteDeviceInteraction remoteDeviceInteraction;
    ///@unit{nu}
    ///User interaction with HMI handler
    HeadUnitInteraction headUnitInteraction;
    ///@range{0,255}
    ///Unique identifier of selected target pose. If no pose is selected, ID is 255.
    uint8 selectedTPID_nu;
    ///@range{0,255}
    ///Unique identifier of selected memory slot
    uint8 selectedMemorySlotID_nu;
    ///save request from user
    boolean saveRequest_nu;
    ///delete request from user
    boolean deleteRequest_nu;
  };

  inline ::mf_hmih::APUserInteractionPort createAPUserInteractionPort()
  {
    APUserInteractionPort m;
    (void)::eco::memset(&m, 0U, sizeof(APUserInteractionPort));
    m.sSigHeader = ::eco::createSignalHeader();
    m.remoteDeviceInteraction = createRemoteDeviceInteraction();
    m.headUnitInteraction = createHeadUnitInteraction();
    m.selectedTPID_nu = 255U;
    m.selectedMemorySlotID_nu = 255U;
    return m;
  }

} // namespace mf_hmih

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_hmih::APUserInteractionPort create_default()
  {
      return ::mf_hmih::createAPUserInteractionPort();
  }
}


#endif // MF_HMIH_APUSER_INTERACTION_PORT_H_
