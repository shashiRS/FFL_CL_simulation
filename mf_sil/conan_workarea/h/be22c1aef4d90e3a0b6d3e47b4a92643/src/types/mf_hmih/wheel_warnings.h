// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_HMIH_WHEEL_WARNINGS_H_
#define MF_HMIH_WHEEL_WARNINGS_H_

#include "mf_whlprotectproc/whl_warning_level.h"
#include "Platform_Types.h"
#include "mf_hmih/wheel_ang_direction.h"
#include "eco/memset.h"


namespace mf_hmih
{

  /// Wheel warning information coming from WHP
  struct WheelWarnings
  {
    ///@range{0,3}
    ///Wheel warning level for each wheel. Positions front left: 0, front right: 1, rear left: 2; rear right: 3.
    ::mf_whlprotectproc::WhlWarningLevel warningLevel_nu[4];
    ///@unit{deg}
    ///Absolute value of wheel angles for each wheel. Positions front left: 0, front right: 1, rear left: 2; rear right: 3.
    uint8 whlAngleAbs_deg[4];
    ///@range{0,1}
    ///Direction of the wheel angle for each wheel. Positions front left: 0, front right: 1, rear left: 2; rear right: 3.
    WheelAngDirection whlAngDirection_nu[4];
  };

  inline ::mf_hmih::WheelWarnings createWheelWarnings()
  {
    WheelWarnings m;
    (void)::eco::memset(&m, 0U, sizeof(WheelWarnings));
    return m;
  }

} // namespace mf_hmih

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_hmih::WheelWarnings create_default()
  {
      return ::mf_hmih::createWheelWarnings();
  }
}


#endif // MF_HMIH_WHEEL_WARNINGS_H_
