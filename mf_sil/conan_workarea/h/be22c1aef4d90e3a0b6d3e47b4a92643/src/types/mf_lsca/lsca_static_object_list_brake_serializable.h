// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_LSCA_LSCA_STATIC_OBJECT_LIST_BRAKE_SERIALIZABLE_H_
#define MF_LSCA_LSCA_STATIC_OBJECT_LIST_BRAKE_SERIALIZABLE_H_

#include "Platform_Types.h"
#include "mf_lsca/lsca_static_object_shape_serializable.h"
#include "eco/memset.h"


namespace mf_lsca
{

  /// Collection of static objects for debug purposes
  struct LscaStaticObjectListBrakeSerializable
  {
    ///Number of objects in this list
    uint32 actualSize;
    ///Objects in this list
    LscaStaticObjectShapeSerializable objects[32];
  };

  inline ::mf_lsca::LscaStaticObjectListBrakeSerializable createLscaStaticObjectListBrakeSerializable()
  {
    LscaStaticObjectListBrakeSerializable m;
    (void)::eco::memset(&m, 0U, sizeof(LscaStaticObjectListBrakeSerializable));
    {
      const uint64 arraysize = (sizeof(m.objects) / sizeof(m.objects[0]));
      for(uint64 i = 0U; i < arraysize; ++i)
      {
        m.objects[i] = createLscaStaticObjectShapeSerializable();
      }
    }
    return m;
  }

} // namespace mf_lsca

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_lsca::LscaStaticObjectListBrakeSerializable create_default()
  {
      return ::mf_lsca::createLscaStaticObjectListBrakeSerializable();
  }
}


#endif // MF_LSCA_LSCA_STATIC_OBJECT_LIST_BRAKE_SERIALIZABLE_H_
