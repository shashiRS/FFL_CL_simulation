// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef AP_TP_STORED_WAYPOINT_DATA_H_
#define AP_TP_STORED_WAYPOINT_DATA_H_

#include "lsm_geoml/pose_pod.h"
#include "Platform_Types.h"
#include "eco/memset.h"


namespace ap_tp
{

  /// Data structure defining a waypoint to be stored
  struct StoredWaypointData
  {
    ///Pose at the stored waypoint
    ::lsm_geoml::Pose_POD pose;
    ///@unit{1pm}
    ///@range{-0.275,0.275}
    ///Curvature at the stored waypoint (signed), limited by the vehicle kinematics
    float32 crv_1pm;
  };

  inline ::ap_tp::StoredWaypointData createStoredWaypointData()
  {
    StoredWaypointData m;
    (void)::eco::memset(&m, 0U, sizeof(StoredWaypointData));
    m.pose = ::lsm_geoml::createPose_POD();
    return m;
  }

} // namespace ap_tp

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::ap_tp::StoredWaypointData create_default()
  {
      return ::ap_tp::createStoredWaypointData();
  }
}


#endif // AP_TP_STORED_WAYPOINT_DATA_H_
