// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef AP_VEHSTATESIGPROVIDER_LIGHT_H_
#define AP_VEHSTATESIGPROVIDER_LIGHT_H_

#include "Platform_Types.h"
#include "eco/memset.h"


namespace ap_vehstatesigprovider
{

  /// Status of relevant lights
  struct Light
  {
    ///Low beam light on
    boolean lowBeamOn_nu;
    ///High beam light on
    boolean highBeamOn_nu;
    ///Left light indicator on
    boolean indicatorLeftOn_nu;
    ///Right light indicator on
    boolean indicatorRightOn_nu;
    ///Brake light on
    boolean brakeLightOn_nu;
    ///Front fog light on
    boolean frontFogLightOn_nu;
    ///rear fog light on
    boolean rearFogLightOn_nu;
    ///daytimeRunning light on
    boolean daytimeRunningLightStateOn_nu;
    ///parking light on
    boolean positionLampOn_nu;
    ///reverse light on
    boolean reverseLampOn_nu;
  };

  inline ::ap_vehstatesigprovider::Light createLight()
  {
    Light m;
    (void)::eco::memset(&m, 0U, sizeof(Light));
    return m;
  }

} // namespace ap_vehstatesigprovider

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::ap_vehstatesigprovider::Light create_default()
  {
      return ::ap_vehstatesigprovider::createLight();
  }
}


#endif // AP_VEHSTATESIGPROVIDER_LIGHT_H_
