// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_14\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP14_TYPES_USED

#ifndef MF_MEMPARK_MF_MEM_PARK_CONSTS_H_
#define MF_MEMPARK_MF_MEM_PARK_CONSTS_H_

#include "Platform_Types.h"


namespace mf_mempark
{

  struct MF_MemPark_Consts
  {
    static constexpr uint8 MAX_NUM_PARKING_SLOTS_NU = 10U;
    static constexpr uint8 MAX_NUM_TRAJECTORY_NU = 5U;
    static constexpr uint8 MAX_NUM_REQUESTABLE_RELOCALIZATION_SLOTS = 10U;
    ///Parameter that determines the max size of points to
    ///use for trajectory representation, each point takes place every meter.
    ///E.g. for MAX_SIZE_OF_POINTS=100 we can represent 100 meters distance
    ///due to 1 point per meter
    static constexpr uint8 MAX_SIZE_OF_POINTS = 200U;
    static constexpr uint8 MAX_SLOTS_PER_METAMAP_NU = 1U;
    static constexpr uint8 MAX_TRAJECTORIES_PER_METAMAP_NU = 1U;
    static constexpr uint8 MAX_NUM_MAPS_STORED_NU = 10U;
    static constexpr uint8 INVALID_MAP_ID = 255U;
  };

} // namespace mf_mempark

#endif // MF_MEMPARK_MF_MEM_PARK_CONSTS_H_
