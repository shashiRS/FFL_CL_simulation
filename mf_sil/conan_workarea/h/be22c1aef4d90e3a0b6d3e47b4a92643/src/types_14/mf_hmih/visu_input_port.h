// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_14\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP14_TYPES_USED

#ifndef MF_HMIH_VISU_INPUT_PORT_H_
#define MF_HMIH_VISU_INPUT_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "mf_hmih/visu_hmidata.h"
#include "ap_hmitoap/screen_types.h"
#include "ap_tp/traj_plan_visu_port.h"
#include "mf_hmih/parking_target_poses.h"


namespace mf_hmih
{

  /// Keep information for Visu: e.g.trajectory planner, target poses, distance to stop.
  struct VisuInputPort
  {
    ///Provide a upconversion for old measurement to newer interfaces(needed as the first field in a port).
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber{};
    ///Common header for all structured data types (e.g. timestamp)
    ::eco::SignalHeader sSigHeader{};
    ///Value for the remaining distance to stop the vehicle.
    float32 distanceToStopReq_m{};
    ///HMI data for Visu
    VisuHMIData visuHMIData{};
    ///Description which stream should be renderd
    ::ap_hmitoap::ScreenTypes HmiOutUserActScreenReq_u8{};
    ///Trajectory planner data for Visu
    ::ap_tp::TrajPlanVisuPort trajPlanVisuPort_nu{};
    ///Target poses information for Visu
    ParkingTargetPoses parkingPosesVisu{};
    ///Indicates if the slot was selected by the user or if the selected slot was preselected by HMIHandler.
    boolean driverSelection_nu{};
  };

} // namespace mf_hmih

#endif // MF_HMIH_VISU_INPUT_PORT_H_
