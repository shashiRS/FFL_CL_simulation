// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_14\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP14_TYPES_USED

#ifndef PDCP_PDCPDRIVING_TUBE_PORT_H_
#define PDCP_PDCPDRIVING_TUBE_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "cml/vec2_df_pod.h"
#include "pdcp/drv_tube_display.h"


namespace pdcp
{

  /// Signals from PDC Processing containing the driving tube information
  struct PDCPDrivingTubePort
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber{};
    ::eco::SignalHeader sSigHeader{};
    ///@unit{m}
    ///Radius of the driving tube on the front
    float32 frontRadius_m{};
    ///@unit{m}
    ///Radius of the driving tube on the rear
    float32 rearRadius_m{};
    ///Center of the turning circle
    ::cml::Vec2Df_POD turningCircleCenter_nu{};
    ///@range{0,2}
    ///Information of where the driving tube should be displayed
    DrvTubeDisplay drvTubeDisplay_nu{::pdcp::DrvTubeDisplay::PDC_DRV_TUBE_NONE};
    ///Indicates if the driving tube is perfectly straight (radiuses should be ignored)
    boolean straightDrvTube_nu{};
  };

} // namespace pdcp

#endif // PDCP_PDCPDRIVING_TUBE_PORT_H_
