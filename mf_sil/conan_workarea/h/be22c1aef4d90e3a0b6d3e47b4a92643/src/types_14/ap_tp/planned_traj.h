// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_14\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP14_TYPES_USED

#ifndef AP_TP_PLANNED_TRAJ_H_
#define AP_TP_PLANNED_TRAJ_H_

#include "Platform_Types.h"


namespace ap_tp
{

  /// 
  struct PlannedTraj
  {
    ///@unit{m}
    ///Array of relevant x coordinates of the reference trajectory for the middle of the rear wheel axle in frozen/absolut coordinates. (*Trajectory must be driveable: e.g. consindering maximal curvature) @min: 0 @max: 0 @unit: m
    float32 xTrajRAReq_m{};
    ///@unit{m}
    ///Array of relevant y coordinates of the reference trajectory for the middle of the rear wheel axle in frozen/absolut coordinates. (*Trajectory must be driveable: e.g. consindering maximal curvature) @min: 0 @max: 0 @unit: m
    float32 yTrajRAReq_m{};
    ///@range{-3.1415926,3.1415926}
    ///@unit{rad}
    ///None @min: -3.1415926 @max: +3.1415926 @unit: rad
    float32 yawReq_rad{};
    ///@range{-0.24,0.24}
    ///@unit{1/m}
    ///Curvature of the trajectory at the current point @min: -0.24 @max: 0.24 @unit: 1/m
    ///Range: AP_V_MIN_TURN_RADIUS_M (4.1) + AP_P_MIN_RADIUS_ADD_CIRCLE_M (0.2) = 4.3 m â†’ 1/4.3 = 0.24 [1/m]
    float32 crvRAReq_1pm{};
    ///@range{0,50}
    ///@unit{m}
    ///Value for the remaining distance to stop for the current stroke (*used as longitudinal reference value in case of distance control) @min: -2 @max: 30 @unit: m
    float32 distanceToStopReq_m{};
    ///@range{0,2.778}
    ///@unit{m/s}
    ///Array with relevant values for the VelocityLimit/ target vehicle velocity.(*used as longitudinal reference value in case of velocity control; *used as limit for the vehicle velocity in case of distance control) @min: 0 @max: AP_G_MAX_AVG_V_MPS = 10kph = 2.778 m/s @unit: m/s
    float32 velocityLimitReq_mps{};
  };

} // namespace ap_tp

#endif // AP_TP_PLANNED_TRAJ_H_
