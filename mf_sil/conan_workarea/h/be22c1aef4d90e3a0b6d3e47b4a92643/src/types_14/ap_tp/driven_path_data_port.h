// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_14\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP14_TYPES_USED

#ifndef AP_TP_DRIVEN_PATH_DATA_PORT_H_
#define AP_TP_DRIVEN_PATH_DATA_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "ap_tp/stored_waypoint_data.h"


namespace ap_tp
{

  /// Data structure for storing way points of a driven path
  struct DrivenPathDataPort
  {
    ///@unit{nu}
    ///Version number of the driven path data port
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber{};
    ///Signal information
    ::eco::SignalHeader sSigHeader{};
    ///@unit{nu}
    ///@range{0,255}
    ///Counter changes when saving data requested, can overflow
    uint8 saveCounter{0U};
    ///@unit{nu}
    ///@range{0,1}
    ///Indicator whether port contains valid data
    boolean hasValidData{0};
    ///Actual driven path containing samples in one driving direction
    StoredWaypointData storedDrivenPath[1000]{};
    ///@unit{nu}
    ///@range{0,AP_TP.AP_TP_Const.AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH}
    ///Number of valid elements in driven path
    uint16 numElementsInDrivenPath{0U};
    ///Buffer for storing way points which are in the opposite direction of the driven path
    StoredWaypointData buffer[10]{};
    ///@unit{nu}
    ///@range{0,AP_TP.AP_TP_Const.AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH_BUFFER}
    ///Number of valid elements in buffer
    uint8 numElementsInBuffer{0U};
  };

} // namespace ap_tp

#endif // AP_TP_DRIVEN_PATH_DATA_PORT_H_
