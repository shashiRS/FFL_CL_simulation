// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_14\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP14_TYPES_USED

#ifndef MF_WHLPROTECTPROC_FC_MF_WHL_PROTECT_PROC_PARAMS_H_
#define MF_WHLPROTECTPROC_FC_MF_WHL_PROTECT_PROC_PARAMS_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"


namespace mf_whlprotectproc
{

  struct FC_MF_WhlProtectProc_Params
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber{};
    ::eco::SignalHeader sSigHeader{};
    ///Box width exterior OFF (wheel size VW Passat B8 215 60 R16)
    float32 WHP_P_BOX_WIDTH_EXT_OFF_M{};
    ///Box width exterior ON
    float32 WHP_P_BOX_WIDTH_EXT_ON_M{};
    ///Box width exterior OFF critical (3 stage warning)
    float32 WHP_P_BOX_WIDTH_EXT_CRIT_OFF_M{};
    ///Box width exterior ON critical (3 stage warning)
    float32 WHP_P_BOX_WIDTH_EXT_CRIT_ON_M{};
    ///Box width exterior OFF (wheel size VW Passat B8 215 60 R16)
    float32 WHP_P_BOX_WIDTH_INT_OFF_M{};
    ///Box width exterior ON
    float32 WHP_P_BOX_WIDTH_INT_ON_M{};
    ///Box width exterior OFF critical (3 stage warning)
    float32 WHP_P_BOX_WIDTH_INT_CRIT_OFF_M{};
    ///Box width exterior ON critical (3 stage warning)
    float32 WHP_P_BOX_WIDTH_INT_CRIT_ON_M{};
    ///Box length against the driving direction OFF
    float32 WHP_P_BOX_LEN_AGDDIR_OFF_M{};
    ///Box length against the driving direction ON
    float32 WHP_P_BOX_LEN_AGDDIR_ON_M{};
    ///Box length against the driving direction OFF  critical (3 stage warning)
    float32 WHP_P_BOX_LEN_AGDDIR_CRIT_OFF_M{};
    ///Box length in the driving direction OFF critical (3 stage warning)
    float32 WHP_P_BOX_LEN_AGDDIR_CRIT_ON_M{};
    ///Box length in the driving direction OFF
    float32 WHP_P_BOX_LEN_DDIR_OFF_M{};
    ///Box length in the driving direction ON
    float32 WHP_P_BOX_LEN_DDIR_ON_M{};
    ///Box length against the driving direction OFF critical (3 stage warning)
    float32 WHP_P_BOX_LEN_DDIR_CRIT_OFF_M{};
    ///Box length in the driving direction ON critical (3 stage warning)
    float32 WHP_P_BOX_LEN_DDIR_CRIT_ON_M{};
    ///Maximum object height for Wheel Protection relevance
    float32 WHP_P_OBJ_MAX_STATIC_HEIGHT_M{};
    ///Minimum object existance probability for Wheel Protection relevance
    float32 WHP_P_OBJ_MIN_EXISTANCE_PROB_NU{};
    ///Minimum height confidence for the height class of an obstacle
    float32 WHP_P_OBJ_MIN_HEIGHT_CONF_PROB_NU{};
    ///Number of polygons circular sectors will be divided in
    uint8 WHP_P_CIRC_SECT_POLY_NU{};
    ///Switch between calculating boxes around the wheel/only in the driving direction
    boolean WHP_P_ALREADY_RUN_OVER_NU{};
    ///Parameter to enable/disable curved boxes
    boolean WHP_P_CURVED_BOXES_NU{};
    ///Parameter to toggle between 2 and 3 stage warning
    boolean WHP_P_3_STAGE_WARN_NU{};
  };

} // namespace mf_whlprotectproc

#endif // MF_WHLPROTECTPROC_FC_MF_WHL_PROTECT_PROC_PARAMS_H_
