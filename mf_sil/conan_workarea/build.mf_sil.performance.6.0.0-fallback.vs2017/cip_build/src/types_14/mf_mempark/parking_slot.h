// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_14\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP14_TYPES_USED

#ifndef MF_MEMPARK_PARKING_SLOT_H_
#define MF_MEMPARK_PARKING_SLOT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "ap_commonvehsigprovider/gpsdata.h"
#include "lsm_geoml/pose_pod.h"
#include "mf_mempark/system_defined_pose_side.h"
#include "mf_mempark/system_defined_pose_type.h"
#include "mf_mempark/slot_meta_data.h"


namespace mf_mempark
{

  /// Describes parking slots where the vehicle parked before.
  /// This data will be saved to have further reference on new parking attempts on a location already visited.
  struct ParkingSlot
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber{};
    ::eco::SignalHeader sSigHeader{};
    uint8 slotID{};
    ::ap_commonvehsigprovider::GPSData slotGNSS{};
    ::lsm_geoml::Pose_POD slotPose{};
    ///[Optional]
    ::lsm_geoml::Pose_POD startPose{};
    SystemDefinedPoseSide slotSide{};
    SystemDefinedPoseType slotType{};
    uint8 correspondingMapId{};
    SlotMetaData metaData{};
  };

} // namespace mf_mempark

#endif // MF_MEMPARK_PARKING_SLOT_H_
