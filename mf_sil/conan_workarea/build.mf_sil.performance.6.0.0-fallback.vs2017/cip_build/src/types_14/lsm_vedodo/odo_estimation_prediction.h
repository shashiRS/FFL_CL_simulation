// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_14\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP14_TYPES_USED

#ifndef LSM_VEDODO_ODO_ESTIMATION_PREDICTION_H_
#define LSM_VEDODO_ODO_ESTIMATION_PREDICTION_H_

#include "Platform_Types.h"


namespace lsm_vedodo
{

  /// Result of odometry estimation prediction.
  struct OdoEstimationPrediction
  {
    ///@unit{m/s}
    ///@range{-100,100}
    ///Value for the current vehicle velocity; positive: driving forward, negative: driving backward
    float32 longiVelocity_mps{};
    ///@unit{m}
    ///@range{-COORDINATE_OVERFLOW_POSITION_M,+COORDINATE_OVERFLOW_POSITION_M}
    ///current x position of the middle of the rear axle in frozen/absolute coordinates.
    float32 xPosition_m{};
    ///@unit{m}
    ///@range{-COORDINATE_OVERFLOW_POSITION_M,+COORDINATE_OVERFLOW_POSITION_M}
    ///Current y position of the middle of the rear axle in frozen/absolute coordinates.
    float32 yPosition_m{};
    ///@unit{rad}
    ///@range{-COORDINATE_OVERFLOW_YAW_ANGLE_RAD,+COORDINATE_OVERFLOW_YAW_ANGLE_RAD}
    ///Current vehicle yaw angle in frozen/absolute coordinates.
    float32 yawAngle_rad{};
  };

} // namespace lsm_vedodo

#endif // LSM_VEDODO_ODO_ESTIMATION_PREDICTION_H_
