// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_14\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP14_TYPES_USED

#ifndef AP_COMMONVEHSIGPROVIDER_ENGINE_CTRL_STATUS_PORT_H_
#define AP_COMMONVEHSIGPROVIDER_ENGINE_CTRL_STATUS_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "ap_commonvehsigprovider/start_stop_status.h"


namespace ap_commonvehsigprovider
{

  /// Signals from Engine ECU
  struct EngineCtrlStatusPort
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber{};
    ::eco::SignalHeader sSigHeader{};
    ///@unit{Percentage}
    ///@range{0,101.6}
    ///Throttle position in percent
    float32 throttlePos_perc{};
    ///@unit{Percentage per second}
    ///Throttle gradient is calculated by two 4 ms scanned throttle positions
    float32 throttleGradient_percps{};
    ///@unit{torque in Nm}
    ///Torquq at axle in Nm
    float32 axleTorque_nm{};
    ///Engine is running
    boolean engineOn_nu{};
    ///@range{0,3}
    ///Status of start stop function should be in status N/A or "no clearance" to prevent turning off the engine while parking
    StartStopStatus startStopStatus_nu{};
    ///Remote start possible
    boolean remoteStartPossible_nu{};
    ///Qualifier-Bit of Throttle position
    boolean throttlePos_QF_nu{};
    ///Qualifier-Bit Throttle position
    boolean throttleGradient_QF_nu{};
  };

} // namespace ap_commonvehsigprovider

#endif // AP_COMMONVEHSIGPROVIDER_ENGINE_CTRL_STATUS_PORT_H_
