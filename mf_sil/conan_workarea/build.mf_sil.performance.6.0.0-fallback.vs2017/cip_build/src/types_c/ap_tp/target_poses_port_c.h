//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef AP_TP_TARGET_POSES_PORT_C_H_
#define AP_TP_TARGET_POSES_PORT_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "Platform_Types.h"
#include "ap_tp/planning_fail_reason_c.h"
#include "ap_tp/selected_pose_data_c.h"
#include "ap_tp/target_pose_c.h"
#include "eco/memset_c.h"

/// 
typedef struct
{
    ///@unit{eco.AlgoInterfaceVersionNumber}
    ///
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ///@unit{eco.SignalHeader}
    ///
    ECO_SignalHeader sSigHeader;
    ///@unit{Count}
    ///indicates number of coordinate resets performed by the planner @min: 0 @max: 0 @unit: Count
    uint8 resetCounter;
    ///@unit{enum PlanningFailReason}
    ///@range{0,4}
    ///Reason for failing from TPD @min: 0 @max: 4 @unit: enum PlanningFailReason @values: enum { _PFR_NONE=0,_PFR_TARGET_POSE_LOST=1,_PFR_PARKING_BOX_LOST=2,_PFR_INPUT_CORRUPTED=3,_PFR_REPLAN_FAIL=4,_MAX_NUM_PLANNING_FAIL_TYPES=5 }
    AP_TP_PlanningFailReason failReason;
    ///@unit{boolean}
    ///@range{0,1}
    ///None @min: 0 @max: 1 @unit: boolean
    boolean anyPathFound;
    ///@unit{nu}
    ///Information related to the selected Target Pose @min: 0 @max: 0 @unit: nu
    AP_TP_SelectedPoseData selectedPoseData;
    ///@unit{Count}
    ///Number of poses that are valid (does not need to be reachable) @min: 0 @max: AP_Common.AP_G_MAX_NUM_TARGET_POSES_NU @unit: Count
    uint8 numValidPoses;
    ///@unit{nu}
    ///All information related to a possible target pose @min: 0 @max: 0 @unit: nu
    AP_TP_TargetPose targetPoses[8];
} AP_TP_TargetPosesPort;

inline AP_TP_TargetPosesPort create_AP_TP_TargetPosesPort(void)
{
  AP_TP_TargetPosesPort m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  m.selectedPoseData = create_AP_TP_SelectedPoseData();
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.targetPoses) / sizeof(m.targetPoses[0])); ++i)
    {
      m.targetPoses[i] = create_AP_TP_TargetPose();
    }
  }
  return m;
}

#endif // AP_TP_TARGET_POSES_PORT_C_H_
