//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef AP_TP_DRIVEN_PATH_DATA_PORT_C_H_
#define AP_TP_DRIVEN_PATH_DATA_PORT_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "Platform_Types.h"
#include "ap_tp/stored_waypoint_data_c.h"
#include "eco/memset_c.h"

/// Data structure for storing way points of a driven path
typedef struct
{
    ///@unit{nu}
    ///Version number of the driven path data port
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ///Signal information
    ECO_SignalHeader sSigHeader;
    ///@unit{nu}
    ///@range{0,255}
    ///Counter changes when saving data requested, can overflow
    uint8 saveCounter;
    ///@unit{nu}
    ///@range{0,1}
    ///Indicator whether port contains valid data
    boolean hasValidData;
    ///Actual driven path containing samples in one driving direction
    AP_TP_StoredWaypointData storedDrivenPath[1000];
    ///@unit{nu}
    ///@range{0,AP_TP.AP_TP_Const.AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH}
    ///Number of valid elements in driven path
    uint16 numElementsInDrivenPath;
    ///Buffer for storing way points which are in the opposite direction of the driven path
    AP_TP_StoredWaypointData buffer[10];
    ///@unit{nu}
    ///@range{0,AP_TP.AP_TP_Const.AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH_BUFFER}
    ///Number of valid elements in buffer
    uint8 numElementsInBuffer;
} AP_TP_DrivenPathDataPort;

inline AP_TP_DrivenPathDataPort create_AP_TP_DrivenPathDataPort(void)
{
  AP_TP_DrivenPathDataPort m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  m.saveCounter = 0U;
  m.hasValidData = 0;
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.storedDrivenPath) / sizeof(m.storedDrivenPath[0])); ++i)
    {
      m.storedDrivenPath[i] = create_AP_TP_StoredWaypointData();
    }
  }
  m.numElementsInDrivenPath = 0U;
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.buffer) / sizeof(m.buffer[0])); ++i)
    {
      m.buffer[i] = create_AP_TP_StoredWaypointData();
    }
  }
  m.numElementsInBuffer = 0U;
  return m;
}

#endif // AP_TP_DRIVEN_PATH_DATA_PORT_C_H_
