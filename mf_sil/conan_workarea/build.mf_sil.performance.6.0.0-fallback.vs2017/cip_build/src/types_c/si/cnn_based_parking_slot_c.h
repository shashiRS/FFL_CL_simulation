//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef SI_CNN_BASED_PARKING_SLOT_C_H_
#define SI_CNN_BASED_PARKING_SLOT_C_H_

#include "Platform_Types.h"
#include "si/quadrilateral_serializable_c.h"
#include "si/parking_scenario_confidence_c.h"
#include "eco/memset_c.h"

/// @brief Aggregate structure containing all CNN based parking slot related information.
typedef struct
{
    ///@range{0,65535}
    ///@unit{nu}
    ///@brief Defines the ID of the corresponding slot.
    uint16 slotId_nu;
    ///@unit{m}
    ///@brief Describes the shape of the corresponding parking slot.
    SI_QuadrilateralSerializable slotShape_m;
    ///@range{0,100}
    ///@unit{%}
    ///@brief Defines the existence probability of the corresponding slot.
    uint8 existenceProb_perc;
    ///@unit{%}
    ///@brief Defines the confidence in the different types of parking scenarios for the corresponding slot.
    SI_ParkingScenarioConfidence parkingScenarioConfidence_perc;
} SI_CnnBasedParkingSlot;

inline SI_CnnBasedParkingSlot create_SI_CnnBasedParkingSlot(void)
{
  SI_CnnBasedParkingSlot m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.slotId_nu = 65535U;
  m.slotShape_m = create_SI_QuadrilateralSerializable();
  m.existenceProb_perc = 0U;
  m.parkingScenarioConfidence_perc = create_SI_ParkingScenarioConfidence();
  return m;
}

#endif // SI_CNN_BASED_PARKING_SLOT_C_H_
