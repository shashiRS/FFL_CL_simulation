//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef MF_HMIH_VISU_HMIDATA_C_H_
#define MF_HMIH_VISU_HMIDATA_C_H_

#include "Platform_Types.h"
#include "ap_hmitoap/gesture_code_c.h"
#include "ap_hmitoap/blind_spot_view_c.h"
#include "ap_hmitoap/parking_augmentation_type_c.h"
#include "eco/memset_c.h"

/// HMI data for Visu
typedef struct
{
    ///X finger position on HMI Screen display in pixels (13 bits range signal) for main finger.
    float32 firstClickEventX_px;
    ///Y finger position on HMI Screen display in pixels (13 bits range signal) for main finger.
    float32 firstClickEventY_px;
    ///X finger position on HMI Screen display in pixels (13 bits range signal) for second finger.
    float32 secondClickEventX_px;
    ///Y finger position on HMI Screen display in pixels (13 bits range signal) for second finger.
    float32 secondClickEventY_px;
    ///Number of Fingers used on the touch screen.
    uint8 gestureFinger_nu;
    ///Wrap-around counter for gesture signal (will be increased with every gesture event).
    uint8 gestureCounter_nu;
    ///Gesture Code identifies which kind of gesture was done by the user.
    AP_HMITOAP_GestureCode gestureCode_nu_u8;
    ///To enable the blind spot view activation from HMI/IC.
    AP_HMITOAP_BlindSpotView blindSpotViewType_nu;
    ///Enabling or disabling of overlay. Overlay supported according to ScreenTypes.
    boolean visibilityTags_nu[35];
    ///Identifies whether a gesture sequence is being performed.
    boolean isSequence_nu;
    ///User starts video recording.
    boolean startVideoRecorderReq_nu;
    ///User starts screen capture recording.
    boolean startScreenCaptureReq_nu;
    ///Wheel protection activation from HMI
    boolean rimProtectionStatus_nu;
    ///To enable the reverse assist activation from HMI.
    boolean reverseAssistStatus_nu;
    ///Parking Augmentation status
    AP_HMITOAP_ParkingAugmentationType parkingAugmentationType_nu;
} MF_HMIH_VisuHMIData;

inline MF_HMIH_VisuHMIData create_MF_HMIH_VisuHMIData(void)
{
  MF_HMIH_VisuHMIData m;
  (void) ECO_memset (&m, 0, sizeof(m));
  return m;
}

#endif // MF_HMIH_VISU_HMIDATA_C_H_
