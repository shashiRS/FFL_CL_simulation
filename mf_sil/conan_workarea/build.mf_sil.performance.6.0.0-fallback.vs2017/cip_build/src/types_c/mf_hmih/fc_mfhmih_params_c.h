//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef MF_HMIH_FC_MFHMIH_PARAMS_C_H_
#define MF_HMIH_FC_MFHMIH_PARAMS_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "Platform_Types.h"
#include "eco/memset_c.h"

/// HMIH parameters
typedef struct
{
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ECO_SignalHeader sSigHeader;
    ///Parallel parking: Minimum dist between two parking slots in order to visualize an obstacle in HMI.
    float32 AP_H_OBSTACLE_MIN_PAR_HMI_M;
    ///Parallel parking: Maximum dist between two parking slots in order to visualize one obstacle in HMI.
    float32 AP_H_OBSTACLE_MAX_PAR_HMI_M;
    ///Perpendicular parking: Minimum dist between two parking slots in order to visualize an obstacle in HMI.
    float32 AP_H_OBSTACLE_MIN_PERP_HMI_M;
    ///Perpendicular parking: Maximum dist between two parking slots in order to visualize one obstacle in HMI.
    float32 AP_H_OBSTACLE_MAX_PERP_HMI_M;
    ///Distance threshold between to parking slots. If the distance is smaller than the threshold the two slots
    ///are seen as the same in the HMI. This param is used to assign a perpendicular fwd and perpendicular bwd slot to the same position
    float32 AP_H_FWDBWD_SLOT_DIST_MAX_HMI_M;
    ///Offest added to the distance between the first parking slot showen in HMI to the ego vehicle position
    float32 AP_H_FIRST_SLOT_HMI_OFFSET_M;
    ///Distance threshold between to parking slots. If the distance is smaller than the threshold the two slots are seen as the same in the HMI.
    ///This param is used to assign a perpendicular and a parallel slot to the same position
    float32 AP_H_PERPAR_SLOT_DIST_MAX_HMI_M;
    ///Lateral offset from the ego vehicle to the initial slot proposed for user defined slot feature
    float32 AP_H_USER_DEF_INIT_LAT_OFFSET_M;
    ///Lateral / longitudinal offset applied at each step of sliding the user defined slot
    float32 AP_H_USER_DEF_SLIDE_OFFSET_M;
    ///Angle offset applied at each step of rotating the user defined slot
    float32 AP_H_USER_DEF_ANG_OFFSET_RAD;
    ///Angle threshold for user defined slot when selected type is parallel
    float32 AP_H_USER_DEF_MAX_ANG_PAR_RAD;
    ///Angle threshold for user defined slot when selected type is perpendicular
    float32 AP_H_USER_DEF_MAX_ANG_PERP_RAD;
    ///Indicates if the user defined feature is enabled.
    boolean AP_H_USER_DEF_ENABLED_NU;
    ///Indicates if the HMIH is configured for a customer demo.
    boolean AP_H_CUSTOMER_DEMO_NU;
    ///Indicates if the explicit scanning feature is enabled (only for Entry ART for now).
    boolean AP_H_EXPLICIT_SCAN_ENABLED_NU;
} MF_HMIH_FC_MFHMIH_Params;

inline MF_HMIH_FC_MFHMIH_Params create_MF_HMIH_FC_MFHMIH_Params(void)
{
  MF_HMIH_FC_MFHMIH_Params m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  return m;
}

#endif // MF_HMIH_FC_MFHMIH_PARAMS_C_H_
