//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef MF_MANAGER_TRAJ_REQUEST_PORT_C_H_
#define MF_MANAGER_TRAJ_REQUEST_PORT_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "mf_manager/mfmplanned_traj_c.h"
#include "mf_manager/mfmplanned_traj_type_c.h"
#include "Platform_Types.h"
#include "mf_manager/mfmdriving_resistance_c.h"
#include "eco/memset_c.h"

typedef struct
{
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ECO_SignalHeader sSigHeader;
    MF_MANAGER_MFMPlannedTraj plannedTraj[20];
    MF_MANAGER_MFMPlannedTrajType trajType_nu;
    uint8 numValidCtrlPoints_nu;
    boolean drivingForwardReq_nu;
    boolean trajValid_nu;
    boolean newSegmentStarted_nu;
    boolean isLastSegment_nu;
    uint8 stepInTrajAfterIdx_nu;
    MF_MANAGER_MFMDrivingResistance drivingResistance[4];
} MF_MANAGER_TrajRequestPort;

inline MF_MANAGER_TrajRequestPort create_MF_MANAGER_TrajRequestPort(void)
{
  MF_MANAGER_TrajRequestPort m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.plannedTraj) / sizeof(m.plannedTraj[0])); ++i)
    {
      m.plannedTraj[i] = create_MF_MANAGER_MFMPlannedTraj();
    }
  }
  m.trajType_nu = MF_MANAGER_MFMPLANNED_TRAJ_TYPE_MFM_REMOTE_MAN_TRAJ;
  m.stepInTrajAfterIdx_nu = 255U;
  {
    uint64 i = 0U;
    for(i = 0U; i < (sizeof(m.drivingResistance) / sizeof(m.drivingResistance[0])); ++i)
    {
      m.drivingResistance[i] = create_MF_MANAGER_MFMDrivingResistance();
    }
  }
  return m;
}

#endif // MF_MANAGER_TRAJ_REQUEST_PORT_C_H_
