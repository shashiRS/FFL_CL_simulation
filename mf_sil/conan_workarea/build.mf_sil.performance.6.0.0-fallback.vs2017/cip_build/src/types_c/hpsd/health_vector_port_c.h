//Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types_c\struct.h.template!

#ifdef ECO_CPP_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++14 types mixed
  #endif
#endif
#define ECO_C_TYPES_USED

#ifndef HPSD_HEALTH_VECTOR_PORT_C_H_
#define HPSD_HEALTH_VECTOR_PORT_C_H_

#include "eco/algo_interface_version_number_c.h"
#include "eco/signal_header_c.h"
#include "hpsd/health_vector_c.h"
#include "eco/memset_c.h"

/// A port structure containing the health vector.
typedef struct
{
    ///Version number of interface.
    ECO_AlgoInterfaceVersionNumber uiVersionNumber;
    ///Signal header with common signal information.
    ECO_SignalHeader sSigHeader;
    ///A list of booleans describing the consolidated health status of the system.
    HPSD_HealthVector healthVector;
} HPSD_HealthVectorPort;

inline HPSD_HealthVectorPort create_HPSD_HealthVectorPort(void)
{
  HPSD_HealthVectorPort m;
  (void) ECO_memset (&m, 0, sizeof(m));
  m.sSigHeader = create_ECO_SignalHeader();
  m.healthVector = create_HPSD_HealthVector();
  return m;
}

#endif // HPSD_HEALTH_VECTOR_PORT_C_H_
