// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef AP_TRJCTL_DRIVING_RESISTANCE_PORT_H_
#define AP_TRJCTL_DRIVING_RESISTANCE_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "ap_trjctl/drv_res.h"
#include "eco/memset.h"


namespace ap_trjctl
{

  /// Information about driving resistance (e.g. for driving resistance on planned trajectory)
  struct DrivingResistancePort
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ::eco::SignalHeader sSigHeader;
    ///@unit{nu}
    ///Wheel specific driving resistance to cover curbstone and wheel stopper scenarios
    DrvRes drivingResistance_FL;
    ///@unit{nu}
    ///Wheel specific driving resistance to cover curbstone and wheel stopper scenarios
    DrvRes drivingResistance_RL;
    ///@unit{nu}
    ///Wheel specific driving resistance to cover curbstone and wheel stopper scenarios
    DrvRes drivingResistance_RR;
    ///@unit{nu}
    ///Wheel specific driving resistance to cover curbstone and wheel stopper scenarios
    DrvRes drivingResistance_FR;
  };

  inline ::ap_trjctl::DrivingResistancePort createDrivingResistancePort()
  {
    DrivingResistancePort m;
    (void)::eco::memset(&m, 0U, sizeof(DrivingResistancePort));
    m.sSigHeader = ::eco::createSignalHeader();
    m.drivingResistance_FL = createDrvRes();
    m.drivingResistance_RL = createDrvRes();
    m.drivingResistance_RR = createDrvRes();
    m.drivingResistance_FR = createDrvRes();
    return m;
  }

} // namespace ap_trjctl

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::ap_trjctl::DrivingResistancePort create_default()
  {
      return ::ap_trjctl::createDrivingResistancePort();
  }
}


#endif // AP_TRJCTL_DRIVING_RESISTANCE_PORT_H_
