// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef AP_TRJCTL_MOCO_T_LONG_LIMS_H_
#define AP_TRJCTL_MOCO_T_LONG_LIMS_H_

#include "Platform_Types.h"
#include "eco/memset.h"


namespace ap_trjctl
{

  /// Longitudinal limitations of acceleration and jerk (MoCo variant only)
  struct MOCO_t_LongLims
  {
    ///Upper limit for longitudinal acceleration
    float32 longAccelMax;
    ///Lower limit for longitudinal acceleration
    float32 longAccelMin;
    ///Upper limit for longitudinal jerk
    float32 longJerkMax;
    ///Lower limit for longitudinal jerk
    float32 longJerkMin;
  };

  inline ::ap_trjctl::MOCO_t_LongLims createMOCO_t_LongLims()
  {
    MOCO_t_LongLims m;
    (void)::eco::memset(&m, 0U, sizeof(MOCO_t_LongLims));
    return m;
  }

} // namespace ap_trjctl

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::ap_trjctl::MOCO_t_LongLims create_default()
  {
      return ::ap_trjctl::createMOCO_t_LongLims();
  }
}


#endif // AP_TRJCTL_MOCO_T_LONG_LIMS_H_
