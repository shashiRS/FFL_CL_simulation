// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_HMIH_PARKING_SITUATION_H_
#define MF_HMIH_PARKING_SITUATION_H_

#include "mf_hmih/parking_situation_sides.h"
#include "mf_hmih/parking_situation_front_rear.h"
#include "eco/memset.h"


namespace mf_hmih
{

  /// Parking space situation around the vehicle
  struct ParkingSituation
  {
    ///@unit{0}
    ///Situation on left side of parking vehicle
    ParkingSituationSides left;
    ///@unit{0}
    ///Situation on right side of parking vehicle
    ParkingSituationSides right;
    ///@unit{0}
    ///Situation in front of parking vehicle
    ParkingSituationFrontRear front;
    ///@unit{0}
    ///Situation at back of parking vehicle
    ParkingSituationFrontRear rear;
  };

  inline ::mf_hmih::ParkingSituation createParkingSituation()
  {
    ParkingSituation m;
    (void)::eco::memset(&m, 0U, sizeof(ParkingSituation));
    m.left = createParkingSituationSides();
    m.right = createParkingSituationSides();
    m.front = createParkingSituationFrontRear();
    m.rear = createParkingSituationFrontRear();
    return m;
  }

} // namespace mf_hmih

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_hmih::ParkingSituation create_default()
  {
      return ::mf_hmih::createParkingSituation();
  }
}


#endif // MF_HMIH_PARKING_SITUATION_H_
