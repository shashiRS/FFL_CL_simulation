// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_HMIH_PARKING_SITUATION_FRONT_REAR_H_
#define MF_HMIH_PARKING_SITUATION_FRONT_REAR_H_

#include "Platform_Types.h"
#include "eco/memset.h"


namespace mf_hmih
{

  /// Situation in front of parking vehicle
  struct ParkingSituationFrontRear
  {
    ///Parking out "parking spaces" (target direction) in front of vehicle in a perpendicular parking situation.
    boolean perpendicularParkingOut_nu;
    ///Usually set for parking in
    boolean notAvailable_nu;
    ///Reserved for additional situations
    boolean placeholder_nu[9];
  };

  inline ::mf_hmih::ParkingSituationFrontRear createParkingSituationFrontRear()
  {
    ParkingSituationFrontRear m;
    (void)::eco::memset(&m, 0U, sizeof(ParkingSituationFrontRear));
    return m;
  }

} // namespace mf_hmih

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_hmih::ParkingSituationFrontRear create_default()
  {
      return ::mf_hmih::createParkingSituationFrontRear();
  }
}


#endif // MF_HMIH_PARKING_SITUATION_FRONT_REAR_H_
