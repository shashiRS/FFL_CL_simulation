// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef TCE_TCE_ESTIMATION_PORT_H_
#define TCE_TCE_ESTIMATION_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "eco/memset.h"


namespace tce
{

  /// Result of tce estimation.
  struct TceEstimationPort
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ///timestamp_us
    ::eco::SignalHeader sSigHeader;
    ///@unit{m}
    ///@range{1.5,3.0}
    float32 tireCircFL_m;
    ///@unit{m}
    ///@range{0.0,0.1}
    ///Standard deviation of estimated tyre circumference of front left wheel
    float32 tireCircStdvFL_m;
    ///@unit{m}
    ///@range{1.5,3.0}
    ///Estimated tyre circumference of front right wheel
    float32 tireCircFR_m;
    ///@unit{m}
    ///@range{0.0,0.1}
    ///Standard deviation of estimated tyre circumference of front right wheel
    float32 tireCircStdvFR_m;
    ///@unit{m}
    ///@range{1.5,3.0}
    ///Estimated tyre circumference of rear left wheel
    float32 tireCircRL_m;
    ///@unit{m}
    ///@range{0.0,0.1}
    ///Standard deviation of estimated tyre circumference of rear left wheel
    float32 tireCircStdvRL_m;
    ///@unit{m}
    ///@range{1.5,3.0}
    ///Estimated tyre circumference of rear right wheel
    float32 tireCircRR_m;
    ///@unit{m}
    ///@range{0.0,0.1}
    ///Standard deviation of estimated tyre circumference of rear right wheel
    float32 tireCircStdvRR_m;
    ///@unit{m}
    ///@range{na,na}
    ///Estimated rear axle trackwidth
    float32 rearTrackWidth_m;
    ///@unit{m}
    ///@range{na,na}
    ///Standard deviation of estimated rear axle track width
    float32 rearTrackWidthStdv_m;
    ///@unit{bool}
    ///Validity flag for the estimated tyre circumference of front left wheel
    boolean tireCircFLValid;
    ///@unit{bool}
    ///Validity flag for the estimated tyre circumference of front right wheel
    boolean tireCircFRValid;
    ///@unit{bool}
    ///Validity flag for the estimated tyre circumference of rear left wheel
    boolean tireCircRLValid;
    ///@unit{bool}
    ///Validity flag for the estimated tyre circumference of rear right wheel
    boolean tireCircRRValid;
    ///@unit{bool}
    ///Validity flag for the estimated rear axle track width
    boolean rearTrackWidthValid;
  };

  inline ::tce::TceEstimationPort createTceEstimationPort()
  {
    TceEstimationPort m;
    (void)::eco::memset(&m, 0U, sizeof(TceEstimationPort));
    m.sSigHeader = ::eco::createSignalHeader();
    return m;
  }

} // namespace tce

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::tce::TceEstimationPort create_default()
  {
      return ::tce::createTceEstimationPort();
  }
}


#endif // TCE_TCE_ESTIMATION_PORT_H_
