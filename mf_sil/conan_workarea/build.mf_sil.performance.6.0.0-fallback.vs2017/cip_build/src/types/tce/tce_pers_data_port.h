// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef TCE_TCE_PERS_DATA_PORT_H_
#define TCE_TCE_PERS_DATA_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "eco/memset.h"


namespace tce
{

  /// None
  struct TcePersDataPort
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ///timestamp_us
    ::eco::SignalHeader sSigHeader;
    ///@unit{mm / 10}
    ///Stored learned value of front left wheel tire circumference in 0.1 mm unit.
    uint16 tireCircFL_0p1mm;
    ///@unit{mm / 10}
    ///Stored learned value of front right wheel tire circumference in 0.1 mm unit.
    uint16 tireCircFR_0p1mm;
    ///@unit{mm / 10}
    ///Stored learned value of rear left wheel tire circumference in 0.1 mm unit.
    uint16 tireCircRL_0p1mm;
    ///@unit{mm / 10}
    ///Stored learned value of rear right wheel tire circumference in 0.1 mm unit.
    uint16 tireCircRR_0p1mm;
    ///@unit{mm / 10}
    ///Standard deviation of the last stored front left tire circumference in 0.1 mm unit.
    uint16 tireCircStdvFL_0p1mm;
    ///@unit{mm / 10}
    ///Standard deviation of the last stored front right tire circumference in 0.1 mm unit.
    uint16 tireCircStdvFR_0p1mm;
    ///@unit{mm / 10}
    ///Standard deviation of the last stored rear left tire circumference in 0.1 mm unit.
    uint16 tireCircStdvRL_0p1mm;
    ///@unit{mm / 10}
    ///Standard deviation of the last stored rear right tire circumference in 0.1 mm unit.
    uint16 tireCircStdvRR_0p1mm;
    ///@unit{mm / 10}
    ///Stored learned value of rear track width in 0.1 mm unit.
    uint16 rearTrackWidth_0p1mm;
    ///@unit{mm / 10}
    ///Standard deviation of the last stored rear trackwidth in 0.1 mm unit.
    uint16 rearTrackWidthStdv_0p1mm;
    ///@unit{nu}
    ///flag to indicate if persistent data is changed.
    boolean dataChanged;
  };

  inline ::tce::TcePersDataPort createTcePersDataPort()
  {
    TcePersDataPort m;
    (void)::eco::memset(&m, 0U, sizeof(TcePersDataPort));
    m.sSigHeader = ::eco::createSignalHeader();
    return m;
  }

} // namespace tce

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::tce::TcePersDataPort create_default()
  {
      return ::tce::createTcePersDataPort();
  }
}


#endif // TCE_TCE_PERS_DATA_PORT_H_
