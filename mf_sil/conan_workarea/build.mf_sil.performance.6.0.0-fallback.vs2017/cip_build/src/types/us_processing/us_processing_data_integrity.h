// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef US_PROCESSING_US_PROCESSING_DATA_INTEGRITY_H_
#define US_PROCESSING_US_PROCESSING_DATA_INTEGRITY_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "us_processing/us_processing_sensor_running_mode.h"
#include "Platform_Types.h"
#include "eco/memset.h"


namespace us_processing
{

  struct UsProcessingDataIntegrity
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ::eco::SignalHeader sSigHeader;
    ///@range{0,4}
    ///@unit{nu}
    ///Sensor running mode in current cycle
    UsProcessingSensorRunningMode sensorRunningMode[12];
    ///@range{0.0F,7.0F}
    ///@unit{m}
    ///Filtered sensor distance in current cycle
    float32 filtDist_m[12];
    ///@range{0,500}
    ///@unit{nu}
    ///Sensor raw echo count in current cycle
    uint16 rawEchoCount[12];
    ///@range{-100.0F,100.0F}
    ///@unit{mps}
    ///Input velocity to UDP in current cycle
    float32 inputVelocity;
    ///@range{-40.0F,95.0F}
    ///@unit{Â°C}
    ///Input temperature to UDP in current cycle
    float32 inputTemperature;
    ///@range{0,1}
    ///@unit{nu}
    ///Input data to UDP in SW Devkit is ok
    boolean isInputCommOk;
  };

  inline ::us_processing::UsProcessingDataIntegrity createUsProcessingDataIntegrity()
  {
    UsProcessingDataIntegrity m;
    (void)::eco::memset(&m, 0U, sizeof(UsProcessingDataIntegrity));
    m.sSigHeader = ::eco::createSignalHeader();
    return m;
  }

} // namespace us_processing

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::us_processing::UsProcessingDataIntegrity create_default()
  {
      return ::us_processing::createUsProcessingDataIntegrity();
  }
}


#endif // US_PROCESSING_US_PROCESSING_DATA_INTEGRITY_H_
