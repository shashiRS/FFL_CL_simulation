// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef US_PROCESSING_US_PROCESSING_REFLECTION_TRACKING_CFG_H_
#define US_PROCESSING_US_PROCESSING_REFLECTION_TRACKING_CFG_H_

#include "Platform_Types.h"
#include "eco/memset.h"


namespace us_processing
{

  struct UsProcessingReflectionTrackingCfg
  {
    float32 fovDeviation;
    float32 measurementDistanceUncertainty;
    uint64 halfLifeTime;
    float32 halfLifeTimeMultiplicator;
    float32 unbindTrackerDirSigmaIncrease;
    float32 singleTrackerRelaxDirSigma;
    float32 singleTrackerRelaxRange;
    float32 dualTrackerRelaxDirSigma;
    float32 tripleTrackerRelaxDirSigma;
    float32 convexSaturationMaximumIncrement;
    float32 convexSaturationIncrementLimit;
    float32 convexSaturationIncrementMultiplicator;
    float32 rftrOutputFilterRadiusAngleSigma;
    float32 rftrOutputFilterConvexSaturationLimit;
    float32 multiplicityFractionAcceptance;
    float32 multiplicityMaxRadius;
    float32 multiplicityMaxDistanceSinceLastUpdate;
    float32 measurementUncertaintyModifierMax;
    float32 measurementUncertaintyMultplier;
    uint8 stableTrackerMeasurementNumber;
  };

  inline ::us_processing::UsProcessingReflectionTrackingCfg createUsProcessingReflectionTrackingCfg()
  {
    UsProcessingReflectionTrackingCfg m;
    (void)::eco::memset(&m, 0U, sizeof(UsProcessingReflectionTrackingCfg));
    return m;
  }

} // namespace us_processing

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::us_processing::UsProcessingReflectionTrackingCfg create_default()
  {
      return ::us_processing::createUsProcessingReflectionTrackingCfg();
  }
}


#endif // US_PROCESSING_US_PROCESSING_REFLECTION_TRACKING_CFG_H_
