// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_LSCA_MF_LSCA_CONSTS_H_
#define MF_LSCA_MF_LSCA_CONSTS_H_

#include "Platform_Types.h"
#include "eco/memset.h"


namespace mf_lsca
{

  struct MF_LSCA_Consts
  {
    enum { MAX_BODY_SHAPE_SIZE = 16U};
    enum { MAX_BODY_INDICES_SIZE = 17U};
    enum { MAX_WHEEL_SHAPE_SIZE = 4U};
    enum { MAX_HITCH_SHAPE_SIZE = 4U};
    enum { MAX_MIRROR_SHAPE_SIZE = 4U};
    enum { MAX_SIMPLE_BODY_SHAPE_SIZE = 4U};
    enum { MAX_STATIC_OBJECT_SIZE_NU = 16U};
    enum { MAX_DYNAMIC_OBJECT_SIZE_NU = 4U};
    enum { MAX_DYNAMIC_OBJECT_PREDICTION_SIZE_NU = 6U};
    enum { MAX_STATIC_OBJECTS_BRAKE_NU = 32U};
    enum { MAX_DYNAMIC_OBJECTS_BRAKE_NU = 10U};
    enum { STATIC_BRAKE_ROI_SIZE = 4U};
    enum { DYNAMIC_BRAKE_ROI_SIZE = 4U};
  };

  inline ::mf_lsca::MF_LSCA_Consts createMF_LSCA_Consts()
  {
    MF_LSCA_Consts m;
    (void)::eco::memset(&m, 0U, sizeof(MF_LSCA_Consts));
    return m;
  }

} // namespace mf_lsca

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_lsca::MF_LSCA_Consts create_default()
  {
      return ::mf_lsca::createMF_LSCA_Consts();
  }
}


#endif // MF_LSCA_MF_LSCA_CONSTS_H_
