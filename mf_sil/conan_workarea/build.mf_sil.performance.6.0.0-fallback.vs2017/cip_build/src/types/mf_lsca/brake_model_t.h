// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_LSCA_BRAKE_MODEL_T_H_
#define MF_LSCA_BRAKE_MODEL_T_H_

#include "mf_lsca/brake_model_params_t.h"
#include "eco/memset.h"


namespace mf_lsca
{

  /// Struct that contains all relevant brake model parameter data for one braking category (e.g. emergency or comfort)
  struct brakeModel_t
  {
    ///Brake model for forward driving
    brakeModelParams_t forwards;
    ///Brake model for backward driving
    brakeModelParams_t backwards;
  };

  inline ::mf_lsca::brakeModel_t createbrakeModel_t()
  {
    brakeModel_t m;
    (void)::eco::memset(&m, 0U, sizeof(brakeModel_t));
    m.forwards = createbrakeModelParams_t();
    m.backwards = createbrakeModelParams_t();
    return m;
  }

} // namespace mf_lsca

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_lsca::brakeModel_t create_default()
  {
      return ::mf_lsca::createbrakeModel_t();
  }
}


#endif // MF_LSCA_BRAKE_MODEL_T_H_
