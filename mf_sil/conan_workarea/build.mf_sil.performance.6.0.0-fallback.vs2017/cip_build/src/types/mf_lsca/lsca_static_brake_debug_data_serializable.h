// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_LSCA_LSCA_STATIC_BRAKE_DEBUG_DATA_SERIALIZABLE_H_
#define MF_LSCA_LSCA_STATIC_BRAKE_DEBUG_DATA_SERIALIZABLE_H_

#include "mf_lsca/lsca_static_object_list_brake_serializable.h"
#include "mf_lsca/lsca_ego_body_shape_serializable.h"
#include "mf_lsca/lsca_ego_wheel_shape_serializable.h"
#include "mf_lsca/lsca_ego_hitch_shape_serializable.h"
#include "mf_lsca/lsca_ego_mirror_shape_serializable.h"
#include "Platform_Types.h"
#include "cml/vec2_df_pod.h"
#include "mf_lsca/lsca_ego_static_roi_shape_serializable.h"
#include "eco/memset.h"


namespace mf_lsca
{

  /// Debug data regarding static breaking
  struct LscaStaticBrakeDebugDataSerializable
  {
    ///The objects that LSCA detected inside its Region of Interest
    LscaStaticObjectListBrakeSerializable objectsInRoi;
    ///Polygon that contains all coordinates for the body shape description
    LscaEgoBodyShapeSerializable bodyShape;
    ///Polygon that contains all coordinates for the front left wheel shape description
    LscaEgoWheelShapeSerializable wheelFrontLeftShape;
    ///Polygon that contains all coordinates for the front right wheel shape description
    LscaEgoWheelShapeSerializable wheelFrontRightShape;
    ///Polygon that contains all coordinates for the rear left wheel shape description
    LscaEgoWheelShapeSerializable wheelRearLeftShape;
    ///Polygon that contains all coordinates for the rear right wheel shape description
    LscaEgoWheelShapeSerializable wheelRearRightShape;
    ///Polygon that contains all coordinates for the hitch shape description
    LscaEgoHitchShapeSerializable hitchShape;
    ///Polygon that contains all coordinates for the left mirror shape description
    LscaEgoMirrorShapeSerializable mirrorLeftShape;
    ///Polygon that contains all coordinates for the right mirror shape description
    LscaEgoMirrorShapeSerializable mirrorRightShape;
    ///Signed rotation until vehicle standstill
    float32 rotationAngleToBrake;
    ///Center or rotation for rotationAngleToBrake
    ::cml::Vec2Df_POD icr;
    ///Region of interest for static braking
    LscaEgoStaticRoiShapeSerializable roi;
  };

  inline ::mf_lsca::LscaStaticBrakeDebugDataSerializable createLscaStaticBrakeDebugDataSerializable()
  {
    LscaStaticBrakeDebugDataSerializable m;
    (void)::eco::memset(&m, 0U, sizeof(LscaStaticBrakeDebugDataSerializable));
    m.objectsInRoi = createLscaStaticObjectListBrakeSerializable();
    m.bodyShape = createLscaEgoBodyShapeSerializable();
    m.wheelFrontLeftShape = createLscaEgoWheelShapeSerializable();
    m.wheelFrontRightShape = createLscaEgoWheelShapeSerializable();
    m.wheelRearLeftShape = createLscaEgoWheelShapeSerializable();
    m.wheelRearRightShape = createLscaEgoWheelShapeSerializable();
    m.hitchShape = createLscaEgoHitchShapeSerializable();
    m.mirrorLeftShape = createLscaEgoMirrorShapeSerializable();
    m.mirrorRightShape = createLscaEgoMirrorShapeSerializable();
    m.icr = ::cml::createVec2Df_POD();
    m.roi = createLscaEgoStaticRoiShapeSerializable();
    return m;
  }

} // namespace mf_lsca

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_lsca::LscaStaticBrakeDebugDataSerializable create_default()
  {
      return ::mf_lsca::createLscaStaticBrakeDebugDataSerializable();
  }
}


#endif // MF_LSCA_LSCA_STATIC_BRAKE_DEBUG_DATA_SERIALIZABLE_H_
