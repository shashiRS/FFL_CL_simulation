// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef SI_DIAGNOSTIC_EVENT_H_
#define SI_DIAGNOSTIC_EVENT_H_

#include "Platform_Types.h"
#include "eco/diagnosis_event_status.h"
#include "eco/memset.h"


namespace si
{

  struct DiagnosticEvent
  {
    ///@unit{nu}
    ///@range{494,497}
    ///Diagnostic event ID
    uint32 diagnosisEventID;
    ///@unit{nu}
    ///@range{0,3}
    ///Type of parking scenario side associated with this parking box
    ::eco::DiagnosisEventStatus diagnosisEventStatus;
  };

  inline ::si::DiagnosticEvent createDiagnosticEvent()
  {
    DiagnosticEvent m;
    (void)::eco::memset(&m, 0U, sizeof(DiagnosticEvent));
    m.diagnosisEventID = 4294967295U;
    m.diagnosisEventStatus = ::eco::DiagnosisEventStatus::DIAGNOSIS_EVENT_STATUS_FAILED;
    return m;
  }

} // namespace si

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::si::DiagnosticEvent create_default()
  {
      return ::si::createDiagnosticEvent();
  }
}


#endif // SI_DIAGNOSTIC_EVENT_H_
