// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef LSM_VEDODO_LSM_VEDODO_CONSTANTS_H_
#define LSM_VEDODO_LSM_VEDODO_CONSTANTS_H_

#include "Platform_Types.h"
#include "eco/memset.h"


namespace lsm_vedodo
{

  /// 
  struct LSM_VEDODO_Constants
  {
    enum { ODO_BUFFER_SIZE = 15U};
    enum { ODO_PREDICTION_SIZE = 4U};
    enum { DBG_NUM_OF_WHEELS_NU = 4U};
    enum { NUM_MTS_DEBUG_FREESPACE_ODO = 10U};
    static const float32 COORDINATE_OVERFLOW_POSITION_M;
    static const float32 COORDINATE_OVERFLOW_YAW_ANGLE_RAD;
  };

  inline ::lsm_vedodo::LSM_VEDODO_Constants createLSM_VEDODO_Constants()
  {
    LSM_VEDODO_Constants m;
    (void)::eco::memset(&m, 0U, sizeof(LSM_VEDODO_Constants));
    return m;
  }

} // namespace lsm_vedodo

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::lsm_vedodo::LSM_VEDODO_Constants create_default()
  {
      return ::lsm_vedodo::createLSM_VEDODO_Constants();
  }
}


#endif // LSM_VEDODO_LSM_VEDODO_CONSTANTS_H_
