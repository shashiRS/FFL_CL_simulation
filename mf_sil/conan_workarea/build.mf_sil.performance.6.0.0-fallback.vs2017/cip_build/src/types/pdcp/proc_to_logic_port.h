// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef PDCP_PROC_TO_LOGIC_PORT_H_
#define PDCP_PROC_TO_LOGIC_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "eco/memset.h"


namespace pdcp
{

  /// Signals from PDC Processing to PDC Logic
  struct ProcToLogicPort
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ::eco::SignalHeader sSigHeader;
    ///@unit{m}
    ///distance to the closest object around the car
    float32 minimalDistance_m;
    ///PDCP error information
    boolean processingError_nu;
  };

  inline ::pdcp::ProcToLogicPort createProcToLogicPort()
  {
    ProcToLogicPort m;
    (void)::eco::memset(&m, 0U, sizeof(ProcToLogicPort));
    m.sSigHeader = ::eco::createSignalHeader();
    m.minimalDistance_m = 2.56F;
    return m;
  }

} // namespace pdcp

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::pdcp::ProcToLogicPort create_default()
  {
      return ::pdcp::createProcToLogicPort();
  }
}


#endif // PDCP_PROC_TO_LOGIC_PORT_H_
