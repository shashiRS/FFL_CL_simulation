// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef AP_PSM_APP_PSMDEBUG_PORT_H_
#define AP_PSM_APP_PSMDEBUG_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "ap_psm_app/ppcstate.h"
#include "ap_psm_app/esmstate.h"
#include "ap_psm_app/vsmstate.h"
#include "ap_psm_app/dmstate.h"
#include "ap_psm_app/rdmstate.h"
#include "eco/memset.h"


namespace ap_psm_app
{

  struct PSMDebugPort
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ::eco::SignalHeader sSigHeader;
    ///freespace for MTS debug values
    sint32 debugInt[10];
    ///freespace for MTS debug values
    float32 debugFloat[10];
    ///State of the parking procedure state machine
    PPCState stateVarPPC_nu;
    ///State of the error state monitoring state machine
    ESMState stateVarESM_nu;
    ///State of the vehicle state monitoring state machine
    VSMState stateVarVSM_nu;
    ///State of the driver monitoring state machine
    DMState stateVarDM_nu;
    ///State of the remote hmi communication state machine
    RDMState stateVarRDM_nu;
  };

  inline ::ap_psm_app::PSMDebugPort createPSMDebugPort()
  {
    PSMDebugPort m;
    (void)::eco::memset(&m, 0U, sizeof(PSMDebugPort));
    m.sSigHeader = ::eco::createSignalHeader();
    return m;
  }

} // namespace ap_psm_app

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::ap_psm_app::PSMDebugPort create_default()
  {
      return ::ap_psm_app::createPSMDebugPort();
  }
}


#endif // AP_PSM_APP_PSMDEBUG_PORT_H_
