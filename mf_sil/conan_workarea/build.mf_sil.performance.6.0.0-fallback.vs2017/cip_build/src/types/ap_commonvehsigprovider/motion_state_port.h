// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef AP_COMMONVEHSIGPROVIDER_MOTION_STATE_PORT_H_
#define AP_COMMONVEHSIGPROVIDER_MOTION_STATE_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "ap_commonvehsigprovider/vehicle_driving_direction.h"
#include "eco/memset.h"


namespace ap_commonvehsigprovider
{

  /// Measurements desribing the current motion state
  struct MotionStatePort
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ::eco::SignalHeader sSigHeader;
    ///@unit{m/s}
    ///@range{0,104.854}
    ///reference vehicle velocity ESC
    float32 vRefESC_mps;
    ///@range{-1,2}
    ///vehicle driving direction
    VehicleDrivingDirection vehicleDrivingDirection_nu;
    ///Qualifier-Bit vehicle direction
    boolean vRefESC_QF_nu;
    ///Vehicle standstill information
    boolean vehicleStandstill_nu;
  };

  inline ::ap_commonvehsigprovider::MotionStatePort createMotionStatePort()
  {
    MotionStatePort m;
    (void)::eco::memset(&m, 0U, sizeof(MotionStatePort));
    m.sSigHeader = ::eco::createSignalHeader();
    return m;
  }

} // namespace ap_commonvehsigprovider

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::ap_commonvehsigprovider::MotionStatePort create_default()
  {
      return ::ap_commonvehsigprovider::createMotionStatePort();
  }
}


#endif // AP_COMMONVEHSIGPROVIDER_MOTION_STATE_PORT_H_
