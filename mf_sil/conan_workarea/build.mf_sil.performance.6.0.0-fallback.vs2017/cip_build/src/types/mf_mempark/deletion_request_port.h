// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_MEMPARK_DELETION_REQUEST_PORT_H_
#define MF_MEMPARK_DELETION_REQUEST_PORT_H_

#include "eco/algo_interface_version_number.h"
#include "eco/signal_header.h"
#include "Platform_Types.h"
#include "eco/memset.h"


namespace mf_mempark
{

  /// Indicates the mapID and the deleteRequest
  struct DeletionRequestPort
  {
    ::eco::AlgoInterfaceVersionNumber uiVersionNumber;
    ::eco::SignalHeader sSigHeader;
    ///ID of map that will be deleted; if INVALID_MAP_ID, no processing takes place
    uint8 mapID;
  };

  inline ::mf_mempark::DeletionRequestPort createDeletionRequestPort()
  {
    DeletionRequestPort m;
    (void)::eco::memset(&m, 0U, sizeof(DeletionRequestPort));
    m.sSigHeader = ::eco::createSignalHeader();
    m.mapID = 255U;
    return m;
  }

} // namespace mf_mempark

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_mempark::DeletionRequestPort create_default()
  {
      return ::mf_mempark::createDeletionRequestPort();
  }
}


#endif // MF_MEMPARK_DELETION_REQUEST_PORT_H_
