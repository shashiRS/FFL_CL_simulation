// Attention, this file is generated by Cobolt from template: D:\.bbs_conan\c029a0\1\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef MF_MEMPARK_MEM_PARK_DATE_T_H_
#define MF_MEMPARK_MEM_PARK_DATE_T_H_

#include "Platform_Types.h"
#include "eco/memset.h"


namespace mf_mempark
{

  /// Date structure for memory parking.
  struct MemParkDate_t
  {
    uint16 year;
    uint8 month;
    uint8 day;
    uint8 hour;
    uint8 minute;
    uint8 second;
    sint16 timeZone;
  };

  inline ::mf_mempark::MemParkDate_t createMemParkDate_t()
  {
    MemParkDate_t m;
    (void)::eco::memset(&m, 0U, sizeof(MemParkDate_t));
    return m;
  }

} // namespace mf_mempark

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::mf_mempark::MemParkDate_t create_default()
  {
      return ::mf_mempark::createMemParkDate_t();
  }
}


#endif // MF_MEMPARK_MEM_PARK_DATE_T_H_
