# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ap_hmitoap/parking_augmentation_type.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ap_hmitoap/parking_augmentation_type.proto',
  package='pb.ap_hmitoap.parking_augmentation_type',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=b'\n*ap_hmitoap/parking_augmentation_type.proto\x12\'pb.ap_hmitoap.parking_augmentation_type*^\n\x17ParkingAugmentationType\x12\x1c\n\x18PARKING_AUGMENTATION_OFF\x10\x00\x12\x11\n\rPARKING_IN_ON\x10\x01\x12\x12\n\x0ePARKING_OUT_ON\x10\x02'
)

_PARKINGAUGMENTATIONTYPE = _descriptor.EnumDescriptor(
  name='ParkingAugmentationType',
  full_name='pb.ap_hmitoap.parking_augmentation_type.ParkingAugmentationType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PARKING_AUGMENTATION_OFF', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PARKING_IN_ON', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PARKING_OUT_ON', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=87,
  serialized_end=181,
)
_sym_db.RegisterEnumDescriptor(_PARKINGAUGMENTATIONTYPE)

ParkingAugmentationType = enum_type_wrapper.EnumTypeWrapper(_PARKINGAUGMENTATIONTYPE)
PARKING_AUGMENTATION_OFF = 0
PARKING_IN_ON = 1
PARKING_OUT_ON = 2


DESCRIPTOR.enum_types_by_name['ParkingAugmentationType'] = _PARKINGAUGMENTATIONTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


# @@protoc_insertion_point(module_scope)
