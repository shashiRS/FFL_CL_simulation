// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_processing/us_processing_filtered_echo.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto;
namespace pb {
namespace us_processing {
namespace us_processing_filtered_echo {
class UsProcessingFilteredEcho;
class UsProcessingFilteredEchoDefaultTypeInternal;
extern UsProcessingFilteredEchoDefaultTypeInternal _UsProcessingFilteredEcho_default_instance_;
class UsProcessingFilteredEcho_array_port;
class UsProcessingFilteredEcho_array_portDefaultTypeInternal;
extern UsProcessingFilteredEcho_array_portDefaultTypeInternal _UsProcessingFilteredEcho_array_port_default_instance_;
}  // namespace us_processing_filtered_echo
}  // namespace us_processing
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho* Arena::CreateMaybeMessage<::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho>(Arena*);
template<> ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho_array_port* Arena::CreateMaybeMessage<::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace us_processing {
namespace us_processing_filtered_echo {

// ===================================================================

class UsProcessingFilteredEcho :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho) */ {
 public:
  UsProcessingFilteredEcho();
  virtual ~UsProcessingFilteredEcho();

  UsProcessingFilteredEcho(const UsProcessingFilteredEcho& from);
  UsProcessingFilteredEcho(UsProcessingFilteredEcho&& from) noexcept
    : UsProcessingFilteredEcho() {
    *this = ::std::move(from);
  }

  inline UsProcessingFilteredEcho& operator=(const UsProcessingFilteredEcho& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsProcessingFilteredEcho& operator=(UsProcessingFilteredEcho&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsProcessingFilteredEcho& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsProcessingFilteredEcho* internal_default_instance() {
    return reinterpret_cast<const UsProcessingFilteredEcho*>(
               &_UsProcessingFilteredEcho_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UsProcessingFilteredEcho& a, UsProcessingFilteredEcho& b) {
    a.Swap(&b);
  }
  inline void Swap(UsProcessingFilteredEcho* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsProcessingFilteredEcho* New() const final {
    return CreateMaybeMessage<UsProcessingFilteredEcho>(nullptr);
  }

  UsProcessingFilteredEcho* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsProcessingFilteredEcho>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsProcessingFilteredEcho& from);
  void MergeFrom(const UsProcessingFilteredEcho& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsProcessingFilteredEcho* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto);
    return ::descriptor_table_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhaseDerivativeFieldNumber = 3592,
    kTimeConfidenceFieldNumber = 270,
    kTrackIdFieldNumber = 1297,
    kTofUsFieldNumber = 1359,
    kTxSensorIdFieldNumber = 1383,
    kRxSensorIdFieldNumber = 1752,
    kAmplitudeFieldNumber = 2603,
    kRelEcuTimestampUsFieldNumber = 2612,
    kCodingConfidenceFieldNumber = 2712,
  };
  // optional sint32 phaseDerivative = 3592;
  bool has_phasederivative() const;
  private:
  bool _internal_has_phasederivative() const;
  public:
  void clear_phasederivative();
  ::PROTOBUF_NAMESPACE_ID::int32 phasederivative() const;
  void set_phasederivative(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_phasederivative() const;
  void _internal_set_phasederivative(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 timeConfidence = 270;
  bool has_timeconfidence() const;
  private:
  bool _internal_has_timeconfidence() const;
  public:
  void clear_timeconfidence();
  ::PROTOBUF_NAMESPACE_ID::uint32 timeconfidence() const;
  void set_timeconfidence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_timeconfidence() const;
  void _internal_set_timeconfidence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 trackId = 1297;
  bool has_trackid() const;
  private:
  bool _internal_has_trackid() const;
  public:
  void clear_trackid();
  ::PROTOBUF_NAMESPACE_ID::uint32 trackid() const;
  void set_trackid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_trackid() const;
  void _internal_set_trackid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tof_us = 1359;
  bool has_tof_us() const;
  private:
  bool _internal_has_tof_us() const;
  public:
  void clear_tof_us();
  ::PROTOBUF_NAMESPACE_ID::uint32 tof_us() const;
  void set_tof_us(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tof_us() const;
  void _internal_set_tof_us(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 txSensorId = 1383;
  bool has_txsensorid() const;
  private:
  bool _internal_has_txsensorid() const;
  public:
  void clear_txsensorid();
  ::PROTOBUF_NAMESPACE_ID::uint32 txsensorid() const;
  void set_txsensorid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_txsensorid() const;
  void _internal_set_txsensorid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rxSensorId = 1752;
  bool has_rxsensorid() const;
  private:
  bool _internal_has_rxsensorid() const;
  public:
  void clear_rxsensorid();
  ::PROTOBUF_NAMESPACE_ID::uint32 rxsensorid() const;
  void set_rxsensorid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rxsensorid() const;
  void _internal_set_rxsensorid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 amplitude = 2603;
  bool has_amplitude() const;
  private:
  bool _internal_has_amplitude() const;
  public:
  void clear_amplitude();
  ::PROTOBUF_NAMESPACE_ID::uint32 amplitude() const;
  void set_amplitude(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_amplitude() const;
  void _internal_set_amplitude(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional sint32 relEcuTimestamp_us = 2612;
  bool has_relecutimestamp_us() const;
  private:
  bool _internal_has_relecutimestamp_us() const;
  public:
  void clear_relecutimestamp_us();
  ::PROTOBUF_NAMESPACE_ID::int32 relecutimestamp_us() const;
  void set_relecutimestamp_us(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_relecutimestamp_us() const;
  void _internal_set_relecutimestamp_us(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 codingConfidence = 2712;
  bool has_codingconfidence() const;
  private:
  bool _internal_has_codingconfidence() const;
  public:
  void clear_codingconfidence();
  ::PROTOBUF_NAMESPACE_ID::uint32 codingconfidence() const;
  void set_codingconfidence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_codingconfidence() const;
  void _internal_set_codingconfidence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 phasederivative_;
  ::PROTOBUF_NAMESPACE_ID::uint32 timeconfidence_;
  ::PROTOBUF_NAMESPACE_ID::uint32 trackid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tof_us_;
  ::PROTOBUF_NAMESPACE_ID::uint32 txsensorid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rxsensorid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 amplitude_;
  ::PROTOBUF_NAMESPACE_ID::int32 relecutimestamp_us_;
  ::PROTOBUF_NAMESPACE_ID::uint32 codingconfidence_;
  friend struct ::TableStruct_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto;
};
// -------------------------------------------------------------------

class UsProcessingFilteredEcho_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho_array_port) */ {
 public:
  UsProcessingFilteredEcho_array_port();
  virtual ~UsProcessingFilteredEcho_array_port();

  UsProcessingFilteredEcho_array_port(const UsProcessingFilteredEcho_array_port& from);
  UsProcessingFilteredEcho_array_port(UsProcessingFilteredEcho_array_port&& from) noexcept
    : UsProcessingFilteredEcho_array_port() {
    *this = ::std::move(from);
  }

  inline UsProcessingFilteredEcho_array_port& operator=(const UsProcessingFilteredEcho_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsProcessingFilteredEcho_array_port& operator=(UsProcessingFilteredEcho_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsProcessingFilteredEcho_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsProcessingFilteredEcho_array_port* internal_default_instance() {
    return reinterpret_cast<const UsProcessingFilteredEcho_array_port*>(
               &_UsProcessingFilteredEcho_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UsProcessingFilteredEcho_array_port& a, UsProcessingFilteredEcho_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(UsProcessingFilteredEcho_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsProcessingFilteredEcho_array_port* New() const final {
    return CreateMaybeMessage<UsProcessingFilteredEcho_array_port>(nullptr);
  }

  UsProcessingFilteredEcho_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsProcessingFilteredEcho_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsProcessingFilteredEcho_array_port& from);
  void MergeFrom(const UsProcessingFilteredEcho_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsProcessingFilteredEcho_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto);
    return ::descriptor_table_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1073,
  };
  // repeated .pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho data = 1073;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho >*
      mutable_data();
  private:
  const ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho& _internal_data(int index) const;
  ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho* _internal_add_data();
  public:
  const ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho& data(int index) const;
  ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho > data_;
  friend struct ::TableStruct_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UsProcessingFilteredEcho

// optional uint32 rxSensorId = 1752;
inline bool UsProcessingFilteredEcho::_internal_has_rxsensorid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool UsProcessingFilteredEcho::has_rxsensorid() const {
  return _internal_has_rxsensorid();
}
inline void UsProcessingFilteredEcho::clear_rxsensorid() {
  rxsensorid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::_internal_rxsensorid() const {
  return rxsensorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::rxsensorid() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.rxSensorId)
  return _internal_rxsensorid();
}
inline void UsProcessingFilteredEcho::_internal_set_rxsensorid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  rxsensorid_ = value;
}
inline void UsProcessingFilteredEcho::set_rxsensorid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rxsensorid(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.rxSensorId)
}

// optional uint32 txSensorId = 1383;
inline bool UsProcessingFilteredEcho::_internal_has_txsensorid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool UsProcessingFilteredEcho::has_txsensorid() const {
  return _internal_has_txsensorid();
}
inline void UsProcessingFilteredEcho::clear_txsensorid() {
  txsensorid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::_internal_txsensorid() const {
  return txsensorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::txsensorid() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.txSensorId)
  return _internal_txsensorid();
}
inline void UsProcessingFilteredEcho::_internal_set_txsensorid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  txsensorid_ = value;
}
inline void UsProcessingFilteredEcho::set_txsensorid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_txsensorid(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.txSensorId)
}

// optional uint32 trackId = 1297;
inline bool UsProcessingFilteredEcho::_internal_has_trackid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UsProcessingFilteredEcho::has_trackid() const {
  return _internal_has_trackid();
}
inline void UsProcessingFilteredEcho::clear_trackid() {
  trackid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::_internal_trackid() const {
  return trackid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::trackid() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.trackId)
  return _internal_trackid();
}
inline void UsProcessingFilteredEcho::_internal_set_trackid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  trackid_ = value;
}
inline void UsProcessingFilteredEcho::set_trackid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_trackid(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.trackId)
}

// optional sint32 relEcuTimestamp_us = 2612;
inline bool UsProcessingFilteredEcho::_internal_has_relecutimestamp_us() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool UsProcessingFilteredEcho::has_relecutimestamp_us() const {
  return _internal_has_relecutimestamp_us();
}
inline void UsProcessingFilteredEcho::clear_relecutimestamp_us() {
  relecutimestamp_us_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UsProcessingFilteredEcho::_internal_relecutimestamp_us() const {
  return relecutimestamp_us_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UsProcessingFilteredEcho::relecutimestamp_us() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.relEcuTimestamp_us)
  return _internal_relecutimestamp_us();
}
inline void UsProcessingFilteredEcho::_internal_set_relecutimestamp_us(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  relecutimestamp_us_ = value;
}
inline void UsProcessingFilteredEcho::set_relecutimestamp_us(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_relecutimestamp_us(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.relEcuTimestamp_us)
}

// optional uint32 tof_us = 1359;
inline bool UsProcessingFilteredEcho::_internal_has_tof_us() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool UsProcessingFilteredEcho::has_tof_us() const {
  return _internal_has_tof_us();
}
inline void UsProcessingFilteredEcho::clear_tof_us() {
  tof_us_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::_internal_tof_us() const {
  return tof_us_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::tof_us() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.tof_us)
  return _internal_tof_us();
}
inline void UsProcessingFilteredEcho::_internal_set_tof_us(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  tof_us_ = value;
}
inline void UsProcessingFilteredEcho::set_tof_us(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tof_us(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.tof_us)
}

// optional uint32 amplitude = 2603;
inline bool UsProcessingFilteredEcho::_internal_has_amplitude() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool UsProcessingFilteredEcho::has_amplitude() const {
  return _internal_has_amplitude();
}
inline void UsProcessingFilteredEcho::clear_amplitude() {
  amplitude_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::_internal_amplitude() const {
  return amplitude_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::amplitude() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.amplitude)
  return _internal_amplitude();
}
inline void UsProcessingFilteredEcho::_internal_set_amplitude(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  amplitude_ = value;
}
inline void UsProcessingFilteredEcho::set_amplitude(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_amplitude(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.amplitude)
}

// optional sint32 phaseDerivative = 3592;
inline bool UsProcessingFilteredEcho::_internal_has_phasederivative() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UsProcessingFilteredEcho::has_phasederivative() const {
  return _internal_has_phasederivative();
}
inline void UsProcessingFilteredEcho::clear_phasederivative() {
  phasederivative_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UsProcessingFilteredEcho::_internal_phasederivative() const {
  return phasederivative_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UsProcessingFilteredEcho::phasederivative() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.phaseDerivative)
  return _internal_phasederivative();
}
inline void UsProcessingFilteredEcho::_internal_set_phasederivative(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  phasederivative_ = value;
}
inline void UsProcessingFilteredEcho::set_phasederivative(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_phasederivative(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.phaseDerivative)
}

// optional uint32 codingConfidence = 2712;
inline bool UsProcessingFilteredEcho::_internal_has_codingconfidence() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool UsProcessingFilteredEcho::has_codingconfidence() const {
  return _internal_has_codingconfidence();
}
inline void UsProcessingFilteredEcho::clear_codingconfidence() {
  codingconfidence_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::_internal_codingconfidence() const {
  return codingconfidence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::codingconfidence() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.codingConfidence)
  return _internal_codingconfidence();
}
inline void UsProcessingFilteredEcho::_internal_set_codingconfidence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  codingconfidence_ = value;
}
inline void UsProcessingFilteredEcho::set_codingconfidence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_codingconfidence(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.codingConfidence)
}

// optional uint32 timeConfidence = 270;
inline bool UsProcessingFilteredEcho::_internal_has_timeconfidence() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UsProcessingFilteredEcho::has_timeconfidence() const {
  return _internal_has_timeconfidence();
}
inline void UsProcessingFilteredEcho::clear_timeconfidence() {
  timeconfidence_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::_internal_timeconfidence() const {
  return timeconfidence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsProcessingFilteredEcho::timeconfidence() const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.timeConfidence)
  return _internal_timeconfidence();
}
inline void UsProcessingFilteredEcho::_internal_set_timeconfidence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  timeconfidence_ = value;
}
inline void UsProcessingFilteredEcho::set_timeconfidence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_timeconfidence(value);
  // @@protoc_insertion_point(field_set:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho.timeConfidence)
}

// -------------------------------------------------------------------

// UsProcessingFilteredEcho_array_port

// repeated .pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho data = 1073;
inline int UsProcessingFilteredEcho_array_port::_internal_data_size() const {
  return data_.size();
}
inline int UsProcessingFilteredEcho_array_port::data_size() const {
  return _internal_data_size();
}
inline void UsProcessingFilteredEcho_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho* UsProcessingFilteredEcho_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho >*
UsProcessingFilteredEcho_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho_array_port.data)
  return &data_;
}
inline const ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho& UsProcessingFilteredEcho_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho& UsProcessingFilteredEcho_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho_array_port.data)
  return _internal_data(index);
}
inline ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho* UsProcessingFilteredEcho_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho* UsProcessingFilteredEcho_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_processing::us_processing_filtered_echo::UsProcessingFilteredEcho >&
UsProcessingFilteredEcho_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.us_processing.us_processing_filtered_echo.UsProcessingFilteredEcho_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace us_processing_filtered_echo
}  // namespace us_processing
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_us_5fprocessing_2fus_5fprocessing_5ffiltered_5fecho_2eproto
