// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_processing/us_processing_object.proto

#include "us_processing/us_processing_object.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsProcessingObject_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto;
namespace pb {
namespace us_processing {
namespace us_processing_object {
class UsProcessingObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsProcessingObject> _instance;
} _UsProcessingObject_default_instance_;
class UsProcessingObject_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsProcessingObject_array_port> _instance;
} _UsProcessingObject_array_port_default_instance_;
}  // namespace us_processing_object
}  // namespace us_processing
}  // namespace pb
static void InitDefaultsscc_info_UsProcessingObject_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_processing::us_processing_object::_UsProcessingObject_default_instance_;
    new (ptr) ::pb::us_processing::us_processing_object::UsProcessingObject();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_processing::us_processing_object::UsProcessingObject::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsProcessingObject_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UsProcessingObject_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto}, {}};

static void InitDefaultsscc_info_UsProcessingObject_array_port_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_processing::us_processing_object::_UsProcessingObject_array_port_default_instance_;
    new (ptr) ::pb::us_processing::us_processing_object::UsProcessingObject_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_processing::us_processing_object::UsProcessingObject_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsProcessingObject_array_port_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UsProcessingObject_array_port_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto}, {
      &scc_info_UsProcessingObject_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, timestamp_us_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, xrelativevelocity_mps_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, yrelativevelocity_mps_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, heightestimation_m_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, confidencelevel_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, objectid_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, vertexstartindex_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, numofvertices_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, measurementstatus_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, objecttype_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, heightclassificationlevel_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject, kinematicclassificationguess_),
  11,
  1,
  6,
  5,
  7,
  2,
  8,
  4,
  0,
  10,
  9,
  3,
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_object::UsProcessingObject_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, sizeof(::pb::us_processing::us_processing_object::UsProcessingObject)},
  { 29, 35, sizeof(::pb::us_processing::us_processing_object::UsProcessingObject_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_processing::us_processing_object::_UsProcessingObject_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_processing::us_processing_object::_UsProcessingObject_array_port_default_instance_),
};

const char descriptor_table_protodef_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n(us_processing/us_processing_object.pro"
  "to\022%pb.us_processing.us_processing_objec"
  "t\0324us_processing/us_processing_measureme"
  "nt_status.proto\032-us_processing/us_proces"
  "sing_object_type.proto\032/us_processing/us"
  "_processing_object_height.proto\0322us_proc"
  "essing/us_processing_object_kinematic.pr"
  "oto\"\220\005\n\022UsProcessingObject\022\025\n\014timestamp_"
  "us\030\230\036 \001(\004\022\036\n\025xRelativeVelocity_mps\030\255\004 \001("
  "\002\022\036\n\025yRelativeVelocity_mps\030\333\017 \001(\002\022\033\n\022hei"
  "ghtEstimation_m\030\345\r \001(\002\022\030\n\017confidenceLeve"
  "l\030\242\024 \001(\002\022\021\n\010objectId\030\322\004 \001(\r\022\031\n\020vertexSta"
  "rtIndex\030\260\024 \001(\r\022\026\n\rnumOfVertices\030\242\t \001(\r\022l"
  "\n\021measurementStatus\030\322\034 \001(\0162P.pb.us_proce"
  "ssing.us_processing_measurement_status.U"
  "sProcessingMeasurementStatus\022W\n\nobjectTy"
  "pe\030\277\032 \001(\0162B.pb.us_processing.us_processi"
  "ng_object_type.UsProcessingObjectType\022j\n"
  "\031heightClassificationLevel\030\333\027 \001(\0162F.pb.u"
  "s_processing.us_processing_object_height"
  ".UsProcessingObjectHeight\022s\n\034kinematicCl"
  "assificationGuess\030\236\006 \001(\0162L.pb.us_process"
  "ing.us_processing_object_kinematic.UsPro"
  "cessingObjectKinematic\"i\n\035UsProcessingOb"
  "ject_array_port\022H\n\004data\030\260\001 \003(\01329.pb.us_p"
  "rocessing.us_processing_object.UsProcess"
  "ingObject"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto_deps[4] = {
  &::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fmeasurement_5fstatus_2eproto,
  &::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_5fheight_2eproto,
  &::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_5fkinematic_2eproto,
  &::descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_5ftype_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto_sccs[2] = {
  &scc_info_UsProcessingObject_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto.base,
  &scc_info_UsProcessingObject_array_port_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto_once;
static bool descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto = {
  &descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto_initialized, descriptor_table_protodef_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto, "us_processing/us_processing_object.proto", 1049,
  &descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto_once, descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto_sccs, descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto_deps, 2, 4,
  schemas, file_default_instances, TableStruct_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto::offsets,
  file_level_metadata_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto, 2, file_level_enum_descriptors_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto, file_level_service_descriptors_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto), true);
namespace pb {
namespace us_processing {
namespace us_processing_object {

// ===================================================================

void UsProcessingObject::InitAsDefaultInstance() {
}
class UsProcessingObject::_Internal {
 public:
  using HasBits = decltype(std::declval<UsProcessingObject>()._has_bits_);
  static void set_has_timestamp_us(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_xrelativevelocity_mps(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_yrelativevelocity_mps(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_heightestimation_m(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_confidencelevel(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_objectid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_vertexstartindex(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_numofvertices(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_measurementstatus(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_objecttype(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_heightclassificationlevel(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_kinematicclassificationguess(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

UsProcessingObject::UsProcessingObject()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_processing.us_processing_object.UsProcessingObject)
}
UsProcessingObject::UsProcessingObject(const UsProcessingObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&measurementstatus_, &from.measurementstatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_us_) -
    reinterpret_cast<char*>(&measurementstatus_)) + sizeof(timestamp_us_));
  // @@protoc_insertion_point(copy_constructor:pb.us_processing.us_processing_object.UsProcessingObject)
}

void UsProcessingObject::SharedCtor() {
  ::memset(&measurementstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_us_) -
      reinterpret_cast<char*>(&measurementstatus_)) + sizeof(timestamp_us_));
}

UsProcessingObject::~UsProcessingObject() {
  // @@protoc_insertion_point(destructor:pb.us_processing.us_processing_object.UsProcessingObject)
  SharedDtor();
}

void UsProcessingObject::SharedDtor() {
}

void UsProcessingObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsProcessingObject& UsProcessingObject::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsProcessingObject_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto.base);
  return *internal_default_instance();
}


void UsProcessingObject::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_processing.us_processing_object.UsProcessingObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&measurementstatus_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidencelevel_) -
        reinterpret_cast<char*>(&measurementstatus_)) + sizeof(confidencelevel_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&vertexstartindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_us_) -
        reinterpret_cast<char*>(&vertexstartindex_)) + sizeof(timestamp_us_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsProcessingObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional float xRelativeVelocity_mps = 557;
      case 557:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          _Internal::set_has_xrelativevelocity_mps(&has_bits);
          xrelativevelocity_mps_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional uint32 objectId = 594;
      case 594:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_objectid(&has_bits);
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.us_processing.us_processing_object_kinematic.UsProcessingObjectKinematic kinematicClassificationGuess = 798;
      case 798:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::us_processing::us_processing_object_kinematic::UsProcessingObjectKinematic_IsValid(val))) {
            _internal_set_kinematicclassificationguess(static_cast<::pb::us_processing::us_processing_object_kinematic::UsProcessingObjectKinematic>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(798, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 numOfVertices = 1186;
      case 1186:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_numofvertices(&has_bits);
          numofvertices_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float heightEstimation_m = 1765;
      case 1765:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          _Internal::set_has_heightestimation_m(&has_bits);
          heightestimation_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float yRelativeVelocity_mps = 2011;
      case 2011:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 221)) {
          _Internal::set_has_yrelativevelocity_mps(&has_bits);
          yrelativevelocity_mps_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float confidenceLevel = 2594;
      case 2594:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_confidencelevel(&has_bits);
          confidencelevel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional uint32 vertexStartIndex = 2608;
      case 2608:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_vertexstartindex(&has_bits);
          vertexstartindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.us_processing.us_processing_object_height.UsProcessingObjectHeight heightClassificationLevel = 3035;
      case 3035:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::us_processing::us_processing_object_height::UsProcessingObjectHeight_IsValid(val))) {
            _internal_set_heightclassificationlevel(static_cast<::pb::us_processing::us_processing_object_height::UsProcessingObjectHeight>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3035, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.us_processing.us_processing_object_type.UsProcessingObjectType objectType = 3391;
      case 3391:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::us_processing::us_processing_object_type::UsProcessingObjectType_IsValid(val))) {
            _internal_set_objecttype(static_cast<::pb::us_processing::us_processing_object_type::UsProcessingObjectType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3391, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.us_processing.us_processing_measurement_status.UsProcessingMeasurementStatus measurementStatus = 3666;
      case 3666:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::us_processing::us_processing_measurement_status::UsProcessingMeasurementStatus_IsValid(val))) {
            _internal_set_measurementstatus(static_cast<::pb::us_processing::us_processing_measurement_status::UsProcessingMeasurementStatus>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3666, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint64 timestamp_us = 3864;
      case 3864:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_timestamp_us(&has_bits);
          timestamp_us_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsProcessingObject::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_processing.us_processing_object.UsProcessingObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float xRelativeVelocity_mps = 557;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(557, this->_internal_xrelativevelocity_mps(), target);
  }

  // optional uint32 objectId = 594;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(594, this->_internal_objectid(), target);
  }

  // optional .pb.us_processing.us_processing_object_kinematic.UsProcessingObjectKinematic kinematicClassificationGuess = 798;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      798, this->_internal_kinematicclassificationguess(), target);
  }

  // optional uint32 numOfVertices = 1186;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1186, this->_internal_numofvertices(), target);
  }

  // optional float heightEstimation_m = 1765;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1765, this->_internal_heightestimation_m(), target);
  }

  // optional float yRelativeVelocity_mps = 2011;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2011, this->_internal_yrelativevelocity_mps(), target);
  }

  // optional float confidenceLevel = 2594;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2594, this->_internal_confidencelevel(), target);
  }

  // optional uint32 vertexStartIndex = 2608;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2608, this->_internal_vertexstartindex(), target);
  }

  // optional .pb.us_processing.us_processing_object_height.UsProcessingObjectHeight heightClassificationLevel = 3035;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3035, this->_internal_heightclassificationlevel(), target);
  }

  // optional .pb.us_processing.us_processing_object_type.UsProcessingObjectType objectType = 3391;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3391, this->_internal_objecttype(), target);
  }

  // optional .pb.us_processing.us_processing_measurement_status.UsProcessingMeasurementStatus measurementStatus = 3666;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3666, this->_internal_measurementstatus(), target);
  }

  // optional uint64 timestamp_us = 3864;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3864, this->_internal_timestamp_us(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_processing.us_processing_object.UsProcessingObject)
  return target;
}

size_t UsProcessingObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_processing.us_processing_object.UsProcessingObject)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .pb.us_processing.us_processing_measurement_status.UsProcessingMeasurementStatus measurementStatus = 3666;
    if (cached_has_bits & 0x00000001u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_measurementstatus());
    }

    // optional float xRelativeVelocity_mps = 557;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 4;
    }

    // optional uint32 objectId = 594;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_objectid());
    }

    // optional .pb.us_processing.us_processing_object_kinematic.UsProcessingObjectKinematic kinematicClassificationGuess = 798;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_kinematicclassificationguess());
    }

    // optional uint32 numOfVertices = 1186;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_numofvertices());
    }

    // optional float heightEstimation_m = 1765;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 4;
    }

    // optional float yRelativeVelocity_mps = 2011;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 4;
    }

    // optional float confidenceLevel = 2594;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 + 4;
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional uint32 vertexStartIndex = 2608;
    if (cached_has_bits & 0x00000100u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_vertexstartindex());
    }

    // optional .pb.us_processing.us_processing_object_height.UsProcessingObjectHeight heightClassificationLevel = 3035;
    if (cached_has_bits & 0x00000200u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_heightclassificationlevel());
    }

    // optional .pb.us_processing.us_processing_object_type.UsProcessingObjectType objectType = 3391;
    if (cached_has_bits & 0x00000400u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_objecttype());
    }

    // optional uint64 timestamp_us = 3864;
    if (cached_has_bits & 0x00000800u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_timestamp_us());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsProcessingObject::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_processing.us_processing_object.UsProcessingObject)
  GOOGLE_DCHECK_NE(&from, this);
  const UsProcessingObject* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsProcessingObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_processing.us_processing_object.UsProcessingObject)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_processing.us_processing_object.UsProcessingObject)
    MergeFrom(*source);
  }
}

void UsProcessingObject::MergeFrom(const UsProcessingObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_processing.us_processing_object.UsProcessingObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      measurementstatus_ = from.measurementstatus_;
    }
    if (cached_has_bits & 0x00000002u) {
      xrelativevelocity_mps_ = from.xrelativevelocity_mps_;
    }
    if (cached_has_bits & 0x00000004u) {
      objectid_ = from.objectid_;
    }
    if (cached_has_bits & 0x00000008u) {
      kinematicclassificationguess_ = from.kinematicclassificationguess_;
    }
    if (cached_has_bits & 0x00000010u) {
      numofvertices_ = from.numofvertices_;
    }
    if (cached_has_bits & 0x00000020u) {
      heightestimation_m_ = from.heightestimation_m_;
    }
    if (cached_has_bits & 0x00000040u) {
      yrelativevelocity_mps_ = from.yrelativevelocity_mps_;
    }
    if (cached_has_bits & 0x00000080u) {
      confidencelevel_ = from.confidencelevel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      vertexstartindex_ = from.vertexstartindex_;
    }
    if (cached_has_bits & 0x00000200u) {
      heightclassificationlevel_ = from.heightclassificationlevel_;
    }
    if (cached_has_bits & 0x00000400u) {
      objecttype_ = from.objecttype_;
    }
    if (cached_has_bits & 0x00000800u) {
      timestamp_us_ = from.timestamp_us_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UsProcessingObject::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_processing.us_processing_object.UsProcessingObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsProcessingObject::CopyFrom(const UsProcessingObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_processing.us_processing_object.UsProcessingObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsProcessingObject::IsInitialized() const {
  return true;
}

void UsProcessingObject::InternalSwap(UsProcessingObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(measurementstatus_, other->measurementstatus_);
  swap(xrelativevelocity_mps_, other->xrelativevelocity_mps_);
  swap(objectid_, other->objectid_);
  swap(kinematicclassificationguess_, other->kinematicclassificationguess_);
  swap(numofvertices_, other->numofvertices_);
  swap(heightestimation_m_, other->heightestimation_m_);
  swap(yrelativevelocity_mps_, other->yrelativevelocity_mps_);
  swap(confidencelevel_, other->confidencelevel_);
  swap(vertexstartindex_, other->vertexstartindex_);
  swap(heightclassificationlevel_, other->heightclassificationlevel_);
  swap(objecttype_, other->objecttype_);
  swap(timestamp_us_, other->timestamp_us_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsProcessingObject::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UsProcessingObject_array_port::InitAsDefaultInstance() {
}
class UsProcessingObject_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<UsProcessingObject_array_port>()._has_bits_);
};

UsProcessingObject_array_port::UsProcessingObject_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
}
UsProcessingObject_array_port::UsProcessingObject_array_port(const UsProcessingObject_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
}

void UsProcessingObject_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UsProcessingObject_array_port_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto.base);
}

UsProcessingObject_array_port::~UsProcessingObject_array_port() {
  // @@protoc_insertion_point(destructor:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
  SharedDtor();
}

void UsProcessingObject_array_port::SharedDtor() {
}

void UsProcessingObject_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsProcessingObject_array_port& UsProcessingObject_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsProcessingObject_array_port_us_5fprocessing_2fus_5fprocessing_5fobject_2eproto.base);
  return *internal_default_instance();
}


void UsProcessingObject_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsProcessingObject_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.us_processing.us_processing_object.UsProcessingObject data = 176;
      case 176:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<1410>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsProcessingObject_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.us_processing.us_processing_object.UsProcessingObject data = 176;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(176, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
  return target;
}

size_t UsProcessingObject_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.us_processing.us_processing_object.UsProcessingObject data = 176;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsProcessingObject_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const UsProcessingObject_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsProcessingObject_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
    MergeFrom(*source);
  }
}

void UsProcessingObject_array_port::MergeFrom(const UsProcessingObject_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void UsProcessingObject_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsProcessingObject_array_port::CopyFrom(const UsProcessingObject_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_processing.us_processing_object.UsProcessingObject_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsProcessingObject_array_port::IsInitialized() const {
  return true;
}

void UsProcessingObject_array_port::InternalSwap(UsProcessingObject_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsProcessingObject_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace us_processing_object
}  // namespace us_processing
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::us_processing::us_processing_object::UsProcessingObject* Arena::CreateMaybeMessage< ::pb::us_processing::us_processing_object::UsProcessingObject >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_processing::us_processing_object::UsProcessingObject >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::us_processing::us_processing_object::UsProcessingObject_array_port* Arena::CreateMaybeMessage< ::pb::us_processing::us_processing_object::UsProcessingObject_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_processing::us_processing_object::UsProcessingObject_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
