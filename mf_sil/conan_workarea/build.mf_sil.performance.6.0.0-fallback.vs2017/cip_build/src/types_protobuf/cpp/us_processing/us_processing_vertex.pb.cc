// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_processing/us_processing_vertex.proto

#include "us_processing/us_processing_vertex.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsProcessingVertex_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto;
namespace pb {
namespace us_processing {
namespace us_processing_vertex {
class UsProcessingVertexDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsProcessingVertex> _instance;
} _UsProcessingVertex_default_instance_;
class UsProcessingVertex_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsProcessingVertex_array_port> _instance;
} _UsProcessingVertex_array_port_default_instance_;
}  // namespace us_processing_vertex
}  // namespace us_processing
}  // namespace pb
static void InitDefaultsscc_info_UsProcessingVertex_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_processing::us_processing_vertex::_UsProcessingVertex_default_instance_;
    new (ptr) ::pb::us_processing::us_processing_vertex::UsProcessingVertex();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_processing::us_processing_vertex::UsProcessingVertex::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsProcessingVertex_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UsProcessingVertex_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto}, {}};

static void InitDefaultsscc_info_UsProcessingVertex_array_port_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_processing::us_processing_vertex::_UsProcessingVertex_array_port_default_instance_;
    new (ptr) ::pb::us_processing::us_processing_vertex::UsProcessingVertex_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_processing::us_processing_vertex::UsProcessingVertex_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsProcessingVertex_array_port_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UsProcessingVertex_array_port_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto}, {
      &scc_info_UsProcessingVertex_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_vertex::UsProcessingVertex, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_vertex::UsProcessingVertex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_vertex::UsProcessingVertex, posx_m_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_vertex::UsProcessingVertex, posy_m_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_vertex::UsProcessingVertex, posxvar_m_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_vertex::UsProcessingVertex, posyvar_m_),
  1,
  3,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_vertex::UsProcessingVertex_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_vertex::UsProcessingVertex_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_processing::us_processing_vertex::UsProcessingVertex_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::pb::us_processing::us_processing_vertex::UsProcessingVertex)},
  { 13, 19, sizeof(::pb::us_processing::us_processing_vertex::UsProcessingVertex_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_processing::us_processing_vertex::_UsProcessingVertex_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_processing::us_processing_vertex::_UsProcessingVertex_array_port_default_instance_),
};

const char descriptor_table_protodef_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n(us_processing/us_processing_vertex.pro"
  "to\022%pb.us_processing.us_processing_verte"
  "x\"]\n\022UsProcessingVertex\022\017\n\006posX_m\030\237\002 \001(\002"
  "\022\017\n\006posY_m\030\257\014 \001(\002\022\021\n\tposXVar_m\030& \001(\002\022\022\n\t"
  "posYVar_m\030\206\013 \001(\002\"i\n\035UsProcessingVertex_a"
  "rray_port\022H\n\004data\030\345\016 \003(\01329.pb.us_process"
  "ing.us_processing_vertex.UsProcessingVer"
  "tex"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto_sccs[2] = {
  &scc_info_UsProcessingVertex_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto.base,
  &scc_info_UsProcessingVertex_array_port_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto_once;
static bool descriptor_table_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto = {
  &descriptor_table_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto_initialized, descriptor_table_protodef_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto, "us_processing/us_processing_vertex.proto", 283,
  &descriptor_table_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto_once, descriptor_table_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto_sccs, descriptor_table_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto::offsets,
  file_level_metadata_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto, 2, file_level_enum_descriptors_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto, file_level_service_descriptors_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto), true);
namespace pb {
namespace us_processing {
namespace us_processing_vertex {

// ===================================================================

void UsProcessingVertex::InitAsDefaultInstance() {
}
class UsProcessingVertex::_Internal {
 public:
  using HasBits = decltype(std::declval<UsProcessingVertex>()._has_bits_);
  static void set_has_posx_m(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_posy_m(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_posxvar_m(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_posyvar_m(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

UsProcessingVertex::UsProcessingVertex()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_processing.us_processing_vertex.UsProcessingVertex)
}
UsProcessingVertex::UsProcessingVertex(const UsProcessingVertex& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&posxvar_m_, &from.posxvar_m_,
    static_cast<size_t>(reinterpret_cast<char*>(&posy_m_) -
    reinterpret_cast<char*>(&posxvar_m_)) + sizeof(posy_m_));
  // @@protoc_insertion_point(copy_constructor:pb.us_processing.us_processing_vertex.UsProcessingVertex)
}

void UsProcessingVertex::SharedCtor() {
  ::memset(&posxvar_m_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&posy_m_) -
      reinterpret_cast<char*>(&posxvar_m_)) + sizeof(posy_m_));
}

UsProcessingVertex::~UsProcessingVertex() {
  // @@protoc_insertion_point(destructor:pb.us_processing.us_processing_vertex.UsProcessingVertex)
  SharedDtor();
}

void UsProcessingVertex::SharedDtor() {
}

void UsProcessingVertex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsProcessingVertex& UsProcessingVertex::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsProcessingVertex_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto.base);
  return *internal_default_instance();
}


void UsProcessingVertex::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_processing.us_processing_vertex.UsProcessingVertex)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&posxvar_m_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&posy_m_) -
        reinterpret_cast<char*>(&posxvar_m_)) + sizeof(posy_m_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsProcessingVertex::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional float posXVar_m = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          _Internal::set_has_posxvar_m(&has_bits);
          posxvar_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float posX_m = 287;
      case 287:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 253)) {
          _Internal::set_has_posx_m(&has_bits);
          posx_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float posYVar_m = 1414;
      case 1414:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          _Internal::set_has_posyvar_m(&has_bits);
          posyvar_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float posY_m = 1583;
      case 1583:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 125)) {
          _Internal::set_has_posy_m(&has_bits);
          posy_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsProcessingVertex::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_processing.us_processing_vertex.UsProcessingVertex)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float posXVar_m = 38;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(38, this->_internal_posxvar_m(), target);
  }

  // optional float posX_m = 287;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(287, this->_internal_posx_m(), target);
  }

  // optional float posYVar_m = 1414;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1414, this->_internal_posyvar_m(), target);
  }

  // optional float posY_m = 1583;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1583, this->_internal_posy_m(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_processing.us_processing_vertex.UsProcessingVertex)
  return target;
}

size_t UsProcessingVertex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_processing.us_processing_vertex.UsProcessingVertex)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional float posXVar_m = 38;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 4;
    }

    // optional float posX_m = 287;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 4;
    }

    // optional float posYVar_m = 1414;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 4;
    }

    // optional float posY_m = 1583;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsProcessingVertex::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_processing.us_processing_vertex.UsProcessingVertex)
  GOOGLE_DCHECK_NE(&from, this);
  const UsProcessingVertex* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsProcessingVertex>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_processing.us_processing_vertex.UsProcessingVertex)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_processing.us_processing_vertex.UsProcessingVertex)
    MergeFrom(*source);
  }
}

void UsProcessingVertex::MergeFrom(const UsProcessingVertex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_processing.us_processing_vertex.UsProcessingVertex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      posxvar_m_ = from.posxvar_m_;
    }
    if (cached_has_bits & 0x00000002u) {
      posx_m_ = from.posx_m_;
    }
    if (cached_has_bits & 0x00000004u) {
      posyvar_m_ = from.posyvar_m_;
    }
    if (cached_has_bits & 0x00000008u) {
      posy_m_ = from.posy_m_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UsProcessingVertex::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_processing.us_processing_vertex.UsProcessingVertex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsProcessingVertex::CopyFrom(const UsProcessingVertex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_processing.us_processing_vertex.UsProcessingVertex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsProcessingVertex::IsInitialized() const {
  return true;
}

void UsProcessingVertex::InternalSwap(UsProcessingVertex* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(posxvar_m_, other->posxvar_m_);
  swap(posx_m_, other->posx_m_);
  swap(posyvar_m_, other->posyvar_m_);
  swap(posy_m_, other->posy_m_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsProcessingVertex::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UsProcessingVertex_array_port::InitAsDefaultInstance() {
}
class UsProcessingVertex_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<UsProcessingVertex_array_port>()._has_bits_);
};

UsProcessingVertex_array_port::UsProcessingVertex_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
}
UsProcessingVertex_array_port::UsProcessingVertex_array_port(const UsProcessingVertex_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
}

void UsProcessingVertex_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UsProcessingVertex_array_port_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto.base);
}

UsProcessingVertex_array_port::~UsProcessingVertex_array_port() {
  // @@protoc_insertion_point(destructor:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
  SharedDtor();
}

void UsProcessingVertex_array_port::SharedDtor() {
}

void UsProcessingVertex_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsProcessingVertex_array_port& UsProcessingVertex_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsProcessingVertex_array_port_us_5fprocessing_2fus_5fprocessing_5fvertex_2eproto.base);
  return *internal_default_instance();
}


void UsProcessingVertex_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsProcessingVertex_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.us_processing.us_processing_vertex.UsProcessingVertex data = 1893;
      case 1893:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<15146>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsProcessingVertex_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.us_processing.us_processing_vertex.UsProcessingVertex data = 1893;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1893, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
  return target;
}

size_t UsProcessingVertex_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.us_processing.us_processing_vertex.UsProcessingVertex data = 1893;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsProcessingVertex_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const UsProcessingVertex_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsProcessingVertex_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
    MergeFrom(*source);
  }
}

void UsProcessingVertex_array_port::MergeFrom(const UsProcessingVertex_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void UsProcessingVertex_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsProcessingVertex_array_port::CopyFrom(const UsProcessingVertex_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_processing.us_processing_vertex.UsProcessingVertex_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsProcessingVertex_array_port::IsInitialized() const {
  return true;
}

void UsProcessingVertex_array_port::InternalSwap(UsProcessingVertex_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsProcessingVertex_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace us_processing_vertex
}  // namespace us_processing
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::us_processing::us_processing_vertex::UsProcessingVertex* Arena::CreateMaybeMessage< ::pb::us_processing::us_processing_vertex::UsProcessingVertex >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_processing::us_processing_vertex::UsProcessingVertex >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::us_processing::us_processing_vertex::UsProcessingVertex_array_port* Arena::CreateMaybeMessage< ::pb::us_processing::us_processing_vertex::UsProcessingVertex_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_processing::us_processing_vertex::UsProcessingVertex_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
