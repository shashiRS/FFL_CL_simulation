// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_psm_app/ctrl_command_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "ap_psm_app/std_request.pb.h"
#include "ap_psm_app/ppcparking_mode.pb.h"
#include "ap_psm_app/degrade_type.pb.h"
#include "ap_psm_app/motion_control_request_type.pb.h"
#include "ap_psm_app/driver_in_out_request_type.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto;
namespace pb {
namespace ap_psm_app {
namespace ctrl_command_port {
class CtrlCommandPort;
class CtrlCommandPortDefaultTypeInternal;
extern CtrlCommandPortDefaultTypeInternal _CtrlCommandPort_default_instance_;
class CtrlCommandPort_array_port;
class CtrlCommandPort_array_portDefaultTypeInternal;
extern CtrlCommandPort_array_portDefaultTypeInternal _CtrlCommandPort_array_port_default_instance_;
}  // namespace ctrl_command_port
}  // namespace ap_psm_app
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort* Arena::CreateMaybeMessage<::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort>(Arena*);
template<> ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort_array_port* Arena::CreateMaybeMessage<::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_psm_app {
namespace ctrl_command_port {

// ===================================================================

class CtrlCommandPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort) */ {
 public:
  CtrlCommandPort();
  virtual ~CtrlCommandPort();

  CtrlCommandPort(const CtrlCommandPort& from);
  CtrlCommandPort(CtrlCommandPort&& from) noexcept
    : CtrlCommandPort() {
    *this = ::std::move(from);
  }

  inline CtrlCommandPort& operator=(const CtrlCommandPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline CtrlCommandPort& operator=(CtrlCommandPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CtrlCommandPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtrlCommandPort* internal_default_instance() {
    return reinterpret_cast<const CtrlCommandPort*>(
               &_CtrlCommandPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CtrlCommandPort& a, CtrlCommandPort& b) {
    a.Swap(&b);
  }
  inline void Swap(CtrlCommandPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CtrlCommandPort* New() const final {
    return CreateMaybeMessage<CtrlCommandPort>(nullptr);
  }

  CtrlCommandPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CtrlCommandPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CtrlCommandPort& from);
  void MergeFrom(const CtrlCommandPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtrlCommandPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_psm_app.ctrl_command_port.CtrlCommandPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto);
    return ::descriptor_table_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSSigHeaderFieldNumber = 1033,
    kStdRequestNuFieldNumber = 3751,
    kEmergencyBrakeNuFieldNumber = 673,
    kDeleteMemorizedParkingDataFieldNumber = 1243,
    kStoreMemorizedParkingDataFieldNumber = 54,
    kSelectedTargetPoseIdNuFieldNumber = 1006,
    kDriverInOutRequestTypeNuFieldNumber = 1292,
    kPpcParkingModeNuFieldNumber = 1343,
    kDegradeTypeNuFieldNumber = 1693,
    kMotionControlRequestTypeNuFieldNumber = 1708,
    kUiVersionNumberFieldNumber = 2124,
    kCurrentSelectedMpSlotIdFieldNumber = 2956,
  };
  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional .pb.ap_psm_app.std_request.StdRequest stdRequest_nu = 3751;
  bool has_stdrequest_nu() const;
  private:
  bool _internal_has_stdrequest_nu() const;
  public:
  void clear_stdrequest_nu();
  ::pb::ap_psm_app::std_request::StdRequest stdrequest_nu() const;
  void set_stdrequest_nu(::pb::ap_psm_app::std_request::StdRequest value);
  private:
  ::pb::ap_psm_app::std_request::StdRequest _internal_stdrequest_nu() const;
  void _internal_set_stdrequest_nu(::pb::ap_psm_app::std_request::StdRequest value);
  public:

  // optional bool emergencyBrake_nu = 673;
  bool has_emergencybrake_nu() const;
  private:
  bool _internal_has_emergencybrake_nu() const;
  public:
  void clear_emergencybrake_nu();
  bool emergencybrake_nu() const;
  void set_emergencybrake_nu(bool value);
  private:
  bool _internal_emergencybrake_nu() const;
  void _internal_set_emergencybrake_nu(bool value);
  public:

  // optional bool deleteMemorizedParkingData = 1243;
  bool has_deletememorizedparkingdata() const;
  private:
  bool _internal_has_deletememorizedparkingdata() const;
  public:
  void clear_deletememorizedparkingdata();
  bool deletememorizedparkingdata() const;
  void set_deletememorizedparkingdata(bool value);
  private:
  bool _internal_deletememorizedparkingdata() const;
  void _internal_set_deletememorizedparkingdata(bool value);
  public:

  // optional bool storeMemorizedParkingData = 54;
  bool has_storememorizedparkingdata() const;
  private:
  bool _internal_has_storememorizedparkingdata() const;
  public:
  void clear_storememorizedparkingdata();
  bool storememorizedparkingdata() const;
  void set_storememorizedparkingdata(bool value);
  private:
  bool _internal_storememorizedparkingdata() const;
  void _internal_set_storememorizedparkingdata(bool value);
  public:

  // optional uint32 selectedTargetPoseId_nu = 1006;
  bool has_selectedtargetposeid_nu() const;
  private:
  bool _internal_has_selectedtargetposeid_nu() const;
  public:
  void clear_selectedtargetposeid_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 selectedtargetposeid_nu() const;
  void set_selectedtargetposeid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_selectedtargetposeid_nu() const;
  void _internal_set_selectedtargetposeid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.ap_psm_app.driver_in_out_request_type.DriverInOutRequestType driverInOutRequestType_nu = 1292;
  bool has_driverinoutrequesttype_nu() const;
  private:
  bool _internal_has_driverinoutrequesttype_nu() const;
  public:
  void clear_driverinoutrequesttype_nu();
  ::pb::ap_psm_app::driver_in_out_request_type::DriverInOutRequestType driverinoutrequesttype_nu() const;
  void set_driverinoutrequesttype_nu(::pb::ap_psm_app::driver_in_out_request_type::DriverInOutRequestType value);
  private:
  ::pb::ap_psm_app::driver_in_out_request_type::DriverInOutRequestType _internal_driverinoutrequesttype_nu() const;
  void _internal_set_driverinoutrequesttype_nu(::pb::ap_psm_app::driver_in_out_request_type::DriverInOutRequestType value);
  public:

  // optional .pb.ap_psm_app.ppcparking_mode.PPCParkingMode ppcParkingMode_nu = 1343;
  bool has_ppcparkingmode_nu() const;
  private:
  bool _internal_has_ppcparkingmode_nu() const;
  public:
  void clear_ppcparkingmode_nu();
  ::pb::ap_psm_app::ppcparking_mode::PPCParkingMode ppcparkingmode_nu() const;
  void set_ppcparkingmode_nu(::pb::ap_psm_app::ppcparking_mode::PPCParkingMode value);
  private:
  ::pb::ap_psm_app::ppcparking_mode::PPCParkingMode _internal_ppcparkingmode_nu() const;
  void _internal_set_ppcparkingmode_nu(::pb::ap_psm_app::ppcparking_mode::PPCParkingMode value);
  public:

  // optional .pb.ap_psm_app.degrade_type.DegradeType degradeType_nu = 1693;
  bool has_degradetype_nu() const;
  private:
  bool _internal_has_degradetype_nu() const;
  public:
  void clear_degradetype_nu();
  ::pb::ap_psm_app::degrade_type::DegradeType degradetype_nu() const;
  void set_degradetype_nu(::pb::ap_psm_app::degrade_type::DegradeType value);
  private:
  ::pb::ap_psm_app::degrade_type::DegradeType _internal_degradetype_nu() const;
  void _internal_set_degradetype_nu(::pb::ap_psm_app::degrade_type::DegradeType value);
  public:

  // optional .pb.ap_psm_app.motion_control_request_type.MotionControlRequestType motionControlRequestType_nu = 1708;
  bool has_motioncontrolrequesttype_nu() const;
  private:
  bool _internal_has_motioncontrolrequesttype_nu() const;
  public:
  void clear_motioncontrolrequesttype_nu();
  ::pb::ap_psm_app::motion_control_request_type::MotionControlRequestType motioncontrolrequesttype_nu() const;
  void set_motioncontrolrequesttype_nu(::pb::ap_psm_app::motion_control_request_type::MotionControlRequestType value);
  private:
  ::pb::ap_psm_app::motion_control_request_type::MotionControlRequestType _internal_motioncontrolrequesttype_nu() const;
  void _internal_set_motioncontrolrequesttype_nu(::pb::ap_psm_app::motion_control_request_type::MotionControlRequestType value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 currentSelectedMpSlotId = 2956;
  bool has_currentselectedmpslotid() const;
  private:
  bool _internal_has_currentselectedmpslotid() const;
  public:
  void clear_currentselectedmpslotid();
  ::PROTOBUF_NAMESPACE_ID::uint32 currentselectedmpslotid() const;
  void set_currentselectedmpslotid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_currentselectedmpslotid() const;
  void _internal_set_currentselectedmpslotid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  int stdrequest_nu_;
  bool emergencybrake_nu_;
  bool deletememorizedparkingdata_;
  bool storememorizedparkingdata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 selectedtargetposeid_nu_;
  int driverinoutrequesttype_nu_;
  int ppcparkingmode_nu_;
  int degradetype_nu_;
  int motioncontrolrequesttype_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  ::PROTOBUF_NAMESPACE_ID::uint32 currentselectedmpslotid_;
  friend struct ::TableStruct_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto;
};
// -------------------------------------------------------------------

class CtrlCommandPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort_array_port) */ {
 public:
  CtrlCommandPort_array_port();
  virtual ~CtrlCommandPort_array_port();

  CtrlCommandPort_array_port(const CtrlCommandPort_array_port& from);
  CtrlCommandPort_array_port(CtrlCommandPort_array_port&& from) noexcept
    : CtrlCommandPort_array_port() {
    *this = ::std::move(from);
  }

  inline CtrlCommandPort_array_port& operator=(const CtrlCommandPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline CtrlCommandPort_array_port& operator=(CtrlCommandPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CtrlCommandPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtrlCommandPort_array_port* internal_default_instance() {
    return reinterpret_cast<const CtrlCommandPort_array_port*>(
               &_CtrlCommandPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CtrlCommandPort_array_port& a, CtrlCommandPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(CtrlCommandPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CtrlCommandPort_array_port* New() const final {
    return CreateMaybeMessage<CtrlCommandPort_array_port>(nullptr);
  }

  CtrlCommandPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CtrlCommandPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CtrlCommandPort_array_port& from);
  void MergeFrom(const CtrlCommandPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtrlCommandPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_psm_app.ctrl_command_port.CtrlCommandPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto);
    return ::descriptor_table_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2238,
  };
  // repeated .pb.ap_psm_app.ctrl_command_port.CtrlCommandPort data = 2238;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort >*
      mutable_data();
  private:
  const ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort& _internal_data(int index) const;
  ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort* _internal_add_data();
  public:
  const ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort& data(int index) const;
  ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort > data_;
  friend struct ::TableStruct_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CtrlCommandPort

// optional uint32 uiVersionNumber = 2124;
inline bool CtrlCommandPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void CtrlCommandPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CtrlCommandPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CtrlCommandPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void CtrlCommandPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  uiversionnumber_ = value;
}
inline void CtrlCommandPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool CtrlCommandPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool CtrlCommandPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& CtrlCommandPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& CtrlCommandPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* CtrlCommandPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* CtrlCommandPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* CtrlCommandPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void CtrlCommandPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.sSigHeader)
}

// optional .pb.ap_psm_app.std_request.StdRequest stdRequest_nu = 3751;
inline bool CtrlCommandPort::_internal_has_stdrequest_nu() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_stdrequest_nu() const {
  return _internal_has_stdrequest_nu();
}
inline void CtrlCommandPort::clear_stdrequest_nu() {
  stdrequest_nu_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::pb::ap_psm_app::std_request::StdRequest CtrlCommandPort::_internal_stdrequest_nu() const {
  return static_cast< ::pb::ap_psm_app::std_request::StdRequest >(stdrequest_nu_);
}
inline ::pb::ap_psm_app::std_request::StdRequest CtrlCommandPort::stdrequest_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.stdRequest_nu)
  return _internal_stdrequest_nu();
}
inline void CtrlCommandPort::_internal_set_stdrequest_nu(::pb::ap_psm_app::std_request::StdRequest value) {
  assert(::pb::ap_psm_app::std_request::StdRequest_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  stdrequest_nu_ = value;
}
inline void CtrlCommandPort::set_stdrequest_nu(::pb::ap_psm_app::std_request::StdRequest value) {
  _internal_set_stdrequest_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.stdRequest_nu)
}

// optional .pb.ap_psm_app.ppcparking_mode.PPCParkingMode ppcParkingMode_nu = 1343;
inline bool CtrlCommandPort::_internal_has_ppcparkingmode_nu() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_ppcparkingmode_nu() const {
  return _internal_has_ppcparkingmode_nu();
}
inline void CtrlCommandPort::clear_ppcparkingmode_nu() {
  ppcparkingmode_nu_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::pb::ap_psm_app::ppcparking_mode::PPCParkingMode CtrlCommandPort::_internal_ppcparkingmode_nu() const {
  return static_cast< ::pb::ap_psm_app::ppcparking_mode::PPCParkingMode >(ppcparkingmode_nu_);
}
inline ::pb::ap_psm_app::ppcparking_mode::PPCParkingMode CtrlCommandPort::ppcparkingmode_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.ppcParkingMode_nu)
  return _internal_ppcparkingmode_nu();
}
inline void CtrlCommandPort::_internal_set_ppcparkingmode_nu(::pb::ap_psm_app::ppcparking_mode::PPCParkingMode value) {
  assert(::pb::ap_psm_app::ppcparking_mode::PPCParkingMode_IsValid(value));
  _has_bits_[0] |= 0x00000080u;
  ppcparkingmode_nu_ = value;
}
inline void CtrlCommandPort::set_ppcparkingmode_nu(::pb::ap_psm_app::ppcparking_mode::PPCParkingMode value) {
  _internal_set_ppcparkingmode_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.ppcParkingMode_nu)
}

// optional .pb.ap_psm_app.degrade_type.DegradeType degradeType_nu = 1693;
inline bool CtrlCommandPort::_internal_has_degradetype_nu() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_degradetype_nu() const {
  return _internal_has_degradetype_nu();
}
inline void CtrlCommandPort::clear_degradetype_nu() {
  degradetype_nu_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::pb::ap_psm_app::degrade_type::DegradeType CtrlCommandPort::_internal_degradetype_nu() const {
  return static_cast< ::pb::ap_psm_app::degrade_type::DegradeType >(degradetype_nu_);
}
inline ::pb::ap_psm_app::degrade_type::DegradeType CtrlCommandPort::degradetype_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.degradeType_nu)
  return _internal_degradetype_nu();
}
inline void CtrlCommandPort::_internal_set_degradetype_nu(::pb::ap_psm_app::degrade_type::DegradeType value) {
  assert(::pb::ap_psm_app::degrade_type::DegradeType_IsValid(value));
  _has_bits_[0] |= 0x00000100u;
  degradetype_nu_ = value;
}
inline void CtrlCommandPort::set_degradetype_nu(::pb::ap_psm_app::degrade_type::DegradeType value) {
  _internal_set_degradetype_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.degradeType_nu)
}

// optional uint32 selectedTargetPoseId_nu = 1006;
inline bool CtrlCommandPort::_internal_has_selectedtargetposeid_nu() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_selectedtargetposeid_nu() const {
  return _internal_has_selectedtargetposeid_nu();
}
inline void CtrlCommandPort::clear_selectedtargetposeid_nu() {
  selectedtargetposeid_nu_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CtrlCommandPort::_internal_selectedtargetposeid_nu() const {
  return selectedtargetposeid_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CtrlCommandPort::selectedtargetposeid_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.selectedTargetPoseId_nu)
  return _internal_selectedtargetposeid_nu();
}
inline void CtrlCommandPort::_internal_set_selectedtargetposeid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  selectedtargetposeid_nu_ = value;
}
inline void CtrlCommandPort::set_selectedtargetposeid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_selectedtargetposeid_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.selectedTargetPoseId_nu)
}

// optional bool emergencyBrake_nu = 673;
inline bool CtrlCommandPort::_internal_has_emergencybrake_nu() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_emergencybrake_nu() const {
  return _internal_has_emergencybrake_nu();
}
inline void CtrlCommandPort::clear_emergencybrake_nu() {
  emergencybrake_nu_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CtrlCommandPort::_internal_emergencybrake_nu() const {
  return emergencybrake_nu_;
}
inline bool CtrlCommandPort::emergencybrake_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.emergencyBrake_nu)
  return _internal_emergencybrake_nu();
}
inline void CtrlCommandPort::_internal_set_emergencybrake_nu(bool value) {
  _has_bits_[0] |= 0x00000004u;
  emergencybrake_nu_ = value;
}
inline void CtrlCommandPort::set_emergencybrake_nu(bool value) {
  _internal_set_emergencybrake_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.emergencyBrake_nu)
}

// optional uint32 currentSelectedMpSlotId = 2956;
inline bool CtrlCommandPort::_internal_has_currentselectedmpslotid() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_currentselectedmpslotid() const {
  return _internal_has_currentselectedmpslotid();
}
inline void CtrlCommandPort::clear_currentselectedmpslotid() {
  currentselectedmpslotid_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CtrlCommandPort::_internal_currentselectedmpslotid() const {
  return currentselectedmpslotid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CtrlCommandPort::currentselectedmpslotid() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.currentSelectedMpSlotId)
  return _internal_currentselectedmpslotid();
}
inline void CtrlCommandPort::_internal_set_currentselectedmpslotid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  currentselectedmpslotid_ = value;
}
inline void CtrlCommandPort::set_currentselectedmpslotid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_currentselectedmpslotid(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.currentSelectedMpSlotId)
}

// optional bool deleteMemorizedParkingData = 1243;
inline bool CtrlCommandPort::_internal_has_deletememorizedparkingdata() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_deletememorizedparkingdata() const {
  return _internal_has_deletememorizedparkingdata();
}
inline void CtrlCommandPort::clear_deletememorizedparkingdata() {
  deletememorizedparkingdata_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CtrlCommandPort::_internal_deletememorizedparkingdata() const {
  return deletememorizedparkingdata_;
}
inline bool CtrlCommandPort::deletememorizedparkingdata() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.deleteMemorizedParkingData)
  return _internal_deletememorizedparkingdata();
}
inline void CtrlCommandPort::_internal_set_deletememorizedparkingdata(bool value) {
  _has_bits_[0] |= 0x00000008u;
  deletememorizedparkingdata_ = value;
}
inline void CtrlCommandPort::set_deletememorizedparkingdata(bool value) {
  _internal_set_deletememorizedparkingdata(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.deleteMemorizedParkingData)
}

// optional bool storeMemorizedParkingData = 54;
inline bool CtrlCommandPort::_internal_has_storememorizedparkingdata() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_storememorizedparkingdata() const {
  return _internal_has_storememorizedparkingdata();
}
inline void CtrlCommandPort::clear_storememorizedparkingdata() {
  storememorizedparkingdata_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CtrlCommandPort::_internal_storememorizedparkingdata() const {
  return storememorizedparkingdata_;
}
inline bool CtrlCommandPort::storememorizedparkingdata() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.storeMemorizedParkingData)
  return _internal_storememorizedparkingdata();
}
inline void CtrlCommandPort::_internal_set_storememorizedparkingdata(bool value) {
  _has_bits_[0] |= 0x00000010u;
  storememorizedparkingdata_ = value;
}
inline void CtrlCommandPort::set_storememorizedparkingdata(bool value) {
  _internal_set_storememorizedparkingdata(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.storeMemorizedParkingData)
}

// optional .pb.ap_psm_app.motion_control_request_type.MotionControlRequestType motionControlRequestType_nu = 1708;
inline bool CtrlCommandPort::_internal_has_motioncontrolrequesttype_nu() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_motioncontrolrequesttype_nu() const {
  return _internal_has_motioncontrolrequesttype_nu();
}
inline void CtrlCommandPort::clear_motioncontrolrequesttype_nu() {
  motioncontrolrequesttype_nu_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::pb::ap_psm_app::motion_control_request_type::MotionControlRequestType CtrlCommandPort::_internal_motioncontrolrequesttype_nu() const {
  return static_cast< ::pb::ap_psm_app::motion_control_request_type::MotionControlRequestType >(motioncontrolrequesttype_nu_);
}
inline ::pb::ap_psm_app::motion_control_request_type::MotionControlRequestType CtrlCommandPort::motioncontrolrequesttype_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.motionControlRequestType_nu)
  return _internal_motioncontrolrequesttype_nu();
}
inline void CtrlCommandPort::_internal_set_motioncontrolrequesttype_nu(::pb::ap_psm_app::motion_control_request_type::MotionControlRequestType value) {
  assert(::pb::ap_psm_app::motion_control_request_type::MotionControlRequestType_IsValid(value));
  _has_bits_[0] |= 0x00000200u;
  motioncontrolrequesttype_nu_ = value;
}
inline void CtrlCommandPort::set_motioncontrolrequesttype_nu(::pb::ap_psm_app::motion_control_request_type::MotionControlRequestType value) {
  _internal_set_motioncontrolrequesttype_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.motionControlRequestType_nu)
}

// optional .pb.ap_psm_app.driver_in_out_request_type.DriverInOutRequestType driverInOutRequestType_nu = 1292;
inline bool CtrlCommandPort::_internal_has_driverinoutrequesttype_nu() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CtrlCommandPort::has_driverinoutrequesttype_nu() const {
  return _internal_has_driverinoutrequesttype_nu();
}
inline void CtrlCommandPort::clear_driverinoutrequesttype_nu() {
  driverinoutrequesttype_nu_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::pb::ap_psm_app::driver_in_out_request_type::DriverInOutRequestType CtrlCommandPort::_internal_driverinoutrequesttype_nu() const {
  return static_cast< ::pb::ap_psm_app::driver_in_out_request_type::DriverInOutRequestType >(driverinoutrequesttype_nu_);
}
inline ::pb::ap_psm_app::driver_in_out_request_type::DriverInOutRequestType CtrlCommandPort::driverinoutrequesttype_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.driverInOutRequestType_nu)
  return _internal_driverinoutrequesttype_nu();
}
inline void CtrlCommandPort::_internal_set_driverinoutrequesttype_nu(::pb::ap_psm_app::driver_in_out_request_type::DriverInOutRequestType value) {
  assert(::pb::ap_psm_app::driver_in_out_request_type::DriverInOutRequestType_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  driverinoutrequesttype_nu_ = value;
}
inline void CtrlCommandPort::set_driverinoutrequesttype_nu(::pb::ap_psm_app::driver_in_out_request_type::DriverInOutRequestType value) {
  _internal_set_driverinoutrequesttype_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort.driverInOutRequestType_nu)
}

// -------------------------------------------------------------------

// CtrlCommandPort_array_port

// repeated .pb.ap_psm_app.ctrl_command_port.CtrlCommandPort data = 2238;
inline int CtrlCommandPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int CtrlCommandPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void CtrlCommandPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort* CtrlCommandPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort >*
CtrlCommandPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort_array_port.data)
  return &data_;
}
inline const ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort& CtrlCommandPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort& CtrlCommandPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort* CtrlCommandPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort* CtrlCommandPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm_app::ctrl_command_port::CtrlCommandPort >&
CtrlCommandPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_psm_app.ctrl_command_port.CtrlCommandPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ctrl_command_port
}  // namespace ap_psm_app
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5fpsm_5fapp_2fctrl_5fcommand_5fport_2eproto
