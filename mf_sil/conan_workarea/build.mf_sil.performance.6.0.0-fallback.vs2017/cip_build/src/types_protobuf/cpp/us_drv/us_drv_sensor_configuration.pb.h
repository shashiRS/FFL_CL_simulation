// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_drv/us_drv_sensor_configuration.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "us_drv/us_drv_runtime_sensor_configuration.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto;
namespace pb {
namespace us_drv {
namespace us_drv_sensor_configuration {
class UsDrvSensorConfiguration;
class UsDrvSensorConfigurationDefaultTypeInternal;
extern UsDrvSensorConfigurationDefaultTypeInternal _UsDrvSensorConfiguration_default_instance_;
class UsDrvSensorConfiguration_array_port;
class UsDrvSensorConfiguration_array_portDefaultTypeInternal;
extern UsDrvSensorConfiguration_array_portDefaultTypeInternal _UsDrvSensorConfiguration_array_port_default_instance_;
}  // namespace us_drv_sensor_configuration
}  // namespace us_drv
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration* Arena::CreateMaybeMessage<::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration>(Arena*);
template<> ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration_array_port* Arena::CreateMaybeMessage<::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace us_drv {
namespace us_drv_sensor_configuration {

// ===================================================================

class UsDrvSensorConfiguration :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration) */ {
 public:
  UsDrvSensorConfiguration();
  virtual ~UsDrvSensorConfiguration();

  UsDrvSensorConfiguration(const UsDrvSensorConfiguration& from);
  UsDrvSensorConfiguration(UsDrvSensorConfiguration&& from) noexcept
    : UsDrvSensorConfiguration() {
    *this = ::std::move(from);
  }

  inline UsDrvSensorConfiguration& operator=(const UsDrvSensorConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsDrvSensorConfiguration& operator=(UsDrvSensorConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsDrvSensorConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsDrvSensorConfiguration* internal_default_instance() {
    return reinterpret_cast<const UsDrvSensorConfiguration*>(
               &_UsDrvSensorConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UsDrvSensorConfiguration& a, UsDrvSensorConfiguration& b) {
    a.Swap(&b);
  }
  inline void Swap(UsDrvSensorConfiguration* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsDrvSensorConfiguration* New() const final {
    return CreateMaybeMessage<UsDrvSensorConfiguration>(nullptr);
  }

  UsDrvSensorConfiguration* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsDrvSensorConfiguration>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsDrvSensorConfiguration& from);
  void MergeFrom(const UsDrvSensorConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsDrvSensorConfiguration* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto);
    return ::descriptor_table_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInitialConfigurationFieldNumber = 2363,
    kPhysicalAddressFieldNumber = 1617,
    kBusFieldNumber = 3767,
  };
  // optional .pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration initialConfiguration = 2363;
  bool has_initialconfiguration() const;
  private:
  bool _internal_has_initialconfiguration() const;
  public:
  void clear_initialconfiguration();
  const ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration& initialconfiguration() const;
  ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* release_initialconfiguration();
  ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* mutable_initialconfiguration();
  void set_allocated_initialconfiguration(::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* initialconfiguration);
  private:
  const ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration& _internal_initialconfiguration() const;
  ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* _internal_mutable_initialconfiguration();
  public:

  // optional uint32 physicalAddress = 1617;
  bool has_physicaladdress() const;
  private:
  bool _internal_has_physicaladdress() const;
  public:
  void clear_physicaladdress();
  ::PROTOBUF_NAMESPACE_ID::uint32 physicaladdress() const;
  void set_physicaladdress(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_physicaladdress() const;
  void _internal_set_physicaladdress(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bus = 3767;
  bool has_bus() const;
  private:
  bool _internal_has_bus() const;
  public:
  void clear_bus();
  ::PROTOBUF_NAMESPACE_ID::uint32 bus() const;
  void set_bus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bus() const;
  void _internal_set_bus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* initialconfiguration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 physicaladdress_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bus_;
  friend struct ::TableStruct_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto;
};
// -------------------------------------------------------------------

class UsDrvSensorConfiguration_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration_array_port) */ {
 public:
  UsDrvSensorConfiguration_array_port();
  virtual ~UsDrvSensorConfiguration_array_port();

  UsDrvSensorConfiguration_array_port(const UsDrvSensorConfiguration_array_port& from);
  UsDrvSensorConfiguration_array_port(UsDrvSensorConfiguration_array_port&& from) noexcept
    : UsDrvSensorConfiguration_array_port() {
    *this = ::std::move(from);
  }

  inline UsDrvSensorConfiguration_array_port& operator=(const UsDrvSensorConfiguration_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsDrvSensorConfiguration_array_port& operator=(UsDrvSensorConfiguration_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsDrvSensorConfiguration_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsDrvSensorConfiguration_array_port* internal_default_instance() {
    return reinterpret_cast<const UsDrvSensorConfiguration_array_port*>(
               &_UsDrvSensorConfiguration_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UsDrvSensorConfiguration_array_port& a, UsDrvSensorConfiguration_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(UsDrvSensorConfiguration_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsDrvSensorConfiguration_array_port* New() const final {
    return CreateMaybeMessage<UsDrvSensorConfiguration_array_port>(nullptr);
  }

  UsDrvSensorConfiguration_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsDrvSensorConfiguration_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsDrvSensorConfiguration_array_port& from);
  void MergeFrom(const UsDrvSensorConfiguration_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsDrvSensorConfiguration_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto);
    return ::descriptor_table_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2916,
  };
  // repeated .pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration data = 2916;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration >*
      mutable_data();
  private:
  const ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration& _internal_data(int index) const;
  ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration* _internal_add_data();
  public:
  const ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration& data(int index) const;
  ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration > data_;
  friend struct ::TableStruct_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UsDrvSensorConfiguration

// optional uint32 bus = 3767;
inline bool UsDrvSensorConfiguration::_internal_has_bus() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UsDrvSensorConfiguration::has_bus() const {
  return _internal_has_bus();
}
inline void UsDrvSensorConfiguration::clear_bus() {
  bus_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvSensorConfiguration::_internal_bus() const {
  return bus_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvSensorConfiguration::bus() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration.bus)
  return _internal_bus();
}
inline void UsDrvSensorConfiguration::_internal_set_bus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  bus_ = value;
}
inline void UsDrvSensorConfiguration::set_bus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bus(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration.bus)
}

// optional uint32 physicalAddress = 1617;
inline bool UsDrvSensorConfiguration::_internal_has_physicaladdress() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UsDrvSensorConfiguration::has_physicaladdress() const {
  return _internal_has_physicaladdress();
}
inline void UsDrvSensorConfiguration::clear_physicaladdress() {
  physicaladdress_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvSensorConfiguration::_internal_physicaladdress() const {
  return physicaladdress_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvSensorConfiguration::physicaladdress() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration.physicalAddress)
  return _internal_physicaladdress();
}
inline void UsDrvSensorConfiguration::_internal_set_physicaladdress(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  physicaladdress_ = value;
}
inline void UsDrvSensorConfiguration::set_physicaladdress(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_physicaladdress(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration.physicalAddress)
}

// optional .pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration initialConfiguration = 2363;
inline bool UsDrvSensorConfiguration::_internal_has_initialconfiguration() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || initialconfiguration_ != nullptr);
  return value;
}
inline bool UsDrvSensorConfiguration::has_initialconfiguration() const {
  return _internal_has_initialconfiguration();
}
inline const ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration& UsDrvSensorConfiguration::_internal_initialconfiguration() const {
  const ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* p = initialconfiguration_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration*>(
      &::pb::us_drv::us_drv_runtime_sensor_configuration::_UsDrvRuntimeSensorConfiguration_default_instance_);
}
inline const ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration& UsDrvSensorConfiguration::initialconfiguration() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration.initialConfiguration)
  return _internal_initialconfiguration();
}
inline ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* UsDrvSensorConfiguration::release_initialconfiguration() {
  // @@protoc_insertion_point(field_release:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration.initialConfiguration)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* temp = initialconfiguration_;
  initialconfiguration_ = nullptr;
  return temp;
}
inline ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* UsDrvSensorConfiguration::_internal_mutable_initialconfiguration() {
  _has_bits_[0] |= 0x00000001u;
  if (initialconfiguration_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration>(GetArenaNoVirtual());
    initialconfiguration_ = p;
  }
  return initialconfiguration_;
}
inline ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* UsDrvSensorConfiguration::mutable_initialconfiguration() {
  // @@protoc_insertion_point(field_mutable:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration.initialConfiguration)
  return _internal_mutable_initialconfiguration();
}
inline void UsDrvSensorConfiguration::set_allocated_initialconfiguration(::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* initialconfiguration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(initialconfiguration_);
  }
  if (initialconfiguration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      initialconfiguration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, initialconfiguration, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  initialconfiguration_ = initialconfiguration;
  // @@protoc_insertion_point(field_set_allocated:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration.initialConfiguration)
}

// -------------------------------------------------------------------

// UsDrvSensorConfiguration_array_port

// repeated .pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration data = 2916;
inline int UsDrvSensorConfiguration_array_port::_internal_data_size() const {
  return data_.size();
}
inline int UsDrvSensorConfiguration_array_port::data_size() const {
  return _internal_data_size();
}
inline void UsDrvSensorConfiguration_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration* UsDrvSensorConfiguration_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration >*
UsDrvSensorConfiguration_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration_array_port.data)
  return &data_;
}
inline const ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration& UsDrvSensorConfiguration_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration& UsDrvSensorConfiguration_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration_array_port.data)
  return _internal_data(index);
}
inline ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration* UsDrvSensorConfiguration_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration* UsDrvSensorConfiguration_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_sensor_configuration::UsDrvSensorConfiguration >&
UsDrvSensorConfiguration_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.us_drv.us_drv_sensor_configuration.UsDrvSensorConfiguration_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace us_drv_sensor_configuration
}  // namespace us_drv
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_us_5fdrv_2fus_5fdrv_5fsensor_5fconfiguration_2eproto
