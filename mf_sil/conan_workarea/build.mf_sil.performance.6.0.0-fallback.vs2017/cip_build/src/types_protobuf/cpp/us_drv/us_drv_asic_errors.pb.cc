// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_drv/us_drv_asic_errors.proto

#include "us_drv/us_drv_asic_errors.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_UsDrvAsicErrors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fdrv_2fus_5fdrv_5fasic_5fstatus_5ferrors_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsDrvAsicStatusErrors_us_5fdrv_2fus_5fdrv_5fasic_5fstatus_5ferrors_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fdrv_2fus_5fdrv_5fcrm_5fmode_5ferrors_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsDrvCrmModeErrors_us_5fdrv_2fus_5fdrv_5fcrm_5fmode_5ferrors_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fdrv_2fus_5fdrv_5fdsi_5fcomm_5ferrors_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsDrvDsiCommErrors_us_5fdrv_2fus_5fdrv_5fdsi_5fcomm_5ferrors_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fdrv_2fus_5fdrv_5fdsi_5fpacket_5ferrors_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsDrvDsiPacketErrors_us_5fdrv_2fus_5fdrv_5fdsi_5fpacket_5ferrors_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fdrv_2fus_5fdrv_5fpdcm_5fframe_5fformat_5ferrors_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsDrvPdcmFrameFormatErrors_us_5fdrv_2fus_5fdrv_5fpdcm_5fframe_5fformat_5ferrors_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_us_5fdrv_2fus_5fdrv_5fspi_5fcomm_5ferrors_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsDrvSpiCommErrors_us_5fdrv_2fus_5fdrv_5fspi_5fcomm_5ferrors_2eproto;
namespace pb {
namespace us_drv {
namespace us_drv_asic_errors {
class UsDrvAsicErrorsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsDrvAsicErrors> _instance;
} _UsDrvAsicErrors_default_instance_;
class UsDrvAsicErrors_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsDrvAsicErrors_array_port> _instance;
} _UsDrvAsicErrors_array_port_default_instance_;
}  // namespace us_drv_asic_errors
}  // namespace us_drv
}  // namespace pb
static void InitDefaultsscc_info_UsDrvAsicErrors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_drv::us_drv_asic_errors::_UsDrvAsicErrors_default_instance_;
    new (ptr) ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_UsDrvAsicErrors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_UsDrvAsicErrors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto}, {
      &scc_info_UsDrvAsicStatusErrors_us_5fdrv_2fus_5fdrv_5fasic_5fstatus_5ferrors_2eproto.base,
      &scc_info_UsDrvSpiCommErrors_us_5fdrv_2fus_5fdrv_5fspi_5fcomm_5ferrors_2eproto.base,
      &scc_info_UsDrvDsiCommErrors_us_5fdrv_2fus_5fdrv_5fdsi_5fcomm_5ferrors_2eproto.base,
      &scc_info_UsDrvCrmModeErrors_us_5fdrv_2fus_5fdrv_5fcrm_5fmode_5ferrors_2eproto.base,
      &scc_info_UsDrvPdcmFrameFormatErrors_us_5fdrv_2fus_5fdrv_5fpdcm_5fframe_5fformat_5ferrors_2eproto.base,
      &scc_info_UsDrvDsiPacketErrors_us_5fdrv_2fus_5fdrv_5fdsi_5fpacket_5ferrors_2eproto.base,}};

static void InitDefaultsscc_info_UsDrvAsicErrors_array_port_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_drv::us_drv_asic_errors::_UsDrvAsicErrors_array_port_default_instance_;
    new (ptr) ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsDrvAsicErrors_array_port_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UsDrvAsicErrors_array_port_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto}, {
      &scc_info_UsDrvAsicErrors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors, asicstatuserrors_),
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors, spicommerrors_),
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors, dsicommerrors_),
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors, crmmodeerrors_),
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors, pdcmframeformaterrors_),
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors, dsipacketerrors_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors)},
  { 17, 23, sizeof(::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_drv::us_drv_asic_errors::_UsDrvAsicErrors_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_drv::us_drv_asic_errors::_UsDrvAsicErrors_array_port_default_instance_),
};

const char descriptor_table_protodef_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037us_drv/us_drv_asic_errors.proto\022\034pb.us"
  "_drv.us_drv_asic_errors\032&us_drv/us_drv_a"
  "sic_status_errors.proto\032#us_drv/us_drv_s"
  "pi_comm_errors.proto\032#us_drv/us_drv_dsi_"
  "comm_errors.proto\032#us_drv/us_drv_crm_mod"
  "e_errors.proto\032,us_drv/us_drv_pdcm_frame"
  "_format_errors.proto\032%us_drv/us_drv_dsi_"
  "packet_errors.proto\"\214\004\n\017UsDrvAsicErrors\022"
  "U\n\020asicStatusErrors\030\370\n \001(\0132:.pb.us_drv.u"
  "s_drv_asic_status_errors.UsDrvAsicStatus"
  "Errors\022L\n\rspiCommErrors\030\320\027 \001(\01324.pb.us_d"
  "rv.us_drv_spi_comm_errors.UsDrvSpiCommEr"
  "rors\022L\n\rdsiCommErrors\030\310\036 \003(\01324.pb.us_drv"
  ".us_drv_dsi_comm_errors.UsDrvDsiCommErro"
  "rs\022K\n\rcrmModeErrors\030\\ \003(\01324.pb.us_drv.us"
  "_drv_crm_mode_errors.UsDrvCrmModeErrors\022"
  "e\n\025pdcmFrameFormatErrors\030\241\027 \003(\0132E.pb.us_"
  "drv.us_drv_pdcm_frame_format_errors.UsDr"
  "vPdcmFrameFormatErrors\022R\n\017dsiPacketError"
  "s\030\204\007 \003(\01328.pb.us_drv.us_drv_dsi_packet_e"
  "rrors.UsDrvDsiPacketErrors\"Z\n\032UsDrvAsicE"
  "rrors_array_port\022<\n\004data\030\304\035 \003(\0132-.pb.us_"
  "drv.us_drv_asic_errors.UsDrvAsicErrors"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto_deps[6] = {
  &::descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5fstatus_5ferrors_2eproto,
  &::descriptor_table_us_5fdrv_2fus_5fdrv_5fcrm_5fmode_5ferrors_2eproto,
  &::descriptor_table_us_5fdrv_2fus_5fdrv_5fdsi_5fcomm_5ferrors_2eproto,
  &::descriptor_table_us_5fdrv_2fus_5fdrv_5fdsi_5fpacket_5ferrors_2eproto,
  &::descriptor_table_us_5fdrv_2fus_5fdrv_5fpdcm_5fframe_5fformat_5ferrors_2eproto,
  &::descriptor_table_us_5fdrv_2fus_5fdrv_5fspi_5fcomm_5ferrors_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto_sccs[2] = {
  &scc_info_UsDrvAsicErrors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto.base,
  &scc_info_UsDrvAsicErrors_array_port_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto_once;
static bool descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto = {
  &descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto_initialized, descriptor_table_protodef_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto, "us_drv/us_drv_asic_errors.proto", 918,
  &descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto_once, descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto_sccs, descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto_deps, 2, 6,
  schemas, file_default_instances, TableStruct_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto::offsets,
  file_level_metadata_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto, 2, file_level_enum_descriptors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto, file_level_service_descriptors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto), true);
namespace pb {
namespace us_drv {
namespace us_drv_asic_errors {

// ===================================================================

void UsDrvAsicErrors::InitAsDefaultInstance() {
  ::pb::us_drv::us_drv_asic_errors::_UsDrvAsicErrors_default_instance_._instance.get_mutable()->asicstatuserrors_ = const_cast< ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors*>(
      ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors::internal_default_instance());
  ::pb::us_drv::us_drv_asic_errors::_UsDrvAsicErrors_default_instance_._instance.get_mutable()->spicommerrors_ = const_cast< ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors*>(
      ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors::internal_default_instance());
}
class UsDrvAsicErrors::_Internal {
 public:
  using HasBits = decltype(std::declval<UsDrvAsicErrors>()._has_bits_);
  static const ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors& asicstatuserrors(const UsDrvAsicErrors* msg);
  static void set_has_asicstatuserrors(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors& spicommerrors(const UsDrvAsicErrors* msg);
  static void set_has_spicommerrors(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors&
UsDrvAsicErrors::_Internal::asicstatuserrors(const UsDrvAsicErrors* msg) {
  return *msg->asicstatuserrors_;
}
const ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors&
UsDrvAsicErrors::_Internal::spicommerrors(const UsDrvAsicErrors* msg) {
  return *msg->spicommerrors_;
}
void UsDrvAsicErrors::clear_asicstatuserrors() {
  if (asicstatuserrors_ != nullptr) asicstatuserrors_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void UsDrvAsicErrors::clear_spicommerrors() {
  if (spicommerrors_ != nullptr) spicommerrors_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void UsDrvAsicErrors::clear_dsicommerrors() {
  dsicommerrors_.Clear();
}
void UsDrvAsicErrors::clear_crmmodeerrors() {
  crmmodeerrors_.Clear();
}
void UsDrvAsicErrors::clear_pdcmframeformaterrors() {
  pdcmframeformaterrors_.Clear();
}
void UsDrvAsicErrors::clear_dsipacketerrors() {
  dsipacketerrors_.Clear();
}
UsDrvAsicErrors::UsDrvAsicErrors()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
}
UsDrvAsicErrors::UsDrvAsicErrors(const UsDrvAsicErrors& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      crmmodeerrors_(from.crmmodeerrors_),
      dsipacketerrors_(from.dsipacketerrors_),
      pdcmframeformaterrors_(from.pdcmframeformaterrors_),
      dsicommerrors_(from.dsicommerrors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_asicstatuserrors()) {
    asicstatuserrors_ = new ::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors(*from.asicstatuserrors_);
  } else {
    asicstatuserrors_ = nullptr;
  }
  if (from._internal_has_spicommerrors()) {
    spicommerrors_ = new ::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors(*from.spicommerrors_);
  } else {
    spicommerrors_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
}

void UsDrvAsicErrors::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UsDrvAsicErrors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto.base);
  ::memset(&asicstatuserrors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spicommerrors_) -
      reinterpret_cast<char*>(&asicstatuserrors_)) + sizeof(spicommerrors_));
}

UsDrvAsicErrors::~UsDrvAsicErrors() {
  // @@protoc_insertion_point(destructor:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
  SharedDtor();
}

void UsDrvAsicErrors::SharedDtor() {
  if (this != internal_default_instance()) delete asicstatuserrors_;
  if (this != internal_default_instance()) delete spicommerrors_;
}

void UsDrvAsicErrors::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsDrvAsicErrors& UsDrvAsicErrors::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsDrvAsicErrors_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto.base);
  return *internal_default_instance();
}


void UsDrvAsicErrors::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crmmodeerrors_.Clear();
  dsipacketerrors_.Clear();
  pdcmframeformaterrors_.Clear();
  dsicommerrors_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(asicstatuserrors_ != nullptr);
      asicstatuserrors_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(spicommerrors_ != nullptr);
      spicommerrors_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsDrvAsicErrors::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.us_drv.us_drv_crm_mode_errors.UsDrvCrmModeErrors crmModeErrors = 92;
      case 92:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_crmmodeerrors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<738>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .pb.us_drv.us_drv_dsi_packet_errors.UsDrvDsiPacketErrors dsiPacketErrors = 900;
      case 900:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_dsipacketerrors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<7202>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .pb.us_drv.us_drv_asic_status_errors.UsDrvAsicStatusErrors asicStatusErrors = 1400;
      case 1400:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_asicstatuserrors(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.us_drv.us_drv_pdcm_frame_format_errors.UsDrvPdcmFrameFormatErrors pdcmFrameFormatErrors = 2977;
      case 2977:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_add_pdcmframeformaterrors(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.us_drv.us_drv_spi_comm_errors.UsDrvSpiCommErrors spiCommErrors = 3024;
      case 3024:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_spicommerrors(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.us_drv.us_drv_dsi_comm_errors.UsDrvDsiCommErrors dsiCommErrors = 3912;
      case 3912:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_add_dsicommerrors(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsDrvAsicErrors::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.us_drv.us_drv_crm_mode_errors.UsDrvCrmModeErrors crmModeErrors = 92;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_crmmodeerrors_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(92, this->_internal_crmmodeerrors(i), target, stream);
  }

  // repeated .pb.us_drv.us_drv_dsi_packet_errors.UsDrvDsiPacketErrors dsiPacketErrors = 900;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_dsipacketerrors_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(900, this->_internal_dsipacketerrors(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional .pb.us_drv.us_drv_asic_status_errors.UsDrvAsicStatusErrors asicStatusErrors = 1400;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1400, _Internal::asicstatuserrors(this), target, stream);
  }

  // repeated .pb.us_drv.us_drv_pdcm_frame_format_errors.UsDrvPdcmFrameFormatErrors pdcmFrameFormatErrors = 2977;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pdcmframeformaterrors_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2977, this->_internal_pdcmframeformaterrors(i), target, stream);
  }

  // optional .pb.us_drv.us_drv_spi_comm_errors.UsDrvSpiCommErrors spiCommErrors = 3024;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3024, _Internal::spicommerrors(this), target, stream);
  }

  // repeated .pb.us_drv.us_drv_dsi_comm_errors.UsDrvDsiCommErrors dsiCommErrors = 3912;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_dsicommerrors_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3912, this->_internal_dsicommerrors(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
  return target;
}

size_t UsDrvAsicErrors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.us_drv.us_drv_crm_mode_errors.UsDrvCrmModeErrors crmModeErrors = 92;
  total_size += 2UL * this->_internal_crmmodeerrors_size();
  for (const auto& msg : this->crmmodeerrors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .pb.us_drv.us_drv_dsi_packet_errors.UsDrvDsiPacketErrors dsiPacketErrors = 900;
  total_size += 2UL * this->_internal_dsipacketerrors_size();
  for (const auto& msg : this->dsipacketerrors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .pb.us_drv.us_drv_pdcm_frame_format_errors.UsDrvPdcmFrameFormatErrors pdcmFrameFormatErrors = 2977;
  total_size += 3UL * this->_internal_pdcmframeformaterrors_size();
  for (const auto& msg : this->pdcmframeformaterrors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .pb.us_drv.us_drv_dsi_comm_errors.UsDrvDsiCommErrors dsiCommErrors = 3912;
  total_size += 3UL * this->_internal_dsicommerrors_size();
  for (const auto& msg : this->dsicommerrors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .pb.us_drv.us_drv_asic_status_errors.UsDrvAsicStatusErrors asicStatusErrors = 1400;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *asicstatuserrors_);
    }

    // optional .pb.us_drv.us_drv_spi_comm_errors.UsDrvSpiCommErrors spiCommErrors = 3024;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *spicommerrors_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsDrvAsicErrors::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
  GOOGLE_DCHECK_NE(&from, this);
  const UsDrvAsicErrors* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsDrvAsicErrors>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
    MergeFrom(*source);
  }
}

void UsDrvAsicErrors::MergeFrom(const UsDrvAsicErrors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  crmmodeerrors_.MergeFrom(from.crmmodeerrors_);
  dsipacketerrors_.MergeFrom(from.dsipacketerrors_);
  pdcmframeformaterrors_.MergeFrom(from.pdcmframeformaterrors_);
  dsicommerrors_.MergeFrom(from.dsicommerrors_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_asicstatuserrors()->::pb::us_drv::us_drv_asic_status_errors::UsDrvAsicStatusErrors::MergeFrom(from._internal_asicstatuserrors());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_spicommerrors()->::pb::us_drv::us_drv_spi_comm_errors::UsDrvSpiCommErrors::MergeFrom(from._internal_spicommerrors());
    }
  }
}

void UsDrvAsicErrors::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsDrvAsicErrors::CopyFrom(const UsDrvAsicErrors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsDrvAsicErrors::IsInitialized() const {
  return true;
}

void UsDrvAsicErrors::InternalSwap(UsDrvAsicErrors* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  crmmodeerrors_.InternalSwap(&other->crmmodeerrors_);
  dsipacketerrors_.InternalSwap(&other->dsipacketerrors_);
  pdcmframeformaterrors_.InternalSwap(&other->pdcmframeformaterrors_);
  dsicommerrors_.InternalSwap(&other->dsicommerrors_);
  swap(asicstatuserrors_, other->asicstatuserrors_);
  swap(spicommerrors_, other->spicommerrors_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsDrvAsicErrors::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UsDrvAsicErrors_array_port::InitAsDefaultInstance() {
}
class UsDrvAsicErrors_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<UsDrvAsicErrors_array_port>()._has_bits_);
};

UsDrvAsicErrors_array_port::UsDrvAsicErrors_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
}
UsDrvAsicErrors_array_port::UsDrvAsicErrors_array_port(const UsDrvAsicErrors_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
}

void UsDrvAsicErrors_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UsDrvAsicErrors_array_port_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto.base);
}

UsDrvAsicErrors_array_port::~UsDrvAsicErrors_array_port() {
  // @@protoc_insertion_point(destructor:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
  SharedDtor();
}

void UsDrvAsicErrors_array_port::SharedDtor() {
}

void UsDrvAsicErrors_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsDrvAsicErrors_array_port& UsDrvAsicErrors_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsDrvAsicErrors_array_port_us_5fdrv_2fus_5fdrv_5fasic_5ferrors_2eproto.base);
  return *internal_default_instance();
}


void UsDrvAsicErrors_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsDrvAsicErrors_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors data = 3780;
      case 3780:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsDrvAsicErrors_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors data = 3780;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3780, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
  return target;
}

size_t UsDrvAsicErrors_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors data = 3780;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsDrvAsicErrors_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const UsDrvAsicErrors_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsDrvAsicErrors_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
    MergeFrom(*source);
  }
}

void UsDrvAsicErrors_array_port::MergeFrom(const UsDrvAsicErrors_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void UsDrvAsicErrors_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsDrvAsicErrors_array_port::CopyFrom(const UsDrvAsicErrors_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_drv.us_drv_asic_errors.UsDrvAsicErrors_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsDrvAsicErrors_array_port::IsInitialized() const {
  return true;
}

void UsDrvAsicErrors_array_port::InternalSwap(UsDrvAsicErrors_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsDrvAsicErrors_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace us_drv_asic_errors
}  // namespace us_drv
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors* Arena::CreateMaybeMessage< ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port* Arena::CreateMaybeMessage< ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_drv::us_drv_asic_errors::UsDrvAsicErrors_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
