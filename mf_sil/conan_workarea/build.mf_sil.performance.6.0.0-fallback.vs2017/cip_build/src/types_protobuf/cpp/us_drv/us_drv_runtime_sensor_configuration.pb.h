// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_drv/us_drv_runtime_sensor_configuration.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "us_drv/us_drv_sensor_mode.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto;
namespace pb {
namespace us_drv {
namespace us_drv_runtime_sensor_configuration {
class UsDrvRuntimeSensorConfiguration;
class UsDrvRuntimeSensorConfigurationDefaultTypeInternal;
extern UsDrvRuntimeSensorConfigurationDefaultTypeInternal _UsDrvRuntimeSensorConfiguration_default_instance_;
class UsDrvRuntimeSensorConfiguration_array_port;
class UsDrvRuntimeSensorConfiguration_array_portDefaultTypeInternal;
extern UsDrvRuntimeSensorConfiguration_array_portDefaultTypeInternal _UsDrvRuntimeSensorConfiguration_array_port_default_instance_;
}  // namespace us_drv_runtime_sensor_configuration
}  // namespace us_drv
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* Arena::CreateMaybeMessage<::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration>(Arena*);
template<> ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration_array_port* Arena::CreateMaybeMessage<::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace us_drv {
namespace us_drv_runtime_sensor_configuration {

// ===================================================================

class UsDrvRuntimeSensorConfiguration :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration) */ {
 public:
  UsDrvRuntimeSensorConfiguration();
  virtual ~UsDrvRuntimeSensorConfiguration();

  UsDrvRuntimeSensorConfiguration(const UsDrvRuntimeSensorConfiguration& from);
  UsDrvRuntimeSensorConfiguration(UsDrvRuntimeSensorConfiguration&& from) noexcept
    : UsDrvRuntimeSensorConfiguration() {
    *this = ::std::move(from);
  }

  inline UsDrvRuntimeSensorConfiguration& operator=(const UsDrvRuntimeSensorConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsDrvRuntimeSensorConfiguration& operator=(UsDrvRuntimeSensorConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsDrvRuntimeSensorConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsDrvRuntimeSensorConfiguration* internal_default_instance() {
    return reinterpret_cast<const UsDrvRuntimeSensorConfiguration*>(
               &_UsDrvRuntimeSensorConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UsDrvRuntimeSensorConfiguration& a, UsDrvRuntimeSensorConfiguration& b) {
    a.Swap(&b);
  }
  inline void Swap(UsDrvRuntimeSensorConfiguration* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsDrvRuntimeSensorConfiguration* New() const final {
    return CreateMaybeMessage<UsDrvRuntimeSensorConfiguration>(nullptr);
  }

  UsDrvRuntimeSensorConfiguration* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsDrvRuntimeSensorConfiguration>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsDrvRuntimeSensorConfiguration& from);
  void MergeFrom(const UsDrvRuntimeSensorConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsDrvRuntimeSensorConfiguration* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto);
    return ::descriptor_table_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStochasticCodesMsFieldNumber = 169,
    kFiringSchemesFieldNumber = 415,
    kHwVersionMajorFieldNumber = 1426,
    kSwVersionMajorFieldNumber = 1453,
    kReceiveGainFieldNumber = 1890,
    kAdaptiveThresholdGenerationFieldNumber = 2277,
    kFirCoefficientSetFieldNumber = 2380,
    kSerialNumberFieldNumber = 3003,
    kStateFieldNumber = 3190,
    kHwVersionMinorFieldNumber = 3217,
    kSwVersionMinorFieldNumber = 3246,
    kAatgConfiguration2FieldNumber = 3343,
    kAatgConfiguration1FieldNumber = 3436,
    kAdvancedPathConfigurationFieldNumber = 3571,
  };
  // repeated uint32 stochasticCodes_ms = 169;
  int stochasticcodes_ms_size() const;
  private:
  int _internal_stochasticcodes_ms_size() const;
  public:
  void clear_stochasticcodes_ms();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stochasticcodes_ms(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_stochasticcodes_ms() const;
  void _internal_add_stochasticcodes_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_stochasticcodes_ms();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 stochasticcodes_ms(int index) const;
  void set_stochasticcodes_ms(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_stochasticcodes_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      stochasticcodes_ms() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_stochasticcodes_ms();

  // repeated uint32 firingSchemes = 415;
  int firingschemes_size() const;
  private:
  int _internal_firingschemes_size() const;
  public:
  void clear_firingschemes();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_firingschemes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_firingschemes() const;
  void _internal_add_firingschemes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_firingschemes();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 firingschemes(int index) const;
  void set_firingschemes(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_firingschemes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      firingschemes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_firingschemes();

  // optional uint32 hwVersionMajor = 1426;
  bool has_hwversionmajor() const;
  private:
  bool _internal_has_hwversionmajor() const;
  public:
  void clear_hwversionmajor();
  ::PROTOBUF_NAMESPACE_ID::uint32 hwversionmajor() const;
  void set_hwversionmajor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hwversionmajor() const;
  void _internal_set_hwversionmajor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 swVersionMajor = 1453;
  bool has_swversionmajor() const;
  private:
  bool _internal_has_swversionmajor() const;
  public:
  void clear_swversionmajor();
  ::PROTOBUF_NAMESPACE_ID::uint32 swversionmajor() const;
  void set_swversionmajor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_swversionmajor() const;
  void _internal_set_swversionmajor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 receiveGain = 1890;
  bool has_receivegain() const;
  private:
  bool _internal_has_receivegain() const;
  public:
  void clear_receivegain();
  ::PROTOBUF_NAMESPACE_ID::uint32 receivegain() const;
  void set_receivegain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_receivegain() const;
  void _internal_set_receivegain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 adaptiveThresholdGeneration = 2277;
  bool has_adaptivethresholdgeneration() const;
  private:
  bool _internal_has_adaptivethresholdgeneration() const;
  public:
  void clear_adaptivethresholdgeneration();
  ::PROTOBUF_NAMESPACE_ID::uint32 adaptivethresholdgeneration() const;
  void set_adaptivethresholdgeneration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_adaptivethresholdgeneration() const;
  void _internal_set_adaptivethresholdgeneration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 firCoefficientSet = 2380;
  bool has_fircoefficientset() const;
  private:
  bool _internal_has_fircoefficientset() const;
  public:
  void clear_fircoefficientset();
  ::PROTOBUF_NAMESPACE_ID::uint32 fircoefficientset() const;
  void set_fircoefficientset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fircoefficientset() const;
  void _internal_set_fircoefficientset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 serialNumber = 3003;
  bool has_serialnumber() const;
  private:
  bool _internal_has_serialnumber() const;
  public:
  void clear_serialnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 serialnumber() const;
  void set_serialnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_serialnumber() const;
  void _internal_set_serialnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.us_drv.us_drv_sensor_mode.UsDrvSensorMode state = 3190;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::pb::us_drv::us_drv_sensor_mode::UsDrvSensorMode state() const;
  void set_state(::pb::us_drv::us_drv_sensor_mode::UsDrvSensorMode value);
  private:
  ::pb::us_drv::us_drv_sensor_mode::UsDrvSensorMode _internal_state() const;
  void _internal_set_state(::pb::us_drv::us_drv_sensor_mode::UsDrvSensorMode value);
  public:

  // optional uint32 hwVersionMinor = 3217;
  bool has_hwversionminor() const;
  private:
  bool _internal_has_hwversionminor() const;
  public:
  void clear_hwversionminor();
  ::PROTOBUF_NAMESPACE_ID::uint32 hwversionminor() const;
  void set_hwversionminor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hwversionminor() const;
  void _internal_set_hwversionminor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 swVersionMinor = 3246;
  bool has_swversionminor() const;
  private:
  bool _internal_has_swversionminor() const;
  public:
  void clear_swversionminor();
  ::PROTOBUF_NAMESPACE_ID::uint32 swversionminor() const;
  void set_swversionminor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_swversionminor() const;
  void _internal_set_swversionminor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 aatgConfiguration2 = 3343;
  bool has_aatgconfiguration2() const;
  private:
  bool _internal_has_aatgconfiguration2() const;
  public:
  void clear_aatgconfiguration2();
  ::PROTOBUF_NAMESPACE_ID::uint32 aatgconfiguration2() const;
  void set_aatgconfiguration2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aatgconfiguration2() const;
  void _internal_set_aatgconfiguration2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 aatgConfiguration1 = 3436;
  bool has_aatgconfiguration1() const;
  private:
  bool _internal_has_aatgconfiguration1() const;
  public:
  void clear_aatgconfiguration1();
  ::PROTOBUF_NAMESPACE_ID::uint32 aatgconfiguration1() const;
  void set_aatgconfiguration1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aatgconfiguration1() const;
  void _internal_set_aatgconfiguration1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 advancedPathConfiguration = 3571;
  bool has_advancedpathconfiguration() const;
  private:
  bool _internal_has_advancedpathconfiguration() const;
  public:
  void clear_advancedpathconfiguration();
  ::PROTOBUF_NAMESPACE_ID::uint32 advancedpathconfiguration() const;
  void set_advancedpathconfiguration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_advancedpathconfiguration() const;
  void _internal_set_advancedpathconfiguration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > stochasticcodes_ms_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > firingschemes_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hwversionmajor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 swversionmajor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 receivegain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 adaptivethresholdgeneration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fircoefficientset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 serialnumber_;
  int state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hwversionminor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 swversionminor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aatgconfiguration2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aatgconfiguration1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 advancedpathconfiguration_;
  friend struct ::TableStruct_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto;
};
// -------------------------------------------------------------------

class UsDrvRuntimeSensorConfiguration_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration_array_port) */ {
 public:
  UsDrvRuntimeSensorConfiguration_array_port();
  virtual ~UsDrvRuntimeSensorConfiguration_array_port();

  UsDrvRuntimeSensorConfiguration_array_port(const UsDrvRuntimeSensorConfiguration_array_port& from);
  UsDrvRuntimeSensorConfiguration_array_port(UsDrvRuntimeSensorConfiguration_array_port&& from) noexcept
    : UsDrvRuntimeSensorConfiguration_array_port() {
    *this = ::std::move(from);
  }

  inline UsDrvRuntimeSensorConfiguration_array_port& operator=(const UsDrvRuntimeSensorConfiguration_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsDrvRuntimeSensorConfiguration_array_port& operator=(UsDrvRuntimeSensorConfiguration_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsDrvRuntimeSensorConfiguration_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsDrvRuntimeSensorConfiguration_array_port* internal_default_instance() {
    return reinterpret_cast<const UsDrvRuntimeSensorConfiguration_array_port*>(
               &_UsDrvRuntimeSensorConfiguration_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UsDrvRuntimeSensorConfiguration_array_port& a, UsDrvRuntimeSensorConfiguration_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(UsDrvRuntimeSensorConfiguration_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsDrvRuntimeSensorConfiguration_array_port* New() const final {
    return CreateMaybeMessage<UsDrvRuntimeSensorConfiguration_array_port>(nullptr);
  }

  UsDrvRuntimeSensorConfiguration_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsDrvRuntimeSensorConfiguration_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsDrvRuntimeSensorConfiguration_array_port& from);
  void MergeFrom(const UsDrvRuntimeSensorConfiguration_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsDrvRuntimeSensorConfiguration_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto);
    return ::descriptor_table_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2022,
  };
  // repeated .pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration data = 2022;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration >*
      mutable_data();
  private:
  const ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration& _internal_data(int index) const;
  ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* _internal_add_data();
  public:
  const ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration& data(int index) const;
  ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration > data_;
  friend struct ::TableStruct_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UsDrvRuntimeSensorConfiguration

// optional .pb.us_drv.us_drv_sensor_mode.UsDrvSensorMode state = 3190;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_state() const {
  return _internal_has_state();
}
inline void UsDrvRuntimeSensorConfiguration::clear_state() {
  state_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::pb::us_drv::us_drv_sensor_mode::UsDrvSensorMode UsDrvRuntimeSensorConfiguration::_internal_state() const {
  return static_cast< ::pb::us_drv::us_drv_sensor_mode::UsDrvSensorMode >(state_);
}
inline ::pb::us_drv::us_drv_sensor_mode::UsDrvSensorMode UsDrvRuntimeSensorConfiguration::state() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.state)
  return _internal_state();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_state(::pb::us_drv::us_drv_sensor_mode::UsDrvSensorMode value) {
  assert(::pb::us_drv::us_drv_sensor_mode::UsDrvSensorMode_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  state_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_state(::pb::us_drv::us_drv_sensor_mode::UsDrvSensorMode value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.state)
}

// repeated uint32 stochasticCodes_ms = 169;
inline int UsDrvRuntimeSensorConfiguration::_internal_stochasticcodes_ms_size() const {
  return stochasticcodes_ms_.size();
}
inline int UsDrvRuntimeSensorConfiguration::stochasticcodes_ms_size() const {
  return _internal_stochasticcodes_ms_size();
}
inline void UsDrvRuntimeSensorConfiguration::clear_stochasticcodes_ms() {
  stochasticcodes_ms_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_stochasticcodes_ms(int index) const {
  return stochasticcodes_ms_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::stochasticcodes_ms(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.stochasticCodes_ms)
  return _internal_stochasticcodes_ms(index);
}
inline void UsDrvRuntimeSensorConfiguration::set_stochasticcodes_ms(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  stochasticcodes_ms_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.stochasticCodes_ms)
}
inline void UsDrvRuntimeSensorConfiguration::_internal_add_stochasticcodes_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  stochasticcodes_ms_.Add(value);
}
inline void UsDrvRuntimeSensorConfiguration::add_stochasticcodes_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_stochasticcodes_ms(value);
  // @@protoc_insertion_point(field_add:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.stochasticCodes_ms)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
UsDrvRuntimeSensorConfiguration::_internal_stochasticcodes_ms() const {
  return stochasticcodes_ms_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
UsDrvRuntimeSensorConfiguration::stochasticcodes_ms() const {
  // @@protoc_insertion_point(field_list:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.stochasticCodes_ms)
  return _internal_stochasticcodes_ms();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
UsDrvRuntimeSensorConfiguration::_internal_mutable_stochasticcodes_ms() {
  return &stochasticcodes_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
UsDrvRuntimeSensorConfiguration::mutable_stochasticcodes_ms() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.stochasticCodes_ms)
  return _internal_mutable_stochasticcodes_ms();
}

// repeated uint32 firingSchemes = 415;
inline int UsDrvRuntimeSensorConfiguration::_internal_firingschemes_size() const {
  return firingschemes_.size();
}
inline int UsDrvRuntimeSensorConfiguration::firingschemes_size() const {
  return _internal_firingschemes_size();
}
inline void UsDrvRuntimeSensorConfiguration::clear_firingschemes() {
  firingschemes_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_firingschemes(int index) const {
  return firingschemes_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::firingschemes(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.firingSchemes)
  return _internal_firingschemes(index);
}
inline void UsDrvRuntimeSensorConfiguration::set_firingschemes(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  firingschemes_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.firingSchemes)
}
inline void UsDrvRuntimeSensorConfiguration::_internal_add_firingschemes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  firingschemes_.Add(value);
}
inline void UsDrvRuntimeSensorConfiguration::add_firingschemes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_firingschemes(value);
  // @@protoc_insertion_point(field_add:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.firingSchemes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
UsDrvRuntimeSensorConfiguration::_internal_firingschemes() const {
  return firingschemes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
UsDrvRuntimeSensorConfiguration::firingschemes() const {
  // @@protoc_insertion_point(field_list:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.firingSchemes)
  return _internal_firingschemes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
UsDrvRuntimeSensorConfiguration::_internal_mutable_firingschemes() {
  return &firingschemes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
UsDrvRuntimeSensorConfiguration::mutable_firingschemes() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.firingSchemes)
  return _internal_mutable_firingschemes();
}

// optional uint32 firCoefficientSet = 2380;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_fircoefficientset() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_fircoefficientset() const {
  return _internal_has_fircoefficientset();
}
inline void UsDrvRuntimeSensorConfiguration::clear_fircoefficientset() {
  fircoefficientset_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_fircoefficientset() const {
  return fircoefficientset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::fircoefficientset() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.firCoefficientSet)
  return _internal_fircoefficientset();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_fircoefficientset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  fircoefficientset_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_fircoefficientset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fircoefficientset(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.firCoefficientSet)
}

// optional uint32 receiveGain = 1890;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_receivegain() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_receivegain() const {
  return _internal_has_receivegain();
}
inline void UsDrvRuntimeSensorConfiguration::clear_receivegain() {
  receivegain_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_receivegain() const {
  return receivegain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::receivegain() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.receiveGain)
  return _internal_receivegain();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_receivegain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  receivegain_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_receivegain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_receivegain(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.receiveGain)
}

// optional uint32 advancedPathConfiguration = 3571;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_advancedpathconfiguration() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_advancedpathconfiguration() const {
  return _internal_has_advancedpathconfiguration();
}
inline void UsDrvRuntimeSensorConfiguration::clear_advancedpathconfiguration() {
  advancedpathconfiguration_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_advancedpathconfiguration() const {
  return advancedpathconfiguration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::advancedpathconfiguration() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.advancedPathConfiguration)
  return _internal_advancedpathconfiguration();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_advancedpathconfiguration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  advancedpathconfiguration_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_advancedpathconfiguration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_advancedpathconfiguration(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.advancedPathConfiguration)
}

// optional uint32 aatgConfiguration1 = 3436;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_aatgconfiguration1() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_aatgconfiguration1() const {
  return _internal_has_aatgconfiguration1();
}
inline void UsDrvRuntimeSensorConfiguration::clear_aatgconfiguration1() {
  aatgconfiguration1_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_aatgconfiguration1() const {
  return aatgconfiguration1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::aatgconfiguration1() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.aatgConfiguration1)
  return _internal_aatgconfiguration1();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_aatgconfiguration1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  aatgconfiguration1_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_aatgconfiguration1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aatgconfiguration1(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.aatgConfiguration1)
}

// optional uint32 aatgConfiguration2 = 3343;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_aatgconfiguration2() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_aatgconfiguration2() const {
  return _internal_has_aatgconfiguration2();
}
inline void UsDrvRuntimeSensorConfiguration::clear_aatgconfiguration2() {
  aatgconfiguration2_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_aatgconfiguration2() const {
  return aatgconfiguration2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::aatgconfiguration2() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.aatgConfiguration2)
  return _internal_aatgconfiguration2();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_aatgconfiguration2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  aatgconfiguration2_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_aatgconfiguration2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aatgconfiguration2(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.aatgConfiguration2)
}

// optional uint32 adaptiveThresholdGeneration = 2277;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_adaptivethresholdgeneration() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_adaptivethresholdgeneration() const {
  return _internal_has_adaptivethresholdgeneration();
}
inline void UsDrvRuntimeSensorConfiguration::clear_adaptivethresholdgeneration() {
  adaptivethresholdgeneration_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_adaptivethresholdgeneration() const {
  return adaptivethresholdgeneration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::adaptivethresholdgeneration() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.adaptiveThresholdGeneration)
  return _internal_adaptivethresholdgeneration();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_adaptivethresholdgeneration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  adaptivethresholdgeneration_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_adaptivethresholdgeneration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_adaptivethresholdgeneration(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.adaptiveThresholdGeneration)
}

// optional uint32 swVersionMajor = 1453;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_swversionmajor() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_swversionmajor() const {
  return _internal_has_swversionmajor();
}
inline void UsDrvRuntimeSensorConfiguration::clear_swversionmajor() {
  swversionmajor_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_swversionmajor() const {
  return swversionmajor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::swversionmajor() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.swVersionMajor)
  return _internal_swversionmajor();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_swversionmajor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  swversionmajor_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_swversionmajor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_swversionmajor(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.swVersionMajor)
}

// optional uint32 swVersionMinor = 3246;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_swversionminor() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_swversionminor() const {
  return _internal_has_swversionminor();
}
inline void UsDrvRuntimeSensorConfiguration::clear_swversionminor() {
  swversionminor_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_swversionminor() const {
  return swversionminor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::swversionminor() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.swVersionMinor)
  return _internal_swversionminor();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_swversionminor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  swversionminor_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_swversionminor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_swversionminor(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.swVersionMinor)
}

// optional uint32 hwVersionMajor = 1426;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_hwversionmajor() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_hwversionmajor() const {
  return _internal_has_hwversionmajor();
}
inline void UsDrvRuntimeSensorConfiguration::clear_hwversionmajor() {
  hwversionmajor_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_hwversionmajor() const {
  return hwversionmajor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::hwversionmajor() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.hwVersionMajor)
  return _internal_hwversionmajor();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_hwversionmajor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hwversionmajor_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_hwversionmajor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hwversionmajor(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.hwVersionMajor)
}

// optional uint32 hwVersionMinor = 3217;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_hwversionminor() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_hwversionminor() const {
  return _internal_has_hwversionminor();
}
inline void UsDrvRuntimeSensorConfiguration::clear_hwversionminor() {
  hwversionminor_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_hwversionminor() const {
  return hwversionminor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::hwversionminor() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.hwVersionMinor)
  return _internal_hwversionminor();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_hwversionminor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  hwversionminor_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_hwversionminor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hwversionminor(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.hwVersionMinor)
}

// optional uint32 serialNumber = 3003;
inline bool UsDrvRuntimeSensorConfiguration::_internal_has_serialnumber() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool UsDrvRuntimeSensorConfiguration::has_serialnumber() const {
  return _internal_has_serialnumber();
}
inline void UsDrvRuntimeSensorConfiguration::clear_serialnumber() {
  serialnumber_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::_internal_serialnumber() const {
  return serialnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsDrvRuntimeSensorConfiguration::serialnumber() const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.serialNumber)
  return _internal_serialnumber();
}
inline void UsDrvRuntimeSensorConfiguration::_internal_set_serialnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  serialnumber_ = value;
}
inline void UsDrvRuntimeSensorConfiguration::set_serialnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_serialnumber(value);
  // @@protoc_insertion_point(field_set:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration.serialNumber)
}

// -------------------------------------------------------------------

// UsDrvRuntimeSensorConfiguration_array_port

// repeated .pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration data = 2022;
inline int UsDrvRuntimeSensorConfiguration_array_port::_internal_data_size() const {
  return data_.size();
}
inline int UsDrvRuntimeSensorConfiguration_array_port::data_size() const {
  return _internal_data_size();
}
inline void UsDrvRuntimeSensorConfiguration_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* UsDrvRuntimeSensorConfiguration_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration >*
UsDrvRuntimeSensorConfiguration_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration_array_port.data)
  return &data_;
}
inline const ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration& UsDrvRuntimeSensorConfiguration_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration& UsDrvRuntimeSensorConfiguration_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration_array_port.data)
  return _internal_data(index);
}
inline ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* UsDrvRuntimeSensorConfiguration_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration* UsDrvRuntimeSensorConfiguration_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_drv::us_drv_runtime_sensor_configuration::UsDrvRuntimeSensorConfiguration >&
UsDrvRuntimeSensorConfiguration_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.us_drv.us_drv_runtime_sensor_configuration.UsDrvRuntimeSensorConfiguration_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace us_drv_runtime_sensor_configuration
}  // namespace us_drv
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_us_5fdrv_2fus_5fdrv_5fruntime_5fsensor_5fconfiguration_2eproto
