// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_commonvehsigprovider/suspension_port.proto

#include "ap_commonvehsigprovider/suspension_port.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SuspensionPort_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsignal_5fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto;
namespace pb {
namespace ap_commonvehsigprovider {
namespace suspension_port {
class SuspensionPortDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SuspensionPort> _instance;
} _SuspensionPort_default_instance_;
class SuspensionPort_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SuspensionPort_array_port> _instance;
} _SuspensionPort_array_port_default_instance_;
}  // namespace suspension_port
}  // namespace ap_commonvehsigprovider
}  // namespace pb
static void InitDefaultsscc_info_SuspensionPort_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_commonvehsigprovider::suspension_port::_SuspensionPort_default_instance_;
    new (ptr) ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SuspensionPort_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SuspensionPort_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto}, {
      &scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto.base,}};

static void InitDefaultsscc_info_SuspensionPort_array_port_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_commonvehsigprovider::suspension_port::_SuspensionPort_array_port_default_instance_;
    new (ptr) ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SuspensionPort_array_port_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SuspensionPort_array_port_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto}, {
      &scc_info_SuspensionPort_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, uiversionnumber_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, ssigheader_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelfl_m_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelfr_m_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelrl_m_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelrr_m_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelfl_pct_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelfr_pct_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelrl_pct_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelrr_pct_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, issuspensioncalibrated_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelfl_qf_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelfr_qf_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelrl_qf_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort, suspensiontravelrr_qf_),
  10,
  0,
  3,
  12,
  4,
  13,
  1,
  5,
  2,
  11,
  6,
  7,
  8,
  9,
  14,
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 20, sizeof(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort)},
  { 35, 41, sizeof(::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_commonvehsigprovider::suspension_port::_SuspensionPort_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_commonvehsigprovider::suspension_port::_SuspensionPort_array_port_default_instance_),
};

const char descriptor_table_protodef_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n-ap_commonvehsigprovider/suspension_por"
  "t.proto\022*pb.ap_commonvehsigprovider.susp"
  "ension_port\032\027eco/signal_header.proto\"\204\004\n"
  "\016SuspensionPort\022\030\n\017uiVersionNumber\030\314\020 \001("
  "\r\0227\n\nsSigHeader\030\211\010 \001(\0132\".pb.eco.signal_h"
  "eader.SignalHeader\022\035\n\024suspensionTravelFL"
  "_m\030\336\005 \001(\002\022\035\n\024suspensionTravelFR_m\030\274\025 \001(\002"
  "\022\035\n\024suspensionTravelRL_m\030\210\007 \001(\002\022\035\n\024suspe"
  "nsionTravelRR_m\030\352\027 \001(\002\022\037\n\026suspensionTrav"
  "elFL_pct\030\310\034 \001(\002\022\037\n\026suspensionTravelFR_pc"
  "t\030\272\013 \001(\002\022\037\n\026suspensionTravelRL_pct\030\355\004 \001("
  "\002\022\037\n\026suspensionTravelRR_pct\030\237\023 \001(\002\022\037\n\026is"
  "SuspensionCalibrated\030\327\023 \001(\010\022\036\n\025suspensio"
  "nTravelFL_QF\030\337\021 \001(\010\022\036\n\025suspensionTravelF"
  "R_QF\030\242\002 \001(\010\022\036\n\025suspensionTravelRL_QF\030\203\013 "
  "\001(\010\022\036\n\025suspensionTravelRR_QF\030\376\030 \001(\010\"f\n\031S"
  "uspensionPort_array_port\022I\n\004data\030\224\n \003(\0132"
  ":.pb.ap_commonvehsigprovider.suspension_"
  "port.SuspensionPort"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto_deps[1] = {
  &::descriptor_table_eco_2fsignal_5fheader_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto_sccs[2] = {
  &scc_info_SuspensionPort_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto.base,
  &scc_info_SuspensionPort_array_port_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto_once;
static bool descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto = {
  &descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto_initialized, descriptor_table_protodef_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto, "ap_commonvehsigprovider/suspension_port.proto", 739,
  &descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto_once, descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto_sccs, descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto::offsets,
  file_level_metadata_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto, 2, file_level_enum_descriptors_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto, file_level_service_descriptors_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto), true);
namespace pb {
namespace ap_commonvehsigprovider {
namespace suspension_port {

// ===================================================================

void SuspensionPort::InitAsDefaultInstance() {
  ::pb::ap_commonvehsigprovider::suspension_port::_SuspensionPort_default_instance_._instance.get_mutable()->ssigheader_ = const_cast< ::pb::eco::signal_header::SignalHeader*>(
      ::pb::eco::signal_header::SignalHeader::internal_default_instance());
}
class SuspensionPort::_Internal {
 public:
  using HasBits = decltype(std::declval<SuspensionPort>()._has_bits_);
  static void set_has_uiversionnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::pb::eco::signal_header::SignalHeader& ssigheader(const SuspensionPort* msg);
  static void set_has_ssigheader(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_suspensiontravelfl_m(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_suspensiontravelfr_m(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_suspensiontravelrl_m(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_suspensiontravelrr_m(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_suspensiontravelfl_pct(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_suspensiontravelfr_pct(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_suspensiontravelrl_pct(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_suspensiontravelrr_pct(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_issuspensioncalibrated(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_suspensiontravelfl_qf(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_suspensiontravelfr_qf(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_suspensiontravelrl_qf(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_suspensiontravelrr_qf(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
};

const ::pb::eco::signal_header::SignalHeader&
SuspensionPort::_Internal::ssigheader(const SuspensionPort* msg) {
  return *msg->ssigheader_;
}
void SuspensionPort::clear_ssigheader() {
  if (ssigheader_ != nullptr) ssigheader_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
SuspensionPort::SuspensionPort()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
}
SuspensionPort::SuspensionPort(const SuspensionPort& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_ssigheader()) {
    ssigheader_ = new ::pb::eco::signal_header::SignalHeader(*from.ssigheader_);
  } else {
    ssigheader_ = nullptr;
  }
  ::memcpy(&suspensiontravelfl_pct_, &from.suspensiontravelfl_pct_,
    static_cast<size_t>(reinterpret_cast<char*>(&suspensiontravelrr_qf_) -
    reinterpret_cast<char*>(&suspensiontravelfl_pct_)) + sizeof(suspensiontravelrr_qf_));
  // @@protoc_insertion_point(copy_constructor:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
}

void SuspensionPort::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SuspensionPort_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto.base);
  ::memset(&ssigheader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suspensiontravelrr_qf_) -
      reinterpret_cast<char*>(&ssigheader_)) + sizeof(suspensiontravelrr_qf_));
}

SuspensionPort::~SuspensionPort() {
  // @@protoc_insertion_point(destructor:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
  SharedDtor();
}

void SuspensionPort::SharedDtor() {
  if (this != internal_default_instance()) delete ssigheader_;
}

void SuspensionPort::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SuspensionPort& SuspensionPort::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SuspensionPort_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto.base);
  return *internal_default_instance();
}


void SuspensionPort::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(ssigheader_ != nullptr);
    ssigheader_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&suspensiontravelfl_pct_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&suspensiontravelfl_qf_) -
        reinterpret_cast<char*>(&suspensiontravelfl_pct_)) + sizeof(suspensiontravelfl_qf_));
  }
  if (cached_has_bits & 0x00007f00u) {
    ::memset(&suspensiontravelfr_qf_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&suspensiontravelrr_qf_) -
        reinterpret_cast<char*>(&suspensiontravelfr_qf_)) + sizeof(suspensiontravelrr_qf_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* SuspensionPort::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool suspensionTravelFR_QF = 290;
      case 290:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_suspensiontravelfr_qf(&has_bits);
          suspensiontravelfr_qf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float suspensionTravelRL_pct = 621;
      case 621:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          _Internal::set_has_suspensiontravelrl_pct(&has_bits);
          suspensiontravelrl_pct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float suspensionTravelFL_m = 734;
      case 734:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 245)) {
          _Internal::set_has_suspensiontravelfl_m(&has_bits);
          suspensiontravelfl_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float suspensionTravelRL_m = 904;
      case 904:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          _Internal::set_has_suspensiontravelrl_m(&has_bits);
          suspensiontravelrl_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_ssigheader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool suspensionTravelRL_QF = 1411;
      case 1411:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_suspensiontravelrl_qf(&has_bits);
          suspensiontravelrl_qf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float suspensionTravelFR_pct = 1466;
      case 1466:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 213)) {
          _Internal::set_has_suspensiontravelfr_pct(&has_bits);
          suspensiontravelfr_pct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional uint32 uiVersionNumber = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_uiversionnumber(&has_bits);
          uiversionnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool suspensionTravelFL_QF = 2271;
      case 2271:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          _Internal::set_has_suspensiontravelfl_qf(&has_bits);
          suspensiontravelfl_qf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float suspensionTravelRR_pct = 2463;
      case 2463:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 253)) {
          _Internal::set_has_suspensiontravelrr_pct(&has_bits);
          suspensiontravelrr_pct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional bool isSuspensionCalibrated = 2519;
      case 2519:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _Internal::set_has_issuspensioncalibrated(&has_bits);
          issuspensioncalibrated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float suspensionTravelFR_m = 2748;
      case 2748:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 229)) {
          _Internal::set_has_suspensiontravelfr_m(&has_bits);
          suspensiontravelfr_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float suspensionTravelRR_m = 3050;
      case 3050:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 85)) {
          _Internal::set_has_suspensiontravelrr_m(&has_bits);
          suspensiontravelrr_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional bool suspensionTravelRR_QF = 3198;
      case 3198:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_suspensiontravelrr_qf(&has_bits);
          suspensiontravelrr_qf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float suspensionTravelFL_pct = 3656;
      case 3656:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          _Internal::set_has_suspensiontravelfl_pct(&has_bits);
          suspensiontravelfl_pct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SuspensionPort::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool suspensionTravelFR_QF = 290;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(290, this->_internal_suspensiontravelfr_qf(), target);
  }

  // optional float suspensionTravelRL_pct = 621;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(621, this->_internal_suspensiontravelrl_pct(), target);
  }

  // optional float suspensionTravelFL_m = 734;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(734, this->_internal_suspensiontravelfl_m(), target);
  }

  // optional float suspensionTravelRL_m = 904;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(904, this->_internal_suspensiontravelrl_m(), target);
  }

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::ssigheader(this), target, stream);
  }

  // optional bool suspensionTravelRL_QF = 1411;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1411, this->_internal_suspensiontravelrl_qf(), target);
  }

  // optional float suspensionTravelFR_pct = 1466;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1466, this->_internal_suspensiontravelfr_pct(), target);
  }

  // optional uint32 uiVersionNumber = 2124;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2124, this->_internal_uiversionnumber(), target);
  }

  // optional bool suspensionTravelFL_QF = 2271;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2271, this->_internal_suspensiontravelfl_qf(), target);
  }

  // optional float suspensionTravelRR_pct = 2463;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2463, this->_internal_suspensiontravelrr_pct(), target);
  }

  // optional bool isSuspensionCalibrated = 2519;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2519, this->_internal_issuspensioncalibrated(), target);
  }

  // optional float suspensionTravelFR_m = 2748;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2748, this->_internal_suspensiontravelfr_m(), target);
  }

  // optional float suspensionTravelRR_m = 3050;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3050, this->_internal_suspensiontravelrr_m(), target);
  }

  // optional bool suspensionTravelRR_QF = 3198;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3198, this->_internal_suspensiontravelrr_qf(), target);
  }

  // optional float suspensionTravelFL_pct = 3656;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3656, this->_internal_suspensiontravelfl_pct(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
  return target;
}

size_t SuspensionPort::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ssigheader_);
    }

    // optional float suspensionTravelFL_pct = 3656;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 + 4;
    }

    // optional float suspensionTravelRL_pct = 621;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 4;
    }

    // optional float suspensionTravelFL_m = 734;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 4;
    }

    // optional float suspensionTravelRL_m = 904;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 4;
    }

    // optional float suspensionTravelFR_pct = 1466;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 4;
    }

    // optional bool isSuspensionCalibrated = 2519;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3 + 1;
    }

    // optional bool suspensionTravelFL_QF = 2271;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 + 1;
    }

  }
  if (cached_has_bits & 0x00007f00u) {
    // optional bool suspensionTravelFR_QF = 290;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool suspensionTravelRL_QF = 1411;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional uint32 uiVersionNumber = 2124;
    if (cached_has_bits & 0x00000400u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uiversionnumber());
    }

    // optional float suspensionTravelRR_pct = 2463;
    if (cached_has_bits & 0x00000800u) {
      total_size += 3 + 4;
    }

    // optional float suspensionTravelFR_m = 2748;
    if (cached_has_bits & 0x00001000u) {
      total_size += 3 + 4;
    }

    // optional float suspensionTravelRR_m = 3050;
    if (cached_has_bits & 0x00002000u) {
      total_size += 3 + 4;
    }

    // optional bool suspensionTravelRR_QF = 3198;
    if (cached_has_bits & 0x00004000u) {
      total_size += 3 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SuspensionPort::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
  GOOGLE_DCHECK_NE(&from, this);
  const SuspensionPort* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SuspensionPort>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
    MergeFrom(*source);
  }
}

void SuspensionPort::MergeFrom(const SuspensionPort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_ssigheader()->::pb::eco::signal_header::SignalHeader::MergeFrom(from._internal_ssigheader());
    }
    if (cached_has_bits & 0x00000002u) {
      suspensiontravelfl_pct_ = from.suspensiontravelfl_pct_;
    }
    if (cached_has_bits & 0x00000004u) {
      suspensiontravelrl_pct_ = from.suspensiontravelrl_pct_;
    }
    if (cached_has_bits & 0x00000008u) {
      suspensiontravelfl_m_ = from.suspensiontravelfl_m_;
    }
    if (cached_has_bits & 0x00000010u) {
      suspensiontravelrl_m_ = from.suspensiontravelrl_m_;
    }
    if (cached_has_bits & 0x00000020u) {
      suspensiontravelfr_pct_ = from.suspensiontravelfr_pct_;
    }
    if (cached_has_bits & 0x00000040u) {
      issuspensioncalibrated_ = from.issuspensioncalibrated_;
    }
    if (cached_has_bits & 0x00000080u) {
      suspensiontravelfl_qf_ = from.suspensiontravelfl_qf_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      suspensiontravelfr_qf_ = from.suspensiontravelfr_qf_;
    }
    if (cached_has_bits & 0x00000200u) {
      suspensiontravelrl_qf_ = from.suspensiontravelrl_qf_;
    }
    if (cached_has_bits & 0x00000400u) {
      uiversionnumber_ = from.uiversionnumber_;
    }
    if (cached_has_bits & 0x00000800u) {
      suspensiontravelrr_pct_ = from.suspensiontravelrr_pct_;
    }
    if (cached_has_bits & 0x00001000u) {
      suspensiontravelfr_m_ = from.suspensiontravelfr_m_;
    }
    if (cached_has_bits & 0x00002000u) {
      suspensiontravelrr_m_ = from.suspensiontravelrr_m_;
    }
    if (cached_has_bits & 0x00004000u) {
      suspensiontravelrr_qf_ = from.suspensiontravelrr_qf_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SuspensionPort::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SuspensionPort::CopyFrom(const SuspensionPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SuspensionPort::IsInitialized() const {
  return true;
}

void SuspensionPort::InternalSwap(SuspensionPort* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ssigheader_, other->ssigheader_);
  swap(suspensiontravelfl_pct_, other->suspensiontravelfl_pct_);
  swap(suspensiontravelrl_pct_, other->suspensiontravelrl_pct_);
  swap(suspensiontravelfl_m_, other->suspensiontravelfl_m_);
  swap(suspensiontravelrl_m_, other->suspensiontravelrl_m_);
  swap(suspensiontravelfr_pct_, other->suspensiontravelfr_pct_);
  swap(issuspensioncalibrated_, other->issuspensioncalibrated_);
  swap(suspensiontravelfl_qf_, other->suspensiontravelfl_qf_);
  swap(suspensiontravelfr_qf_, other->suspensiontravelfr_qf_);
  swap(suspensiontravelrl_qf_, other->suspensiontravelrl_qf_);
  swap(uiversionnumber_, other->uiversionnumber_);
  swap(suspensiontravelrr_pct_, other->suspensiontravelrr_pct_);
  swap(suspensiontravelfr_m_, other->suspensiontravelfr_m_);
  swap(suspensiontravelrr_m_, other->suspensiontravelrr_m_);
  swap(suspensiontravelrr_qf_, other->suspensiontravelrr_qf_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SuspensionPort::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SuspensionPort_array_port::InitAsDefaultInstance() {
}
class SuspensionPort_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<SuspensionPort_array_port>()._has_bits_);
};

SuspensionPort_array_port::SuspensionPort_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
}
SuspensionPort_array_port::SuspensionPort_array_port(const SuspensionPort_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
}

void SuspensionPort_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SuspensionPort_array_port_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto.base);
}

SuspensionPort_array_port::~SuspensionPort_array_port() {
  // @@protoc_insertion_point(destructor:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
  SharedDtor();
}

void SuspensionPort_array_port::SharedDtor() {
}

void SuspensionPort_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SuspensionPort_array_port& SuspensionPort_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SuspensionPort_array_port_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto.base);
  return *internal_default_instance();
}


void SuspensionPort_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* SuspensionPort_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.ap_commonvehsigprovider.suspension_port.SuspensionPort data = 1300;
      case 1300:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10402>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SuspensionPort_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ap_commonvehsigprovider.suspension_port.SuspensionPort data = 1300;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1300, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
  return target;
}

size_t SuspensionPort_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.ap_commonvehsigprovider.suspension_port.SuspensionPort data = 1300;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SuspensionPort_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const SuspensionPort_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SuspensionPort_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
    MergeFrom(*source);
  }
}

void SuspensionPort_array_port::MergeFrom(const SuspensionPort_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void SuspensionPort_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SuspensionPort_array_port::CopyFrom(const SuspensionPort_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SuspensionPort_array_port::IsInitialized() const {
  return true;
}

void SuspensionPort_array_port::InternalSwap(SuspensionPort_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SuspensionPort_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace suspension_port
}  // namespace ap_commonvehsigprovider
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort* Arena::CreateMaybeMessage< ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port* Arena::CreateMaybeMessage< ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
