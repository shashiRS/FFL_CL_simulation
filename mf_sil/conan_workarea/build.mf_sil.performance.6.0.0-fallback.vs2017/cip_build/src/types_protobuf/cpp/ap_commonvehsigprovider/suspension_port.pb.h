// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_commonvehsigprovider/suspension_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto;
namespace pb {
namespace ap_commonvehsigprovider {
namespace suspension_port {
class SuspensionPort;
class SuspensionPortDefaultTypeInternal;
extern SuspensionPortDefaultTypeInternal _SuspensionPort_default_instance_;
class SuspensionPort_array_port;
class SuspensionPort_array_portDefaultTypeInternal;
extern SuspensionPort_array_portDefaultTypeInternal _SuspensionPort_array_port_default_instance_;
}  // namespace suspension_port
}  // namespace ap_commonvehsigprovider
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort* Arena::CreateMaybeMessage<::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort>(Arena*);
template<> ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port* Arena::CreateMaybeMessage<::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_commonvehsigprovider {
namespace suspension_port {

// ===================================================================

class SuspensionPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort) */ {
 public:
  SuspensionPort();
  virtual ~SuspensionPort();

  SuspensionPort(const SuspensionPort& from);
  SuspensionPort(SuspensionPort&& from) noexcept
    : SuspensionPort() {
    *this = ::std::move(from);
  }

  inline SuspensionPort& operator=(const SuspensionPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline SuspensionPort& operator=(SuspensionPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SuspensionPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SuspensionPort* internal_default_instance() {
    return reinterpret_cast<const SuspensionPort*>(
               &_SuspensionPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SuspensionPort& a, SuspensionPort& b) {
    a.Swap(&b);
  }
  inline void Swap(SuspensionPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SuspensionPort* New() const final {
    return CreateMaybeMessage<SuspensionPort>(nullptr);
  }

  SuspensionPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SuspensionPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SuspensionPort& from);
  void MergeFrom(const SuspensionPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SuspensionPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_commonvehsigprovider.suspension_port.SuspensionPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto);
    return ::descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSSigHeaderFieldNumber = 1033,
    kSuspensionTravelFLPctFieldNumber = 3656,
    kSuspensionTravelRLPctFieldNumber = 621,
    kSuspensionTravelFLMFieldNumber = 734,
    kSuspensionTravelRLMFieldNumber = 904,
    kSuspensionTravelFRPctFieldNumber = 1466,
    kIsSuspensionCalibratedFieldNumber = 2519,
    kSuspensionTravelFLQFFieldNumber = 2271,
    kSuspensionTravelFRQFFieldNumber = 290,
    kSuspensionTravelRLQFFieldNumber = 1411,
    kUiVersionNumberFieldNumber = 2124,
    kSuspensionTravelRRPctFieldNumber = 2463,
    kSuspensionTravelFRMFieldNumber = 2748,
    kSuspensionTravelRRMFieldNumber = 3050,
    kSuspensionTravelRRQFFieldNumber = 3198,
  };
  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional float suspensionTravelFL_pct = 3656;
  bool has_suspensiontravelfl_pct() const;
  private:
  bool _internal_has_suspensiontravelfl_pct() const;
  public:
  void clear_suspensiontravelfl_pct();
  float suspensiontravelfl_pct() const;
  void set_suspensiontravelfl_pct(float value);
  private:
  float _internal_suspensiontravelfl_pct() const;
  void _internal_set_suspensiontravelfl_pct(float value);
  public:

  // optional float suspensionTravelRL_pct = 621;
  bool has_suspensiontravelrl_pct() const;
  private:
  bool _internal_has_suspensiontravelrl_pct() const;
  public:
  void clear_suspensiontravelrl_pct();
  float suspensiontravelrl_pct() const;
  void set_suspensiontravelrl_pct(float value);
  private:
  float _internal_suspensiontravelrl_pct() const;
  void _internal_set_suspensiontravelrl_pct(float value);
  public:

  // optional float suspensionTravelFL_m = 734;
  bool has_suspensiontravelfl_m() const;
  private:
  bool _internal_has_suspensiontravelfl_m() const;
  public:
  void clear_suspensiontravelfl_m();
  float suspensiontravelfl_m() const;
  void set_suspensiontravelfl_m(float value);
  private:
  float _internal_suspensiontravelfl_m() const;
  void _internal_set_suspensiontravelfl_m(float value);
  public:

  // optional float suspensionTravelRL_m = 904;
  bool has_suspensiontravelrl_m() const;
  private:
  bool _internal_has_suspensiontravelrl_m() const;
  public:
  void clear_suspensiontravelrl_m();
  float suspensiontravelrl_m() const;
  void set_suspensiontravelrl_m(float value);
  private:
  float _internal_suspensiontravelrl_m() const;
  void _internal_set_suspensiontravelrl_m(float value);
  public:

  // optional float suspensionTravelFR_pct = 1466;
  bool has_suspensiontravelfr_pct() const;
  private:
  bool _internal_has_suspensiontravelfr_pct() const;
  public:
  void clear_suspensiontravelfr_pct();
  float suspensiontravelfr_pct() const;
  void set_suspensiontravelfr_pct(float value);
  private:
  float _internal_suspensiontravelfr_pct() const;
  void _internal_set_suspensiontravelfr_pct(float value);
  public:

  // optional bool isSuspensionCalibrated = 2519;
  bool has_issuspensioncalibrated() const;
  private:
  bool _internal_has_issuspensioncalibrated() const;
  public:
  void clear_issuspensioncalibrated();
  bool issuspensioncalibrated() const;
  void set_issuspensioncalibrated(bool value);
  private:
  bool _internal_issuspensioncalibrated() const;
  void _internal_set_issuspensioncalibrated(bool value);
  public:

  // optional bool suspensionTravelFL_QF = 2271;
  bool has_suspensiontravelfl_qf() const;
  private:
  bool _internal_has_suspensiontravelfl_qf() const;
  public:
  void clear_suspensiontravelfl_qf();
  bool suspensiontravelfl_qf() const;
  void set_suspensiontravelfl_qf(bool value);
  private:
  bool _internal_suspensiontravelfl_qf() const;
  void _internal_set_suspensiontravelfl_qf(bool value);
  public:

  // optional bool suspensionTravelFR_QF = 290;
  bool has_suspensiontravelfr_qf() const;
  private:
  bool _internal_has_suspensiontravelfr_qf() const;
  public:
  void clear_suspensiontravelfr_qf();
  bool suspensiontravelfr_qf() const;
  void set_suspensiontravelfr_qf(bool value);
  private:
  bool _internal_suspensiontravelfr_qf() const;
  void _internal_set_suspensiontravelfr_qf(bool value);
  public:

  // optional bool suspensionTravelRL_QF = 1411;
  bool has_suspensiontravelrl_qf() const;
  private:
  bool _internal_has_suspensiontravelrl_qf() const;
  public:
  void clear_suspensiontravelrl_qf();
  bool suspensiontravelrl_qf() const;
  void set_suspensiontravelrl_qf(bool value);
  private:
  bool _internal_suspensiontravelrl_qf() const;
  void _internal_set_suspensiontravelrl_qf(bool value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float suspensionTravelRR_pct = 2463;
  bool has_suspensiontravelrr_pct() const;
  private:
  bool _internal_has_suspensiontravelrr_pct() const;
  public:
  void clear_suspensiontravelrr_pct();
  float suspensiontravelrr_pct() const;
  void set_suspensiontravelrr_pct(float value);
  private:
  float _internal_suspensiontravelrr_pct() const;
  void _internal_set_suspensiontravelrr_pct(float value);
  public:

  // optional float suspensionTravelFR_m = 2748;
  bool has_suspensiontravelfr_m() const;
  private:
  bool _internal_has_suspensiontravelfr_m() const;
  public:
  void clear_suspensiontravelfr_m();
  float suspensiontravelfr_m() const;
  void set_suspensiontravelfr_m(float value);
  private:
  float _internal_suspensiontravelfr_m() const;
  void _internal_set_suspensiontravelfr_m(float value);
  public:

  // optional float suspensionTravelRR_m = 3050;
  bool has_suspensiontravelrr_m() const;
  private:
  bool _internal_has_suspensiontravelrr_m() const;
  public:
  void clear_suspensiontravelrr_m();
  float suspensiontravelrr_m() const;
  void set_suspensiontravelrr_m(float value);
  private:
  float _internal_suspensiontravelrr_m() const;
  void _internal_set_suspensiontravelrr_m(float value);
  public:

  // optional bool suspensionTravelRR_QF = 3198;
  bool has_suspensiontravelrr_qf() const;
  private:
  bool _internal_has_suspensiontravelrr_qf() const;
  public:
  void clear_suspensiontravelrr_qf();
  bool suspensiontravelrr_qf() const;
  void set_suspensiontravelrr_qf(bool value);
  private:
  bool _internal_suspensiontravelrr_qf() const;
  void _internal_set_suspensiontravelrr_qf(bool value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  float suspensiontravelfl_pct_;
  float suspensiontravelrl_pct_;
  float suspensiontravelfl_m_;
  float suspensiontravelrl_m_;
  float suspensiontravelfr_pct_;
  bool issuspensioncalibrated_;
  bool suspensiontravelfl_qf_;
  bool suspensiontravelfr_qf_;
  bool suspensiontravelrl_qf_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  float suspensiontravelrr_pct_;
  float suspensiontravelfr_m_;
  float suspensiontravelrr_m_;
  bool suspensiontravelrr_qf_;
  friend struct ::TableStruct_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto;
};
// -------------------------------------------------------------------

class SuspensionPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port) */ {
 public:
  SuspensionPort_array_port();
  virtual ~SuspensionPort_array_port();

  SuspensionPort_array_port(const SuspensionPort_array_port& from);
  SuspensionPort_array_port(SuspensionPort_array_port&& from) noexcept
    : SuspensionPort_array_port() {
    *this = ::std::move(from);
  }

  inline SuspensionPort_array_port& operator=(const SuspensionPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline SuspensionPort_array_port& operator=(SuspensionPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SuspensionPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SuspensionPort_array_port* internal_default_instance() {
    return reinterpret_cast<const SuspensionPort_array_port*>(
               &_SuspensionPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SuspensionPort_array_port& a, SuspensionPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(SuspensionPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SuspensionPort_array_port* New() const final {
    return CreateMaybeMessage<SuspensionPort_array_port>(nullptr);
  }

  SuspensionPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SuspensionPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SuspensionPort_array_port& from);
  void MergeFrom(const SuspensionPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SuspensionPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto);
    return ::descriptor_table_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1300,
  };
  // repeated .pb.ap_commonvehsigprovider.suspension_port.SuspensionPort data = 1300;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort >*
      mutable_data();
  private:
  const ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort& _internal_data(int index) const;
  ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort* _internal_add_data();
  public:
  const ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort& data(int index) const;
  ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort > data_;
  friend struct ::TableStruct_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SuspensionPort

// optional uint32 uiVersionNumber = 2124;
inline bool SuspensionPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool SuspensionPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void SuspensionPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SuspensionPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SuspensionPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void SuspensionPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  uiversionnumber_ = value;
}
inline void SuspensionPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool SuspensionPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool SuspensionPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& SuspensionPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& SuspensionPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* SuspensionPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* SuspensionPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* SuspensionPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void SuspensionPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.sSigHeader)
}

// optional float suspensionTravelFL_m = 734;
inline bool SuspensionPort::_internal_has_suspensiontravelfl_m() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelfl_m() const {
  return _internal_has_suspensiontravelfl_m();
}
inline void SuspensionPort::clear_suspensiontravelfl_m() {
  suspensiontravelfl_m_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float SuspensionPort::_internal_suspensiontravelfl_m() const {
  return suspensiontravelfl_m_;
}
inline float SuspensionPort::suspensiontravelfl_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFL_m)
  return _internal_suspensiontravelfl_m();
}
inline void SuspensionPort::_internal_set_suspensiontravelfl_m(float value) {
  _has_bits_[0] |= 0x00000008u;
  suspensiontravelfl_m_ = value;
}
inline void SuspensionPort::set_suspensiontravelfl_m(float value) {
  _internal_set_suspensiontravelfl_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFL_m)
}

// optional float suspensionTravelFR_m = 2748;
inline bool SuspensionPort::_internal_has_suspensiontravelfr_m() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelfr_m() const {
  return _internal_has_suspensiontravelfr_m();
}
inline void SuspensionPort::clear_suspensiontravelfr_m() {
  suspensiontravelfr_m_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline float SuspensionPort::_internal_suspensiontravelfr_m() const {
  return suspensiontravelfr_m_;
}
inline float SuspensionPort::suspensiontravelfr_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFR_m)
  return _internal_suspensiontravelfr_m();
}
inline void SuspensionPort::_internal_set_suspensiontravelfr_m(float value) {
  _has_bits_[0] |= 0x00001000u;
  suspensiontravelfr_m_ = value;
}
inline void SuspensionPort::set_suspensiontravelfr_m(float value) {
  _internal_set_suspensiontravelfr_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFR_m)
}

// optional float suspensionTravelRL_m = 904;
inline bool SuspensionPort::_internal_has_suspensiontravelrl_m() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelrl_m() const {
  return _internal_has_suspensiontravelrl_m();
}
inline void SuspensionPort::clear_suspensiontravelrl_m() {
  suspensiontravelrl_m_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float SuspensionPort::_internal_suspensiontravelrl_m() const {
  return suspensiontravelrl_m_;
}
inline float SuspensionPort::suspensiontravelrl_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRL_m)
  return _internal_suspensiontravelrl_m();
}
inline void SuspensionPort::_internal_set_suspensiontravelrl_m(float value) {
  _has_bits_[0] |= 0x00000010u;
  suspensiontravelrl_m_ = value;
}
inline void SuspensionPort::set_suspensiontravelrl_m(float value) {
  _internal_set_suspensiontravelrl_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRL_m)
}

// optional float suspensionTravelRR_m = 3050;
inline bool SuspensionPort::_internal_has_suspensiontravelrr_m() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelrr_m() const {
  return _internal_has_suspensiontravelrr_m();
}
inline void SuspensionPort::clear_suspensiontravelrr_m() {
  suspensiontravelrr_m_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline float SuspensionPort::_internal_suspensiontravelrr_m() const {
  return suspensiontravelrr_m_;
}
inline float SuspensionPort::suspensiontravelrr_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRR_m)
  return _internal_suspensiontravelrr_m();
}
inline void SuspensionPort::_internal_set_suspensiontravelrr_m(float value) {
  _has_bits_[0] |= 0x00002000u;
  suspensiontravelrr_m_ = value;
}
inline void SuspensionPort::set_suspensiontravelrr_m(float value) {
  _internal_set_suspensiontravelrr_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRR_m)
}

// optional float suspensionTravelFL_pct = 3656;
inline bool SuspensionPort::_internal_has_suspensiontravelfl_pct() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelfl_pct() const {
  return _internal_has_suspensiontravelfl_pct();
}
inline void SuspensionPort::clear_suspensiontravelfl_pct() {
  suspensiontravelfl_pct_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float SuspensionPort::_internal_suspensiontravelfl_pct() const {
  return suspensiontravelfl_pct_;
}
inline float SuspensionPort::suspensiontravelfl_pct() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFL_pct)
  return _internal_suspensiontravelfl_pct();
}
inline void SuspensionPort::_internal_set_suspensiontravelfl_pct(float value) {
  _has_bits_[0] |= 0x00000002u;
  suspensiontravelfl_pct_ = value;
}
inline void SuspensionPort::set_suspensiontravelfl_pct(float value) {
  _internal_set_suspensiontravelfl_pct(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFL_pct)
}

// optional float suspensionTravelFR_pct = 1466;
inline bool SuspensionPort::_internal_has_suspensiontravelfr_pct() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelfr_pct() const {
  return _internal_has_suspensiontravelfr_pct();
}
inline void SuspensionPort::clear_suspensiontravelfr_pct() {
  suspensiontravelfr_pct_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float SuspensionPort::_internal_suspensiontravelfr_pct() const {
  return suspensiontravelfr_pct_;
}
inline float SuspensionPort::suspensiontravelfr_pct() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFR_pct)
  return _internal_suspensiontravelfr_pct();
}
inline void SuspensionPort::_internal_set_suspensiontravelfr_pct(float value) {
  _has_bits_[0] |= 0x00000020u;
  suspensiontravelfr_pct_ = value;
}
inline void SuspensionPort::set_suspensiontravelfr_pct(float value) {
  _internal_set_suspensiontravelfr_pct(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFR_pct)
}

// optional float suspensionTravelRL_pct = 621;
inline bool SuspensionPort::_internal_has_suspensiontravelrl_pct() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelrl_pct() const {
  return _internal_has_suspensiontravelrl_pct();
}
inline void SuspensionPort::clear_suspensiontravelrl_pct() {
  suspensiontravelrl_pct_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float SuspensionPort::_internal_suspensiontravelrl_pct() const {
  return suspensiontravelrl_pct_;
}
inline float SuspensionPort::suspensiontravelrl_pct() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRL_pct)
  return _internal_suspensiontravelrl_pct();
}
inline void SuspensionPort::_internal_set_suspensiontravelrl_pct(float value) {
  _has_bits_[0] |= 0x00000004u;
  suspensiontravelrl_pct_ = value;
}
inline void SuspensionPort::set_suspensiontravelrl_pct(float value) {
  _internal_set_suspensiontravelrl_pct(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRL_pct)
}

// optional float suspensionTravelRR_pct = 2463;
inline bool SuspensionPort::_internal_has_suspensiontravelrr_pct() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelrr_pct() const {
  return _internal_has_suspensiontravelrr_pct();
}
inline void SuspensionPort::clear_suspensiontravelrr_pct() {
  suspensiontravelrr_pct_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline float SuspensionPort::_internal_suspensiontravelrr_pct() const {
  return suspensiontravelrr_pct_;
}
inline float SuspensionPort::suspensiontravelrr_pct() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRR_pct)
  return _internal_suspensiontravelrr_pct();
}
inline void SuspensionPort::_internal_set_suspensiontravelrr_pct(float value) {
  _has_bits_[0] |= 0x00000800u;
  suspensiontravelrr_pct_ = value;
}
inline void SuspensionPort::set_suspensiontravelrr_pct(float value) {
  _internal_set_suspensiontravelrr_pct(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRR_pct)
}

// optional bool isSuspensionCalibrated = 2519;
inline bool SuspensionPort::_internal_has_issuspensioncalibrated() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool SuspensionPort::has_issuspensioncalibrated() const {
  return _internal_has_issuspensioncalibrated();
}
inline void SuspensionPort::clear_issuspensioncalibrated() {
  issuspensioncalibrated_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool SuspensionPort::_internal_issuspensioncalibrated() const {
  return issuspensioncalibrated_;
}
inline bool SuspensionPort::issuspensioncalibrated() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.isSuspensionCalibrated)
  return _internal_issuspensioncalibrated();
}
inline void SuspensionPort::_internal_set_issuspensioncalibrated(bool value) {
  _has_bits_[0] |= 0x00000040u;
  issuspensioncalibrated_ = value;
}
inline void SuspensionPort::set_issuspensioncalibrated(bool value) {
  _internal_set_issuspensioncalibrated(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.isSuspensionCalibrated)
}

// optional bool suspensionTravelFL_QF = 2271;
inline bool SuspensionPort::_internal_has_suspensiontravelfl_qf() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelfl_qf() const {
  return _internal_has_suspensiontravelfl_qf();
}
inline void SuspensionPort::clear_suspensiontravelfl_qf() {
  suspensiontravelfl_qf_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool SuspensionPort::_internal_suspensiontravelfl_qf() const {
  return suspensiontravelfl_qf_;
}
inline bool SuspensionPort::suspensiontravelfl_qf() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFL_QF)
  return _internal_suspensiontravelfl_qf();
}
inline void SuspensionPort::_internal_set_suspensiontravelfl_qf(bool value) {
  _has_bits_[0] |= 0x00000080u;
  suspensiontravelfl_qf_ = value;
}
inline void SuspensionPort::set_suspensiontravelfl_qf(bool value) {
  _internal_set_suspensiontravelfl_qf(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFL_QF)
}

// optional bool suspensionTravelFR_QF = 290;
inline bool SuspensionPort::_internal_has_suspensiontravelfr_qf() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelfr_qf() const {
  return _internal_has_suspensiontravelfr_qf();
}
inline void SuspensionPort::clear_suspensiontravelfr_qf() {
  suspensiontravelfr_qf_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool SuspensionPort::_internal_suspensiontravelfr_qf() const {
  return suspensiontravelfr_qf_;
}
inline bool SuspensionPort::suspensiontravelfr_qf() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFR_QF)
  return _internal_suspensiontravelfr_qf();
}
inline void SuspensionPort::_internal_set_suspensiontravelfr_qf(bool value) {
  _has_bits_[0] |= 0x00000100u;
  suspensiontravelfr_qf_ = value;
}
inline void SuspensionPort::set_suspensiontravelfr_qf(bool value) {
  _internal_set_suspensiontravelfr_qf(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelFR_QF)
}

// optional bool suspensionTravelRL_QF = 1411;
inline bool SuspensionPort::_internal_has_suspensiontravelrl_qf() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelrl_qf() const {
  return _internal_has_suspensiontravelrl_qf();
}
inline void SuspensionPort::clear_suspensiontravelrl_qf() {
  suspensiontravelrl_qf_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool SuspensionPort::_internal_suspensiontravelrl_qf() const {
  return suspensiontravelrl_qf_;
}
inline bool SuspensionPort::suspensiontravelrl_qf() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRL_QF)
  return _internal_suspensiontravelrl_qf();
}
inline void SuspensionPort::_internal_set_suspensiontravelrl_qf(bool value) {
  _has_bits_[0] |= 0x00000200u;
  suspensiontravelrl_qf_ = value;
}
inline void SuspensionPort::set_suspensiontravelrl_qf(bool value) {
  _internal_set_suspensiontravelrl_qf(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRL_QF)
}

// optional bool suspensionTravelRR_QF = 3198;
inline bool SuspensionPort::_internal_has_suspensiontravelrr_qf() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool SuspensionPort::has_suspensiontravelrr_qf() const {
  return _internal_has_suspensiontravelrr_qf();
}
inline void SuspensionPort::clear_suspensiontravelrr_qf() {
  suspensiontravelrr_qf_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool SuspensionPort::_internal_suspensiontravelrr_qf() const {
  return suspensiontravelrr_qf_;
}
inline bool SuspensionPort::suspensiontravelrr_qf() const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRR_QF)
  return _internal_suspensiontravelrr_qf();
}
inline void SuspensionPort::_internal_set_suspensiontravelrr_qf(bool value) {
  _has_bits_[0] |= 0x00004000u;
  suspensiontravelrr_qf_ = value;
}
inline void SuspensionPort::set_suspensiontravelrr_qf(bool value) {
  _internal_set_suspensiontravelrr_qf(value);
  // @@protoc_insertion_point(field_set:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort.suspensionTravelRR_QF)
}

// -------------------------------------------------------------------

// SuspensionPort_array_port

// repeated .pb.ap_commonvehsigprovider.suspension_port.SuspensionPort data = 1300;
inline int SuspensionPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int SuspensionPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void SuspensionPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort* SuspensionPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort >*
SuspensionPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port.data)
  return &data_;
}
inline const ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort& SuspensionPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort& SuspensionPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort* SuspensionPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort* SuspensionPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_commonvehsigprovider::suspension_port::SuspensionPort >&
SuspensionPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_commonvehsigprovider.suspension_port.SuspensionPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace suspension_port
}  // namespace ap_commonvehsigprovider
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5fcommonvehsigprovider_2fsuspension_5fport_2eproto
