// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_tp/planned_geometric_path_output.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto;
namespace pb {
namespace ap_tp {
namespace planned_geometric_path_output {
class PlannedGeometricPathOutput;
class PlannedGeometricPathOutputDefaultTypeInternal;
extern PlannedGeometricPathOutputDefaultTypeInternal _PlannedGeometricPathOutput_default_instance_;
class PlannedGeometricPathOutput_array_port;
class PlannedGeometricPathOutput_array_portDefaultTypeInternal;
extern PlannedGeometricPathOutput_array_portDefaultTypeInternal _PlannedGeometricPathOutput_array_port_default_instance_;
}  // namespace planned_geometric_path_output
}  // namespace ap_tp
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput* Arena::CreateMaybeMessage<::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput>(Arena*);
template<> ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput_array_port* Arena::CreateMaybeMessage<::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_tp {
namespace planned_geometric_path_output {

// ===================================================================

class PlannedGeometricPathOutput :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput) */ {
 public:
  PlannedGeometricPathOutput();
  virtual ~PlannedGeometricPathOutput();

  PlannedGeometricPathOutput(const PlannedGeometricPathOutput& from);
  PlannedGeometricPathOutput(PlannedGeometricPathOutput&& from) noexcept
    : PlannedGeometricPathOutput() {
    *this = ::std::move(from);
  }

  inline PlannedGeometricPathOutput& operator=(const PlannedGeometricPathOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlannedGeometricPathOutput& operator=(PlannedGeometricPathOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlannedGeometricPathOutput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlannedGeometricPathOutput* internal_default_instance() {
    return reinterpret_cast<const PlannedGeometricPathOutput*>(
               &_PlannedGeometricPathOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PlannedGeometricPathOutput& a, PlannedGeometricPathOutput& b) {
    a.Swap(&b);
  }
  inline void Swap(PlannedGeometricPathOutput* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlannedGeometricPathOutput* New() const final {
    return CreateMaybeMessage<PlannedGeometricPathOutput>(nullptr);
  }

  PlannedGeometricPathOutput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlannedGeometricPathOutput>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlannedGeometricPathOutput& from);
  void MergeFrom(const PlannedGeometricPathOutput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlannedGeometricPathOutput* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto);
    return ::descriptor_table_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartPoseFieldNumber = 369,
    kRotationCenterMFieldNumber = 1187,
    kEndPoseFieldNumber = 1886,
    kRotationCenterSecondMFieldNumber = 3145,
    kLongVelMpsFieldNumber = 2236,
    kSteerDirFieldNumber = 427,
    kTurnRadiusMFieldNumber = 476,
    kPlanPhaseFieldNumber = 1087,
    kDrvDirFieldNumber = 1249,
    kLengthMFieldNumber = 1293,
    kTurnRadiusSecondMFieldNumber = 1675,
  };
  // repeated float startPose = 369;
  int startpose_size() const;
  private:
  int _internal_startpose_size() const;
  public:
  void clear_startpose();
  private:
  float _internal_startpose(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_startpose() const;
  void _internal_add_startpose(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_startpose();
  public:
  float startpose(int index) const;
  void set_startpose(int index, float value);
  void add_startpose(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      startpose() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_startpose();

  // repeated float rotationCenter_m = 1187;
  int rotationcenter_m_size() const;
  private:
  int _internal_rotationcenter_m_size() const;
  public:
  void clear_rotationcenter_m();
  private:
  float _internal_rotationcenter_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_rotationcenter_m() const;
  void _internal_add_rotationcenter_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_rotationcenter_m();
  public:
  float rotationcenter_m(int index) const;
  void set_rotationcenter_m(int index, float value);
  void add_rotationcenter_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      rotationcenter_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_rotationcenter_m();

  // repeated float endPose = 1886;
  int endpose_size() const;
  private:
  int _internal_endpose_size() const;
  public:
  void clear_endpose();
  private:
  float _internal_endpose(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_endpose() const;
  void _internal_add_endpose(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_endpose();
  public:
  float endpose(int index) const;
  void set_endpose(int index, float value);
  void add_endpose(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      endpose() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_endpose();

  // repeated float rotationCenterSecond_m = 3145;
  int rotationcentersecond_m_size() const;
  private:
  int _internal_rotationcentersecond_m_size() const;
  public:
  void clear_rotationcentersecond_m();
  private:
  float _internal_rotationcentersecond_m(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_rotationcentersecond_m() const;
  void _internal_add_rotationcentersecond_m(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_rotationcentersecond_m();
  public:
  float rotationcentersecond_m(int index) const;
  void set_rotationcentersecond_m(int index, float value);
  void add_rotationcentersecond_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      rotationcentersecond_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_rotationcentersecond_m();

  // optional float longVel_mps = 2236;
  bool has_longvel_mps() const;
  private:
  bool _internal_has_longvel_mps() const;
  public:
  void clear_longvel_mps();
  float longvel_mps() const;
  void set_longvel_mps(float value);
  private:
  float _internal_longvel_mps() const;
  void _internal_set_longvel_mps(float value);
  public:

  // optional uint32 steerDir = 427;
  bool has_steerdir() const;
  private:
  bool _internal_has_steerdir() const;
  public:
  void clear_steerdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 steerdir() const;
  void set_steerdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_steerdir() const;
  void _internal_set_steerdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float turnRadius_m = 476;
  bool has_turnradius_m() const;
  private:
  bool _internal_has_turnradius_m() const;
  public:
  void clear_turnradius_m();
  float turnradius_m() const;
  void set_turnradius_m(float value);
  private:
  float _internal_turnradius_m() const;
  void _internal_set_turnradius_m(float value);
  public:

  // optional uint32 planPhase = 1087;
  bool has_planphase() const;
  private:
  bool _internal_has_planphase() const;
  public:
  void clear_planphase();
  ::PROTOBUF_NAMESPACE_ID::uint32 planphase() const;
  void set_planphase(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_planphase() const;
  void _internal_set_planphase(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 drvDir = 1249;
  bool has_drvdir() const;
  private:
  bool _internal_has_drvdir() const;
  public:
  void clear_drvdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 drvdir() const;
  void set_drvdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_drvdir() const;
  void _internal_set_drvdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float length_m = 1293;
  bool has_length_m() const;
  private:
  bool _internal_has_length_m() const;
  public:
  void clear_length_m();
  float length_m() const;
  void set_length_m(float value);
  private:
  float _internal_length_m() const;
  void _internal_set_length_m(float value);
  public:

  // optional float turnRadiusSecond_m = 1675;
  bool has_turnradiussecond_m() const;
  private:
  bool _internal_has_turnradiussecond_m() const;
  public:
  void clear_turnradiussecond_m();
  float turnradiussecond_m() const;
  void set_turnradiussecond_m(float value);
  private:
  float _internal_turnradiussecond_m() const;
  void _internal_set_turnradiussecond_m(float value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > startpose_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > rotationcenter_m_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > endpose_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > rotationcentersecond_m_;
  float longvel_mps_;
  ::PROTOBUF_NAMESPACE_ID::uint32 steerdir_;
  float turnradius_m_;
  ::PROTOBUF_NAMESPACE_ID::uint32 planphase_;
  ::PROTOBUF_NAMESPACE_ID::uint32 drvdir_;
  float length_m_;
  float turnradiussecond_m_;
  friend struct ::TableStruct_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto;
};
// -------------------------------------------------------------------

class PlannedGeometricPathOutput_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput_array_port) */ {
 public:
  PlannedGeometricPathOutput_array_port();
  virtual ~PlannedGeometricPathOutput_array_port();

  PlannedGeometricPathOutput_array_port(const PlannedGeometricPathOutput_array_port& from);
  PlannedGeometricPathOutput_array_port(PlannedGeometricPathOutput_array_port&& from) noexcept
    : PlannedGeometricPathOutput_array_port() {
    *this = ::std::move(from);
  }

  inline PlannedGeometricPathOutput_array_port& operator=(const PlannedGeometricPathOutput_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlannedGeometricPathOutput_array_port& operator=(PlannedGeometricPathOutput_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlannedGeometricPathOutput_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlannedGeometricPathOutput_array_port* internal_default_instance() {
    return reinterpret_cast<const PlannedGeometricPathOutput_array_port*>(
               &_PlannedGeometricPathOutput_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PlannedGeometricPathOutput_array_port& a, PlannedGeometricPathOutput_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(PlannedGeometricPathOutput_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlannedGeometricPathOutput_array_port* New() const final {
    return CreateMaybeMessage<PlannedGeometricPathOutput_array_port>(nullptr);
  }

  PlannedGeometricPathOutput_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlannedGeometricPathOutput_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlannedGeometricPathOutput_array_port& from);
  void MergeFrom(const PlannedGeometricPathOutput_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlannedGeometricPathOutput_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto);
    return ::descriptor_table_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 578,
  };
  // repeated .pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput data = 578;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput >*
      mutable_data();
  private:
  const ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput& _internal_data(int index) const;
  ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput* _internal_add_data();
  public:
  const ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput& data(int index) const;
  ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput > data_;
  friend struct ::TableStruct_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlannedGeometricPathOutput

// repeated float startPose = 369;
inline int PlannedGeometricPathOutput::_internal_startpose_size() const {
  return startpose_.size();
}
inline int PlannedGeometricPathOutput::startpose_size() const {
  return _internal_startpose_size();
}
inline void PlannedGeometricPathOutput::clear_startpose() {
  startpose_.Clear();
}
inline float PlannedGeometricPathOutput::_internal_startpose(int index) const {
  return startpose_.Get(index);
}
inline float PlannedGeometricPathOutput::startpose(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.startPose)
  return _internal_startpose(index);
}
inline void PlannedGeometricPathOutput::set_startpose(int index, float value) {
  startpose_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.startPose)
}
inline void PlannedGeometricPathOutput::_internal_add_startpose(float value) {
  startpose_.Add(value);
}
inline void PlannedGeometricPathOutput::add_startpose(float value) {
  _internal_add_startpose(value);
  // @@protoc_insertion_point(field_add:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.startPose)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PlannedGeometricPathOutput::_internal_startpose() const {
  return startpose_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PlannedGeometricPathOutput::startpose() const {
  // @@protoc_insertion_point(field_list:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.startPose)
  return _internal_startpose();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PlannedGeometricPathOutput::_internal_mutable_startpose() {
  return &startpose_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PlannedGeometricPathOutput::mutable_startpose() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.startPose)
  return _internal_mutable_startpose();
}

// repeated float endPose = 1886;
inline int PlannedGeometricPathOutput::_internal_endpose_size() const {
  return endpose_.size();
}
inline int PlannedGeometricPathOutput::endpose_size() const {
  return _internal_endpose_size();
}
inline void PlannedGeometricPathOutput::clear_endpose() {
  endpose_.Clear();
}
inline float PlannedGeometricPathOutput::_internal_endpose(int index) const {
  return endpose_.Get(index);
}
inline float PlannedGeometricPathOutput::endpose(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.endPose)
  return _internal_endpose(index);
}
inline void PlannedGeometricPathOutput::set_endpose(int index, float value) {
  endpose_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.endPose)
}
inline void PlannedGeometricPathOutput::_internal_add_endpose(float value) {
  endpose_.Add(value);
}
inline void PlannedGeometricPathOutput::add_endpose(float value) {
  _internal_add_endpose(value);
  // @@protoc_insertion_point(field_add:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.endPose)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PlannedGeometricPathOutput::_internal_endpose() const {
  return endpose_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PlannedGeometricPathOutput::endpose() const {
  // @@protoc_insertion_point(field_list:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.endPose)
  return _internal_endpose();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PlannedGeometricPathOutput::_internal_mutable_endpose() {
  return &endpose_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PlannedGeometricPathOutput::mutable_endpose() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.endPose)
  return _internal_mutable_endpose();
}

// optional float turnRadius_m = 476;
inline bool PlannedGeometricPathOutput::_internal_has_turnradius_m() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PlannedGeometricPathOutput::has_turnradius_m() const {
  return _internal_has_turnradius_m();
}
inline void PlannedGeometricPathOutput::clear_turnradius_m() {
  turnradius_m_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float PlannedGeometricPathOutput::_internal_turnradius_m() const {
  return turnradius_m_;
}
inline float PlannedGeometricPathOutput::turnradius_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.turnRadius_m)
  return _internal_turnradius_m();
}
inline void PlannedGeometricPathOutput::_internal_set_turnradius_m(float value) {
  _has_bits_[0] |= 0x00000004u;
  turnradius_m_ = value;
}
inline void PlannedGeometricPathOutput::set_turnradius_m(float value) {
  _internal_set_turnradius_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.turnRadius_m)
}

// optional float turnRadiusSecond_m = 1675;
inline bool PlannedGeometricPathOutput::_internal_has_turnradiussecond_m() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool PlannedGeometricPathOutput::has_turnradiussecond_m() const {
  return _internal_has_turnradiussecond_m();
}
inline void PlannedGeometricPathOutput::clear_turnradiussecond_m() {
  turnradiussecond_m_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float PlannedGeometricPathOutput::_internal_turnradiussecond_m() const {
  return turnradiussecond_m_;
}
inline float PlannedGeometricPathOutput::turnradiussecond_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.turnRadiusSecond_m)
  return _internal_turnradiussecond_m();
}
inline void PlannedGeometricPathOutput::_internal_set_turnradiussecond_m(float value) {
  _has_bits_[0] |= 0x00000040u;
  turnradiussecond_m_ = value;
}
inline void PlannedGeometricPathOutput::set_turnradiussecond_m(float value) {
  _internal_set_turnradiussecond_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.turnRadiusSecond_m)
}

// optional uint32 drvDir = 1249;
inline bool PlannedGeometricPathOutput::_internal_has_drvdir() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PlannedGeometricPathOutput::has_drvdir() const {
  return _internal_has_drvdir();
}
inline void PlannedGeometricPathOutput::clear_drvdir() {
  drvdir_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PlannedGeometricPathOutput::_internal_drvdir() const {
  return drvdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PlannedGeometricPathOutput::drvdir() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.drvDir)
  return _internal_drvdir();
}
inline void PlannedGeometricPathOutput::_internal_set_drvdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  drvdir_ = value;
}
inline void PlannedGeometricPathOutput::set_drvdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_drvdir(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.drvDir)
}

// optional uint32 steerDir = 427;
inline bool PlannedGeometricPathOutput::_internal_has_steerdir() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PlannedGeometricPathOutput::has_steerdir() const {
  return _internal_has_steerdir();
}
inline void PlannedGeometricPathOutput::clear_steerdir() {
  steerdir_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PlannedGeometricPathOutput::_internal_steerdir() const {
  return steerdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PlannedGeometricPathOutput::steerdir() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.steerDir)
  return _internal_steerdir();
}
inline void PlannedGeometricPathOutput::_internal_set_steerdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  steerdir_ = value;
}
inline void PlannedGeometricPathOutput::set_steerdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_steerdir(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.steerDir)
}

// optional float longVel_mps = 2236;
inline bool PlannedGeometricPathOutput::_internal_has_longvel_mps() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PlannedGeometricPathOutput::has_longvel_mps() const {
  return _internal_has_longvel_mps();
}
inline void PlannedGeometricPathOutput::clear_longvel_mps() {
  longvel_mps_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float PlannedGeometricPathOutput::_internal_longvel_mps() const {
  return longvel_mps_;
}
inline float PlannedGeometricPathOutput::longvel_mps() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.longVel_mps)
  return _internal_longvel_mps();
}
inline void PlannedGeometricPathOutput::_internal_set_longvel_mps(float value) {
  _has_bits_[0] |= 0x00000001u;
  longvel_mps_ = value;
}
inline void PlannedGeometricPathOutput::set_longvel_mps(float value) {
  _internal_set_longvel_mps(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.longVel_mps)
}

// optional float length_m = 1293;
inline bool PlannedGeometricPathOutput::_internal_has_length_m() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PlannedGeometricPathOutput::has_length_m() const {
  return _internal_has_length_m();
}
inline void PlannedGeometricPathOutput::clear_length_m() {
  length_m_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float PlannedGeometricPathOutput::_internal_length_m() const {
  return length_m_;
}
inline float PlannedGeometricPathOutput::length_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.length_m)
  return _internal_length_m();
}
inline void PlannedGeometricPathOutput::_internal_set_length_m(float value) {
  _has_bits_[0] |= 0x00000020u;
  length_m_ = value;
}
inline void PlannedGeometricPathOutput::set_length_m(float value) {
  _internal_set_length_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.length_m)
}

// repeated float rotationCenter_m = 1187;
inline int PlannedGeometricPathOutput::_internal_rotationcenter_m_size() const {
  return rotationcenter_m_.size();
}
inline int PlannedGeometricPathOutput::rotationcenter_m_size() const {
  return _internal_rotationcenter_m_size();
}
inline void PlannedGeometricPathOutput::clear_rotationcenter_m() {
  rotationcenter_m_.Clear();
}
inline float PlannedGeometricPathOutput::_internal_rotationcenter_m(int index) const {
  return rotationcenter_m_.Get(index);
}
inline float PlannedGeometricPathOutput::rotationcenter_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.rotationCenter_m)
  return _internal_rotationcenter_m(index);
}
inline void PlannedGeometricPathOutput::set_rotationcenter_m(int index, float value) {
  rotationcenter_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.rotationCenter_m)
}
inline void PlannedGeometricPathOutput::_internal_add_rotationcenter_m(float value) {
  rotationcenter_m_.Add(value);
}
inline void PlannedGeometricPathOutput::add_rotationcenter_m(float value) {
  _internal_add_rotationcenter_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.rotationCenter_m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PlannedGeometricPathOutput::_internal_rotationcenter_m() const {
  return rotationcenter_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PlannedGeometricPathOutput::rotationcenter_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.rotationCenter_m)
  return _internal_rotationcenter_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PlannedGeometricPathOutput::_internal_mutable_rotationcenter_m() {
  return &rotationcenter_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PlannedGeometricPathOutput::mutable_rotationcenter_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.rotationCenter_m)
  return _internal_mutable_rotationcenter_m();
}

// repeated float rotationCenterSecond_m = 3145;
inline int PlannedGeometricPathOutput::_internal_rotationcentersecond_m_size() const {
  return rotationcentersecond_m_.size();
}
inline int PlannedGeometricPathOutput::rotationcentersecond_m_size() const {
  return _internal_rotationcentersecond_m_size();
}
inline void PlannedGeometricPathOutput::clear_rotationcentersecond_m() {
  rotationcentersecond_m_.Clear();
}
inline float PlannedGeometricPathOutput::_internal_rotationcentersecond_m(int index) const {
  return rotationcentersecond_m_.Get(index);
}
inline float PlannedGeometricPathOutput::rotationcentersecond_m(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.rotationCenterSecond_m)
  return _internal_rotationcentersecond_m(index);
}
inline void PlannedGeometricPathOutput::set_rotationcentersecond_m(int index, float value) {
  rotationcentersecond_m_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.rotationCenterSecond_m)
}
inline void PlannedGeometricPathOutput::_internal_add_rotationcentersecond_m(float value) {
  rotationcentersecond_m_.Add(value);
}
inline void PlannedGeometricPathOutput::add_rotationcentersecond_m(float value) {
  _internal_add_rotationcentersecond_m(value);
  // @@protoc_insertion_point(field_add:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.rotationCenterSecond_m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PlannedGeometricPathOutput::_internal_rotationcentersecond_m() const {
  return rotationcentersecond_m_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PlannedGeometricPathOutput::rotationcentersecond_m() const {
  // @@protoc_insertion_point(field_list:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.rotationCenterSecond_m)
  return _internal_rotationcentersecond_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PlannedGeometricPathOutput::_internal_mutable_rotationcentersecond_m() {
  return &rotationcentersecond_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PlannedGeometricPathOutput::mutable_rotationcentersecond_m() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.rotationCenterSecond_m)
  return _internal_mutable_rotationcentersecond_m();
}

// optional uint32 planPhase = 1087;
inline bool PlannedGeometricPathOutput::_internal_has_planphase() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PlannedGeometricPathOutput::has_planphase() const {
  return _internal_has_planphase();
}
inline void PlannedGeometricPathOutput::clear_planphase() {
  planphase_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PlannedGeometricPathOutput::_internal_planphase() const {
  return planphase_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PlannedGeometricPathOutput::planphase() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.planPhase)
  return _internal_planphase();
}
inline void PlannedGeometricPathOutput::_internal_set_planphase(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  planphase_ = value;
}
inline void PlannedGeometricPathOutput::set_planphase(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_planphase(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput.planPhase)
}

// -------------------------------------------------------------------

// PlannedGeometricPathOutput_array_port

// repeated .pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput data = 578;
inline int PlannedGeometricPathOutput_array_port::_internal_data_size() const {
  return data_.size();
}
inline int PlannedGeometricPathOutput_array_port::data_size() const {
  return _internal_data_size();
}
inline void PlannedGeometricPathOutput_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput* PlannedGeometricPathOutput_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput >*
PlannedGeometricPathOutput_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput_array_port.data)
  return &data_;
}
inline const ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput& PlannedGeometricPathOutput_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput& PlannedGeometricPathOutput_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput* PlannedGeometricPathOutput_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput* PlannedGeometricPathOutput_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::planned_geometric_path_output::PlannedGeometricPathOutput >&
PlannedGeometricPathOutput_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_tp.planned_geometric_path_output.PlannedGeometricPathOutput_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace planned_geometric_path_output
}  // namespace ap_tp
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5ftp_2fplanned_5fgeometric_5fpath_5foutput_2eproto
