// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_tp/ap_tp_const.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5ftp_2fap_5ftp_5fconst_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5ftp_2fap_5ftp_5fconst_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5ftp_2fap_5ftp_5fconst_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5ftp_2fap_5ftp_5fconst_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5ftp_2fap_5ftp_5fconst_2eproto;
namespace pb {
namespace ap_tp {
namespace ap_tp_const {
class AP_TP_Const;
class AP_TP_ConstDefaultTypeInternal;
extern AP_TP_ConstDefaultTypeInternal _AP_TP_Const_default_instance_;
class AP_TP_Const_array_port;
class AP_TP_Const_array_portDefaultTypeInternal;
extern AP_TP_Const_array_portDefaultTypeInternal _AP_TP_Const_array_port_default_instance_;
}  // namespace ap_tp_const
}  // namespace ap_tp
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_tp::ap_tp_const::AP_TP_Const* Arena::CreateMaybeMessage<::pb::ap_tp::ap_tp_const::AP_TP_Const>(Arena*);
template<> ::pb::ap_tp::ap_tp_const::AP_TP_Const_array_port* Arena::CreateMaybeMessage<::pb::ap_tp::ap_tp_const::AP_TP_Const_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_tp {
namespace ap_tp_const {

// ===================================================================

class AP_TP_Const :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_tp.ap_tp_const.AP_TP_Const) */ {
 public:
  AP_TP_Const();
  virtual ~AP_TP_Const();

  AP_TP_Const(const AP_TP_Const& from);
  AP_TP_Const(AP_TP_Const&& from) noexcept
    : AP_TP_Const() {
    *this = ::std::move(from);
  }

  inline AP_TP_Const& operator=(const AP_TP_Const& from) {
    CopyFrom(from);
    return *this;
  }
  inline AP_TP_Const& operator=(AP_TP_Const&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AP_TP_Const& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AP_TP_Const* internal_default_instance() {
    return reinterpret_cast<const AP_TP_Const*>(
               &_AP_TP_Const_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AP_TP_Const& a, AP_TP_Const& b) {
    a.Swap(&b);
  }
  inline void Swap(AP_TP_Const* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AP_TP_Const* New() const final {
    return CreateMaybeMessage<AP_TP_Const>(nullptr);
  }

  AP_TP_Const* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AP_TP_Const>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AP_TP_Const& from);
  void MergeFrom(const AP_TP_Const& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AP_TP_Const* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_tp.ap_tp_const.AP_TP_Const";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5ftp_2fap_5ftp_5fconst_2eproto);
    return ::descriptor_table_ap_5ftp_2fap_5ftp_5fconst_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAPTMAXNUMSMPLPBOXVERTNUFieldNumber = 3770,
    kNUMMTSDEBUGFREESPACETPDFieldNumber = 373,
    kAPPMAXNUMSAMPLESINDRIVENPATHFieldNumber = 1015,
    kAPPMAXNUMSEGMENTSINPATHNUFieldNumber = 1732,
    kAPPMAXNUMSAMPLESINDRIVENPATHBUFFERFieldNumber = 2524,
    kAPPMAXNUMTRAJCTRLPOINTSFieldNumber = 2628,
    kAPPMAXNUMPOSESINPATHNUFieldNumber = 2955,
    kNUMMTSDEBUGFREESPACETPFieldNumber = 3275,
    kAPTMAXNUMPOSEBOXDATANUFieldNumber = 3471,
  };
  // optional uint32 AP_T_MAX_NUM_SMPL_PBOX_VERT_NU = 3770;
  bool has_ap_t_max_num_smpl_pbox_vert_nu() const;
  private:
  bool _internal_has_ap_t_max_num_smpl_pbox_vert_nu() const;
  public:
  void clear_ap_t_max_num_smpl_pbox_vert_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_t_max_num_smpl_pbox_vert_nu() const;
  void set_ap_t_max_num_smpl_pbox_vert_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_t_max_num_smpl_pbox_vert_nu() const;
  void _internal_set_ap_t_max_num_smpl_pbox_vert_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 NUM_MTS_DEBUG_FREESPACE_TPD = 373;
  bool has_num_mts_debug_freespace_tpd() const;
  private:
  bool _internal_has_num_mts_debug_freespace_tpd() const;
  public:
  void clear_num_mts_debug_freespace_tpd();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_mts_debug_freespace_tpd() const;
  void set_num_mts_debug_freespace_tpd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_mts_debug_freespace_tpd() const;
  void _internal_set_num_mts_debug_freespace_tpd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH = 1015;
  bool has_ap_p_max_num_samples_in_driven_path() const;
  private:
  bool _internal_has_ap_p_max_num_samples_in_driven_path() const;
  public:
  void clear_ap_p_max_num_samples_in_driven_path();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_p_max_num_samples_in_driven_path() const;
  void set_ap_p_max_num_samples_in_driven_path(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_p_max_num_samples_in_driven_path() const;
  void _internal_set_ap_p_max_num_samples_in_driven_path(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_P_MAX_NUM_SEGMENTS_IN_PATH_NU = 1732;
  bool has_ap_p_max_num_segments_in_path_nu() const;
  private:
  bool _internal_has_ap_p_max_num_segments_in_path_nu() const;
  public:
  void clear_ap_p_max_num_segments_in_path_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_p_max_num_segments_in_path_nu() const;
  void set_ap_p_max_num_segments_in_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_p_max_num_segments_in_path_nu() const;
  void _internal_set_ap_p_max_num_segments_in_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH_BUFFER = 2524;
  bool has_ap_p_max_num_samples_in_driven_path_buffer() const;
  private:
  bool _internal_has_ap_p_max_num_samples_in_driven_path_buffer() const;
  public:
  void clear_ap_p_max_num_samples_in_driven_path_buffer();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_p_max_num_samples_in_driven_path_buffer() const;
  void set_ap_p_max_num_samples_in_driven_path_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_p_max_num_samples_in_driven_path_buffer() const;
  void _internal_set_ap_p_max_num_samples_in_driven_path_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_P_MAX_NUM_TRAJ_CTRL_POINTS = 2628;
  bool has_ap_p_max_num_traj_ctrl_points() const;
  private:
  bool _internal_has_ap_p_max_num_traj_ctrl_points() const;
  public:
  void clear_ap_p_max_num_traj_ctrl_points();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_p_max_num_traj_ctrl_points() const;
  void set_ap_p_max_num_traj_ctrl_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_p_max_num_traj_ctrl_points() const;
  void _internal_set_ap_p_max_num_traj_ctrl_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_P_MAX_NUM_POSES_IN_PATH_NU = 2955;
  bool has_ap_p_max_num_poses_in_path_nu() const;
  private:
  bool _internal_has_ap_p_max_num_poses_in_path_nu() const;
  public:
  void clear_ap_p_max_num_poses_in_path_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_p_max_num_poses_in_path_nu() const;
  void set_ap_p_max_num_poses_in_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_p_max_num_poses_in_path_nu() const;
  void _internal_set_ap_p_max_num_poses_in_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 NUM_MTS_DEBUG_FREESPACE_TP = 3275;
  bool has_num_mts_debug_freespace_tp() const;
  private:
  bool _internal_has_num_mts_debug_freespace_tp() const;
  public:
  void clear_num_mts_debug_freespace_tp();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_mts_debug_freespace_tp() const;
  void set_num_mts_debug_freespace_tp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_mts_debug_freespace_tp() const;
  void _internal_set_num_mts_debug_freespace_tp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 AP_T_MAX_NUM_POSE_BOX_DATA_NU = 3471;
  bool has_ap_t_max_num_pose_box_data_nu() const;
  private:
  bool _internal_has_ap_t_max_num_pose_box_data_nu() const;
  public:
  void clear_ap_t_max_num_pose_box_data_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_t_max_num_pose_box_data_nu() const;
  void set_ap_t_max_num_pose_box_data_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ap_t_max_num_pose_box_data_nu() const;
  void _internal_set_ap_t_max_num_pose_box_data_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_tp.ap_tp_const.AP_TP_Const)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_t_max_num_smpl_pbox_vert_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_mts_debug_freespace_tpd_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_p_max_num_samples_in_driven_path_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_p_max_num_segments_in_path_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_p_max_num_samples_in_driven_path_buffer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_p_max_num_traj_ctrl_points_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_p_max_num_poses_in_path_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_mts_debug_freespace_tp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ap_t_max_num_pose_box_data_nu_;
  friend struct ::TableStruct_ap_5ftp_2fap_5ftp_5fconst_2eproto;
};
// -------------------------------------------------------------------

class AP_TP_Const_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_tp.ap_tp_const.AP_TP_Const_array_port) */ {
 public:
  AP_TP_Const_array_port();
  virtual ~AP_TP_Const_array_port();

  AP_TP_Const_array_port(const AP_TP_Const_array_port& from);
  AP_TP_Const_array_port(AP_TP_Const_array_port&& from) noexcept
    : AP_TP_Const_array_port() {
    *this = ::std::move(from);
  }

  inline AP_TP_Const_array_port& operator=(const AP_TP_Const_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline AP_TP_Const_array_port& operator=(AP_TP_Const_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AP_TP_Const_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AP_TP_Const_array_port* internal_default_instance() {
    return reinterpret_cast<const AP_TP_Const_array_port*>(
               &_AP_TP_Const_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AP_TP_Const_array_port& a, AP_TP_Const_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(AP_TP_Const_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AP_TP_Const_array_port* New() const final {
    return CreateMaybeMessage<AP_TP_Const_array_port>(nullptr);
  }

  AP_TP_Const_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AP_TP_Const_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AP_TP_Const_array_port& from);
  void MergeFrom(const AP_TP_Const_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AP_TP_Const_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_tp.ap_tp_const.AP_TP_Const_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5ftp_2fap_5ftp_5fconst_2eproto);
    return ::descriptor_table_ap_5ftp_2fap_5ftp_5fconst_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 4066,
  };
  // repeated .pb.ap_tp.ap_tp_const.AP_TP_Const data = 4066;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_tp::ap_tp_const::AP_TP_Const* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::ap_tp_const::AP_TP_Const >*
      mutable_data();
  private:
  const ::pb::ap_tp::ap_tp_const::AP_TP_Const& _internal_data(int index) const;
  ::pb::ap_tp::ap_tp_const::AP_TP_Const* _internal_add_data();
  public:
  const ::pb::ap_tp::ap_tp_const::AP_TP_Const& data(int index) const;
  ::pb::ap_tp::ap_tp_const::AP_TP_Const* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::ap_tp_const::AP_TP_Const >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_tp.ap_tp_const.AP_TP_Const_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::ap_tp_const::AP_TP_Const > data_;
  friend struct ::TableStruct_ap_5ftp_2fap_5ftp_5fconst_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AP_TP_Const

// optional uint32 AP_P_MAX_NUM_TRAJ_CTRL_POINTS = 2628;
inline bool AP_TP_Const::_internal_has_ap_p_max_num_traj_ctrl_points() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool AP_TP_Const::has_ap_p_max_num_traj_ctrl_points() const {
  return _internal_has_ap_p_max_num_traj_ctrl_points();
}
inline void AP_TP_Const::clear_ap_p_max_num_traj_ctrl_points() {
  ap_p_max_num_traj_ctrl_points_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::_internal_ap_p_max_num_traj_ctrl_points() const {
  return ap_p_max_num_traj_ctrl_points_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::ap_p_max_num_traj_ctrl_points() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_P_MAX_NUM_TRAJ_CTRL_POINTS)
  return _internal_ap_p_max_num_traj_ctrl_points();
}
inline void AP_TP_Const::_internal_set_ap_p_max_num_traj_ctrl_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  ap_p_max_num_traj_ctrl_points_ = value;
}
inline void AP_TP_Const::set_ap_p_max_num_traj_ctrl_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_p_max_num_traj_ctrl_points(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_P_MAX_NUM_TRAJ_CTRL_POINTS)
}

// optional uint32 NUM_MTS_DEBUG_FREESPACE_TP = 3275;
inline bool AP_TP_Const::_internal_has_num_mts_debug_freespace_tp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool AP_TP_Const::has_num_mts_debug_freespace_tp() const {
  return _internal_has_num_mts_debug_freespace_tp();
}
inline void AP_TP_Const::clear_num_mts_debug_freespace_tp() {
  num_mts_debug_freespace_tp_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::_internal_num_mts_debug_freespace_tp() const {
  return num_mts_debug_freespace_tp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::num_mts_debug_freespace_tp() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.ap_tp_const.AP_TP_Const.NUM_MTS_DEBUG_FREESPACE_TP)
  return _internal_num_mts_debug_freespace_tp();
}
inline void AP_TP_Const::_internal_set_num_mts_debug_freespace_tp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  num_mts_debug_freespace_tp_ = value;
}
inline void AP_TP_Const::set_num_mts_debug_freespace_tp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_mts_debug_freespace_tp(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.ap_tp_const.AP_TP_Const.NUM_MTS_DEBUG_FREESPACE_TP)
}

// optional uint32 AP_T_MAX_NUM_SMPL_PBOX_VERT_NU = 3770;
inline bool AP_TP_Const::_internal_has_ap_t_max_num_smpl_pbox_vert_nu() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AP_TP_Const::has_ap_t_max_num_smpl_pbox_vert_nu() const {
  return _internal_has_ap_t_max_num_smpl_pbox_vert_nu();
}
inline void AP_TP_Const::clear_ap_t_max_num_smpl_pbox_vert_nu() {
  ap_t_max_num_smpl_pbox_vert_nu_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::_internal_ap_t_max_num_smpl_pbox_vert_nu() const {
  return ap_t_max_num_smpl_pbox_vert_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::ap_t_max_num_smpl_pbox_vert_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_T_MAX_NUM_SMPL_PBOX_VERT_NU)
  return _internal_ap_t_max_num_smpl_pbox_vert_nu();
}
inline void AP_TP_Const::_internal_set_ap_t_max_num_smpl_pbox_vert_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ap_t_max_num_smpl_pbox_vert_nu_ = value;
}
inline void AP_TP_Const::set_ap_t_max_num_smpl_pbox_vert_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_t_max_num_smpl_pbox_vert_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_T_MAX_NUM_SMPL_PBOX_VERT_NU)
}

// optional uint32 AP_T_MAX_NUM_POSE_BOX_DATA_NU = 3471;
inline bool AP_TP_Const::_internal_has_ap_t_max_num_pose_box_data_nu() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool AP_TP_Const::has_ap_t_max_num_pose_box_data_nu() const {
  return _internal_has_ap_t_max_num_pose_box_data_nu();
}
inline void AP_TP_Const::clear_ap_t_max_num_pose_box_data_nu() {
  ap_t_max_num_pose_box_data_nu_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::_internal_ap_t_max_num_pose_box_data_nu() const {
  return ap_t_max_num_pose_box_data_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::ap_t_max_num_pose_box_data_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_T_MAX_NUM_POSE_BOX_DATA_NU)
  return _internal_ap_t_max_num_pose_box_data_nu();
}
inline void AP_TP_Const::_internal_set_ap_t_max_num_pose_box_data_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  ap_t_max_num_pose_box_data_nu_ = value;
}
inline void AP_TP_Const::set_ap_t_max_num_pose_box_data_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_t_max_num_pose_box_data_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_T_MAX_NUM_POSE_BOX_DATA_NU)
}

// optional uint32 NUM_MTS_DEBUG_FREESPACE_TPD = 373;
inline bool AP_TP_Const::_internal_has_num_mts_debug_freespace_tpd() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AP_TP_Const::has_num_mts_debug_freespace_tpd() const {
  return _internal_has_num_mts_debug_freespace_tpd();
}
inline void AP_TP_Const::clear_num_mts_debug_freespace_tpd() {
  num_mts_debug_freespace_tpd_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::_internal_num_mts_debug_freespace_tpd() const {
  return num_mts_debug_freespace_tpd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::num_mts_debug_freespace_tpd() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.ap_tp_const.AP_TP_Const.NUM_MTS_DEBUG_FREESPACE_TPD)
  return _internal_num_mts_debug_freespace_tpd();
}
inline void AP_TP_Const::_internal_set_num_mts_debug_freespace_tpd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_mts_debug_freespace_tpd_ = value;
}
inline void AP_TP_Const::set_num_mts_debug_freespace_tpd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_mts_debug_freespace_tpd(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.ap_tp_const.AP_TP_Const.NUM_MTS_DEBUG_FREESPACE_TPD)
}

// optional uint32 AP_P_MAX_NUM_POSES_IN_PATH_NU = 2955;
inline bool AP_TP_Const::_internal_has_ap_p_max_num_poses_in_path_nu() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool AP_TP_Const::has_ap_p_max_num_poses_in_path_nu() const {
  return _internal_has_ap_p_max_num_poses_in_path_nu();
}
inline void AP_TP_Const::clear_ap_p_max_num_poses_in_path_nu() {
  ap_p_max_num_poses_in_path_nu_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::_internal_ap_p_max_num_poses_in_path_nu() const {
  return ap_p_max_num_poses_in_path_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::ap_p_max_num_poses_in_path_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_P_MAX_NUM_POSES_IN_PATH_NU)
  return _internal_ap_p_max_num_poses_in_path_nu();
}
inline void AP_TP_Const::_internal_set_ap_p_max_num_poses_in_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  ap_p_max_num_poses_in_path_nu_ = value;
}
inline void AP_TP_Const::set_ap_p_max_num_poses_in_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_p_max_num_poses_in_path_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_P_MAX_NUM_POSES_IN_PATH_NU)
}

// optional uint32 AP_P_MAX_NUM_SEGMENTS_IN_PATH_NU = 1732;
inline bool AP_TP_Const::_internal_has_ap_p_max_num_segments_in_path_nu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool AP_TP_Const::has_ap_p_max_num_segments_in_path_nu() const {
  return _internal_has_ap_p_max_num_segments_in_path_nu();
}
inline void AP_TP_Const::clear_ap_p_max_num_segments_in_path_nu() {
  ap_p_max_num_segments_in_path_nu_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::_internal_ap_p_max_num_segments_in_path_nu() const {
  return ap_p_max_num_segments_in_path_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::ap_p_max_num_segments_in_path_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_P_MAX_NUM_SEGMENTS_IN_PATH_NU)
  return _internal_ap_p_max_num_segments_in_path_nu();
}
inline void AP_TP_Const::_internal_set_ap_p_max_num_segments_in_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  ap_p_max_num_segments_in_path_nu_ = value;
}
inline void AP_TP_Const::set_ap_p_max_num_segments_in_path_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_p_max_num_segments_in_path_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_P_MAX_NUM_SEGMENTS_IN_PATH_NU)
}

// optional uint32 AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH = 1015;
inline bool AP_TP_Const::_internal_has_ap_p_max_num_samples_in_driven_path() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool AP_TP_Const::has_ap_p_max_num_samples_in_driven_path() const {
  return _internal_has_ap_p_max_num_samples_in_driven_path();
}
inline void AP_TP_Const::clear_ap_p_max_num_samples_in_driven_path() {
  ap_p_max_num_samples_in_driven_path_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::_internal_ap_p_max_num_samples_in_driven_path() const {
  return ap_p_max_num_samples_in_driven_path_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::ap_p_max_num_samples_in_driven_path() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH)
  return _internal_ap_p_max_num_samples_in_driven_path();
}
inline void AP_TP_Const::_internal_set_ap_p_max_num_samples_in_driven_path(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  ap_p_max_num_samples_in_driven_path_ = value;
}
inline void AP_TP_Const::set_ap_p_max_num_samples_in_driven_path(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_p_max_num_samples_in_driven_path(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH)
}

// optional uint32 AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH_BUFFER = 2524;
inline bool AP_TP_Const::_internal_has_ap_p_max_num_samples_in_driven_path_buffer() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool AP_TP_Const::has_ap_p_max_num_samples_in_driven_path_buffer() const {
  return _internal_has_ap_p_max_num_samples_in_driven_path_buffer();
}
inline void AP_TP_Const::clear_ap_p_max_num_samples_in_driven_path_buffer() {
  ap_p_max_num_samples_in_driven_path_buffer_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::_internal_ap_p_max_num_samples_in_driven_path_buffer() const {
  return ap_p_max_num_samples_in_driven_path_buffer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AP_TP_Const::ap_p_max_num_samples_in_driven_path_buffer() const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH_BUFFER)
  return _internal_ap_p_max_num_samples_in_driven_path_buffer();
}
inline void AP_TP_Const::_internal_set_ap_p_max_num_samples_in_driven_path_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  ap_p_max_num_samples_in_driven_path_buffer_ = value;
}
inline void AP_TP_Const::set_ap_p_max_num_samples_in_driven_path_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ap_p_max_num_samples_in_driven_path_buffer(value);
  // @@protoc_insertion_point(field_set:pb.ap_tp.ap_tp_const.AP_TP_Const.AP_P_MAX_NUM_SAMPLES_IN_DRIVEN_PATH_BUFFER)
}

// -------------------------------------------------------------------

// AP_TP_Const_array_port

// repeated .pb.ap_tp.ap_tp_const.AP_TP_Const data = 4066;
inline int AP_TP_Const_array_port::_internal_data_size() const {
  return data_.size();
}
inline int AP_TP_Const_array_port::data_size() const {
  return _internal_data_size();
}
inline void AP_TP_Const_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_tp::ap_tp_const::AP_TP_Const* AP_TP_Const_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_tp.ap_tp_const.AP_TP_Const_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::ap_tp_const::AP_TP_Const >*
AP_TP_Const_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_tp.ap_tp_const.AP_TP_Const_array_port.data)
  return &data_;
}
inline const ::pb::ap_tp::ap_tp_const::AP_TP_Const& AP_TP_Const_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_tp::ap_tp_const::AP_TP_Const& AP_TP_Const_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_tp.ap_tp_const.AP_TP_Const_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_tp::ap_tp_const::AP_TP_Const* AP_TP_Const_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_tp::ap_tp_const::AP_TP_Const* AP_TP_Const_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_tp.ap_tp_const.AP_TP_Const_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_tp::ap_tp_const::AP_TP_Const >&
AP_TP_Const_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_tp.ap_tp_const.AP_TP_Const_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ap_tp_const
}  // namespace ap_tp
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5ftp_2fap_5ftp_5fconst_2eproto
