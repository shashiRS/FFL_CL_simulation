// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tce/tce_pers_data_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tce_2ftce_5fpers_5fdata_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tce_2ftce_5fpers_5fdata_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tce_2ftce_5fpers_5fdata_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tce_2ftce_5fpers_5fdata_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tce_2ftce_5fpers_5fdata_5fport_2eproto;
namespace pb {
namespace tce {
namespace tce_pers_data_port {
class TcePersDataPort;
class TcePersDataPortDefaultTypeInternal;
extern TcePersDataPortDefaultTypeInternal _TcePersDataPort_default_instance_;
class TcePersDataPort_array_port;
class TcePersDataPort_array_portDefaultTypeInternal;
extern TcePersDataPort_array_portDefaultTypeInternal _TcePersDataPort_array_port_default_instance_;
}  // namespace tce_pers_data_port
}  // namespace tce
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::tce::tce_pers_data_port::TcePersDataPort* Arena::CreateMaybeMessage<::pb::tce::tce_pers_data_port::TcePersDataPort>(Arena*);
template<> ::pb::tce::tce_pers_data_port::TcePersDataPort_array_port* Arena::CreateMaybeMessage<::pb::tce::tce_pers_data_port::TcePersDataPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace tce {
namespace tce_pers_data_port {

// ===================================================================

class TcePersDataPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.tce.tce_pers_data_port.TcePersDataPort) */ {
 public:
  TcePersDataPort();
  virtual ~TcePersDataPort();

  TcePersDataPort(const TcePersDataPort& from);
  TcePersDataPort(TcePersDataPort&& from) noexcept
    : TcePersDataPort() {
    *this = ::std::move(from);
  }

  inline TcePersDataPort& operator=(const TcePersDataPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline TcePersDataPort& operator=(TcePersDataPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TcePersDataPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TcePersDataPort* internal_default_instance() {
    return reinterpret_cast<const TcePersDataPort*>(
               &_TcePersDataPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TcePersDataPort& a, TcePersDataPort& b) {
    a.Swap(&b);
  }
  inline void Swap(TcePersDataPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TcePersDataPort* New() const final {
    return CreateMaybeMessage<TcePersDataPort>(nullptr);
  }

  TcePersDataPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TcePersDataPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TcePersDataPort& from);
  void MergeFrom(const TcePersDataPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TcePersDataPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.tce.tce_pers_data_port.TcePersDataPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tce_2ftce_5fpers_5fdata_5fport_2eproto);
    return ::descriptor_table_tce_2ftce_5fpers_5fdata_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSSigHeaderFieldNumber = 1033,
    kDataChangedFieldNumber = 975,
    kRearTrackWidth0P1MmFieldNumber = 1292,
    kUiVersionNumberFieldNumber = 2124,
    kTireCircRL0P1MmFieldNumber = 2188,
    kTireCircStdvRR0P1MmFieldNumber = 2196,
    kTireCircStdvFR0P1MmFieldNumber = 2637,
    kTireCircFL0P1MmFieldNumber = 2645,
    kTireCircStdvRL0P1MmFieldNumber = 3431,
    kTireCircRR0P1MmFieldNumber = 3455,
    kTireCircFR0P1MmFieldNumber = 4006,
    kTireCircStdvFL0P1MmFieldNumber = 4030,
    kRearTrackWidthStdv0P1MmFieldNumber = 4078,
  };
  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional bool dataChanged = 975;
  bool has_datachanged() const;
  private:
  bool _internal_has_datachanged() const;
  public:
  void clear_datachanged();
  bool datachanged() const;
  void set_datachanged(bool value);
  private:
  bool _internal_datachanged() const;
  void _internal_set_datachanged(bool value);
  public:

  // optional uint32 rearTrackWidth_0p1mm = 1292;
  bool has_reartrackwidth_0p1mm() const;
  private:
  bool _internal_has_reartrackwidth_0p1mm() const;
  public:
  void clear_reartrackwidth_0p1mm();
  ::PROTOBUF_NAMESPACE_ID::uint32 reartrackwidth_0p1mm() const;
  void set_reartrackwidth_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reartrackwidth_0p1mm() const;
  void _internal_set_reartrackwidth_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tireCircRL_0p1mm = 2188;
  bool has_tirecircrl_0p1mm() const;
  private:
  bool _internal_has_tirecircrl_0p1mm() const;
  public:
  void clear_tirecircrl_0p1mm();
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircrl_0p1mm() const;
  void set_tirecircrl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tirecircrl_0p1mm() const;
  void _internal_set_tirecircrl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tireCircStdvRR_0p1mm = 2196;
  bool has_tirecircstdvrr_0p1mm() const;
  private:
  bool _internal_has_tirecircstdvrr_0p1mm() const;
  public:
  void clear_tirecircstdvrr_0p1mm();
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircstdvrr_0p1mm() const;
  void set_tirecircstdvrr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tirecircstdvrr_0p1mm() const;
  void _internal_set_tirecircstdvrr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tireCircStdvFR_0p1mm = 2637;
  bool has_tirecircstdvfr_0p1mm() const;
  private:
  bool _internal_has_tirecircstdvfr_0p1mm() const;
  public:
  void clear_tirecircstdvfr_0p1mm();
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircstdvfr_0p1mm() const;
  void set_tirecircstdvfr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tirecircstdvfr_0p1mm() const;
  void _internal_set_tirecircstdvfr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tireCircFL_0p1mm = 2645;
  bool has_tirecircfl_0p1mm() const;
  private:
  bool _internal_has_tirecircfl_0p1mm() const;
  public:
  void clear_tirecircfl_0p1mm();
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircfl_0p1mm() const;
  void set_tirecircfl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tirecircfl_0p1mm() const;
  void _internal_set_tirecircfl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tireCircStdvRL_0p1mm = 3431;
  bool has_tirecircstdvrl_0p1mm() const;
  private:
  bool _internal_has_tirecircstdvrl_0p1mm() const;
  public:
  void clear_tirecircstdvrl_0p1mm();
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircstdvrl_0p1mm() const;
  void set_tirecircstdvrl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tirecircstdvrl_0p1mm() const;
  void _internal_set_tirecircstdvrl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tireCircRR_0p1mm = 3455;
  bool has_tirecircrr_0p1mm() const;
  private:
  bool _internal_has_tirecircrr_0p1mm() const;
  public:
  void clear_tirecircrr_0p1mm();
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircrr_0p1mm() const;
  void set_tirecircrr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tirecircrr_0p1mm() const;
  void _internal_set_tirecircrr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tireCircFR_0p1mm = 4006;
  bool has_tirecircfr_0p1mm() const;
  private:
  bool _internal_has_tirecircfr_0p1mm() const;
  public:
  void clear_tirecircfr_0p1mm();
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircfr_0p1mm() const;
  void set_tirecircfr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tirecircfr_0p1mm() const;
  void _internal_set_tirecircfr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tireCircStdvFL_0p1mm = 4030;
  bool has_tirecircstdvfl_0p1mm() const;
  private:
  bool _internal_has_tirecircstdvfl_0p1mm() const;
  public:
  void clear_tirecircstdvfl_0p1mm();
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircstdvfl_0p1mm() const;
  void set_tirecircstdvfl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tirecircstdvfl_0p1mm() const;
  void _internal_set_tirecircstdvfl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rearTrackWidthStdv_0p1mm = 4078;
  bool has_reartrackwidthstdv_0p1mm() const;
  private:
  bool _internal_has_reartrackwidthstdv_0p1mm() const;
  public:
  void clear_reartrackwidthstdv_0p1mm();
  ::PROTOBUF_NAMESPACE_ID::uint32 reartrackwidthstdv_0p1mm() const;
  void set_reartrackwidthstdv_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reartrackwidthstdv_0p1mm() const;
  void _internal_set_reartrackwidthstdv_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.tce.tce_pers_data_port.TcePersDataPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  bool datachanged_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reartrackwidth_0p1mm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircrl_0p1mm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircstdvrr_0p1mm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircstdvfr_0p1mm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircfl_0p1mm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircstdvrl_0p1mm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircrr_0p1mm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircfr_0p1mm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tirecircstdvfl_0p1mm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reartrackwidthstdv_0p1mm_;
  friend struct ::TableStruct_tce_2ftce_5fpers_5fdata_5fport_2eproto;
};
// -------------------------------------------------------------------

class TcePersDataPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.tce.tce_pers_data_port.TcePersDataPort_array_port) */ {
 public:
  TcePersDataPort_array_port();
  virtual ~TcePersDataPort_array_port();

  TcePersDataPort_array_port(const TcePersDataPort_array_port& from);
  TcePersDataPort_array_port(TcePersDataPort_array_port&& from) noexcept
    : TcePersDataPort_array_port() {
    *this = ::std::move(from);
  }

  inline TcePersDataPort_array_port& operator=(const TcePersDataPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline TcePersDataPort_array_port& operator=(TcePersDataPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TcePersDataPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TcePersDataPort_array_port* internal_default_instance() {
    return reinterpret_cast<const TcePersDataPort_array_port*>(
               &_TcePersDataPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TcePersDataPort_array_port& a, TcePersDataPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(TcePersDataPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TcePersDataPort_array_port* New() const final {
    return CreateMaybeMessage<TcePersDataPort_array_port>(nullptr);
  }

  TcePersDataPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TcePersDataPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TcePersDataPort_array_port& from);
  void MergeFrom(const TcePersDataPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TcePersDataPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.tce.tce_pers_data_port.TcePersDataPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tce_2ftce_5fpers_5fdata_5fport_2eproto);
    return ::descriptor_table_tce_2ftce_5fpers_5fdata_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1202,
  };
  // repeated .pb.tce.tce_pers_data_port.TcePersDataPort data = 1202;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::tce::tce_pers_data_port::TcePersDataPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::tce::tce_pers_data_port::TcePersDataPort >*
      mutable_data();
  private:
  const ::pb::tce::tce_pers_data_port::TcePersDataPort& _internal_data(int index) const;
  ::pb::tce::tce_pers_data_port::TcePersDataPort* _internal_add_data();
  public:
  const ::pb::tce::tce_pers_data_port::TcePersDataPort& data(int index) const;
  ::pb::tce::tce_pers_data_port::TcePersDataPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::tce::tce_pers_data_port::TcePersDataPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.tce.tce_pers_data_port.TcePersDataPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::tce::tce_pers_data_port::TcePersDataPort > data_;
  friend struct ::TableStruct_tce_2ftce_5fpers_5fdata_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TcePersDataPort

// optional uint32 uiVersionNumber = 2124;
inline bool TcePersDataPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TcePersDataPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void TcePersDataPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void TcePersDataPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uiversionnumber_ = value;
}
inline void TcePersDataPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool TcePersDataPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool TcePersDataPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& TcePersDataPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& TcePersDataPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* TcePersDataPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.tce.tce_pers_data_port.TcePersDataPort.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* TcePersDataPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* TcePersDataPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.tce.tce_pers_data_port.TcePersDataPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void TcePersDataPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.tce.tce_pers_data_port.TcePersDataPort.sSigHeader)
}

// optional uint32 tireCircFL_0p1mm = 2645;
inline bool TcePersDataPort::_internal_has_tirecircfl_0p1mm() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool TcePersDataPort::has_tirecircfl_0p1mm() const {
  return _internal_has_tirecircfl_0p1mm();
}
inline void TcePersDataPort::clear_tirecircfl_0p1mm() {
  tirecircfl_0p1mm_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_tirecircfl_0p1mm() const {
  return tirecircfl_0p1mm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::tirecircfl_0p1mm() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircFL_0p1mm)
  return _internal_tirecircfl_0p1mm();
}
inline void TcePersDataPort::_internal_set_tirecircfl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  tirecircfl_0p1mm_ = value;
}
inline void TcePersDataPort::set_tirecircfl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tirecircfl_0p1mm(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircFL_0p1mm)
}

// optional uint32 tireCircFR_0p1mm = 4006;
inline bool TcePersDataPort::_internal_has_tirecircfr_0p1mm() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool TcePersDataPort::has_tirecircfr_0p1mm() const {
  return _internal_has_tirecircfr_0p1mm();
}
inline void TcePersDataPort::clear_tirecircfr_0p1mm() {
  tirecircfr_0p1mm_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_tirecircfr_0p1mm() const {
  return tirecircfr_0p1mm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::tirecircfr_0p1mm() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircFR_0p1mm)
  return _internal_tirecircfr_0p1mm();
}
inline void TcePersDataPort::_internal_set_tirecircfr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  tirecircfr_0p1mm_ = value;
}
inline void TcePersDataPort::set_tirecircfr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tirecircfr_0p1mm(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircFR_0p1mm)
}

// optional uint32 tireCircRL_0p1mm = 2188;
inline bool TcePersDataPort::_internal_has_tirecircrl_0p1mm() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool TcePersDataPort::has_tirecircrl_0p1mm() const {
  return _internal_has_tirecircrl_0p1mm();
}
inline void TcePersDataPort::clear_tirecircrl_0p1mm() {
  tirecircrl_0p1mm_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_tirecircrl_0p1mm() const {
  return tirecircrl_0p1mm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::tirecircrl_0p1mm() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircRL_0p1mm)
  return _internal_tirecircrl_0p1mm();
}
inline void TcePersDataPort::_internal_set_tirecircrl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  tirecircrl_0p1mm_ = value;
}
inline void TcePersDataPort::set_tirecircrl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tirecircrl_0p1mm(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircRL_0p1mm)
}

// optional uint32 tireCircRR_0p1mm = 3455;
inline bool TcePersDataPort::_internal_has_tirecircrr_0p1mm() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool TcePersDataPort::has_tirecircrr_0p1mm() const {
  return _internal_has_tirecircrr_0p1mm();
}
inline void TcePersDataPort::clear_tirecircrr_0p1mm() {
  tirecircrr_0p1mm_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_tirecircrr_0p1mm() const {
  return tirecircrr_0p1mm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::tirecircrr_0p1mm() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircRR_0p1mm)
  return _internal_tirecircrr_0p1mm();
}
inline void TcePersDataPort::_internal_set_tirecircrr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  tirecircrr_0p1mm_ = value;
}
inline void TcePersDataPort::set_tirecircrr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tirecircrr_0p1mm(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircRR_0p1mm)
}

// optional uint32 tireCircStdvFL_0p1mm = 4030;
inline bool TcePersDataPort::_internal_has_tirecircstdvfl_0p1mm() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool TcePersDataPort::has_tirecircstdvfl_0p1mm() const {
  return _internal_has_tirecircstdvfl_0p1mm();
}
inline void TcePersDataPort::clear_tirecircstdvfl_0p1mm() {
  tirecircstdvfl_0p1mm_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_tirecircstdvfl_0p1mm() const {
  return tirecircstdvfl_0p1mm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::tirecircstdvfl_0p1mm() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircStdvFL_0p1mm)
  return _internal_tirecircstdvfl_0p1mm();
}
inline void TcePersDataPort::_internal_set_tirecircstdvfl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  tirecircstdvfl_0p1mm_ = value;
}
inline void TcePersDataPort::set_tirecircstdvfl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tirecircstdvfl_0p1mm(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircStdvFL_0p1mm)
}

// optional uint32 tireCircStdvFR_0p1mm = 2637;
inline bool TcePersDataPort::_internal_has_tirecircstdvfr_0p1mm() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool TcePersDataPort::has_tirecircstdvfr_0p1mm() const {
  return _internal_has_tirecircstdvfr_0p1mm();
}
inline void TcePersDataPort::clear_tirecircstdvfr_0p1mm() {
  tirecircstdvfr_0p1mm_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_tirecircstdvfr_0p1mm() const {
  return tirecircstdvfr_0p1mm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::tirecircstdvfr_0p1mm() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircStdvFR_0p1mm)
  return _internal_tirecircstdvfr_0p1mm();
}
inline void TcePersDataPort::_internal_set_tirecircstdvfr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  tirecircstdvfr_0p1mm_ = value;
}
inline void TcePersDataPort::set_tirecircstdvfr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tirecircstdvfr_0p1mm(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircStdvFR_0p1mm)
}

// optional uint32 tireCircStdvRL_0p1mm = 3431;
inline bool TcePersDataPort::_internal_has_tirecircstdvrl_0p1mm() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool TcePersDataPort::has_tirecircstdvrl_0p1mm() const {
  return _internal_has_tirecircstdvrl_0p1mm();
}
inline void TcePersDataPort::clear_tirecircstdvrl_0p1mm() {
  tirecircstdvrl_0p1mm_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_tirecircstdvrl_0p1mm() const {
  return tirecircstdvrl_0p1mm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::tirecircstdvrl_0p1mm() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircStdvRL_0p1mm)
  return _internal_tirecircstdvrl_0p1mm();
}
inline void TcePersDataPort::_internal_set_tirecircstdvrl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  tirecircstdvrl_0p1mm_ = value;
}
inline void TcePersDataPort::set_tirecircstdvrl_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tirecircstdvrl_0p1mm(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircStdvRL_0p1mm)
}

// optional uint32 tireCircStdvRR_0p1mm = 2196;
inline bool TcePersDataPort::_internal_has_tirecircstdvrr_0p1mm() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool TcePersDataPort::has_tirecircstdvrr_0p1mm() const {
  return _internal_has_tirecircstdvrr_0p1mm();
}
inline void TcePersDataPort::clear_tirecircstdvrr_0p1mm() {
  tirecircstdvrr_0p1mm_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_tirecircstdvrr_0p1mm() const {
  return tirecircstdvrr_0p1mm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::tirecircstdvrr_0p1mm() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircStdvRR_0p1mm)
  return _internal_tirecircstdvrr_0p1mm();
}
inline void TcePersDataPort::_internal_set_tirecircstdvrr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  tirecircstdvrr_0p1mm_ = value;
}
inline void TcePersDataPort::set_tirecircstdvrr_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tirecircstdvrr_0p1mm(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.tireCircStdvRR_0p1mm)
}

// optional uint32 rearTrackWidth_0p1mm = 1292;
inline bool TcePersDataPort::_internal_has_reartrackwidth_0p1mm() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TcePersDataPort::has_reartrackwidth_0p1mm() const {
  return _internal_has_reartrackwidth_0p1mm();
}
inline void TcePersDataPort::clear_reartrackwidth_0p1mm() {
  reartrackwidth_0p1mm_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_reartrackwidth_0p1mm() const {
  return reartrackwidth_0p1mm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::reartrackwidth_0p1mm() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.rearTrackWidth_0p1mm)
  return _internal_reartrackwidth_0p1mm();
}
inline void TcePersDataPort::_internal_set_reartrackwidth_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  reartrackwidth_0p1mm_ = value;
}
inline void TcePersDataPort::set_reartrackwidth_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reartrackwidth_0p1mm(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.rearTrackWidth_0p1mm)
}

// optional uint32 rearTrackWidthStdv_0p1mm = 4078;
inline bool TcePersDataPort::_internal_has_reartrackwidthstdv_0p1mm() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool TcePersDataPort::has_reartrackwidthstdv_0p1mm() const {
  return _internal_has_reartrackwidthstdv_0p1mm();
}
inline void TcePersDataPort::clear_reartrackwidthstdv_0p1mm() {
  reartrackwidthstdv_0p1mm_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::_internal_reartrackwidthstdv_0p1mm() const {
  return reartrackwidthstdv_0p1mm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TcePersDataPort::reartrackwidthstdv_0p1mm() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.rearTrackWidthStdv_0p1mm)
  return _internal_reartrackwidthstdv_0p1mm();
}
inline void TcePersDataPort::_internal_set_reartrackwidthstdv_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  reartrackwidthstdv_0p1mm_ = value;
}
inline void TcePersDataPort::set_reartrackwidthstdv_0p1mm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reartrackwidthstdv_0p1mm(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.rearTrackWidthStdv_0p1mm)
}

// optional bool dataChanged = 975;
inline bool TcePersDataPort::_internal_has_datachanged() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TcePersDataPort::has_datachanged() const {
  return _internal_has_datachanged();
}
inline void TcePersDataPort::clear_datachanged() {
  datachanged_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool TcePersDataPort::_internal_datachanged() const {
  return datachanged_;
}
inline bool TcePersDataPort::datachanged() const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort.dataChanged)
  return _internal_datachanged();
}
inline void TcePersDataPort::_internal_set_datachanged(bool value) {
  _has_bits_[0] |= 0x00000002u;
  datachanged_ = value;
}
inline void TcePersDataPort::set_datachanged(bool value) {
  _internal_set_datachanged(value);
  // @@protoc_insertion_point(field_set:pb.tce.tce_pers_data_port.TcePersDataPort.dataChanged)
}

// -------------------------------------------------------------------

// TcePersDataPort_array_port

// repeated .pb.tce.tce_pers_data_port.TcePersDataPort data = 1202;
inline int TcePersDataPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int TcePersDataPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void TcePersDataPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::tce::tce_pers_data_port::TcePersDataPort* TcePersDataPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.tce.tce_pers_data_port.TcePersDataPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::tce::tce_pers_data_port::TcePersDataPort >*
TcePersDataPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.tce.tce_pers_data_port.TcePersDataPort_array_port.data)
  return &data_;
}
inline const ::pb::tce::tce_pers_data_port::TcePersDataPort& TcePersDataPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::tce::tce_pers_data_port::TcePersDataPort& TcePersDataPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.tce.tce_pers_data_port.TcePersDataPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::tce::tce_pers_data_port::TcePersDataPort* TcePersDataPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::tce::tce_pers_data_port::TcePersDataPort* TcePersDataPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.tce.tce_pers_data_port.TcePersDataPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::tce::tce_pers_data_port::TcePersDataPort >&
TcePersDataPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.tce.tce_pers_data_port.TcePersDataPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tce_pers_data_port
}  // namespace tce
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tce_2ftce_5fpers_5fdata_5fport_2eproto
