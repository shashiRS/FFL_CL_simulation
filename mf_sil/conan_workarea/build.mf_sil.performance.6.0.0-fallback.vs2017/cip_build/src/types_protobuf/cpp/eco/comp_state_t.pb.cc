// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eco/comp_state_t.proto

#include "eco/comp_state_t.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace pb {
namespace eco {
namespace comp_state_t {
}  // namespace comp_state_t
}  // namespace eco
}  // namespace pb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_eco_2fcomp_5fstate_5ft_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_eco_2fcomp_5fstate_5ft_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_eco_2fcomp_5fstate_5ft_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_eco_2fcomp_5fstate_5ft_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_eco_2fcomp_5fstate_5ft_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026eco/comp_state_t.proto\022\023pb.eco.comp_st"
  "ate_t*\336\001\n\013CompState_t\022\036\n\032COMP_STATE_NOT_"
  "INITIALIZED\020\000\022\026\n\022COMP_STATE_RUNNING\020\001\022\036\n"
  "\032COMP_STATE_TEMPORARY_ERROR\020\002\022\036\n\032COMP_ST"
  "ATE_PERMANENT_ERROR\020\003\022\026\n\022COMP_STATE_SUCC"
  "ESS\020\004\022#\n\037COMP_STATE_REDUCED_AVAILABILITY"
  "\020\005\022\032\n\026COMP_STATE_NOT_RUNNING\020\006"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_eco_2fcomp_5fstate_5ft_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_eco_2fcomp_5fstate_5ft_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_eco_2fcomp_5fstate_5ft_2eproto_once;
static bool descriptor_table_eco_2fcomp_5fstate_5ft_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_eco_2fcomp_5fstate_5ft_2eproto = {
  &descriptor_table_eco_2fcomp_5fstate_5ft_2eproto_initialized, descriptor_table_protodef_eco_2fcomp_5fstate_5ft_2eproto, "eco/comp_state_t.proto", 270,
  &descriptor_table_eco_2fcomp_5fstate_5ft_2eproto_once, descriptor_table_eco_2fcomp_5fstate_5ft_2eproto_sccs, descriptor_table_eco_2fcomp_5fstate_5ft_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_eco_2fcomp_5fstate_5ft_2eproto::offsets,
  file_level_metadata_eco_2fcomp_5fstate_5ft_2eproto, 0, file_level_enum_descriptors_eco_2fcomp_5fstate_5ft_2eproto, file_level_service_descriptors_eco_2fcomp_5fstate_5ft_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_eco_2fcomp_5fstate_5ft_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_eco_2fcomp_5fstate_5ft_2eproto), true);
namespace pb {
namespace eco {
namespace comp_state_t {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CompState_t_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_eco_2fcomp_5fstate_5ft_2eproto);
  return file_level_enum_descriptors_eco_2fcomp_5fstate_5ft_2eproto[0];
}
bool CompState_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace comp_state_t
}  // namespace eco
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
