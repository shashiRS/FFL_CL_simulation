// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_em/us_em_neighboring_filter_cfg_intern.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto;
namespace pb {
namespace us_em {
namespace us_em_neighboring_filter_cfg_intern {
class UsEmNeighboringFilterCfgIntern;
class UsEmNeighboringFilterCfgInternDefaultTypeInternal;
extern UsEmNeighboringFilterCfgInternDefaultTypeInternal _UsEmNeighboringFilterCfgIntern_default_instance_;
class UsEmNeighboringFilterCfgIntern_array_port;
class UsEmNeighboringFilterCfgIntern_array_portDefaultTypeInternal;
extern UsEmNeighboringFilterCfgIntern_array_portDefaultTypeInternal _UsEmNeighboringFilterCfgIntern_array_port_default_instance_;
}  // namespace us_em_neighboring_filter_cfg_intern
}  // namespace us_em
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern* Arena::CreateMaybeMessage<::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern>(Arena*);
template<> ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern_array_port* Arena::CreateMaybeMessage<::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace us_em {
namespace us_em_neighboring_filter_cfg_intern {

// ===================================================================

class UsEmNeighboringFilterCfgIntern :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern) */ {
 public:
  UsEmNeighboringFilterCfgIntern();
  virtual ~UsEmNeighboringFilterCfgIntern();

  UsEmNeighboringFilterCfgIntern(const UsEmNeighboringFilterCfgIntern& from);
  UsEmNeighboringFilterCfgIntern(UsEmNeighboringFilterCfgIntern&& from) noexcept
    : UsEmNeighboringFilterCfgIntern() {
    *this = ::std::move(from);
  }

  inline UsEmNeighboringFilterCfgIntern& operator=(const UsEmNeighboringFilterCfgIntern& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsEmNeighboringFilterCfgIntern& operator=(UsEmNeighboringFilterCfgIntern&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsEmNeighboringFilterCfgIntern& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsEmNeighboringFilterCfgIntern* internal_default_instance() {
    return reinterpret_cast<const UsEmNeighboringFilterCfgIntern*>(
               &_UsEmNeighboringFilterCfgIntern_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UsEmNeighboringFilterCfgIntern& a, UsEmNeighboringFilterCfgIntern& b) {
    a.Swap(&b);
  }
  inline void Swap(UsEmNeighboringFilterCfgIntern* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsEmNeighboringFilterCfgIntern* New() const final {
    return CreateMaybeMessage<UsEmNeighboringFilterCfgIntern>(nullptr);
  }

  UsEmNeighboringFilterCfgIntern* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsEmNeighboringFilterCfgIntern>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsEmNeighboringFilterCfgIntern& from);
  void MergeFrom(const UsEmNeighboringFilterCfgIntern& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsEmNeighboringFilterCfgIntern* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto);
    return ::descriptor_table_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeepCyclesFieldNumber = 89,
    kNeighborCountThresholdFieldNumber = 288,
    kNeighborCountThresholdOnlyFieldNumber = 1097,
    kUseAbsoluteDistanceFieldNumber = 3866,
    kWeightNeighborsByDirVarianceFieldNumber = 240,
    kKeepDistanceFieldNumber = 2592,
    kNeighborPathsThresholdFieldNumber = 2915,
    kKeepBufferLengthFieldNumber = 3235,
    kNeighborRegionThresholdFieldNumber = 3332,
  };
  // optional uint32 keep_cycles = 89;
  bool has_keep_cycles() const;
  private:
  bool _internal_has_keep_cycles() const;
  public:
  void clear_keep_cycles();
  ::PROTOBUF_NAMESPACE_ID::uint32 keep_cycles() const;
  void set_keep_cycles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keep_cycles() const;
  void _internal_set_keep_cycles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 neighbor_count_threshold = 288;
  bool has_neighbor_count_threshold() const;
  private:
  bool _internal_has_neighbor_count_threshold() const;
  public:
  void clear_neighbor_count_threshold();
  ::PROTOBUF_NAMESPACE_ID::uint32 neighbor_count_threshold() const;
  void set_neighbor_count_threshold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_neighbor_count_threshold() const;
  void _internal_set_neighbor_count_threshold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 neighbor_count_threshold_only = 1097;
  bool has_neighbor_count_threshold_only() const;
  private:
  bool _internal_has_neighbor_count_threshold_only() const;
  public:
  void clear_neighbor_count_threshold_only();
  ::PROTOBUF_NAMESPACE_ID::uint32 neighbor_count_threshold_only() const;
  void set_neighbor_count_threshold_only(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_neighbor_count_threshold_only() const;
  void _internal_set_neighbor_count_threshold_only(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool use_absolute_distance = 3866;
  bool has_use_absolute_distance() const;
  private:
  bool _internal_has_use_absolute_distance() const;
  public:
  void clear_use_absolute_distance();
  bool use_absolute_distance() const;
  void set_use_absolute_distance(bool value);
  private:
  bool _internal_use_absolute_distance() const;
  void _internal_set_use_absolute_distance(bool value);
  public:

  // optional bool weight_neighbors_by_dir_variance = 240;
  bool has_weight_neighbors_by_dir_variance() const;
  private:
  bool _internal_has_weight_neighbors_by_dir_variance() const;
  public:
  void clear_weight_neighbors_by_dir_variance();
  bool weight_neighbors_by_dir_variance() const;
  void set_weight_neighbors_by_dir_variance(bool value);
  private:
  bool _internal_weight_neighbors_by_dir_variance() const;
  void _internal_set_weight_neighbors_by_dir_variance(bool value);
  public:

  // optional float keep_distance = 2592;
  bool has_keep_distance() const;
  private:
  bool _internal_has_keep_distance() const;
  public:
  void clear_keep_distance();
  float keep_distance() const;
  void set_keep_distance(float value);
  private:
  float _internal_keep_distance() const;
  void _internal_set_keep_distance(float value);
  public:

  // optional uint32 neighbor_paths_threshold = 2915;
  bool has_neighbor_paths_threshold() const;
  private:
  bool _internal_has_neighbor_paths_threshold() const;
  public:
  void clear_neighbor_paths_threshold();
  ::PROTOBUF_NAMESPACE_ID::uint32 neighbor_paths_threshold() const;
  void set_neighbor_paths_threshold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_neighbor_paths_threshold() const;
  void _internal_set_neighbor_paths_threshold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 keep_buffer_length = 3235;
  bool has_keep_buffer_length() const;
  private:
  bool _internal_has_keep_buffer_length() const;
  public:
  void clear_keep_buffer_length();
  ::PROTOBUF_NAMESPACE_ID::uint32 keep_buffer_length() const;
  void set_keep_buffer_length(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keep_buffer_length() const;
  void _internal_set_keep_buffer_length(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float neighbor_region_threshold = 3332;
  bool has_neighbor_region_threshold() const;
  private:
  bool _internal_has_neighbor_region_threshold() const;
  public:
  void clear_neighbor_region_threshold();
  float neighbor_region_threshold() const;
  void set_neighbor_region_threshold(float value);
  private:
  float _internal_neighbor_region_threshold() const;
  void _internal_set_neighbor_region_threshold(float value);
  public:

  // @@protoc_insertion_point(class_scope:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 keep_cycles_;
  ::PROTOBUF_NAMESPACE_ID::uint32 neighbor_count_threshold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 neighbor_count_threshold_only_;
  bool use_absolute_distance_;
  bool weight_neighbors_by_dir_variance_;
  float keep_distance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 neighbor_paths_threshold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 keep_buffer_length_;
  float neighbor_region_threshold_;
  friend struct ::TableStruct_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto;
};
// -------------------------------------------------------------------

class UsEmNeighboringFilterCfgIntern_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern_array_port) */ {
 public:
  UsEmNeighboringFilterCfgIntern_array_port();
  virtual ~UsEmNeighboringFilterCfgIntern_array_port();

  UsEmNeighboringFilterCfgIntern_array_port(const UsEmNeighboringFilterCfgIntern_array_port& from);
  UsEmNeighboringFilterCfgIntern_array_port(UsEmNeighboringFilterCfgIntern_array_port&& from) noexcept
    : UsEmNeighboringFilterCfgIntern_array_port() {
    *this = ::std::move(from);
  }

  inline UsEmNeighboringFilterCfgIntern_array_port& operator=(const UsEmNeighboringFilterCfgIntern_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsEmNeighboringFilterCfgIntern_array_port& operator=(UsEmNeighboringFilterCfgIntern_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsEmNeighboringFilterCfgIntern_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsEmNeighboringFilterCfgIntern_array_port* internal_default_instance() {
    return reinterpret_cast<const UsEmNeighboringFilterCfgIntern_array_port*>(
               &_UsEmNeighboringFilterCfgIntern_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UsEmNeighboringFilterCfgIntern_array_port& a, UsEmNeighboringFilterCfgIntern_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(UsEmNeighboringFilterCfgIntern_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsEmNeighboringFilterCfgIntern_array_port* New() const final {
    return CreateMaybeMessage<UsEmNeighboringFilterCfgIntern_array_port>(nullptr);
  }

  UsEmNeighboringFilterCfgIntern_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsEmNeighboringFilterCfgIntern_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsEmNeighboringFilterCfgIntern_array_port& from);
  void MergeFrom(const UsEmNeighboringFilterCfgIntern_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsEmNeighboringFilterCfgIntern_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto);
    return ::descriptor_table_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3637,
  };
  // repeated .pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern data = 3637;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern >*
      mutable_data();
  private:
  const ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern& _internal_data(int index) const;
  ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern* _internal_add_data();
  public:
  const ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern& data(int index) const;
  ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern > data_;
  friend struct ::TableStruct_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UsEmNeighboringFilterCfgIntern

// optional float keep_distance = 2592;
inline bool UsEmNeighboringFilterCfgIntern::_internal_has_keep_distance() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool UsEmNeighboringFilterCfgIntern::has_keep_distance() const {
  return _internal_has_keep_distance();
}
inline void UsEmNeighboringFilterCfgIntern::clear_keep_distance() {
  keep_distance_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float UsEmNeighboringFilterCfgIntern::_internal_keep_distance() const {
  return keep_distance_;
}
inline float UsEmNeighboringFilterCfgIntern::keep_distance() const {
  // @@protoc_insertion_point(field_get:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.keep_distance)
  return _internal_keep_distance();
}
inline void UsEmNeighboringFilterCfgIntern::_internal_set_keep_distance(float value) {
  _has_bits_[0] |= 0x00000020u;
  keep_distance_ = value;
}
inline void UsEmNeighboringFilterCfgIntern::set_keep_distance(float value) {
  _internal_set_keep_distance(value);
  // @@protoc_insertion_point(field_set:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.keep_distance)
}

// optional float neighbor_region_threshold = 3332;
inline bool UsEmNeighboringFilterCfgIntern::_internal_has_neighbor_region_threshold() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool UsEmNeighboringFilterCfgIntern::has_neighbor_region_threshold() const {
  return _internal_has_neighbor_region_threshold();
}
inline void UsEmNeighboringFilterCfgIntern::clear_neighbor_region_threshold() {
  neighbor_region_threshold_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float UsEmNeighboringFilterCfgIntern::_internal_neighbor_region_threshold() const {
  return neighbor_region_threshold_;
}
inline float UsEmNeighboringFilterCfgIntern::neighbor_region_threshold() const {
  // @@protoc_insertion_point(field_get:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.neighbor_region_threshold)
  return _internal_neighbor_region_threshold();
}
inline void UsEmNeighboringFilterCfgIntern::_internal_set_neighbor_region_threshold(float value) {
  _has_bits_[0] |= 0x00000100u;
  neighbor_region_threshold_ = value;
}
inline void UsEmNeighboringFilterCfgIntern::set_neighbor_region_threshold(float value) {
  _internal_set_neighbor_region_threshold(value);
  // @@protoc_insertion_point(field_set:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.neighbor_region_threshold)
}

// optional uint32 keep_cycles = 89;
inline bool UsEmNeighboringFilterCfgIntern::_internal_has_keep_cycles() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UsEmNeighboringFilterCfgIntern::has_keep_cycles() const {
  return _internal_has_keep_cycles();
}
inline void UsEmNeighboringFilterCfgIntern::clear_keep_cycles() {
  keep_cycles_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsEmNeighboringFilterCfgIntern::_internal_keep_cycles() const {
  return keep_cycles_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsEmNeighboringFilterCfgIntern::keep_cycles() const {
  // @@protoc_insertion_point(field_get:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.keep_cycles)
  return _internal_keep_cycles();
}
inline void UsEmNeighboringFilterCfgIntern::_internal_set_keep_cycles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  keep_cycles_ = value;
}
inline void UsEmNeighboringFilterCfgIntern::set_keep_cycles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_keep_cycles(value);
  // @@protoc_insertion_point(field_set:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.keep_cycles)
}

// optional uint32 keep_buffer_length = 3235;
inline bool UsEmNeighboringFilterCfgIntern::_internal_has_keep_buffer_length() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool UsEmNeighboringFilterCfgIntern::has_keep_buffer_length() const {
  return _internal_has_keep_buffer_length();
}
inline void UsEmNeighboringFilterCfgIntern::clear_keep_buffer_length() {
  keep_buffer_length_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsEmNeighboringFilterCfgIntern::_internal_keep_buffer_length() const {
  return keep_buffer_length_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsEmNeighboringFilterCfgIntern::keep_buffer_length() const {
  // @@protoc_insertion_point(field_get:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.keep_buffer_length)
  return _internal_keep_buffer_length();
}
inline void UsEmNeighboringFilterCfgIntern::_internal_set_keep_buffer_length(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  keep_buffer_length_ = value;
}
inline void UsEmNeighboringFilterCfgIntern::set_keep_buffer_length(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_keep_buffer_length(value);
  // @@protoc_insertion_point(field_set:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.keep_buffer_length)
}

// optional uint32 neighbor_count_threshold = 288;
inline bool UsEmNeighboringFilterCfgIntern::_internal_has_neighbor_count_threshold() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UsEmNeighboringFilterCfgIntern::has_neighbor_count_threshold() const {
  return _internal_has_neighbor_count_threshold();
}
inline void UsEmNeighboringFilterCfgIntern::clear_neighbor_count_threshold() {
  neighbor_count_threshold_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsEmNeighboringFilterCfgIntern::_internal_neighbor_count_threshold() const {
  return neighbor_count_threshold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsEmNeighboringFilterCfgIntern::neighbor_count_threshold() const {
  // @@protoc_insertion_point(field_get:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.neighbor_count_threshold)
  return _internal_neighbor_count_threshold();
}
inline void UsEmNeighboringFilterCfgIntern::_internal_set_neighbor_count_threshold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  neighbor_count_threshold_ = value;
}
inline void UsEmNeighboringFilterCfgIntern::set_neighbor_count_threshold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_neighbor_count_threshold(value);
  // @@protoc_insertion_point(field_set:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.neighbor_count_threshold)
}

// optional uint32 neighbor_count_threshold_only = 1097;
inline bool UsEmNeighboringFilterCfgIntern::_internal_has_neighbor_count_threshold_only() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UsEmNeighboringFilterCfgIntern::has_neighbor_count_threshold_only() const {
  return _internal_has_neighbor_count_threshold_only();
}
inline void UsEmNeighboringFilterCfgIntern::clear_neighbor_count_threshold_only() {
  neighbor_count_threshold_only_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsEmNeighboringFilterCfgIntern::_internal_neighbor_count_threshold_only() const {
  return neighbor_count_threshold_only_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsEmNeighboringFilterCfgIntern::neighbor_count_threshold_only() const {
  // @@protoc_insertion_point(field_get:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.neighbor_count_threshold_only)
  return _internal_neighbor_count_threshold_only();
}
inline void UsEmNeighboringFilterCfgIntern::_internal_set_neighbor_count_threshold_only(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  neighbor_count_threshold_only_ = value;
}
inline void UsEmNeighboringFilterCfgIntern::set_neighbor_count_threshold_only(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_neighbor_count_threshold_only(value);
  // @@protoc_insertion_point(field_set:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.neighbor_count_threshold_only)
}

// optional uint32 neighbor_paths_threshold = 2915;
inline bool UsEmNeighboringFilterCfgIntern::_internal_has_neighbor_paths_threshold() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool UsEmNeighboringFilterCfgIntern::has_neighbor_paths_threshold() const {
  return _internal_has_neighbor_paths_threshold();
}
inline void UsEmNeighboringFilterCfgIntern::clear_neighbor_paths_threshold() {
  neighbor_paths_threshold_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsEmNeighboringFilterCfgIntern::_internal_neighbor_paths_threshold() const {
  return neighbor_paths_threshold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UsEmNeighboringFilterCfgIntern::neighbor_paths_threshold() const {
  // @@protoc_insertion_point(field_get:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.neighbor_paths_threshold)
  return _internal_neighbor_paths_threshold();
}
inline void UsEmNeighboringFilterCfgIntern::_internal_set_neighbor_paths_threshold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  neighbor_paths_threshold_ = value;
}
inline void UsEmNeighboringFilterCfgIntern::set_neighbor_paths_threshold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_neighbor_paths_threshold(value);
  // @@protoc_insertion_point(field_set:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.neighbor_paths_threshold)
}

// optional bool use_absolute_distance = 3866;
inline bool UsEmNeighboringFilterCfgIntern::_internal_has_use_absolute_distance() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool UsEmNeighboringFilterCfgIntern::has_use_absolute_distance() const {
  return _internal_has_use_absolute_distance();
}
inline void UsEmNeighboringFilterCfgIntern::clear_use_absolute_distance() {
  use_absolute_distance_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool UsEmNeighboringFilterCfgIntern::_internal_use_absolute_distance() const {
  return use_absolute_distance_;
}
inline bool UsEmNeighboringFilterCfgIntern::use_absolute_distance() const {
  // @@protoc_insertion_point(field_get:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.use_absolute_distance)
  return _internal_use_absolute_distance();
}
inline void UsEmNeighboringFilterCfgIntern::_internal_set_use_absolute_distance(bool value) {
  _has_bits_[0] |= 0x00000008u;
  use_absolute_distance_ = value;
}
inline void UsEmNeighboringFilterCfgIntern::set_use_absolute_distance(bool value) {
  _internal_set_use_absolute_distance(value);
  // @@protoc_insertion_point(field_set:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.use_absolute_distance)
}

// optional bool weight_neighbors_by_dir_variance = 240;
inline bool UsEmNeighboringFilterCfgIntern::_internal_has_weight_neighbors_by_dir_variance() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool UsEmNeighboringFilterCfgIntern::has_weight_neighbors_by_dir_variance() const {
  return _internal_has_weight_neighbors_by_dir_variance();
}
inline void UsEmNeighboringFilterCfgIntern::clear_weight_neighbors_by_dir_variance() {
  weight_neighbors_by_dir_variance_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool UsEmNeighboringFilterCfgIntern::_internal_weight_neighbors_by_dir_variance() const {
  return weight_neighbors_by_dir_variance_;
}
inline bool UsEmNeighboringFilterCfgIntern::weight_neighbors_by_dir_variance() const {
  // @@protoc_insertion_point(field_get:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.weight_neighbors_by_dir_variance)
  return _internal_weight_neighbors_by_dir_variance();
}
inline void UsEmNeighboringFilterCfgIntern::_internal_set_weight_neighbors_by_dir_variance(bool value) {
  _has_bits_[0] |= 0x00000010u;
  weight_neighbors_by_dir_variance_ = value;
}
inline void UsEmNeighboringFilterCfgIntern::set_weight_neighbors_by_dir_variance(bool value) {
  _internal_set_weight_neighbors_by_dir_variance(value);
  // @@protoc_insertion_point(field_set:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern.weight_neighbors_by_dir_variance)
}

// -------------------------------------------------------------------

// UsEmNeighboringFilterCfgIntern_array_port

// repeated .pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern data = 3637;
inline int UsEmNeighboringFilterCfgIntern_array_port::_internal_data_size() const {
  return data_.size();
}
inline int UsEmNeighboringFilterCfgIntern_array_port::data_size() const {
  return _internal_data_size();
}
inline void UsEmNeighboringFilterCfgIntern_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern* UsEmNeighboringFilterCfgIntern_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern >*
UsEmNeighboringFilterCfgIntern_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern_array_port.data)
  return &data_;
}
inline const ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern& UsEmNeighboringFilterCfgIntern_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern& UsEmNeighboringFilterCfgIntern_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern_array_port.data)
  return _internal_data(index);
}
inline ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern* UsEmNeighboringFilterCfgIntern_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern* UsEmNeighboringFilterCfgIntern_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::us_em::us_em_neighboring_filter_cfg_intern::UsEmNeighboringFilterCfgIntern >&
UsEmNeighboringFilterCfgIntern_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.us_em.us_em_neighboring_filter_cfg_intern.UsEmNeighboringFilterCfgIntern_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace us_em_neighboring_filter_cfg_intern
}  // namespace us_em
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_us_5fem_2fus_5fem_5fneighboring_5ffilter_5fcfg_5fintern_2eproto
