// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: us_em/us_em_detection_zone_cfg.proto

#include "us_em/us_em_detection_zone_cfg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsEmDetectionZoneCfg_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto;
namespace pb {
namespace us_em {
namespace us_em_detection_zone_cfg {
class UsEmDetectionZoneCfgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsEmDetectionZoneCfg> _instance;
} _UsEmDetectionZoneCfg_default_instance_;
class UsEmDetectionZoneCfg_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsEmDetectionZoneCfg_array_port> _instance;
} _UsEmDetectionZoneCfg_array_port_default_instance_;
}  // namespace us_em_detection_zone_cfg
}  // namespace us_em
}  // namespace pb
static void InitDefaultsscc_info_UsEmDetectionZoneCfg_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_em::us_em_detection_zone_cfg::_UsEmDetectionZoneCfg_default_instance_;
    new (ptr) ::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsEmDetectionZoneCfg_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UsEmDetectionZoneCfg_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto}, {}};

static void InitDefaultsscc_info_UsEmDetectionZoneCfg_array_port_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::us_em::us_em_detection_zone_cfg::_UsEmDetectionZoneCfg_array_port_default_instance_;
    new (ptr) ::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsEmDetectionZoneCfg_array_port_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UsEmDetectionZoneCfg_array_port_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto}, {
      &scc_info_UsEmDetectionZoneCfg_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg, detzonefrontleftx_),
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg, detzonefrontlefty_),
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg, detzonefrontrightx_),
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg, detzonefrontrighty_),
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg, detzonebackleftx_),
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg, detzonebacklefty_),
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg, detzonebackrightx_),
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg, detzonebackrighty_),
  5,
  4,
  7,
  6,
  3,
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg)},
  { 21, 27, sizeof(::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_em::us_em_detection_zone_cfg::_UsEmDetectionZoneCfg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::us_em::us_em_detection_zone_cfg::_UsEmDetectionZoneCfg_array_port_default_instance_),
};

const char descriptor_table_protodef_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$us_em/us_em_detection_zone_cfg.proto\022!"
  "pb.us_em.us_em_detection_zone_cfg\"\366\001\n\024Us"
  "EmDetectionZoneCfg\022\032\n\021detZoneFrontLeftX\030"
  "\360\036 \001(\002\022\032\n\021detZoneFrontLeftY\030\321\036 \001(\002\022\033\n\022de"
  "tZoneFrontRightX\030\370\037 \001(\002\022\033\n\022detZoneFrontR"
  "ightY\030\331\037 \001(\002\022\031\n\020detZoneBackLeftX\030\240\t \001(\002\022"
  "\031\n\020detZoneBackLeftY\030\201\t \001(\002\022\032\n\021detZoneBac"
  "kRightX\030\214\003 \001(\002\022\032\n\021detZoneBackRightY\030\255\003 \001"
  "(\002\"i\n\037UsEmDetectionZoneCfg_array_port\022F\n"
  "\004data\030\277\027 \003(\01327.pb.us_em.us_em_detection_"
  "zone_cfg.UsEmDetectionZoneCfg"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto_sccs[2] = {
  &scc_info_UsEmDetectionZoneCfg_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto.base,
  &scc_info_UsEmDetectionZoneCfg_array_port_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto_once;
static bool descriptor_table_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto = {
  &descriptor_table_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto_initialized, descriptor_table_protodef_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto, "us_em/us_em_detection_zone_cfg.proto", 429,
  &descriptor_table_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto_once, descriptor_table_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto_sccs, descriptor_table_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto::offsets,
  file_level_metadata_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto, 2, file_level_enum_descriptors_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto, file_level_service_descriptors_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto), true);
namespace pb {
namespace us_em {
namespace us_em_detection_zone_cfg {

// ===================================================================

void UsEmDetectionZoneCfg::InitAsDefaultInstance() {
}
class UsEmDetectionZoneCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<UsEmDetectionZoneCfg>()._has_bits_);
  static void set_has_detzonefrontleftx(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_detzonefrontlefty(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_detzonefrontrightx(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_detzonefrontrighty(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_detzonebackleftx(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_detzonebacklefty(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_detzonebackrightx(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_detzonebackrighty(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

UsEmDetectionZoneCfg::UsEmDetectionZoneCfg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
}
UsEmDetectionZoneCfg::UsEmDetectionZoneCfg(const UsEmDetectionZoneCfg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&detzonebackrightx_, &from.detzonebackrightx_,
    static_cast<size_t>(reinterpret_cast<char*>(&detzonefrontrightx_) -
    reinterpret_cast<char*>(&detzonebackrightx_)) + sizeof(detzonefrontrightx_));
  // @@protoc_insertion_point(copy_constructor:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
}

void UsEmDetectionZoneCfg::SharedCtor() {
  ::memset(&detzonebackrightx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detzonefrontrightx_) -
      reinterpret_cast<char*>(&detzonebackrightx_)) + sizeof(detzonefrontrightx_));
}

UsEmDetectionZoneCfg::~UsEmDetectionZoneCfg() {
  // @@protoc_insertion_point(destructor:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
  SharedDtor();
}

void UsEmDetectionZoneCfg::SharedDtor() {
}

void UsEmDetectionZoneCfg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsEmDetectionZoneCfg& UsEmDetectionZoneCfg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsEmDetectionZoneCfg_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto.base);
  return *internal_default_instance();
}


void UsEmDetectionZoneCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&detzonebackrightx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&detzonefrontrightx_) -
        reinterpret_cast<char*>(&detzonebackrightx_)) + sizeof(detzonefrontrightx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsEmDetectionZoneCfg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional float detZoneBackRightX = 396;
      case 396:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          _Internal::set_has_detzonebackrightx(&has_bits);
          detzonebackrightx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float detZoneBackRightY = 429;
      case 429:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          _Internal::set_has_detzonebackrighty(&has_bits);
          detzonebackrighty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float detZoneBackLeftY = 1153;
      case 1153:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          _Internal::set_has_detzonebacklefty(&has_bits);
          detzonebacklefty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float detZoneBackLeftX = 1184;
      case 1184:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 5)) {
          _Internal::set_has_detzonebackleftx(&has_bits);
          detzonebackleftx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float detZoneFrontLeftY = 3921;
      case 3921:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 141)) {
          _Internal::set_has_detzonefrontlefty(&has_bits);
          detzonefrontlefty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float detZoneFrontLeftX = 3952;
      case 3952:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 133)) {
          _Internal::set_has_detzonefrontleftx(&has_bits);
          detzonefrontleftx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float detZoneFrontRightY = 4057;
      case 4057:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 205)) {
          _Internal::set_has_detzonefrontrighty(&has_bits);
          detzonefrontrighty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float detZoneFrontRightX = 4088;
      case 4088:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 197)) {
          _Internal::set_has_detzonefrontrightx(&has_bits);
          detzonefrontrightx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsEmDetectionZoneCfg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float detZoneBackRightX = 396;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(396, this->_internal_detzonebackrightx(), target);
  }

  // optional float detZoneBackRightY = 429;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(429, this->_internal_detzonebackrighty(), target);
  }

  // optional float detZoneBackLeftY = 1153;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1153, this->_internal_detzonebacklefty(), target);
  }

  // optional float detZoneBackLeftX = 1184;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1184, this->_internal_detzonebackleftx(), target);
  }

  // optional float detZoneFrontLeftY = 3921;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3921, this->_internal_detzonefrontlefty(), target);
  }

  // optional float detZoneFrontLeftX = 3952;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3952, this->_internal_detzonefrontleftx(), target);
  }

  // optional float detZoneFrontRightY = 4057;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4057, this->_internal_detzonefrontrighty(), target);
  }

  // optional float detZoneFrontRightX = 4088;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4088, this->_internal_detzonefrontrightx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
  return target;
}

size_t UsEmDetectionZoneCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional float detZoneBackRightX = 396;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 4;
    }

    // optional float detZoneBackRightY = 429;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 4;
    }

    // optional float detZoneBackLeftY = 1153;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 4;
    }

    // optional float detZoneBackLeftX = 1184;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 4;
    }

    // optional float detZoneFrontLeftY = 3921;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 + 4;
    }

    // optional float detZoneFrontLeftX = 3952;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 + 4;
    }

    // optional float detZoneFrontRightY = 4057;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3 + 4;
    }

    // optional float detZoneFrontRightX = 4088;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsEmDetectionZoneCfg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
  GOOGLE_DCHECK_NE(&from, this);
  const UsEmDetectionZoneCfg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsEmDetectionZoneCfg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
    MergeFrom(*source);
  }
}

void UsEmDetectionZoneCfg::MergeFrom(const UsEmDetectionZoneCfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      detzonebackrightx_ = from.detzonebackrightx_;
    }
    if (cached_has_bits & 0x00000002u) {
      detzonebackrighty_ = from.detzonebackrighty_;
    }
    if (cached_has_bits & 0x00000004u) {
      detzonebacklefty_ = from.detzonebacklefty_;
    }
    if (cached_has_bits & 0x00000008u) {
      detzonebackleftx_ = from.detzonebackleftx_;
    }
    if (cached_has_bits & 0x00000010u) {
      detzonefrontlefty_ = from.detzonefrontlefty_;
    }
    if (cached_has_bits & 0x00000020u) {
      detzonefrontleftx_ = from.detzonefrontleftx_;
    }
    if (cached_has_bits & 0x00000040u) {
      detzonefrontrighty_ = from.detzonefrontrighty_;
    }
    if (cached_has_bits & 0x00000080u) {
      detzonefrontrightx_ = from.detzonefrontrightx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UsEmDetectionZoneCfg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsEmDetectionZoneCfg::CopyFrom(const UsEmDetectionZoneCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsEmDetectionZoneCfg::IsInitialized() const {
  return true;
}

void UsEmDetectionZoneCfg::InternalSwap(UsEmDetectionZoneCfg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(detzonebackrightx_, other->detzonebackrightx_);
  swap(detzonebackrighty_, other->detzonebackrighty_);
  swap(detzonebacklefty_, other->detzonebacklefty_);
  swap(detzonebackleftx_, other->detzonebackleftx_);
  swap(detzonefrontlefty_, other->detzonefrontlefty_);
  swap(detzonefrontleftx_, other->detzonefrontleftx_);
  swap(detzonefrontrighty_, other->detzonefrontrighty_);
  swap(detzonefrontrightx_, other->detzonefrontrightx_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsEmDetectionZoneCfg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UsEmDetectionZoneCfg_array_port::InitAsDefaultInstance() {
}
class UsEmDetectionZoneCfg_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<UsEmDetectionZoneCfg_array_port>()._has_bits_);
};

UsEmDetectionZoneCfg_array_port::UsEmDetectionZoneCfg_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
}
UsEmDetectionZoneCfg_array_port::UsEmDetectionZoneCfg_array_port(const UsEmDetectionZoneCfg_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
}

void UsEmDetectionZoneCfg_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UsEmDetectionZoneCfg_array_port_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto.base);
}

UsEmDetectionZoneCfg_array_port::~UsEmDetectionZoneCfg_array_port() {
  // @@protoc_insertion_point(destructor:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
  SharedDtor();
}

void UsEmDetectionZoneCfg_array_port::SharedDtor() {
}

void UsEmDetectionZoneCfg_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsEmDetectionZoneCfg_array_port& UsEmDetectionZoneCfg_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsEmDetectionZoneCfg_array_port_us_5fem_2fus_5fem_5fdetection_5fzone_5fcfg_2eproto.base);
  return *internal_default_instance();
}


void UsEmDetectionZoneCfg_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UsEmDetectionZoneCfg_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg data = 3007;
      case 3007:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UsEmDetectionZoneCfg_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg data = 3007;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3007, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
  return target;
}

size_t UsEmDetectionZoneCfg_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg data = 3007;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsEmDetectionZoneCfg_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const UsEmDetectionZoneCfg_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsEmDetectionZoneCfg_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
    MergeFrom(*source);
  }
}

void UsEmDetectionZoneCfg_array_port::MergeFrom(const UsEmDetectionZoneCfg_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void UsEmDetectionZoneCfg_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsEmDetectionZoneCfg_array_port::CopyFrom(const UsEmDetectionZoneCfg_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.us_em.us_em_detection_zone_cfg.UsEmDetectionZoneCfg_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsEmDetectionZoneCfg_array_port::IsInitialized() const {
  return true;
}

void UsEmDetectionZoneCfg_array_port::InternalSwap(UsEmDetectionZoneCfg_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsEmDetectionZoneCfg_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace us_em_detection_zone_cfg
}  // namespace us_em
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg* Arena::CreateMaybeMessage< ::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg_array_port* Arena::CreateMaybeMessage< ::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::us_em::us_em_detection_zone_cfg::UsEmDetectionZoneCfg_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
