// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_lvmd/lvmdwarning_status.proto

#include "mf_lvmd/lvmdwarning_status.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace pb {
namespace mf_lvmd {
namespace lvmdwarning_status {
}  // namespace lvmdwarning_status
}  // namespace mf_lvmd
}  // namespace pb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_mf_5flvmd_2flvmdwarning_5fstatus_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_mf_5flvmd_2flvmdwarning_5fstatus_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mf_5flvmd_2flvmdwarning_5fstatus_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mf_5flvmd_2flvmdwarning_5fstatus_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_mf_5flvmd_2flvmdwarning_5fstatus_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n mf_lvmd/lvmdwarning_status.proto\022\035pb.m"
  "f_lvmd.lvmdwarning_status*\273\003\n\021LVMDWarnin"
  "gStatus\022\025\n\021LVMD_Warning_NONE\020\000\022\'\n#LVMD_W"
  "arning_EGO_VEH_NOT_STANDSTILL\020\001\022*\n&LVMD_"
  "Warning_LEAD_VEHICLE_NOT_SELECTED\020\002\022(\n$L"
  "VMD_Warning_LEAD_VEH_NOT_MOVED_AWAY\020\003\022&\n"
  "\"LVMD_Warning_LEAD_VEH_NOT_IN_RANGE\020\004\0221\n"
  "-LVMD_Warning_EGO_VEH_GEAR_POSITION_IN_R"
  "EVERSE\020\005\022!\n\035LVMD_Warning_LEAD_VEH_CUT_OU"
  "T\020\006\022\033\n\027LVMD_Warning_VRU_In_ROI\020\007\0226\n2LVMD"
  "_Warning_VEHICLE_APPEARED_FRONT_OF_EGO_V"
  "EHICLE\020\010\022=\n9LVMD_Warning_LEAD_VEHICLE_MO"
  "VEMENT_DETECTION_SYSTEM_FAULT\020\t"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto_once;
static bool descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto = {
  &descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto_initialized, descriptor_table_protodef_mf_5flvmd_2flvmdwarning_5fstatus_2eproto, "mf_lvmd/lvmdwarning_status.proto", 511,
  &descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto_once, descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto_sccs, descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_mf_5flvmd_2flvmdwarning_5fstatus_2eproto::offsets,
  file_level_metadata_mf_5flvmd_2flvmdwarning_5fstatus_2eproto, 0, file_level_enum_descriptors_mf_5flvmd_2flvmdwarning_5fstatus_2eproto, file_level_service_descriptors_mf_5flvmd_2flvmdwarning_5fstatus_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mf_5flvmd_2flvmdwarning_5fstatus_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto), true);
namespace pb {
namespace mf_lvmd {
namespace lvmdwarning_status {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LVMDWarningStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mf_5flvmd_2flvmdwarning_5fstatus_2eproto);
  return file_level_enum_descriptors_mf_5flvmd_2flvmdwarning_5fstatus_2eproto[0];
}
bool LVMDWarningStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace lvmdwarning_status
}  // namespace mf_lvmd
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
