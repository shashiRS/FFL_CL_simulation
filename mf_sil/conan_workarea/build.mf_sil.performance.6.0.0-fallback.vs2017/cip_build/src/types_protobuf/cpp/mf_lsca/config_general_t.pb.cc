// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_lsca/config_general_t.proto

#include "mf_lsca/config_general_t.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_cml_2fvec2_5fdf_5fpod_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec2Df_POD_cml_2fvec2_5fdf_5fpod_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_configGeneral_t_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto;
namespace pb {
namespace mf_lsca {
namespace config_general_t {
class configGeneral_tDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<configGeneral_t> _instance;
} _configGeneral_t_default_instance_;
class configGeneral_t_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<configGeneral_t_array_port> _instance;
} _configGeneral_t_array_port_default_instance_;
}  // namespace config_general_t
}  // namespace mf_lsca
}  // namespace pb
static void InitDefaultsscc_info_configGeneral_t_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_lsca::config_general_t::_configGeneral_t_default_instance_;
    new (ptr) ::pb::mf_lsca::config_general_t::configGeneral_t();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_lsca::config_general_t::configGeneral_t::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_configGeneral_t_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_configGeneral_t_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto}, {
      &scc_info_Vec2Df_POD_cml_2fvec2_5fdf_5fpod_2eproto.base,}};

static void InitDefaultsscc_info_configGeneral_t_array_port_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_lsca::config_general_t::_configGeneral_t_array_port_default_instance_;
    new (ptr) ::pb::mf_lsca::config_general_t::configGeneral_t_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_lsca::config_general_t::configGeneral_t_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_configGeneral_t_array_port_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_configGeneral_t_array_port_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto}, {
      &scc_info_configGeneral_t_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, simpleshapeactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, simpleshape_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, forwardleftindicesactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, forwardleftindices_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, forwardrightindicesactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, forwardrightindices_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, backwardleftindicesactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, backwardleftindices_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, backwardrightindicesactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, backwardrightindices_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationfrontactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationfront_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationbackactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationback_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationleftactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationleft_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationrightactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationright_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationfrontleftactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationfrontleft_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationfrontrightactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationfrontright_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationbackleftactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationbackleft_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationbackrightactualsize_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, bodyindexlocationbackright_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, lscaactive_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, onlybackupmode_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, proposalactive_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, resistanceactive_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, brakestaticactive_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, brakedynamicactive_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, doorprotectionstatactive_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, doorprotectiondynactive_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, reverseassistdynactive_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t, pedalmisapplicationactive_nu_),
  14,
  ~0u,
  18,
  ~0u,
  3,
  ~0u,
  0,
  ~0u,
  19,
  ~0u,
  22,
  ~0u,
  15,
  ~0u,
  2,
  ~0u,
  1,
  ~0u,
  17,
  ~0u,
  16,
  ~0u,
  21,
  ~0u,
  20,
  ~0u,
  8,
  9,
  10,
  11,
  4,
  5,
  6,
  7,
  12,
  13,
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_lsca::config_general_t::configGeneral_t_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 41, sizeof(::pb::mf_lsca::config_general_t::configGeneral_t)},
  { 77, 83, sizeof(::pb::mf_lsca::config_general_t::configGeneral_t_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_lsca::config_general_t::_configGeneral_t_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_lsca::config_general_t::_configGeneral_t_array_port_default_instance_),
};

const char descriptor_table_protodef_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036mf_lsca/config_general_t.proto\022\033pb.mf_"
  "lsca.config_general_t\032\025cml/vec2_df_pod.p"
  "roto\"\341\n\n\017configGeneral_t\022!\n\030simpleShapeA"
  "ctualSize_nu\030\205\020 \001(\r\0224\n\013simpleShape\030\215\014 \003("
  "\0132\036.pb.cml.vec2_df_pod.Vec2Df_POD\022(\n\037for"
  "wardLeftIndicesActualSize_nu\030\327\026 \001(\r\022\033\n\022f"
  "orwardLeftIndices\030\350\r \003(\r\022)\n forwardRight"
  "IndicesActualSize_nu\030\263\013 \001(\r\022\034\n\023forwardRi"
  "ghtIndices\030\330\030 \003(\r\022)\n backwardLeftIndices"
  "ActualSize_nu\030\311\002 \001(\r\022\034\n\023backwardLeftIndi"
  "ces\030\337\036 \003(\r\022*\n!backwardRightIndicesActual"
  "Size_nu\030\361\026 \001(\r\022\035\n\024backwardRightIndices\030\252"
  "\033 \003(\r\022,\n#bodyIndexLocationFrontActualSiz"
  "e_nu\030\321\035 \001(\r\022\037\n\026bodyIndexLocationFront\030\207\013"
  " \003(\r\022+\n\"bodyIndexLocationBackActualSize_"
  "nu\030\365\020 \001(\r\022\036\n\025bodyIndexLocationBack\030\223\001 \003("
  "\r\022+\n\"bodyIndexLocationLeftActualSize_nu\030"
  "\257\n \001(\r\022\036\n\025bodyIndexLocationLeft\030\242\004 \003(\r\022,"
  "\n#bodyIndexLocationRightActualSize_nu\030\320\006"
  " \001(\r\022\037\n\026bodyIndexLocationRight\030\344\034 \003(\r\0220\n"
  "\'bodyIndexLocationFrontLeftActualSize_nu"
  "\030\312\024 \001(\r\022#\n\032bodyIndexLocationFrontLeft\030\317\021"
  " \003(\r\0221\n(bodyIndexLocationFrontRightActua"
  "lSize_nu\030\240\021 \001(\r\022$\n\033bodyIndexLocationFron"
  "tRight\030\261\032 \003(\r\022/\n&bodyIndexLocationBackLe"
  "ftActualSize_nu\030\336\032 \001(\r\022\"\n\031bodyIndexLocat"
  "ionBackLeft\030\300\017 \003(\r\0220\n\'bodyIndexLocationB"
  "ackRightActualSize_nu\030\234\027 \001(\r\022#\n\032bodyInde"
  "xLocationBackRight\030\336\007 \003(\r\022\025\n\rLscaActive_"
  "nu\030) \001(\010\022\027\n\016onlyBackupMode\030\231\027 \001(\010\022\032\n\021pro"
  "posalActive_nu\030\263\026 \001(\010\022\034\n\023resistanceActiv"
  "e_nu\030\264\003 \001(\010\022\035\n\024brakeStaticActive_nu\030\236\t \001"
  "(\010\022\036\n\025brakeDynamicActive_nu\030\244\004 \001(\010\022$\n\033do"
  "orProtectionStatActive_nu\030\217\010 \001(\010\022#\n\032door"
  "ProtectionDynActive_nu\030\311\033 \001(\010\022\"\n\031reverse"
  "AssistDynActive_nu\030\377\022 \001(\010\022%\n\034pedalMisapp"
  "licationActive_nu\030\250\013 \001(\010\"X\n\032configGenera"
  "l_t_array_port\022:\n\004data\030& \003(\0132,.pb.mf_lsc"
  "a.config_general_t.configGeneral_t"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto_deps[1] = {
  &::descriptor_table_cml_2fvec2_5fdf_5fpod_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto_sccs[2] = {
  &scc_info_configGeneral_t_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto.base,
  &scc_info_configGeneral_t_array_port_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto_once;
static bool descriptor_table_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto = {
  &descriptor_table_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto_initialized, descriptor_table_protodef_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto, "mf_lsca/config_general_t.proto", 1554,
  &descriptor_table_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto_once, descriptor_table_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto_sccs, descriptor_table_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto::offsets,
  file_level_metadata_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto, 2, file_level_enum_descriptors_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto, file_level_service_descriptors_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto), true);
namespace pb {
namespace mf_lsca {
namespace config_general_t {

// ===================================================================

void configGeneral_t::InitAsDefaultInstance() {
}
class configGeneral_t::_Internal {
 public:
  using HasBits = decltype(std::declval<configGeneral_t>()._has_bits_);
  static void set_has_simpleshapeactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_forwardleftindicesactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_forwardrightindicesactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_backwardleftindicesactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_backwardrightindicesactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_bodyindexlocationfrontactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_bodyindexlocationbackactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_bodyindexlocationleftactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_bodyindexlocationrightactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_bodyindexlocationfrontleftactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_bodyindexlocationfrontrightactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_bodyindexlocationbackleftactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_bodyindexlocationbackrightactualsize_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_lscaactive_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_onlybackupmode(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_proposalactive_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_resistanceactive_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_brakestaticactive_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_brakedynamicactive_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_doorprotectionstatactive_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_doorprotectiondynactive_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_reverseassistdynactive_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_pedalmisapplicationactive_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
};

void configGeneral_t::clear_simpleshape() {
  simpleshape_.Clear();
}
configGeneral_t::configGeneral_t()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_lsca.config_general_t.configGeneral_t)
}
configGeneral_t::configGeneral_t(const configGeneral_t& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      bodyindexlocationback_(from.bodyindexlocationback_),
      bodyindexlocationleft_(from.bodyindexlocationleft_),
      bodyindexlocationbackright_(from.bodyindexlocationbackright_),
      bodyindexlocationfront_(from.bodyindexlocationfront_),
      simpleshape_(from.simpleshape_),
      forwardleftindices_(from.forwardleftindices_),
      bodyindexlocationbackleft_(from.bodyindexlocationbackleft_),
      bodyindexlocationfrontleft_(from.bodyindexlocationfrontleft_),
      forwardrightindices_(from.forwardrightindices_),
      bodyindexlocationfrontright_(from.bodyindexlocationfrontright_),
      backwardrightindices_(from.backwardrightindices_),
      bodyindexlocationright_(from.bodyindexlocationright_),
      backwardleftindices_(from.backwardleftindices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&backwardleftindicesactualsize_nu_, &from.backwardleftindicesactualsize_nu_,
    static_cast<size_t>(reinterpret_cast<char*>(&bodyindexlocationfrontactualsize_nu_) -
    reinterpret_cast<char*>(&backwardleftindicesactualsize_nu_)) + sizeof(bodyindexlocationfrontactualsize_nu_));
  // @@protoc_insertion_point(copy_constructor:pb.mf_lsca.config_general_t.configGeneral_t)
}

void configGeneral_t::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_configGeneral_t_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto.base);
  ::memset(&backwardleftindicesactualsize_nu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bodyindexlocationfrontactualsize_nu_) -
      reinterpret_cast<char*>(&backwardleftindicesactualsize_nu_)) + sizeof(bodyindexlocationfrontactualsize_nu_));
}

configGeneral_t::~configGeneral_t() {
  // @@protoc_insertion_point(destructor:pb.mf_lsca.config_general_t.configGeneral_t)
  SharedDtor();
}

void configGeneral_t::SharedDtor() {
}

void configGeneral_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const configGeneral_t& configGeneral_t::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_configGeneral_t_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto.base);
  return *internal_default_instance();
}


void configGeneral_t::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_lsca.config_general_t.configGeneral_t)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bodyindexlocationback_.Clear();
  bodyindexlocationleft_.Clear();
  bodyindexlocationbackright_.Clear();
  bodyindexlocationfront_.Clear();
  simpleshape_.Clear();
  forwardleftindices_.Clear();
  bodyindexlocationbackleft_.Clear();
  bodyindexlocationfrontleft_.Clear();
  forwardrightindices_.Clear();
  bodyindexlocationfrontright_.Clear();
  backwardrightindices_.Clear();
  bodyindexlocationright_.Clear();
  backwardleftindices_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&backwardleftindicesactualsize_nu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&doorprotectiondynactive_nu_) -
        reinterpret_cast<char*>(&backwardleftindicesactualsize_nu_)) + sizeof(doorprotectiondynactive_nu_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&lscaactive_nu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bodyindexlocationbackactualsize_nu_) -
        reinterpret_cast<char*>(&lscaactive_nu_)) + sizeof(bodyindexlocationbackactualsize_nu_));
  }
  if (cached_has_bits & 0x007f0000u) {
    ::memset(&bodyindexlocationfrontrightactualsize_nu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bodyindexlocationfrontactualsize_nu_) -
        reinterpret_cast<char*>(&bodyindexlocationfrontrightactualsize_nu_)) + sizeof(bodyindexlocationfrontactualsize_nu_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* configGeneral_t::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool LscaActive_nu = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_lscaactive_nu(&has_bits);
          lscaactive_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 bodyIndexLocationBack = 147;
      case 147:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_bodyindexlocationback(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<1176>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_bodyindexlocationback(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 backwardLeftIndicesActualSize_nu = 329;
      case 329:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_backwardleftindicesactualsize_nu(&has_bits);
          backwardleftindicesactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool resistanceActive_nu = 436;
      case 436:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_resistanceactive_nu(&has_bits);
          resistanceactive_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 bodyIndexLocationLeft = 546;
      case 546:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_bodyindexlocationleft(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<4368>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_bodyindexlocationleft(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool brakeDynamicActive_nu = 548;
      case 548:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_brakedynamicactive_nu(&has_bits);
          brakedynamicactive_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 bodyIndexLocationRightActualSize_nu = 848;
      case 848:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_bodyindexlocationrightactualsize_nu(&has_bits);
          bodyindexlocationrightactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 bodyIndexLocationBackRight = 990;
      case 990:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_bodyindexlocationbackright(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<7920>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_bodyindexlocationbackright(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool doorProtectionStatActive_nu = 1039;
      case 1039:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_doorprotectionstatactive_nu(&has_bits);
          doorprotectionstatactive_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool brakeStaticActive_nu = 1182;
      case 1182:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_brakestaticactive_nu(&has_bits);
          brakestaticactive_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 bodyIndexLocationLeftActualSize_nu = 1327;
      case 1327:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_bodyindexlocationleftactualsize_nu(&has_bits);
          bodyindexlocationleftactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 bodyIndexLocationFront = 1415;
      case 1415:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_bodyindexlocationfront(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<11320>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_bodyindexlocationfront(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pedalMisapplicationActive_nu = 1448;
      case 1448:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_pedalmisapplicationactive_nu(&has_bits);
          pedalmisapplicationactive_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 forwardRightIndicesActualSize_nu = 1459;
      case 1459:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_forwardrightindicesactualsize_nu(&has_bits);
          forwardrightindicesactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.cml.vec2_df_pod.Vec2Df_POD simpleShape = 1549;
      case 1549:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_simpleshape(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<12394>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated uint32 forwardLeftIndices = 1768;
      case 1768:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_forwardleftindices(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<14144>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_forwardleftindices(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 bodyIndexLocationBackLeft = 1984;
      case 1984:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_bodyindexlocationbackleft(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<15872>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_bodyindexlocationbackleft(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 simpleShapeActualSize_nu = 2053;
      case 2053:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_simpleshapeactualsize_nu(&has_bits);
          simpleshapeactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 bodyIndexLocationBackActualSize_nu = 2165;
      case 2165:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_bodyindexlocationbackactualsize_nu(&has_bits);
          bodyindexlocationbackactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 bodyIndexLocationFrontRightActualSize_nu = 2208;
      case 2208:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_bodyindexlocationfrontrightactualsize_nu(&has_bits);
          bodyindexlocationfrontrightactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 bodyIndexLocationFrontLeft = 2255;
      case 2255:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _internal_add_bodyindexlocationfrontleft(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_bodyindexlocationfrontleft(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool reverseAssistDynActive_nu = 2431;
      case 2431:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          _Internal::set_has_reverseassistdynactive_nu(&has_bits);
          reverseassistdynactive_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 bodyIndexLocationFrontLeftActualSize_nu = 2634;
      case 2634:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_bodyindexlocationfrontleftactualsize_nu(&has_bits);
          bodyindexlocationfrontleftactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool proposalActive_nu = 2867;
      case 2867:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_proposalactive_nu(&has_bits);
          proposalactive_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 forwardLeftIndicesActualSize_nu = 2903;
      case 2903:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _Internal::set_has_forwardleftindicesactualsize_nu(&has_bits);
          forwardleftindicesactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 backwardRightIndicesActualSize_nu = 2929;
      case 2929:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_backwardrightindicesactualsize_nu(&has_bits);
          backwardrightindicesactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool onlyBackupMode = 2969;
      case 2969:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          _Internal::set_has_onlybackupmode(&has_bits);
          onlybackupmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 bodyIndexLocationBackRightActualSize_nu = 2972;
      case 2972:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_bodyindexlocationbackrightactualsize_nu(&has_bits);
          bodyindexlocationbackrightactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 forwardRightIndices = 3160;
      case 3160:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _internal_add_forwardrightindices(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_forwardrightindices(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 bodyIndexLocationFrontRight = 3377;
      case 3377:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _internal_add_bodyindexlocationfrontright(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_bodyindexlocationfrontright(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 bodyIndexLocationBackLeftActualSize_nu = 3422;
      case 3422:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_bodyindexlocationbackleftactualsize_nu(&has_bits);
          bodyindexlocationbackleftactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 backwardRightIndices = 3498;
      case 3498:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _internal_add_backwardrightindices(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_backwardrightindices(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool doorProtectionDynActive_nu = 3529;
      case 3529:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_doorprotectiondynactive_nu(&has_bits);
          doorprotectiondynactive_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 bodyIndexLocationRight = 3684;
      case 3684:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _internal_add_bodyindexlocationright(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_bodyindexlocationright(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 bodyIndexLocationFrontActualSize_nu = 3793;
      case 3793:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_bodyindexlocationfrontactualsize_nu(&has_bits);
          bodyindexlocationfrontactualsize_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 backwardLeftIndices = 3935;
      case 3935:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          _internal_add_backwardleftindices(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_backwardleftindices(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* configGeneral_t::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_lsca.config_general_t.configGeneral_t)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool LscaActive_nu = 41;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(41, this->_internal_lscaactive_nu(), target);
  }

  // repeated uint32 bodyIndexLocationBack = 147;
  for (int i = 0, n = this->_internal_bodyindexlocationback_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(147, this->_internal_bodyindexlocationback(i), target);
  }

  // optional uint32 backwardLeftIndicesActualSize_nu = 329;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(329, this->_internal_backwardleftindicesactualsize_nu(), target);
  }

  // optional bool resistanceActive_nu = 436;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(436, this->_internal_resistanceactive_nu(), target);
  }

  // repeated uint32 bodyIndexLocationLeft = 546;
  for (int i = 0, n = this->_internal_bodyindexlocationleft_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(546, this->_internal_bodyindexlocationleft(i), target);
  }

  // optional bool brakeDynamicActive_nu = 548;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(548, this->_internal_brakedynamicactive_nu(), target);
  }

  // optional uint32 bodyIndexLocationRightActualSize_nu = 848;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(848, this->_internal_bodyindexlocationrightactualsize_nu(), target);
  }

  // repeated uint32 bodyIndexLocationBackRight = 990;
  for (int i = 0, n = this->_internal_bodyindexlocationbackright_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(990, this->_internal_bodyindexlocationbackright(i), target);
  }

  // optional bool doorProtectionStatActive_nu = 1039;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1039, this->_internal_doorprotectionstatactive_nu(), target);
  }

  // optional bool brakeStaticActive_nu = 1182;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1182, this->_internal_brakestaticactive_nu(), target);
  }

  // optional uint32 bodyIndexLocationLeftActualSize_nu = 1327;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1327, this->_internal_bodyindexlocationleftactualsize_nu(), target);
  }

  // repeated uint32 bodyIndexLocationFront = 1415;
  for (int i = 0, n = this->_internal_bodyindexlocationfront_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1415, this->_internal_bodyindexlocationfront(i), target);
  }

  // optional bool pedalMisapplicationActive_nu = 1448;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1448, this->_internal_pedalmisapplicationactive_nu(), target);
  }

  // optional uint32 forwardRightIndicesActualSize_nu = 1459;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1459, this->_internal_forwardrightindicesactualsize_nu(), target);
  }

  // repeated .pb.cml.vec2_df_pod.Vec2Df_POD simpleShape = 1549;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_simpleshape_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1549, this->_internal_simpleshape(i), target, stream);
  }

  // repeated uint32 forwardLeftIndices = 1768;
  for (int i = 0, n = this->_internal_forwardleftindices_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1768, this->_internal_forwardleftindices(i), target);
  }

  // repeated uint32 bodyIndexLocationBackLeft = 1984;
  for (int i = 0, n = this->_internal_bodyindexlocationbackleft_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1984, this->_internal_bodyindexlocationbackleft(i), target);
  }

  // optional uint32 simpleShapeActualSize_nu = 2053;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2053, this->_internal_simpleshapeactualsize_nu(), target);
  }

  // optional uint32 bodyIndexLocationBackActualSize_nu = 2165;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2165, this->_internal_bodyindexlocationbackactualsize_nu(), target);
  }

  // optional uint32 bodyIndexLocationFrontRightActualSize_nu = 2208;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2208, this->_internal_bodyindexlocationfrontrightactualsize_nu(), target);
  }

  // repeated uint32 bodyIndexLocationFrontLeft = 2255;
  for (int i = 0, n = this->_internal_bodyindexlocationfrontleft_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2255, this->_internal_bodyindexlocationfrontleft(i), target);
  }

  // optional bool reverseAssistDynActive_nu = 2431;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2431, this->_internal_reverseassistdynactive_nu(), target);
  }

  // optional uint32 bodyIndexLocationFrontLeftActualSize_nu = 2634;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2634, this->_internal_bodyindexlocationfrontleftactualsize_nu(), target);
  }

  // optional bool proposalActive_nu = 2867;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2867, this->_internal_proposalactive_nu(), target);
  }

  // optional uint32 forwardLeftIndicesActualSize_nu = 2903;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2903, this->_internal_forwardleftindicesactualsize_nu(), target);
  }

  // optional uint32 backwardRightIndicesActualSize_nu = 2929;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2929, this->_internal_backwardrightindicesactualsize_nu(), target);
  }

  // optional bool onlyBackupMode = 2969;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2969, this->_internal_onlybackupmode(), target);
  }

  // optional uint32 bodyIndexLocationBackRightActualSize_nu = 2972;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2972, this->_internal_bodyindexlocationbackrightactualsize_nu(), target);
  }

  // repeated uint32 forwardRightIndices = 3160;
  for (int i = 0, n = this->_internal_forwardrightindices_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3160, this->_internal_forwardrightindices(i), target);
  }

  // repeated uint32 bodyIndexLocationFrontRight = 3377;
  for (int i = 0, n = this->_internal_bodyindexlocationfrontright_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3377, this->_internal_bodyindexlocationfrontright(i), target);
  }

  // optional uint32 bodyIndexLocationBackLeftActualSize_nu = 3422;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3422, this->_internal_bodyindexlocationbackleftactualsize_nu(), target);
  }

  // repeated uint32 backwardRightIndices = 3498;
  for (int i = 0, n = this->_internal_backwardrightindices_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3498, this->_internal_backwardrightindices(i), target);
  }

  // optional bool doorProtectionDynActive_nu = 3529;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3529, this->_internal_doorprotectiondynactive_nu(), target);
  }

  // repeated uint32 bodyIndexLocationRight = 3684;
  for (int i = 0, n = this->_internal_bodyindexlocationright_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3684, this->_internal_bodyindexlocationright(i), target);
  }

  // optional uint32 bodyIndexLocationFrontActualSize_nu = 3793;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3793, this->_internal_bodyindexlocationfrontactualsize_nu(), target);
  }

  // repeated uint32 backwardLeftIndices = 3935;
  for (int i = 0, n = this->_internal_backwardleftindices_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3935, this->_internal_backwardleftindices(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_lsca.config_general_t.configGeneral_t)
  return target;
}

size_t configGeneral_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_lsca.config_general_t.configGeneral_t)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 bodyIndexLocationBack = 147;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->bodyindexlocationback_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bodyindexlocationback_size());
    total_size += data_size;
  }

  // repeated uint32 bodyIndexLocationLeft = 546;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->bodyindexlocationleft_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bodyindexlocationleft_size());
    total_size += data_size;
  }

  // repeated uint32 bodyIndexLocationBackRight = 990;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->bodyindexlocationbackright_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bodyindexlocationbackright_size());
    total_size += data_size;
  }

  // repeated uint32 bodyIndexLocationFront = 1415;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->bodyindexlocationfront_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bodyindexlocationfront_size());
    total_size += data_size;
  }

  // repeated .pb.cml.vec2_df_pod.Vec2Df_POD simpleShape = 1549;
  total_size += 2UL * this->_internal_simpleshape_size();
  for (const auto& msg : this->simpleshape_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint32 forwardLeftIndices = 1768;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->forwardleftindices_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_forwardleftindices_size());
    total_size += data_size;
  }

  // repeated uint32 bodyIndexLocationBackLeft = 1984;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->bodyindexlocationbackleft_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bodyindexlocationbackleft_size());
    total_size += data_size;
  }

  // repeated uint32 bodyIndexLocationFrontLeft = 2255;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->bodyindexlocationfrontleft_);
    total_size += 3 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bodyindexlocationfrontleft_size());
    total_size += data_size;
  }

  // repeated uint32 forwardRightIndices = 3160;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->forwardrightindices_);
    total_size += 3 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_forwardrightindices_size());
    total_size += data_size;
  }

  // repeated uint32 bodyIndexLocationFrontRight = 3377;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->bodyindexlocationfrontright_);
    total_size += 3 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bodyindexlocationfrontright_size());
    total_size += data_size;
  }

  // repeated uint32 backwardRightIndices = 3498;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->backwardrightindices_);
    total_size += 3 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_backwardrightindices_size());
    total_size += data_size;
  }

  // repeated uint32 bodyIndexLocationRight = 3684;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->bodyindexlocationright_);
    total_size += 3 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bodyindexlocationright_size());
    total_size += data_size;
  }

  // repeated uint32 backwardLeftIndices = 3935;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->backwardleftindices_);
    total_size += 3 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_backwardleftindices_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint32 backwardLeftIndicesActualSize_nu = 329;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_backwardleftindicesactualsize_nu());
    }

    // optional uint32 bodyIndexLocationRightActualSize_nu = 848;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bodyindexlocationrightactualsize_nu());
    }

    // optional uint32 bodyIndexLocationLeftActualSize_nu = 1327;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bodyindexlocationleftactualsize_nu());
    }

    // optional uint32 forwardRightIndicesActualSize_nu = 1459;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forwardrightindicesactualsize_nu());
    }

    // optional bool brakeStaticActive_nu = 1182;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool brakeDynamicActive_nu = 548;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool doorProtectionStatActive_nu = 1039;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool doorProtectionDynActive_nu = 3529;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool LscaActive_nu = 41;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool onlyBackupMode = 2969;
    if (cached_has_bits & 0x00000200u) {
      total_size += 3 + 1;
    }

    // optional bool proposalActive_nu = 2867;
    if (cached_has_bits & 0x00000400u) {
      total_size += 3 + 1;
    }

    // optional bool resistanceActive_nu = 436;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool reverseAssistDynActive_nu = 2431;
    if (cached_has_bits & 0x00001000u) {
      total_size += 3 + 1;
    }

    // optional bool pedalMisapplicationActive_nu = 1448;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional uint32 simpleShapeActualSize_nu = 2053;
    if (cached_has_bits & 0x00004000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_simpleshapeactualsize_nu());
    }

    // optional uint32 bodyIndexLocationBackActualSize_nu = 2165;
    if (cached_has_bits & 0x00008000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bodyindexlocationbackactualsize_nu());
    }

  }
  if (cached_has_bits & 0x007f0000u) {
    // optional uint32 bodyIndexLocationFrontRightActualSize_nu = 2208;
    if (cached_has_bits & 0x00010000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bodyindexlocationfrontrightactualsize_nu());
    }

    // optional uint32 bodyIndexLocationFrontLeftActualSize_nu = 2634;
    if (cached_has_bits & 0x00020000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bodyindexlocationfrontleftactualsize_nu());
    }

    // optional uint32 forwardLeftIndicesActualSize_nu = 2903;
    if (cached_has_bits & 0x00040000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forwardleftindicesactualsize_nu());
    }

    // optional uint32 backwardRightIndicesActualSize_nu = 2929;
    if (cached_has_bits & 0x00080000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_backwardrightindicesactualsize_nu());
    }

    // optional uint32 bodyIndexLocationBackRightActualSize_nu = 2972;
    if (cached_has_bits & 0x00100000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bodyindexlocationbackrightactualsize_nu());
    }

    // optional uint32 bodyIndexLocationBackLeftActualSize_nu = 3422;
    if (cached_has_bits & 0x00200000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bodyindexlocationbackleftactualsize_nu());
    }

    // optional uint32 bodyIndexLocationFrontActualSize_nu = 3793;
    if (cached_has_bits & 0x00400000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bodyindexlocationfrontactualsize_nu());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void configGeneral_t::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_lsca.config_general_t.configGeneral_t)
  GOOGLE_DCHECK_NE(&from, this);
  const configGeneral_t* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<configGeneral_t>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_lsca.config_general_t.configGeneral_t)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_lsca.config_general_t.configGeneral_t)
    MergeFrom(*source);
  }
}

void configGeneral_t::MergeFrom(const configGeneral_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_lsca.config_general_t.configGeneral_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bodyindexlocationback_.MergeFrom(from.bodyindexlocationback_);
  bodyindexlocationleft_.MergeFrom(from.bodyindexlocationleft_);
  bodyindexlocationbackright_.MergeFrom(from.bodyindexlocationbackright_);
  bodyindexlocationfront_.MergeFrom(from.bodyindexlocationfront_);
  simpleshape_.MergeFrom(from.simpleshape_);
  forwardleftindices_.MergeFrom(from.forwardleftindices_);
  bodyindexlocationbackleft_.MergeFrom(from.bodyindexlocationbackleft_);
  bodyindexlocationfrontleft_.MergeFrom(from.bodyindexlocationfrontleft_);
  forwardrightindices_.MergeFrom(from.forwardrightindices_);
  bodyindexlocationfrontright_.MergeFrom(from.bodyindexlocationfrontright_);
  backwardrightindices_.MergeFrom(from.backwardrightindices_);
  bodyindexlocationright_.MergeFrom(from.bodyindexlocationright_);
  backwardleftindices_.MergeFrom(from.backwardleftindices_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      backwardleftindicesactualsize_nu_ = from.backwardleftindicesactualsize_nu_;
    }
    if (cached_has_bits & 0x00000002u) {
      bodyindexlocationrightactualsize_nu_ = from.bodyindexlocationrightactualsize_nu_;
    }
    if (cached_has_bits & 0x00000004u) {
      bodyindexlocationleftactualsize_nu_ = from.bodyindexlocationleftactualsize_nu_;
    }
    if (cached_has_bits & 0x00000008u) {
      forwardrightindicesactualsize_nu_ = from.forwardrightindicesactualsize_nu_;
    }
    if (cached_has_bits & 0x00000010u) {
      brakestaticactive_nu_ = from.brakestaticactive_nu_;
    }
    if (cached_has_bits & 0x00000020u) {
      brakedynamicactive_nu_ = from.brakedynamicactive_nu_;
    }
    if (cached_has_bits & 0x00000040u) {
      doorprotectionstatactive_nu_ = from.doorprotectionstatactive_nu_;
    }
    if (cached_has_bits & 0x00000080u) {
      doorprotectiondynactive_nu_ = from.doorprotectiondynactive_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      lscaactive_nu_ = from.lscaactive_nu_;
    }
    if (cached_has_bits & 0x00000200u) {
      onlybackupmode_ = from.onlybackupmode_;
    }
    if (cached_has_bits & 0x00000400u) {
      proposalactive_nu_ = from.proposalactive_nu_;
    }
    if (cached_has_bits & 0x00000800u) {
      resistanceactive_nu_ = from.resistanceactive_nu_;
    }
    if (cached_has_bits & 0x00001000u) {
      reverseassistdynactive_nu_ = from.reverseassistdynactive_nu_;
    }
    if (cached_has_bits & 0x00002000u) {
      pedalmisapplicationactive_nu_ = from.pedalmisapplicationactive_nu_;
    }
    if (cached_has_bits & 0x00004000u) {
      simpleshapeactualsize_nu_ = from.simpleshapeactualsize_nu_;
    }
    if (cached_has_bits & 0x00008000u) {
      bodyindexlocationbackactualsize_nu_ = from.bodyindexlocationbackactualsize_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x007f0000u) {
    if (cached_has_bits & 0x00010000u) {
      bodyindexlocationfrontrightactualsize_nu_ = from.bodyindexlocationfrontrightactualsize_nu_;
    }
    if (cached_has_bits & 0x00020000u) {
      bodyindexlocationfrontleftactualsize_nu_ = from.bodyindexlocationfrontleftactualsize_nu_;
    }
    if (cached_has_bits & 0x00040000u) {
      forwardleftindicesactualsize_nu_ = from.forwardleftindicesactualsize_nu_;
    }
    if (cached_has_bits & 0x00080000u) {
      backwardrightindicesactualsize_nu_ = from.backwardrightindicesactualsize_nu_;
    }
    if (cached_has_bits & 0x00100000u) {
      bodyindexlocationbackrightactualsize_nu_ = from.bodyindexlocationbackrightactualsize_nu_;
    }
    if (cached_has_bits & 0x00200000u) {
      bodyindexlocationbackleftactualsize_nu_ = from.bodyindexlocationbackleftactualsize_nu_;
    }
    if (cached_has_bits & 0x00400000u) {
      bodyindexlocationfrontactualsize_nu_ = from.bodyindexlocationfrontactualsize_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void configGeneral_t::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_lsca.config_general_t.configGeneral_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void configGeneral_t::CopyFrom(const configGeneral_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_lsca.config_general_t.configGeneral_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool configGeneral_t::IsInitialized() const {
  return true;
}

void configGeneral_t::InternalSwap(configGeneral_t* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  bodyindexlocationback_.InternalSwap(&other->bodyindexlocationback_);
  bodyindexlocationleft_.InternalSwap(&other->bodyindexlocationleft_);
  bodyindexlocationbackright_.InternalSwap(&other->bodyindexlocationbackright_);
  bodyindexlocationfront_.InternalSwap(&other->bodyindexlocationfront_);
  simpleshape_.InternalSwap(&other->simpleshape_);
  forwardleftindices_.InternalSwap(&other->forwardleftindices_);
  bodyindexlocationbackleft_.InternalSwap(&other->bodyindexlocationbackleft_);
  bodyindexlocationfrontleft_.InternalSwap(&other->bodyindexlocationfrontleft_);
  forwardrightindices_.InternalSwap(&other->forwardrightindices_);
  bodyindexlocationfrontright_.InternalSwap(&other->bodyindexlocationfrontright_);
  backwardrightindices_.InternalSwap(&other->backwardrightindices_);
  bodyindexlocationright_.InternalSwap(&other->bodyindexlocationright_);
  backwardleftindices_.InternalSwap(&other->backwardleftindices_);
  swap(backwardleftindicesactualsize_nu_, other->backwardleftindicesactualsize_nu_);
  swap(bodyindexlocationrightactualsize_nu_, other->bodyindexlocationrightactualsize_nu_);
  swap(bodyindexlocationleftactualsize_nu_, other->bodyindexlocationleftactualsize_nu_);
  swap(forwardrightindicesactualsize_nu_, other->forwardrightindicesactualsize_nu_);
  swap(brakestaticactive_nu_, other->brakestaticactive_nu_);
  swap(brakedynamicactive_nu_, other->brakedynamicactive_nu_);
  swap(doorprotectionstatactive_nu_, other->doorprotectionstatactive_nu_);
  swap(doorprotectiondynactive_nu_, other->doorprotectiondynactive_nu_);
  swap(lscaactive_nu_, other->lscaactive_nu_);
  swap(onlybackupmode_, other->onlybackupmode_);
  swap(proposalactive_nu_, other->proposalactive_nu_);
  swap(resistanceactive_nu_, other->resistanceactive_nu_);
  swap(reverseassistdynactive_nu_, other->reverseassistdynactive_nu_);
  swap(pedalmisapplicationactive_nu_, other->pedalmisapplicationactive_nu_);
  swap(simpleshapeactualsize_nu_, other->simpleshapeactualsize_nu_);
  swap(bodyindexlocationbackactualsize_nu_, other->bodyindexlocationbackactualsize_nu_);
  swap(bodyindexlocationfrontrightactualsize_nu_, other->bodyindexlocationfrontrightactualsize_nu_);
  swap(bodyindexlocationfrontleftactualsize_nu_, other->bodyindexlocationfrontleftactualsize_nu_);
  swap(forwardleftindicesactualsize_nu_, other->forwardleftindicesactualsize_nu_);
  swap(backwardrightindicesactualsize_nu_, other->backwardrightindicesactualsize_nu_);
  swap(bodyindexlocationbackrightactualsize_nu_, other->bodyindexlocationbackrightactualsize_nu_);
  swap(bodyindexlocationbackleftactualsize_nu_, other->bodyindexlocationbackleftactualsize_nu_);
  swap(bodyindexlocationfrontactualsize_nu_, other->bodyindexlocationfrontactualsize_nu_);
}

::PROTOBUF_NAMESPACE_ID::Metadata configGeneral_t::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void configGeneral_t_array_port::InitAsDefaultInstance() {
}
class configGeneral_t_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<configGeneral_t_array_port>()._has_bits_);
};

configGeneral_t_array_port::configGeneral_t_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
}
configGeneral_t_array_port::configGeneral_t_array_port(const configGeneral_t_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
}

void configGeneral_t_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_configGeneral_t_array_port_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto.base);
}

configGeneral_t_array_port::~configGeneral_t_array_port() {
  // @@protoc_insertion_point(destructor:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
  SharedDtor();
}

void configGeneral_t_array_port::SharedDtor() {
}

void configGeneral_t_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const configGeneral_t_array_port& configGeneral_t_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_configGeneral_t_array_port_mf_5flsca_2fconfig_5fgeneral_5ft_2eproto.base);
  return *internal_default_instance();
}


void configGeneral_t_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* configGeneral_t_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.mf_lsca.config_general_t.configGeneral_t data = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<306>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* configGeneral_t_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.mf_lsca.config_general_t.configGeneral_t data = 38;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(38, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
  return target;
}

size_t configGeneral_t_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.mf_lsca.config_general_t.configGeneral_t data = 38;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void configGeneral_t_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const configGeneral_t_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<configGeneral_t_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
    MergeFrom(*source);
  }
}

void configGeneral_t_array_port::MergeFrom(const configGeneral_t_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void configGeneral_t_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void configGeneral_t_array_port::CopyFrom(const configGeneral_t_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_lsca.config_general_t.configGeneral_t_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool configGeneral_t_array_port::IsInitialized() const {
  return true;
}

void configGeneral_t_array_port::InternalSwap(configGeneral_t_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata configGeneral_t_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace config_general_t
}  // namespace mf_lsca
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::mf_lsca::config_general_t::configGeneral_t* Arena::CreateMaybeMessage< ::pb::mf_lsca::config_general_t::configGeneral_t >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_lsca::config_general_t::configGeneral_t >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::mf_lsca::config_general_t::configGeneral_t_array_port* Arena::CreateMaybeMessage< ::pb::mf_lsca::config_general_t::configGeneral_t_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_lsca::config_general_t::configGeneral_t_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
