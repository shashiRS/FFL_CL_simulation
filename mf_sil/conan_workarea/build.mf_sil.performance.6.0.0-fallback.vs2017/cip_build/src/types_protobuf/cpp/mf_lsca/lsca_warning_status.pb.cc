// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_lsca/lsca_warning_status.proto

#include "mf_lsca/lsca_warning_status.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace pb {
namespace mf_lsca {
namespace lsca_warning_status {
}  // namespace lsca_warning_status
}  // namespace mf_lsca
}  // namespace pb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!mf_lsca/lsca_warning_status.proto\022\036pb."
  "mf_lsca.lsca_warning_status*\224\002\n\023LSCA_WAR"
  "NING_STATUS\022\025\n\021LSCA_WARNING_NONE\020\000\022\024\n\020LS"
  "CA_WARNING_ALL\020\001\022\026\n\022LSCA_WARNING_FRONT\020\002"
  "\022\025\n\021LSCA_WARNING_LEFT\020\003\022\026\n\022LSCA_WARNING_"
  "RIGHT\020\004\022\025\n\021LSCA_WARNING_REAR\020\005\022\033\n\027LSCA_W"
  "ARNING_FRONT_LEFT\020\006\022\034\n\030LSCA_WARNING_FRON"
  "T_RIGHT\020\007\022\032\n\026LSCA_WARNING_REAR_LEFT\020\010\022\033\n"
  "\027LSCA_WARNING_REAR_RIGHT\020\t"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto_once;
static bool descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto = {
  &descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto_initialized, descriptor_table_protodef_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto, "mf_lsca/lsca_warning_status.proto", 346,
  &descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto_once, descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto_sccs, descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto::offsets,
  file_level_metadata_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto, 0, file_level_enum_descriptors_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto, file_level_service_descriptors_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto), true);
namespace pb {
namespace mf_lsca {
namespace lsca_warning_status {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LSCA_WARNING_STATUS_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto);
  return file_level_enum_descriptors_mf_5flsca_2flsca_5fwarning_5fstatus_2eproto[0];
}
bool LSCA_WARNING_STATUS_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace lsca_warning_status
}  // namespace mf_lsca
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
