// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_lsca/lsca_function_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "mf_lsca/config_general_t.pb.h"
#include "mf_lsca/config_brake_t.pb.h"
#include "mf_lsca/config_pmp_t.pb.h"
#include "mf_lsca/config_steer_t.pb.h"
#include "mf_lsca/config_application_features_t.pb.h"
#include "mf_lsca/config_developer_t.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto;
namespace pb {
namespace mf_lsca {
namespace lsca_function_config {
class LscaFunctionConfig;
class LscaFunctionConfigDefaultTypeInternal;
extern LscaFunctionConfigDefaultTypeInternal _LscaFunctionConfig_default_instance_;
class LscaFunctionConfig_array_port;
class LscaFunctionConfig_array_portDefaultTypeInternal;
extern LscaFunctionConfig_array_portDefaultTypeInternal _LscaFunctionConfig_array_port_default_instance_;
}  // namespace lsca_function_config
}  // namespace mf_lsca
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig* Arena::CreateMaybeMessage<::pb::mf_lsca::lsca_function_config::LscaFunctionConfig>(Arena*);
template<> ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig_array_port* Arena::CreateMaybeMessage<::pb::mf_lsca::lsca_function_config::LscaFunctionConfig_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace mf_lsca {
namespace lsca_function_config {

// ===================================================================

class LscaFunctionConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_lsca.lsca_function_config.LscaFunctionConfig) */ {
 public:
  LscaFunctionConfig();
  virtual ~LscaFunctionConfig();

  LscaFunctionConfig(const LscaFunctionConfig& from);
  LscaFunctionConfig(LscaFunctionConfig&& from) noexcept
    : LscaFunctionConfig() {
    *this = ::std::move(from);
  }

  inline LscaFunctionConfig& operator=(const LscaFunctionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline LscaFunctionConfig& operator=(LscaFunctionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LscaFunctionConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LscaFunctionConfig* internal_default_instance() {
    return reinterpret_cast<const LscaFunctionConfig*>(
               &_LscaFunctionConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LscaFunctionConfig& a, LscaFunctionConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(LscaFunctionConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LscaFunctionConfig* New() const final {
    return CreateMaybeMessage<LscaFunctionConfig>(nullptr);
  }

  LscaFunctionConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LscaFunctionConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LscaFunctionConfig& from);
  void MergeFrom(const LscaFunctionConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LscaFunctionConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_lsca.lsca_function_config.LscaFunctionConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto);
    return ::descriptor_table_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplicationFeaturesFieldNumber = 291,
    kDeveloperFieldNumber = 796,
    kSSigHeaderFieldNumber = 1033,
    kFunctionPmpFieldNumber = 1292,
    kFunctionBrakeFieldNumber = 1507,
    kFunctionSteerFieldNumber = 3341,
    kGeneralFieldNumber = 3591,
    kUiVersionNumberFieldNumber = 2124,
  };
  // optional .pb.mf_lsca.config_application_features_t.configApplicationFeatures_t applicationFeatures = 291;
  bool has_applicationfeatures() const;
  private:
  bool _internal_has_applicationfeatures() const;
  public:
  void clear_applicationfeatures();
  const ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t& applicationfeatures() const;
  ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* release_applicationfeatures();
  ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* mutable_applicationfeatures();
  void set_allocated_applicationfeatures(::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* applicationfeatures);
  private:
  const ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t& _internal_applicationfeatures() const;
  ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* _internal_mutable_applicationfeatures();
  public:

  // optional .pb.mf_lsca.config_developer_t.configDeveloper_t developer = 796;
  bool has_developer() const;
  private:
  bool _internal_has_developer() const;
  public:
  void clear_developer();
  const ::pb::mf_lsca::config_developer_t::configDeveloper_t& developer() const;
  ::pb::mf_lsca::config_developer_t::configDeveloper_t* release_developer();
  ::pb::mf_lsca::config_developer_t::configDeveloper_t* mutable_developer();
  void set_allocated_developer(::pb::mf_lsca::config_developer_t::configDeveloper_t* developer);
  private:
  const ::pb::mf_lsca::config_developer_t::configDeveloper_t& _internal_developer() const;
  ::pb::mf_lsca::config_developer_t::configDeveloper_t* _internal_mutable_developer();
  public:

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional .pb.mf_lsca.config_pmp_t.configPmp_t functionPmp = 1292;
  bool has_functionpmp() const;
  private:
  bool _internal_has_functionpmp() const;
  public:
  void clear_functionpmp();
  const ::pb::mf_lsca::config_pmp_t::configPmp_t& functionpmp() const;
  ::pb::mf_lsca::config_pmp_t::configPmp_t* release_functionpmp();
  ::pb::mf_lsca::config_pmp_t::configPmp_t* mutable_functionpmp();
  void set_allocated_functionpmp(::pb::mf_lsca::config_pmp_t::configPmp_t* functionpmp);
  private:
  const ::pb::mf_lsca::config_pmp_t::configPmp_t& _internal_functionpmp() const;
  ::pb::mf_lsca::config_pmp_t::configPmp_t* _internal_mutable_functionpmp();
  public:

  // optional .pb.mf_lsca.config_brake_t.configBrake_t functionBrake = 1507;
  bool has_functionbrake() const;
  private:
  bool _internal_has_functionbrake() const;
  public:
  void clear_functionbrake();
  const ::pb::mf_lsca::config_brake_t::configBrake_t& functionbrake() const;
  ::pb::mf_lsca::config_brake_t::configBrake_t* release_functionbrake();
  ::pb::mf_lsca::config_brake_t::configBrake_t* mutable_functionbrake();
  void set_allocated_functionbrake(::pb::mf_lsca::config_brake_t::configBrake_t* functionbrake);
  private:
  const ::pb::mf_lsca::config_brake_t::configBrake_t& _internal_functionbrake() const;
  ::pb::mf_lsca::config_brake_t::configBrake_t* _internal_mutable_functionbrake();
  public:

  // optional .pb.mf_lsca.config_steer_t.configSteer_t functionSteer = 3341;
  bool has_functionsteer() const;
  private:
  bool _internal_has_functionsteer() const;
  public:
  void clear_functionsteer();
  const ::pb::mf_lsca::config_steer_t::configSteer_t& functionsteer() const;
  ::pb::mf_lsca::config_steer_t::configSteer_t* release_functionsteer();
  ::pb::mf_lsca::config_steer_t::configSteer_t* mutable_functionsteer();
  void set_allocated_functionsteer(::pb::mf_lsca::config_steer_t::configSteer_t* functionsteer);
  private:
  const ::pb::mf_lsca::config_steer_t::configSteer_t& _internal_functionsteer() const;
  ::pb::mf_lsca::config_steer_t::configSteer_t* _internal_mutable_functionsteer();
  public:

  // optional .pb.mf_lsca.config_general_t.configGeneral_t general = 3591;
  bool has_general() const;
  private:
  bool _internal_has_general() const;
  public:
  void clear_general();
  const ::pb::mf_lsca::config_general_t::configGeneral_t& general() const;
  ::pb::mf_lsca::config_general_t::configGeneral_t* release_general();
  ::pb::mf_lsca::config_general_t::configGeneral_t* mutable_general();
  void set_allocated_general(::pb::mf_lsca::config_general_t::configGeneral_t* general);
  private:
  const ::pb::mf_lsca::config_general_t::configGeneral_t& _internal_general() const;
  ::pb::mf_lsca::config_general_t::configGeneral_t* _internal_mutable_general();
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.mf_lsca.lsca_function_config.LscaFunctionConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* applicationfeatures_;
  ::pb::mf_lsca::config_developer_t::configDeveloper_t* developer_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  ::pb::mf_lsca::config_pmp_t::configPmp_t* functionpmp_;
  ::pb::mf_lsca::config_brake_t::configBrake_t* functionbrake_;
  ::pb::mf_lsca::config_steer_t::configSteer_t* functionsteer_;
  ::pb::mf_lsca::config_general_t::configGeneral_t* general_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  friend struct ::TableStruct_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class LscaFunctionConfig_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_lsca.lsca_function_config.LscaFunctionConfig_array_port) */ {
 public:
  LscaFunctionConfig_array_port();
  virtual ~LscaFunctionConfig_array_port();

  LscaFunctionConfig_array_port(const LscaFunctionConfig_array_port& from);
  LscaFunctionConfig_array_port(LscaFunctionConfig_array_port&& from) noexcept
    : LscaFunctionConfig_array_port() {
    *this = ::std::move(from);
  }

  inline LscaFunctionConfig_array_port& operator=(const LscaFunctionConfig_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline LscaFunctionConfig_array_port& operator=(LscaFunctionConfig_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LscaFunctionConfig_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LscaFunctionConfig_array_port* internal_default_instance() {
    return reinterpret_cast<const LscaFunctionConfig_array_port*>(
               &_LscaFunctionConfig_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LscaFunctionConfig_array_port& a, LscaFunctionConfig_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(LscaFunctionConfig_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LscaFunctionConfig_array_port* New() const final {
    return CreateMaybeMessage<LscaFunctionConfig_array_port>(nullptr);
  }

  LscaFunctionConfig_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LscaFunctionConfig_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LscaFunctionConfig_array_port& from);
  void MergeFrom(const LscaFunctionConfig_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LscaFunctionConfig_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_lsca.lsca_function_config.LscaFunctionConfig_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto);
    return ::descriptor_table_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3540,
  };
  // repeated .pb.mf_lsca.lsca_function_config.LscaFunctionConfig data = 3540;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig >*
      mutable_data();
  private:
  const ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig& _internal_data(int index) const;
  ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig* _internal_add_data();
  public:
  const ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig& data(int index) const;
  ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.mf_lsca.lsca_function_config.LscaFunctionConfig_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig > data_;
  friend struct ::TableStruct_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LscaFunctionConfig

// optional uint32 uiVersionNumber = 2124;
inline bool LscaFunctionConfig::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool LscaFunctionConfig::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void LscaFunctionConfig::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LscaFunctionConfig::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LscaFunctionConfig::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void LscaFunctionConfig::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  uiversionnumber_ = value;
}
inline void LscaFunctionConfig::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool LscaFunctionConfig::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool LscaFunctionConfig::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& LscaFunctionConfig::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& LscaFunctionConfig::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* LscaFunctionConfig::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.sSigHeader)
  _has_bits_[0] &= ~0x00000004u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* LscaFunctionConfig::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000004u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* LscaFunctionConfig::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void LscaFunctionConfig::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.sSigHeader)
}

// optional .pb.mf_lsca.config_general_t.configGeneral_t general = 3591;
inline bool LscaFunctionConfig::_internal_has_general() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || general_ != nullptr);
  return value;
}
inline bool LscaFunctionConfig::has_general() const {
  return _internal_has_general();
}
inline const ::pb::mf_lsca::config_general_t::configGeneral_t& LscaFunctionConfig::_internal_general() const {
  const ::pb::mf_lsca::config_general_t::configGeneral_t* p = general_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_lsca::config_general_t::configGeneral_t*>(
      &::pb::mf_lsca::config_general_t::_configGeneral_t_default_instance_);
}
inline const ::pb::mf_lsca::config_general_t::configGeneral_t& LscaFunctionConfig::general() const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.general)
  return _internal_general();
}
inline ::pb::mf_lsca::config_general_t::configGeneral_t* LscaFunctionConfig::release_general() {
  // @@protoc_insertion_point(field_release:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.general)
  _has_bits_[0] &= ~0x00000040u;
  ::pb::mf_lsca::config_general_t::configGeneral_t* temp = general_;
  general_ = nullptr;
  return temp;
}
inline ::pb::mf_lsca::config_general_t::configGeneral_t* LscaFunctionConfig::_internal_mutable_general() {
  _has_bits_[0] |= 0x00000040u;
  if (general_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_lsca::config_general_t::configGeneral_t>(GetArenaNoVirtual());
    general_ = p;
  }
  return general_;
}
inline ::pb::mf_lsca::config_general_t::configGeneral_t* LscaFunctionConfig::mutable_general() {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.general)
  return _internal_mutable_general();
}
inline void LscaFunctionConfig::set_allocated_general(::pb::mf_lsca::config_general_t::configGeneral_t* general) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(general_);
  }
  if (general) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      general = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, general, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  general_ = general;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.general)
}

// optional .pb.mf_lsca.config_brake_t.configBrake_t functionBrake = 1507;
inline bool LscaFunctionConfig::_internal_has_functionbrake() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || functionbrake_ != nullptr);
  return value;
}
inline bool LscaFunctionConfig::has_functionbrake() const {
  return _internal_has_functionbrake();
}
inline const ::pb::mf_lsca::config_brake_t::configBrake_t& LscaFunctionConfig::_internal_functionbrake() const {
  const ::pb::mf_lsca::config_brake_t::configBrake_t* p = functionbrake_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_lsca::config_brake_t::configBrake_t*>(
      &::pb::mf_lsca::config_brake_t::_configBrake_t_default_instance_);
}
inline const ::pb::mf_lsca::config_brake_t::configBrake_t& LscaFunctionConfig::functionbrake() const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionBrake)
  return _internal_functionbrake();
}
inline ::pb::mf_lsca::config_brake_t::configBrake_t* LscaFunctionConfig::release_functionbrake() {
  // @@protoc_insertion_point(field_release:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionBrake)
  _has_bits_[0] &= ~0x00000010u;
  ::pb::mf_lsca::config_brake_t::configBrake_t* temp = functionbrake_;
  functionbrake_ = nullptr;
  return temp;
}
inline ::pb::mf_lsca::config_brake_t::configBrake_t* LscaFunctionConfig::_internal_mutable_functionbrake() {
  _has_bits_[0] |= 0x00000010u;
  if (functionbrake_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_lsca::config_brake_t::configBrake_t>(GetArenaNoVirtual());
    functionbrake_ = p;
  }
  return functionbrake_;
}
inline ::pb::mf_lsca::config_brake_t::configBrake_t* LscaFunctionConfig::mutable_functionbrake() {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionBrake)
  return _internal_mutable_functionbrake();
}
inline void LscaFunctionConfig::set_allocated_functionbrake(::pb::mf_lsca::config_brake_t::configBrake_t* functionbrake) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(functionbrake_);
  }
  if (functionbrake) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      functionbrake = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, functionbrake, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  functionbrake_ = functionbrake;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionBrake)
}

// optional .pb.mf_lsca.config_pmp_t.configPmp_t functionPmp = 1292;
inline bool LscaFunctionConfig::_internal_has_functionpmp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || functionpmp_ != nullptr);
  return value;
}
inline bool LscaFunctionConfig::has_functionpmp() const {
  return _internal_has_functionpmp();
}
inline const ::pb::mf_lsca::config_pmp_t::configPmp_t& LscaFunctionConfig::_internal_functionpmp() const {
  const ::pb::mf_lsca::config_pmp_t::configPmp_t* p = functionpmp_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_lsca::config_pmp_t::configPmp_t*>(
      &::pb::mf_lsca::config_pmp_t::_configPmp_t_default_instance_);
}
inline const ::pb::mf_lsca::config_pmp_t::configPmp_t& LscaFunctionConfig::functionpmp() const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionPmp)
  return _internal_functionpmp();
}
inline ::pb::mf_lsca::config_pmp_t::configPmp_t* LscaFunctionConfig::release_functionpmp() {
  // @@protoc_insertion_point(field_release:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionPmp)
  _has_bits_[0] &= ~0x00000008u;
  ::pb::mf_lsca::config_pmp_t::configPmp_t* temp = functionpmp_;
  functionpmp_ = nullptr;
  return temp;
}
inline ::pb::mf_lsca::config_pmp_t::configPmp_t* LscaFunctionConfig::_internal_mutable_functionpmp() {
  _has_bits_[0] |= 0x00000008u;
  if (functionpmp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_lsca::config_pmp_t::configPmp_t>(GetArenaNoVirtual());
    functionpmp_ = p;
  }
  return functionpmp_;
}
inline ::pb::mf_lsca::config_pmp_t::configPmp_t* LscaFunctionConfig::mutable_functionpmp() {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionPmp)
  return _internal_mutable_functionpmp();
}
inline void LscaFunctionConfig::set_allocated_functionpmp(::pb::mf_lsca::config_pmp_t::configPmp_t* functionpmp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(functionpmp_);
  }
  if (functionpmp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      functionpmp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, functionpmp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  functionpmp_ = functionpmp;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionPmp)
}

// optional .pb.mf_lsca.config_steer_t.configSteer_t functionSteer = 3341;
inline bool LscaFunctionConfig::_internal_has_functionsteer() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || functionsteer_ != nullptr);
  return value;
}
inline bool LscaFunctionConfig::has_functionsteer() const {
  return _internal_has_functionsteer();
}
inline const ::pb::mf_lsca::config_steer_t::configSteer_t& LscaFunctionConfig::_internal_functionsteer() const {
  const ::pb::mf_lsca::config_steer_t::configSteer_t* p = functionsteer_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_lsca::config_steer_t::configSteer_t*>(
      &::pb::mf_lsca::config_steer_t::_configSteer_t_default_instance_);
}
inline const ::pb::mf_lsca::config_steer_t::configSteer_t& LscaFunctionConfig::functionsteer() const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionSteer)
  return _internal_functionsteer();
}
inline ::pb::mf_lsca::config_steer_t::configSteer_t* LscaFunctionConfig::release_functionsteer() {
  // @@protoc_insertion_point(field_release:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionSteer)
  _has_bits_[0] &= ~0x00000020u;
  ::pb::mf_lsca::config_steer_t::configSteer_t* temp = functionsteer_;
  functionsteer_ = nullptr;
  return temp;
}
inline ::pb::mf_lsca::config_steer_t::configSteer_t* LscaFunctionConfig::_internal_mutable_functionsteer() {
  _has_bits_[0] |= 0x00000020u;
  if (functionsteer_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_lsca::config_steer_t::configSteer_t>(GetArenaNoVirtual());
    functionsteer_ = p;
  }
  return functionsteer_;
}
inline ::pb::mf_lsca::config_steer_t::configSteer_t* LscaFunctionConfig::mutable_functionsteer() {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionSteer)
  return _internal_mutable_functionsteer();
}
inline void LscaFunctionConfig::set_allocated_functionsteer(::pb::mf_lsca::config_steer_t::configSteer_t* functionsteer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(functionsteer_);
  }
  if (functionsteer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      functionsteer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, functionsteer, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  functionsteer_ = functionsteer;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.functionSteer)
}

// optional .pb.mf_lsca.config_application_features_t.configApplicationFeatures_t applicationFeatures = 291;
inline bool LscaFunctionConfig::_internal_has_applicationfeatures() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || applicationfeatures_ != nullptr);
  return value;
}
inline bool LscaFunctionConfig::has_applicationfeatures() const {
  return _internal_has_applicationfeatures();
}
inline const ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t& LscaFunctionConfig::_internal_applicationfeatures() const {
  const ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* p = applicationfeatures_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t*>(
      &::pb::mf_lsca::config_application_features_t::_configApplicationFeatures_t_default_instance_);
}
inline const ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t& LscaFunctionConfig::applicationfeatures() const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.applicationFeatures)
  return _internal_applicationfeatures();
}
inline ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* LscaFunctionConfig::release_applicationfeatures() {
  // @@protoc_insertion_point(field_release:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.applicationFeatures)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* temp = applicationfeatures_;
  applicationfeatures_ = nullptr;
  return temp;
}
inline ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* LscaFunctionConfig::_internal_mutable_applicationfeatures() {
  _has_bits_[0] |= 0x00000001u;
  if (applicationfeatures_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t>(GetArenaNoVirtual());
    applicationfeatures_ = p;
  }
  return applicationfeatures_;
}
inline ::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* LscaFunctionConfig::mutable_applicationfeatures() {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.applicationFeatures)
  return _internal_mutable_applicationfeatures();
}
inline void LscaFunctionConfig::set_allocated_applicationfeatures(::pb::mf_lsca::config_application_features_t::configApplicationFeatures_t* applicationfeatures) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(applicationfeatures_);
  }
  if (applicationfeatures) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      applicationfeatures = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, applicationfeatures, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  applicationfeatures_ = applicationfeatures;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.applicationFeatures)
}

// optional .pb.mf_lsca.config_developer_t.configDeveloper_t developer = 796;
inline bool LscaFunctionConfig::_internal_has_developer() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || developer_ != nullptr);
  return value;
}
inline bool LscaFunctionConfig::has_developer() const {
  return _internal_has_developer();
}
inline const ::pb::mf_lsca::config_developer_t::configDeveloper_t& LscaFunctionConfig::_internal_developer() const {
  const ::pb::mf_lsca::config_developer_t::configDeveloper_t* p = developer_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_lsca::config_developer_t::configDeveloper_t*>(
      &::pb::mf_lsca::config_developer_t::_configDeveloper_t_default_instance_);
}
inline const ::pb::mf_lsca::config_developer_t::configDeveloper_t& LscaFunctionConfig::developer() const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.developer)
  return _internal_developer();
}
inline ::pb::mf_lsca::config_developer_t::configDeveloper_t* LscaFunctionConfig::release_developer() {
  // @@protoc_insertion_point(field_release:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.developer)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::mf_lsca::config_developer_t::configDeveloper_t* temp = developer_;
  developer_ = nullptr;
  return temp;
}
inline ::pb::mf_lsca::config_developer_t::configDeveloper_t* LscaFunctionConfig::_internal_mutable_developer() {
  _has_bits_[0] |= 0x00000002u;
  if (developer_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_lsca::config_developer_t::configDeveloper_t>(GetArenaNoVirtual());
    developer_ = p;
  }
  return developer_;
}
inline ::pb::mf_lsca::config_developer_t::configDeveloper_t* LscaFunctionConfig::mutable_developer() {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.developer)
  return _internal_mutable_developer();
}
inline void LscaFunctionConfig::set_allocated_developer(::pb::mf_lsca::config_developer_t::configDeveloper_t* developer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(developer_);
  }
  if (developer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      developer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, developer, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  developer_ = developer;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_lsca.lsca_function_config.LscaFunctionConfig.developer)
}

// -------------------------------------------------------------------

// LscaFunctionConfig_array_port

// repeated .pb.mf_lsca.lsca_function_config.LscaFunctionConfig data = 3540;
inline int LscaFunctionConfig_array_port::_internal_data_size() const {
  return data_.size();
}
inline int LscaFunctionConfig_array_port::data_size() const {
  return _internal_data_size();
}
inline void LscaFunctionConfig_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig* LscaFunctionConfig_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.mf_lsca.lsca_function_config.LscaFunctionConfig_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig >*
LscaFunctionConfig_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_lsca.lsca_function_config.LscaFunctionConfig_array_port.data)
  return &data_;
}
inline const ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig& LscaFunctionConfig_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig& LscaFunctionConfig_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_lsca.lsca_function_config.LscaFunctionConfig_array_port.data)
  return _internal_data(index);
}
inline ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig* LscaFunctionConfig_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig* LscaFunctionConfig_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.mf_lsca.lsca_function_config.LscaFunctionConfig_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_lsca::lsca_function_config::LscaFunctionConfig >&
LscaFunctionConfig_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.mf_lsca.lsca_function_config.LscaFunctionConfig_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace lsca_function_config
}  // namespace mf_lsca
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mf_5flsca_2flsca_5ffunction_5fconfig_2eproto
