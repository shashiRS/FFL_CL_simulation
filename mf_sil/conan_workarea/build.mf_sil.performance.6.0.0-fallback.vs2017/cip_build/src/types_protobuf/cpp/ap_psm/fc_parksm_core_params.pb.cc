// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_psm/fc_parksm_core_params.proto

#include "ap_psm/fc_parksm_core_params.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FC_PARKSM_Core_Params_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsignal_5fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto;
namespace pb {
namespace ap_psm {
namespace fc_parksm_core_params {
class FC_PARKSM_Core_ParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FC_PARKSM_Core_Params> _instance;
} _FC_PARKSM_Core_Params_default_instance_;
class FC_PARKSM_Core_Params_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FC_PARKSM_Core_Params_array_port> _instance;
} _FC_PARKSM_Core_Params_array_port_default_instance_;
}  // namespace fc_parksm_core_params
}  // namespace ap_psm
}  // namespace pb
static void InitDefaultsscc_info_FC_PARKSM_Core_Params_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_psm::fc_parksm_core_params::_FC_PARKSM_Core_Params_default_instance_;
    new (ptr) ::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FC_PARKSM_Core_Params_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FC_PARKSM_Core_Params_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto}, {
      &scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto.base,}};

static void InitDefaultsscc_info_FC_PARKSM_Core_Params_array_port_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_psm::fc_parksm_core_params::_FC_PARKSM_Core_Params_array_port_default_instance_;
    new (ptr) ::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FC_PARKSM_Core_Params_array_port_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FC_PARKSM_Core_Params_array_port_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto}, {
      &scc_info_FC_PARKSM_Core_Params_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params, uiversionnumber_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params, ssigheader_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params, ap_sc_reset_map_dist_m_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params, ap_sc_rev_assist_coded_),
  3,
  0,
  2,
  1,
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params)},
  { 13, 19, sizeof(::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_psm::fc_parksm_core_params::_FC_PARKSM_Core_Params_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_psm::fc_parksm_core_params::_FC_PARKSM_Core_Params_array_port_default_instance_),
};

const char descriptor_table_protodef_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"ap_psm/fc_parksm_core_params.proto\022\037pb"
  ".ap_psm.fc_parksm_core_params\032\027eco/signa"
  "l_header.proto\"\254\001\n\025FC_PARKSM_Core_Params"
  "\022\030\n\017uiVersionNumber\030\314\020 \001(\r\0227\n\nsSigHeader"
  "\030\211\010 \001(\0132\".pb.eco.signal_header.SignalHea"
  "der\022\037\n\026AP_SC_RESET_MAP_DIST_M\030\210\002 \001(\002\022\037\n\026"
  "AP_SC_REV_ASSIST_CODED\030\373\033 \001(\010\"h\n FC_PARK"
  "SM_Core_Params_array_port\022D\n\004data\030B \003(\0132"
  "6.pb.ap_psm.fc_parksm_core_params.FC_PAR"
  "KSM_Core_Params"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto_deps[1] = {
  &::descriptor_table_eco_2fsignal_5fheader_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto_sccs[2] = {
  &scc_info_FC_PARKSM_Core_Params_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto.base,
  &scc_info_FC_PARKSM_Core_Params_array_port_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto_once;
static bool descriptor_table_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto = {
  &descriptor_table_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto_initialized, descriptor_table_protodef_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto, "ap_psm/fc_parksm_core_params.proto", 375,
  &descriptor_table_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto_once, descriptor_table_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto_sccs, descriptor_table_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto::offsets,
  file_level_metadata_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto, 2, file_level_enum_descriptors_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto, file_level_service_descriptors_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto), true);
namespace pb {
namespace ap_psm {
namespace fc_parksm_core_params {

// ===================================================================

void FC_PARKSM_Core_Params::InitAsDefaultInstance() {
  ::pb::ap_psm::fc_parksm_core_params::_FC_PARKSM_Core_Params_default_instance_._instance.get_mutable()->ssigheader_ = const_cast< ::pb::eco::signal_header::SignalHeader*>(
      ::pb::eco::signal_header::SignalHeader::internal_default_instance());
}
class FC_PARKSM_Core_Params::_Internal {
 public:
  using HasBits = decltype(std::declval<FC_PARKSM_Core_Params>()._has_bits_);
  static void set_has_uiversionnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::pb::eco::signal_header::SignalHeader& ssigheader(const FC_PARKSM_Core_Params* msg);
  static void set_has_ssigheader(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ap_sc_reset_map_dist_m(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ap_sc_rev_assist_coded(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::pb::eco::signal_header::SignalHeader&
FC_PARKSM_Core_Params::_Internal::ssigheader(const FC_PARKSM_Core_Params* msg) {
  return *msg->ssigheader_;
}
void FC_PARKSM_Core_Params::clear_ssigheader() {
  if (ssigheader_ != nullptr) ssigheader_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
FC_PARKSM_Core_Params::FC_PARKSM_Core_Params()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
}
FC_PARKSM_Core_Params::FC_PARKSM_Core_Params(const FC_PARKSM_Core_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_ssigheader()) {
    ssigheader_ = new ::pb::eco::signal_header::SignalHeader(*from.ssigheader_);
  } else {
    ssigheader_ = nullptr;
  }
  ::memcpy(&ap_sc_rev_assist_coded_, &from.ap_sc_rev_assist_coded_,
    static_cast<size_t>(reinterpret_cast<char*>(&uiversionnumber_) -
    reinterpret_cast<char*>(&ap_sc_rev_assist_coded_)) + sizeof(uiversionnumber_));
  // @@protoc_insertion_point(copy_constructor:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
}

void FC_PARKSM_Core_Params::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FC_PARKSM_Core_Params_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto.base);
  ::memset(&ssigheader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiversionnumber_) -
      reinterpret_cast<char*>(&ssigheader_)) + sizeof(uiversionnumber_));
}

FC_PARKSM_Core_Params::~FC_PARKSM_Core_Params() {
  // @@protoc_insertion_point(destructor:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
  SharedDtor();
}

void FC_PARKSM_Core_Params::SharedDtor() {
  if (this != internal_default_instance()) delete ssigheader_;
}

void FC_PARKSM_Core_Params::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FC_PARKSM_Core_Params& FC_PARKSM_Core_Params::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FC_PARKSM_Core_Params_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto.base);
  return *internal_default_instance();
}


void FC_PARKSM_Core_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(ssigheader_ != nullptr);
    ssigheader_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&ap_sc_rev_assist_coded_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uiversionnumber_) -
        reinterpret_cast<char*>(&ap_sc_rev_assist_coded_)) + sizeof(uiversionnumber_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* FC_PARKSM_Core_Params::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional float AP_SC_RESET_MAP_DIST_M = 264;
      case 264:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          _Internal::set_has_ap_sc_reset_map_dist_m(&has_bits);
          ap_sc_reset_map_dist_m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_ssigheader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 uiVersionNumber = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_uiversionnumber(&has_bits);
          uiversionnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool AP_SC_REV_ASSIST_CODED = 3579;
      case 3579:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          _Internal::set_has_ap_sc_rev_assist_coded(&has_bits);
          ap_sc_rev_assist_coded_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FC_PARKSM_Core_Params::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float AP_SC_RESET_MAP_DIST_M = 264;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(264, this->_internal_ap_sc_reset_map_dist_m(), target);
  }

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::ssigheader(this), target, stream);
  }

  // optional uint32 uiVersionNumber = 2124;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2124, this->_internal_uiversionnumber(), target);
  }

  // optional bool AP_SC_REV_ASSIST_CODED = 3579;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3579, this->_internal_ap_sc_rev_assist_coded(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
  return target;
}

size_t FC_PARKSM_Core_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ssigheader_);
    }

    // optional bool AP_SC_REV_ASSIST_CODED = 3579;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 + 1;
    }

    // optional float AP_SC_RESET_MAP_DIST_M = 264;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 4;
    }

    // optional uint32 uiVersionNumber = 2124;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uiversionnumber());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FC_PARKSM_Core_Params::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
  GOOGLE_DCHECK_NE(&from, this);
  const FC_PARKSM_Core_Params* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FC_PARKSM_Core_Params>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
    MergeFrom(*source);
  }
}

void FC_PARKSM_Core_Params::MergeFrom(const FC_PARKSM_Core_Params& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_ssigheader()->::pb::eco::signal_header::SignalHeader::MergeFrom(from._internal_ssigheader());
    }
    if (cached_has_bits & 0x00000002u) {
      ap_sc_rev_assist_coded_ = from.ap_sc_rev_assist_coded_;
    }
    if (cached_has_bits & 0x00000004u) {
      ap_sc_reset_map_dist_m_ = from.ap_sc_reset_map_dist_m_;
    }
    if (cached_has_bits & 0x00000008u) {
      uiversionnumber_ = from.uiversionnumber_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FC_PARKSM_Core_Params::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FC_PARKSM_Core_Params::CopyFrom(const FC_PARKSM_Core_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FC_PARKSM_Core_Params::IsInitialized() const {
  return true;
}

void FC_PARKSM_Core_Params::InternalSwap(FC_PARKSM_Core_Params* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ssigheader_, other->ssigheader_);
  swap(ap_sc_rev_assist_coded_, other->ap_sc_rev_assist_coded_);
  swap(ap_sc_reset_map_dist_m_, other->ap_sc_reset_map_dist_m_);
  swap(uiversionnumber_, other->uiversionnumber_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FC_PARKSM_Core_Params::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FC_PARKSM_Core_Params_array_port::InitAsDefaultInstance() {
}
class FC_PARKSM_Core_Params_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<FC_PARKSM_Core_Params_array_port>()._has_bits_);
};

FC_PARKSM_Core_Params_array_port::FC_PARKSM_Core_Params_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
}
FC_PARKSM_Core_Params_array_port::FC_PARKSM_Core_Params_array_port(const FC_PARKSM_Core_Params_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
}

void FC_PARKSM_Core_Params_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FC_PARKSM_Core_Params_array_port_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto.base);
}

FC_PARKSM_Core_Params_array_port::~FC_PARKSM_Core_Params_array_port() {
  // @@protoc_insertion_point(destructor:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
  SharedDtor();
}

void FC_PARKSM_Core_Params_array_port::SharedDtor() {
}

void FC_PARKSM_Core_Params_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FC_PARKSM_Core_Params_array_port& FC_PARKSM_Core_Params_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FC_PARKSM_Core_Params_array_port_ap_5fpsm_2ffc_5fparksm_5fcore_5fparams_2eproto.base);
  return *internal_default_instance();
}


void FC_PARKSM_Core_Params_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* FC_PARKSM_Core_Params_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params data = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<530>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FC_PARKSM_Core_Params_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params data = 66;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(66, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
  return target;
}

size_t FC_PARKSM_Core_Params_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params data = 66;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FC_PARKSM_Core_Params_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const FC_PARKSM_Core_Params_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FC_PARKSM_Core_Params_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
    MergeFrom(*source);
  }
}

void FC_PARKSM_Core_Params_array_port::MergeFrom(const FC_PARKSM_Core_Params_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void FC_PARKSM_Core_Params_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FC_PARKSM_Core_Params_array_port::CopyFrom(const FC_PARKSM_Core_Params_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_psm.fc_parksm_core_params.FC_PARKSM_Core_Params_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FC_PARKSM_Core_Params_array_port::IsInitialized() const {
  return true;
}

void FC_PARKSM_Core_Params_array_port::InternalSwap(FC_PARKSM_Core_Params_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FC_PARKSM_Core_Params_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fc_parksm_core_params
}  // namespace ap_psm
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params* Arena::CreateMaybeMessage< ::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params_array_port* Arena::CreateMaybeMessage< ::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_psm::fc_parksm_core_params::FC_PARKSM_Core_Params_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
