// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_psm/slot_ctrl_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5fpsm_2fslot_5fctrl_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5fpsm_2fslot_5fctrl_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "ap_psm/reset_origin_request_port.pb.h"
#include "ap_psm/planning_ctrl_commands.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5fpsm_2fslot_5fctrl_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5fpsm_2fslot_5fctrl_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fpsm_2fslot_5fctrl_5fport_2eproto;
namespace pb {
namespace ap_psm {
namespace slot_ctrl_port {
class SlotCtrlPort;
class SlotCtrlPortDefaultTypeInternal;
extern SlotCtrlPortDefaultTypeInternal _SlotCtrlPort_default_instance_;
class SlotCtrlPort_array_port;
class SlotCtrlPort_array_portDefaultTypeInternal;
extern SlotCtrlPort_array_portDefaultTypeInternal _SlotCtrlPort_array_port_default_instance_;
}  // namespace slot_ctrl_port
}  // namespace ap_psm
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort* Arena::CreateMaybeMessage<::pb::ap_psm::slot_ctrl_port::SlotCtrlPort>(Arena*);
template<> ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort_array_port* Arena::CreateMaybeMessage<::pb::ap_psm::slot_ctrl_port::SlotCtrlPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_psm {
namespace slot_ctrl_port {

// ===================================================================

class SlotCtrlPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_psm.slot_ctrl_port.SlotCtrlPort) */ {
 public:
  SlotCtrlPort();
  virtual ~SlotCtrlPort();

  SlotCtrlPort(const SlotCtrlPort& from);
  SlotCtrlPort(SlotCtrlPort&& from) noexcept
    : SlotCtrlPort() {
    *this = ::std::move(from);
  }

  inline SlotCtrlPort& operator=(const SlotCtrlPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline SlotCtrlPort& operator=(SlotCtrlPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SlotCtrlPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlotCtrlPort* internal_default_instance() {
    return reinterpret_cast<const SlotCtrlPort*>(
               &_SlotCtrlPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SlotCtrlPort& a, SlotCtrlPort& b) {
    a.Swap(&b);
  }
  inline void Swap(SlotCtrlPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SlotCtrlPort* New() const final {
    return CreateMaybeMessage<SlotCtrlPort>(nullptr);
  }

  SlotCtrlPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SlotCtrlPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SlotCtrlPort& from);
  void MergeFrom(const SlotCtrlPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlotCtrlPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_psm.slot_ctrl_port.SlotCtrlPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fpsm_2fslot_5fctrl_5fport_2eproto);
    return ::descriptor_table_ap_5fpsm_2fslot_5fctrl_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlanningCtrlCommandsFieldNumber = 410,
    kSSigHeaderFieldNumber = 1033,
    kResetOriginRequestPortFieldNumber = 2736,
    kStoreMemorizedParkingDataFieldNumber = 54,
    kDeleteMemorizedParkingDataFieldNumber = 1243,
    kSelectedParkingBoxIdNuFieldNumber = 1228,
    kUiVersionNumberFieldNumber = 2124,
    kCurrentSelectedMemParkSlotIdFieldNumber = 3021,
  };
  // optional .pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands planningCtrlCommands = 410;
  bool has_planningctrlcommands() const;
  private:
  bool _internal_has_planningctrlcommands() const;
  public:
  void clear_planningctrlcommands();
  const ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands& planningctrlcommands() const;
  ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* release_planningctrlcommands();
  ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* mutable_planningctrlcommands();
  void set_allocated_planningctrlcommands(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* planningctrlcommands);
  private:
  const ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands& _internal_planningctrlcommands() const;
  ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* _internal_mutable_planningctrlcommands();
  public:

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional .pb.ap_psm.reset_origin_request_port.ResetOriginRequestPort resetOriginRequestPort = 2736;
  bool has_resetoriginrequestport() const;
  private:
  bool _internal_has_resetoriginrequestport() const;
  public:
  void clear_resetoriginrequestport();
  const ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort& resetoriginrequestport() const;
  ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* release_resetoriginrequestport();
  ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* mutable_resetoriginrequestport();
  void set_allocated_resetoriginrequestport(::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* resetoriginrequestport);
  private:
  const ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort& _internal_resetoriginrequestport() const;
  ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* _internal_mutable_resetoriginrequestport();
  public:

  // optional bool storeMemorizedParkingData = 54;
  bool has_storememorizedparkingdata() const;
  private:
  bool _internal_has_storememorizedparkingdata() const;
  public:
  void clear_storememorizedparkingdata();
  bool storememorizedparkingdata() const;
  void set_storememorizedparkingdata(bool value);
  private:
  bool _internal_storememorizedparkingdata() const;
  void _internal_set_storememorizedparkingdata(bool value);
  public:

  // optional bool deleteMemorizedParkingData = 1243;
  bool has_deletememorizedparkingdata() const;
  private:
  bool _internal_has_deletememorizedparkingdata() const;
  public:
  void clear_deletememorizedparkingdata();
  bool deletememorizedparkingdata() const;
  void set_deletememorizedparkingdata(bool value);
  private:
  bool _internal_deletememorizedparkingdata() const;
  void _internal_set_deletememorizedparkingdata(bool value);
  public:

  // optional uint32 selectedParkingBoxId_nu = 1228;
  bool has_selectedparkingboxid_nu() const;
  private:
  bool _internal_has_selectedparkingboxid_nu() const;
  public:
  void clear_selectedparkingboxid_nu();
  ::PROTOBUF_NAMESPACE_ID::uint32 selectedparkingboxid_nu() const;
  void set_selectedparkingboxid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_selectedparkingboxid_nu() const;
  void _internal_set_selectedparkingboxid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 currentSelectedMemParkSlotId = 3021;
  bool has_currentselectedmemparkslotid() const;
  private:
  bool _internal_has_currentselectedmemparkslotid() const;
  public:
  void clear_currentselectedmemparkslotid();
  ::PROTOBUF_NAMESPACE_ID::uint32 currentselectedmemparkslotid() const;
  void set_currentselectedmemparkslotid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_currentselectedmemparkslotid() const;
  void _internal_set_currentselectedmemparkslotid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_psm.slot_ctrl_port.SlotCtrlPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* planningctrlcommands_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* resetoriginrequestport_;
  bool storememorizedparkingdata_;
  bool deletememorizedparkingdata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 selectedparkingboxid_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  ::PROTOBUF_NAMESPACE_ID::uint32 currentselectedmemparkslotid_;
  friend struct ::TableStruct_ap_5fpsm_2fslot_5fctrl_5fport_2eproto;
};
// -------------------------------------------------------------------

class SlotCtrlPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_psm.slot_ctrl_port.SlotCtrlPort_array_port) */ {
 public:
  SlotCtrlPort_array_port();
  virtual ~SlotCtrlPort_array_port();

  SlotCtrlPort_array_port(const SlotCtrlPort_array_port& from);
  SlotCtrlPort_array_port(SlotCtrlPort_array_port&& from) noexcept
    : SlotCtrlPort_array_port() {
    *this = ::std::move(from);
  }

  inline SlotCtrlPort_array_port& operator=(const SlotCtrlPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline SlotCtrlPort_array_port& operator=(SlotCtrlPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SlotCtrlPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlotCtrlPort_array_port* internal_default_instance() {
    return reinterpret_cast<const SlotCtrlPort_array_port*>(
               &_SlotCtrlPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SlotCtrlPort_array_port& a, SlotCtrlPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(SlotCtrlPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SlotCtrlPort_array_port* New() const final {
    return CreateMaybeMessage<SlotCtrlPort_array_port>(nullptr);
  }

  SlotCtrlPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SlotCtrlPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SlotCtrlPort_array_port& from);
  void MergeFrom(const SlotCtrlPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlotCtrlPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_psm.slot_ctrl_port.SlotCtrlPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5fpsm_2fslot_5fctrl_5fport_2eproto);
    return ::descriptor_table_ap_5fpsm_2fslot_5fctrl_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 894,
  };
  // repeated .pb.ap_psm.slot_ctrl_port.SlotCtrlPort data = 894;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort >*
      mutable_data();
  private:
  const ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort& _internal_data(int index) const;
  ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort* _internal_add_data();
  public:
  const ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort& data(int index) const;
  ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_psm.slot_ctrl_port.SlotCtrlPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort > data_;
  friend struct ::TableStruct_ap_5fpsm_2fslot_5fctrl_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SlotCtrlPort

// optional uint32 uiVersionNumber = 2124;
inline bool SlotCtrlPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool SlotCtrlPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void SlotCtrlPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlotCtrlPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlotCtrlPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void SlotCtrlPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  uiversionnumber_ = value;
}
inline void SlotCtrlPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool SlotCtrlPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool SlotCtrlPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& SlotCtrlPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& SlotCtrlPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* SlotCtrlPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.sSigHeader)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* SlotCtrlPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000002u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* SlotCtrlPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void SlotCtrlPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.sSigHeader)
}

// optional .pb.ap_psm.reset_origin_request_port.ResetOriginRequestPort resetOriginRequestPort = 2736;
inline bool SlotCtrlPort::_internal_has_resetoriginrequestport() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || resetoriginrequestport_ != nullptr);
  return value;
}
inline bool SlotCtrlPort::has_resetoriginrequestport() const {
  return _internal_has_resetoriginrequestport();
}
inline const ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort& SlotCtrlPort::_internal_resetoriginrequestport() const {
  const ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* p = resetoriginrequestport_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort*>(
      &::pb::ap_psm::reset_origin_request_port::_ResetOriginRequestPort_default_instance_);
}
inline const ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort& SlotCtrlPort::resetoriginrequestport() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.resetOriginRequestPort)
  return _internal_resetoriginrequestport();
}
inline ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* SlotCtrlPort::release_resetoriginrequestport() {
  // @@protoc_insertion_point(field_release:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.resetOriginRequestPort)
  _has_bits_[0] &= ~0x00000004u;
  ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* temp = resetoriginrequestport_;
  resetoriginrequestport_ = nullptr;
  return temp;
}
inline ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* SlotCtrlPort::_internal_mutable_resetoriginrequestport() {
  _has_bits_[0] |= 0x00000004u;
  if (resetoriginrequestport_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort>(GetArenaNoVirtual());
    resetoriginrequestport_ = p;
  }
  return resetoriginrequestport_;
}
inline ::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* SlotCtrlPort::mutable_resetoriginrequestport() {
  // @@protoc_insertion_point(field_mutable:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.resetOriginRequestPort)
  return _internal_mutable_resetoriginrequestport();
}
inline void SlotCtrlPort::set_allocated_resetoriginrequestport(::pb::ap_psm::reset_origin_request_port::ResetOriginRequestPort* resetoriginrequestport) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(resetoriginrequestport_);
  }
  if (resetoriginrequestport) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      resetoriginrequestport = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, resetoriginrequestport, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  resetoriginrequestport_ = resetoriginrequestport;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.resetOriginRequestPort)
}

// optional .pb.ap_psm.planning_ctrl_commands.PlanningCtrlCommands planningCtrlCommands = 410;
inline bool SlotCtrlPort::_internal_has_planningctrlcommands() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || planningctrlcommands_ != nullptr);
  return value;
}
inline bool SlotCtrlPort::has_planningctrlcommands() const {
  return _internal_has_planningctrlcommands();
}
inline const ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands& SlotCtrlPort::_internal_planningctrlcommands() const {
  const ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* p = planningctrlcommands_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands*>(
      &::pb::ap_psm::planning_ctrl_commands::_PlanningCtrlCommands_default_instance_);
}
inline const ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands& SlotCtrlPort::planningctrlcommands() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.planningCtrlCommands)
  return _internal_planningctrlcommands();
}
inline ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* SlotCtrlPort::release_planningctrlcommands() {
  // @@protoc_insertion_point(field_release:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.planningCtrlCommands)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* temp = planningctrlcommands_;
  planningctrlcommands_ = nullptr;
  return temp;
}
inline ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* SlotCtrlPort::_internal_mutable_planningctrlcommands() {
  _has_bits_[0] |= 0x00000001u;
  if (planningctrlcommands_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands>(GetArenaNoVirtual());
    planningctrlcommands_ = p;
  }
  return planningctrlcommands_;
}
inline ::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* SlotCtrlPort::mutable_planningctrlcommands() {
  // @@protoc_insertion_point(field_mutable:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.planningCtrlCommands)
  return _internal_mutable_planningctrlcommands();
}
inline void SlotCtrlPort::set_allocated_planningctrlcommands(::pb::ap_psm::planning_ctrl_commands::PlanningCtrlCommands* planningctrlcommands) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(planningctrlcommands_);
  }
  if (planningctrlcommands) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      planningctrlcommands = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, planningctrlcommands, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  planningctrlcommands_ = planningctrlcommands;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.planningCtrlCommands)
}

// optional uint32 selectedParkingBoxId_nu = 1228;
inline bool SlotCtrlPort::_internal_has_selectedparkingboxid_nu() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool SlotCtrlPort::has_selectedparkingboxid_nu() const {
  return _internal_has_selectedparkingboxid_nu();
}
inline void SlotCtrlPort::clear_selectedparkingboxid_nu() {
  selectedparkingboxid_nu_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlotCtrlPort::_internal_selectedparkingboxid_nu() const {
  return selectedparkingboxid_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlotCtrlPort::selectedparkingboxid_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.selectedParkingBoxId_nu)
  return _internal_selectedparkingboxid_nu();
}
inline void SlotCtrlPort::_internal_set_selectedparkingboxid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  selectedparkingboxid_nu_ = value;
}
inline void SlotCtrlPort::set_selectedparkingboxid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_selectedparkingboxid_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.selectedParkingBoxId_nu)
}

// optional bool storeMemorizedParkingData = 54;
inline bool SlotCtrlPort::_internal_has_storememorizedparkingdata() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SlotCtrlPort::has_storememorizedparkingdata() const {
  return _internal_has_storememorizedparkingdata();
}
inline void SlotCtrlPort::clear_storememorizedparkingdata() {
  storememorizedparkingdata_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool SlotCtrlPort::_internal_storememorizedparkingdata() const {
  return storememorizedparkingdata_;
}
inline bool SlotCtrlPort::storememorizedparkingdata() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.storeMemorizedParkingData)
  return _internal_storememorizedparkingdata();
}
inline void SlotCtrlPort::_internal_set_storememorizedparkingdata(bool value) {
  _has_bits_[0] |= 0x00000008u;
  storememorizedparkingdata_ = value;
}
inline void SlotCtrlPort::set_storememorizedparkingdata(bool value) {
  _internal_set_storememorizedparkingdata(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.storeMemorizedParkingData)
}

// optional bool deleteMemorizedParkingData = 1243;
inline bool SlotCtrlPort::_internal_has_deletememorizedparkingdata() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool SlotCtrlPort::has_deletememorizedparkingdata() const {
  return _internal_has_deletememorizedparkingdata();
}
inline void SlotCtrlPort::clear_deletememorizedparkingdata() {
  deletememorizedparkingdata_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool SlotCtrlPort::_internal_deletememorizedparkingdata() const {
  return deletememorizedparkingdata_;
}
inline bool SlotCtrlPort::deletememorizedparkingdata() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.deleteMemorizedParkingData)
  return _internal_deletememorizedparkingdata();
}
inline void SlotCtrlPort::_internal_set_deletememorizedparkingdata(bool value) {
  _has_bits_[0] |= 0x00000010u;
  deletememorizedparkingdata_ = value;
}
inline void SlotCtrlPort::set_deletememorizedparkingdata(bool value) {
  _internal_set_deletememorizedparkingdata(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.deleteMemorizedParkingData)
}

// optional uint32 currentSelectedMemParkSlotId = 3021;
inline bool SlotCtrlPort::_internal_has_currentselectedmemparkslotid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool SlotCtrlPort::has_currentselectedmemparkslotid() const {
  return _internal_has_currentselectedmemparkslotid();
}
inline void SlotCtrlPort::clear_currentselectedmemparkslotid() {
  currentselectedmemparkslotid_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlotCtrlPort::_internal_currentselectedmemparkslotid() const {
  return currentselectedmemparkslotid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlotCtrlPort::currentselectedmemparkslotid() const {
  // @@protoc_insertion_point(field_get:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.currentSelectedMemParkSlotId)
  return _internal_currentselectedmemparkslotid();
}
inline void SlotCtrlPort::_internal_set_currentselectedmemparkslotid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  currentselectedmemparkslotid_ = value;
}
inline void SlotCtrlPort::set_currentselectedmemparkslotid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_currentselectedmemparkslotid(value);
  // @@protoc_insertion_point(field_set:pb.ap_psm.slot_ctrl_port.SlotCtrlPort.currentSelectedMemParkSlotId)
}

// -------------------------------------------------------------------

// SlotCtrlPort_array_port

// repeated .pb.ap_psm.slot_ctrl_port.SlotCtrlPort data = 894;
inline int SlotCtrlPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int SlotCtrlPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void SlotCtrlPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort* SlotCtrlPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_psm.slot_ctrl_port.SlotCtrlPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort >*
SlotCtrlPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_psm.slot_ctrl_port.SlotCtrlPort_array_port.data)
  return &data_;
}
inline const ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort& SlotCtrlPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort& SlotCtrlPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_psm.slot_ctrl_port.SlotCtrlPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort* SlotCtrlPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort* SlotCtrlPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_psm.slot_ctrl_port.SlotCtrlPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_psm::slot_ctrl_port::SlotCtrlPort >&
SlotCtrlPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_psm.slot_ctrl_port.SlotCtrlPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace slot_ctrl_port
}  // namespace ap_psm
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5fpsm_2fslot_5fctrl_5fport_2eproto
