// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_trjctl/lo_dmcctrl_request_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "ap_trjctl/lo_dmcctrl_request_source_type.pb.h"
#include "ap_trjctl/lo_dmcctrl_request_interface_type.pb.h"
#include "ap_trjctl/lo_dmcctrl_request_type.pb.h"
#include "ap_trjctl/lo_dmchold_request_type.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto;
namespace pb {
namespace ap_trjctl {
namespace lo_dmcctrl_request_port {
class LoDMCCtrlRequestPort;
class LoDMCCtrlRequestPortDefaultTypeInternal;
extern LoDMCCtrlRequestPortDefaultTypeInternal _LoDMCCtrlRequestPort_default_instance_;
class LoDMCCtrlRequestPort_array_port;
class LoDMCCtrlRequestPort_array_portDefaultTypeInternal;
extern LoDMCCtrlRequestPort_array_portDefaultTypeInternal _LoDMCCtrlRequestPort_array_port_default_instance_;
}  // namespace lo_dmcctrl_request_port
}  // namespace ap_trjctl
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort* Arena::CreateMaybeMessage<::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort>(Arena*);
template<> ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort_array_port* Arena::CreateMaybeMessage<::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_trjctl {
namespace lo_dmcctrl_request_port {

// ===================================================================

class LoDMCCtrlRequestPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort) */ {
 public:
  LoDMCCtrlRequestPort();
  virtual ~LoDMCCtrlRequestPort();

  LoDMCCtrlRequestPort(const LoDMCCtrlRequestPort& from);
  LoDMCCtrlRequestPort(LoDMCCtrlRequestPort&& from) noexcept
    : LoDMCCtrlRequestPort() {
    *this = ::std::move(from);
  }

  inline LoDMCCtrlRequestPort& operator=(const LoDMCCtrlRequestPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoDMCCtrlRequestPort& operator=(LoDMCCtrlRequestPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoDMCCtrlRequestPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoDMCCtrlRequestPort* internal_default_instance() {
    return reinterpret_cast<const LoDMCCtrlRequestPort*>(
               &_LoDMCCtrlRequestPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LoDMCCtrlRequestPort& a, LoDMCCtrlRequestPort& b) {
    a.Swap(&b);
  }
  inline void Swap(LoDMCCtrlRequestPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoDMCCtrlRequestPort* New() const final {
    return CreateMaybeMessage<LoDMCCtrlRequestPort>(nullptr);
  }

  LoDMCCtrlRequestPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoDMCCtrlRequestPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoDMCCtrlRequestPort& from);
  void MergeFrom(const LoDMCCtrlRequestPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoDMCCtrlRequestPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto);
    return ::descriptor_table_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSSigHeaderFieldNumber = 1033,
    kDistanceToStopReqMFieldNumber = 3322,
    kHoldReqNuFieldNumber = 484,
    kLoDMCCtrlRequestNuFieldNumber = 2073,
    kUiVersionNumberFieldNumber = 2124,
    kLoDMCCtrlRequestSourceNuFieldNumber = 2228,
    kLoDMCCtrlRequestInterfaceNuFieldNumber = 2388,
    kVelocityLimitReqMpsFieldNumber = 2513,
    kAccelerationReqMps2FieldNumber = 2750,
    kEmergencyHoldReqNuFieldNumber = 2839,
    kSecureReqNuFieldNumber = 1971,
    kDrivingForwardReqNuFieldNumber = 3147,
    kTrajectoryResetNuFieldNumber = 3791,
  };
  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional float distanceToStopReq_m = 3322;
  bool has_distancetostopreq_m() const;
  private:
  bool _internal_has_distancetostopreq_m() const;
  public:
  void clear_distancetostopreq_m();
  float distancetostopreq_m() const;
  void set_distancetostopreq_m(float value);
  private:
  float _internal_distancetostopreq_m() const;
  void _internal_set_distancetostopreq_m(float value);
  public:

  // optional .pb.ap_trjctl.lo_dmchold_request_type.LoDMCHoldRequestType holdReq_nu = 484;
  bool has_holdreq_nu() const;
  private:
  bool _internal_has_holdreq_nu() const;
  public:
  void clear_holdreq_nu();
  ::pb::ap_trjctl::lo_dmchold_request_type::LoDMCHoldRequestType holdreq_nu() const;
  void set_holdreq_nu(::pb::ap_trjctl::lo_dmchold_request_type::LoDMCHoldRequestType value);
  private:
  ::pb::ap_trjctl::lo_dmchold_request_type::LoDMCHoldRequestType _internal_holdreq_nu() const;
  void _internal_set_holdreq_nu(::pb::ap_trjctl::lo_dmchold_request_type::LoDMCHoldRequestType value);
  public:

  // optional .pb.ap_trjctl.lo_dmcctrl_request_type.LoDMCCtrlRequestType loDMCCtrlRequest_nu = 2073;
  bool has_lodmcctrlrequest_nu() const;
  private:
  bool _internal_has_lodmcctrlrequest_nu() const;
  public:
  void clear_lodmcctrlrequest_nu();
  ::pb::ap_trjctl::lo_dmcctrl_request_type::LoDMCCtrlRequestType lodmcctrlrequest_nu() const;
  void set_lodmcctrlrequest_nu(::pb::ap_trjctl::lo_dmcctrl_request_type::LoDMCCtrlRequestType value);
  private:
  ::pb::ap_trjctl::lo_dmcctrl_request_type::LoDMCCtrlRequestType _internal_lodmcctrlrequest_nu() const;
  void _internal_set_lodmcctrlrequest_nu(::pb::ap_trjctl::lo_dmcctrl_request_type::LoDMCCtrlRequestType value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.ap_trjctl.lo_dmcctrl_request_source_type.LoDMCCtrlRequestSourceType loDMCCtrlRequestSource_nu = 2228;
  bool has_lodmcctrlrequestsource_nu() const;
  private:
  bool _internal_has_lodmcctrlrequestsource_nu() const;
  public:
  void clear_lodmcctrlrequestsource_nu();
  ::pb::ap_trjctl::lo_dmcctrl_request_source_type::LoDMCCtrlRequestSourceType lodmcctrlrequestsource_nu() const;
  void set_lodmcctrlrequestsource_nu(::pb::ap_trjctl::lo_dmcctrl_request_source_type::LoDMCCtrlRequestSourceType value);
  private:
  ::pb::ap_trjctl::lo_dmcctrl_request_source_type::LoDMCCtrlRequestSourceType _internal_lodmcctrlrequestsource_nu() const;
  void _internal_set_lodmcctrlrequestsource_nu(::pb::ap_trjctl::lo_dmcctrl_request_source_type::LoDMCCtrlRequestSourceType value);
  public:

  // optional .pb.ap_trjctl.lo_dmcctrl_request_interface_type.LoDMCCtrlRequestInterfaceType loDMCCtrlRequestInterface_nu = 2388;
  bool has_lodmcctrlrequestinterface_nu() const;
  private:
  bool _internal_has_lodmcctrlrequestinterface_nu() const;
  public:
  void clear_lodmcctrlrequestinterface_nu();
  ::pb::ap_trjctl::lo_dmcctrl_request_interface_type::LoDMCCtrlRequestInterfaceType lodmcctrlrequestinterface_nu() const;
  void set_lodmcctrlrequestinterface_nu(::pb::ap_trjctl::lo_dmcctrl_request_interface_type::LoDMCCtrlRequestInterfaceType value);
  private:
  ::pb::ap_trjctl::lo_dmcctrl_request_interface_type::LoDMCCtrlRequestInterfaceType _internal_lodmcctrlrequestinterface_nu() const;
  void _internal_set_lodmcctrlrequestinterface_nu(::pb::ap_trjctl::lo_dmcctrl_request_interface_type::LoDMCCtrlRequestInterfaceType value);
  public:

  // optional float velocityLimitReq_mps = 2513;
  bool has_velocitylimitreq_mps() const;
  private:
  bool _internal_has_velocitylimitreq_mps() const;
  public:
  void clear_velocitylimitreq_mps();
  float velocitylimitreq_mps() const;
  void set_velocitylimitreq_mps(float value);
  private:
  float _internal_velocitylimitreq_mps() const;
  void _internal_set_velocitylimitreq_mps(float value);
  public:

  // optional float accelerationReq_mps2 = 2750;
  bool has_accelerationreq_mps2() const;
  private:
  bool _internal_has_accelerationreq_mps2() const;
  public:
  void clear_accelerationreq_mps2();
  float accelerationreq_mps2() const;
  void set_accelerationreq_mps2(float value);
  private:
  float _internal_accelerationreq_mps2() const;
  void _internal_set_accelerationreq_mps2(float value);
  public:

  // optional bool emergencyHoldReq_nu = 2839;
  bool has_emergencyholdreq_nu() const;
  private:
  bool _internal_has_emergencyholdreq_nu() const;
  public:
  void clear_emergencyholdreq_nu();
  bool emergencyholdreq_nu() const;
  void set_emergencyholdreq_nu(bool value);
  private:
  bool _internal_emergencyholdreq_nu() const;
  void _internal_set_emergencyholdreq_nu(bool value);
  public:

  // optional bool secureReq_nu = 1971;
  bool has_securereq_nu() const;
  private:
  bool _internal_has_securereq_nu() const;
  public:
  void clear_securereq_nu();
  bool securereq_nu() const;
  void set_securereq_nu(bool value);
  private:
  bool _internal_securereq_nu() const;
  void _internal_set_securereq_nu(bool value);
  public:

  // optional bool drivingForwardReq_nu = 3147;
  bool has_drivingforwardreq_nu() const;
  private:
  bool _internal_has_drivingforwardreq_nu() const;
  public:
  void clear_drivingforwardreq_nu();
  bool drivingforwardreq_nu() const;
  void set_drivingforwardreq_nu(bool value);
  private:
  bool _internal_drivingforwardreq_nu() const;
  void _internal_set_drivingforwardreq_nu(bool value);
  public:

  // optional bool trajectoryReset_nu = 3791;
  bool has_trajectoryreset_nu() const;
  private:
  bool _internal_has_trajectoryreset_nu() const;
  public:
  void clear_trajectoryreset_nu();
  bool trajectoryreset_nu() const;
  void set_trajectoryreset_nu(bool value);
  private:
  bool _internal_trajectoryreset_nu() const;
  void _internal_set_trajectoryreset_nu(bool value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  float distancetostopreq_m_;
  int holdreq_nu_;
  int lodmcctrlrequest_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  int lodmcctrlrequestsource_nu_;
  int lodmcctrlrequestinterface_nu_;
  float velocitylimitreq_mps_;
  float accelerationreq_mps2_;
  bool emergencyholdreq_nu_;
  bool securereq_nu_;
  bool drivingforwardreq_nu_;
  bool trajectoryreset_nu_;
  friend struct ::TableStruct_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto;
};
// -------------------------------------------------------------------

class LoDMCCtrlRequestPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort_array_port) */ {
 public:
  LoDMCCtrlRequestPort_array_port();
  virtual ~LoDMCCtrlRequestPort_array_port();

  LoDMCCtrlRequestPort_array_port(const LoDMCCtrlRequestPort_array_port& from);
  LoDMCCtrlRequestPort_array_port(LoDMCCtrlRequestPort_array_port&& from) noexcept
    : LoDMCCtrlRequestPort_array_port() {
    *this = ::std::move(from);
  }

  inline LoDMCCtrlRequestPort_array_port& operator=(const LoDMCCtrlRequestPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoDMCCtrlRequestPort_array_port& operator=(LoDMCCtrlRequestPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoDMCCtrlRequestPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoDMCCtrlRequestPort_array_port* internal_default_instance() {
    return reinterpret_cast<const LoDMCCtrlRequestPort_array_port*>(
               &_LoDMCCtrlRequestPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LoDMCCtrlRequestPort_array_port& a, LoDMCCtrlRequestPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(LoDMCCtrlRequestPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoDMCCtrlRequestPort_array_port* New() const final {
    return CreateMaybeMessage<LoDMCCtrlRequestPort_array_port>(nullptr);
  }

  LoDMCCtrlRequestPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoDMCCtrlRequestPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoDMCCtrlRequestPort_array_port& from);
  void MergeFrom(const LoDMCCtrlRequestPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoDMCCtrlRequestPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto);
    return ::descriptor_table_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2432,
  };
  // repeated .pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort data = 2432;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort >*
      mutable_data();
  private:
  const ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort& _internal_data(int index) const;
  ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort* _internal_add_data();
  public:
  const ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort& data(int index) const;
  ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort > data_;
  friend struct ::TableStruct_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoDMCCtrlRequestPort

// optional uint32 uiVersionNumber = 2124;
inline bool LoDMCCtrlRequestPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void LoDMCCtrlRequestPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LoDMCCtrlRequestPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LoDMCCtrlRequestPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void LoDMCCtrlRequestPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uiversionnumber_ = value;
}
inline void LoDMCCtrlRequestPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool LoDMCCtrlRequestPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool LoDMCCtrlRequestPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& LoDMCCtrlRequestPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& LoDMCCtrlRequestPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* LoDMCCtrlRequestPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* LoDMCCtrlRequestPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* LoDMCCtrlRequestPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void LoDMCCtrlRequestPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.sSigHeader)
}

// optional float distanceToStopReq_m = 3322;
inline bool LoDMCCtrlRequestPort::_internal_has_distancetostopreq_m() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_distancetostopreq_m() const {
  return _internal_has_distancetostopreq_m();
}
inline void LoDMCCtrlRequestPort::clear_distancetostopreq_m() {
  distancetostopreq_m_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float LoDMCCtrlRequestPort::_internal_distancetostopreq_m() const {
  return distancetostopreq_m_;
}
inline float LoDMCCtrlRequestPort::distancetostopreq_m() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.distanceToStopReq_m)
  return _internal_distancetostopreq_m();
}
inline void LoDMCCtrlRequestPort::_internal_set_distancetostopreq_m(float value) {
  _has_bits_[0] |= 0x00000002u;
  distancetostopreq_m_ = value;
}
inline void LoDMCCtrlRequestPort::set_distancetostopreq_m(float value) {
  _internal_set_distancetostopreq_m(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.distanceToStopReq_m)
}

// optional float velocityLimitReq_mps = 2513;
inline bool LoDMCCtrlRequestPort::_internal_has_velocitylimitreq_mps() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_velocitylimitreq_mps() const {
  return _internal_has_velocitylimitreq_mps();
}
inline void LoDMCCtrlRequestPort::clear_velocitylimitreq_mps() {
  velocitylimitreq_mps_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float LoDMCCtrlRequestPort::_internal_velocitylimitreq_mps() const {
  return velocitylimitreq_mps_;
}
inline float LoDMCCtrlRequestPort::velocitylimitreq_mps() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.velocityLimitReq_mps)
  return _internal_velocitylimitreq_mps();
}
inline void LoDMCCtrlRequestPort::_internal_set_velocitylimitreq_mps(float value) {
  _has_bits_[0] |= 0x00000080u;
  velocitylimitreq_mps_ = value;
}
inline void LoDMCCtrlRequestPort::set_velocitylimitreq_mps(float value) {
  _internal_set_velocitylimitreq_mps(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.velocityLimitReq_mps)
}

// optional float accelerationReq_mps2 = 2750;
inline bool LoDMCCtrlRequestPort::_internal_has_accelerationreq_mps2() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_accelerationreq_mps2() const {
  return _internal_has_accelerationreq_mps2();
}
inline void LoDMCCtrlRequestPort::clear_accelerationreq_mps2() {
  accelerationreq_mps2_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float LoDMCCtrlRequestPort::_internal_accelerationreq_mps2() const {
  return accelerationreq_mps2_;
}
inline float LoDMCCtrlRequestPort::accelerationreq_mps2() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.accelerationReq_mps2)
  return _internal_accelerationreq_mps2();
}
inline void LoDMCCtrlRequestPort::_internal_set_accelerationreq_mps2(float value) {
  _has_bits_[0] |= 0x00000100u;
  accelerationreq_mps2_ = value;
}
inline void LoDMCCtrlRequestPort::set_accelerationreq_mps2(float value) {
  _internal_set_accelerationreq_mps2(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.accelerationReq_mps2)
}

// optional .pb.ap_trjctl.lo_dmcctrl_request_source_type.LoDMCCtrlRequestSourceType loDMCCtrlRequestSource_nu = 2228;
inline bool LoDMCCtrlRequestPort::_internal_has_lodmcctrlrequestsource_nu() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_lodmcctrlrequestsource_nu() const {
  return _internal_has_lodmcctrlrequestsource_nu();
}
inline void LoDMCCtrlRequestPort::clear_lodmcctrlrequestsource_nu() {
  lodmcctrlrequestsource_nu_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::pb::ap_trjctl::lo_dmcctrl_request_source_type::LoDMCCtrlRequestSourceType LoDMCCtrlRequestPort::_internal_lodmcctrlrequestsource_nu() const {
  return static_cast< ::pb::ap_trjctl::lo_dmcctrl_request_source_type::LoDMCCtrlRequestSourceType >(lodmcctrlrequestsource_nu_);
}
inline ::pb::ap_trjctl::lo_dmcctrl_request_source_type::LoDMCCtrlRequestSourceType LoDMCCtrlRequestPort::lodmcctrlrequestsource_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.loDMCCtrlRequestSource_nu)
  return _internal_lodmcctrlrequestsource_nu();
}
inline void LoDMCCtrlRequestPort::_internal_set_lodmcctrlrequestsource_nu(::pb::ap_trjctl::lo_dmcctrl_request_source_type::LoDMCCtrlRequestSourceType value) {
  assert(::pb::ap_trjctl::lo_dmcctrl_request_source_type::LoDMCCtrlRequestSourceType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  lodmcctrlrequestsource_nu_ = value;
}
inline void LoDMCCtrlRequestPort::set_lodmcctrlrequestsource_nu(::pb::ap_trjctl::lo_dmcctrl_request_source_type::LoDMCCtrlRequestSourceType value) {
  _internal_set_lodmcctrlrequestsource_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.loDMCCtrlRequestSource_nu)
}

// optional .pb.ap_trjctl.lo_dmcctrl_request_interface_type.LoDMCCtrlRequestInterfaceType loDMCCtrlRequestInterface_nu = 2388;
inline bool LoDMCCtrlRequestPort::_internal_has_lodmcctrlrequestinterface_nu() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_lodmcctrlrequestinterface_nu() const {
  return _internal_has_lodmcctrlrequestinterface_nu();
}
inline void LoDMCCtrlRequestPort::clear_lodmcctrlrequestinterface_nu() {
  lodmcctrlrequestinterface_nu_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::pb::ap_trjctl::lo_dmcctrl_request_interface_type::LoDMCCtrlRequestInterfaceType LoDMCCtrlRequestPort::_internal_lodmcctrlrequestinterface_nu() const {
  return static_cast< ::pb::ap_trjctl::lo_dmcctrl_request_interface_type::LoDMCCtrlRequestInterfaceType >(lodmcctrlrequestinterface_nu_);
}
inline ::pb::ap_trjctl::lo_dmcctrl_request_interface_type::LoDMCCtrlRequestInterfaceType LoDMCCtrlRequestPort::lodmcctrlrequestinterface_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.loDMCCtrlRequestInterface_nu)
  return _internal_lodmcctrlrequestinterface_nu();
}
inline void LoDMCCtrlRequestPort::_internal_set_lodmcctrlrequestinterface_nu(::pb::ap_trjctl::lo_dmcctrl_request_interface_type::LoDMCCtrlRequestInterfaceType value) {
  assert(::pb::ap_trjctl::lo_dmcctrl_request_interface_type::LoDMCCtrlRequestInterfaceType_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  lodmcctrlrequestinterface_nu_ = value;
}
inline void LoDMCCtrlRequestPort::set_lodmcctrlrequestinterface_nu(::pb::ap_trjctl::lo_dmcctrl_request_interface_type::LoDMCCtrlRequestInterfaceType value) {
  _internal_set_lodmcctrlrequestinterface_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.loDMCCtrlRequestInterface_nu)
}

// optional .pb.ap_trjctl.lo_dmcctrl_request_type.LoDMCCtrlRequestType loDMCCtrlRequest_nu = 2073;
inline bool LoDMCCtrlRequestPort::_internal_has_lodmcctrlrequest_nu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_lodmcctrlrequest_nu() const {
  return _internal_has_lodmcctrlrequest_nu();
}
inline void LoDMCCtrlRequestPort::clear_lodmcctrlrequest_nu() {
  lodmcctrlrequest_nu_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::pb::ap_trjctl::lo_dmcctrl_request_type::LoDMCCtrlRequestType LoDMCCtrlRequestPort::_internal_lodmcctrlrequest_nu() const {
  return static_cast< ::pb::ap_trjctl::lo_dmcctrl_request_type::LoDMCCtrlRequestType >(lodmcctrlrequest_nu_);
}
inline ::pb::ap_trjctl::lo_dmcctrl_request_type::LoDMCCtrlRequestType LoDMCCtrlRequestPort::lodmcctrlrequest_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.loDMCCtrlRequest_nu)
  return _internal_lodmcctrlrequest_nu();
}
inline void LoDMCCtrlRequestPort::_internal_set_lodmcctrlrequest_nu(::pb::ap_trjctl::lo_dmcctrl_request_type::LoDMCCtrlRequestType value) {
  assert(::pb::ap_trjctl::lo_dmcctrl_request_type::LoDMCCtrlRequestType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  lodmcctrlrequest_nu_ = value;
}
inline void LoDMCCtrlRequestPort::set_lodmcctrlrequest_nu(::pb::ap_trjctl::lo_dmcctrl_request_type::LoDMCCtrlRequestType value) {
  _internal_set_lodmcctrlrequest_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.loDMCCtrlRequest_nu)
}

// optional .pb.ap_trjctl.lo_dmchold_request_type.LoDMCHoldRequestType holdReq_nu = 484;
inline bool LoDMCCtrlRequestPort::_internal_has_holdreq_nu() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_holdreq_nu() const {
  return _internal_has_holdreq_nu();
}
inline void LoDMCCtrlRequestPort::clear_holdreq_nu() {
  holdreq_nu_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::pb::ap_trjctl::lo_dmchold_request_type::LoDMCHoldRequestType LoDMCCtrlRequestPort::_internal_holdreq_nu() const {
  return static_cast< ::pb::ap_trjctl::lo_dmchold_request_type::LoDMCHoldRequestType >(holdreq_nu_);
}
inline ::pb::ap_trjctl::lo_dmchold_request_type::LoDMCHoldRequestType LoDMCCtrlRequestPort::holdreq_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.holdReq_nu)
  return _internal_holdreq_nu();
}
inline void LoDMCCtrlRequestPort::_internal_set_holdreq_nu(::pb::ap_trjctl::lo_dmchold_request_type::LoDMCHoldRequestType value) {
  assert(::pb::ap_trjctl::lo_dmchold_request_type::LoDMCHoldRequestType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  holdreq_nu_ = value;
}
inline void LoDMCCtrlRequestPort::set_holdreq_nu(::pb::ap_trjctl::lo_dmchold_request_type::LoDMCHoldRequestType value) {
  _internal_set_holdreq_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.holdReq_nu)
}

// optional bool emergencyHoldReq_nu = 2839;
inline bool LoDMCCtrlRequestPort::_internal_has_emergencyholdreq_nu() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_emergencyholdreq_nu() const {
  return _internal_has_emergencyholdreq_nu();
}
inline void LoDMCCtrlRequestPort::clear_emergencyholdreq_nu() {
  emergencyholdreq_nu_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool LoDMCCtrlRequestPort::_internal_emergencyholdreq_nu() const {
  return emergencyholdreq_nu_;
}
inline bool LoDMCCtrlRequestPort::emergencyholdreq_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.emergencyHoldReq_nu)
  return _internal_emergencyholdreq_nu();
}
inline void LoDMCCtrlRequestPort::_internal_set_emergencyholdreq_nu(bool value) {
  _has_bits_[0] |= 0x00000200u;
  emergencyholdreq_nu_ = value;
}
inline void LoDMCCtrlRequestPort::set_emergencyholdreq_nu(bool value) {
  _internal_set_emergencyholdreq_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.emergencyHoldReq_nu)
}

// optional bool secureReq_nu = 1971;
inline bool LoDMCCtrlRequestPort::_internal_has_securereq_nu() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_securereq_nu() const {
  return _internal_has_securereq_nu();
}
inline void LoDMCCtrlRequestPort::clear_securereq_nu() {
  securereq_nu_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool LoDMCCtrlRequestPort::_internal_securereq_nu() const {
  return securereq_nu_;
}
inline bool LoDMCCtrlRequestPort::securereq_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.secureReq_nu)
  return _internal_securereq_nu();
}
inline void LoDMCCtrlRequestPort::_internal_set_securereq_nu(bool value) {
  _has_bits_[0] |= 0x00000400u;
  securereq_nu_ = value;
}
inline void LoDMCCtrlRequestPort::set_securereq_nu(bool value) {
  _internal_set_securereq_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.secureReq_nu)
}

// optional bool drivingForwardReq_nu = 3147;
inline bool LoDMCCtrlRequestPort::_internal_has_drivingforwardreq_nu() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_drivingforwardreq_nu() const {
  return _internal_has_drivingforwardreq_nu();
}
inline void LoDMCCtrlRequestPort::clear_drivingforwardreq_nu() {
  drivingforwardreq_nu_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool LoDMCCtrlRequestPort::_internal_drivingforwardreq_nu() const {
  return drivingforwardreq_nu_;
}
inline bool LoDMCCtrlRequestPort::drivingforwardreq_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.drivingForwardReq_nu)
  return _internal_drivingforwardreq_nu();
}
inline void LoDMCCtrlRequestPort::_internal_set_drivingforwardreq_nu(bool value) {
  _has_bits_[0] |= 0x00000800u;
  drivingforwardreq_nu_ = value;
}
inline void LoDMCCtrlRequestPort::set_drivingforwardreq_nu(bool value) {
  _internal_set_drivingforwardreq_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.drivingForwardReq_nu)
}

// optional bool trajectoryReset_nu = 3791;
inline bool LoDMCCtrlRequestPort::_internal_has_trajectoryreset_nu() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool LoDMCCtrlRequestPort::has_trajectoryreset_nu() const {
  return _internal_has_trajectoryreset_nu();
}
inline void LoDMCCtrlRequestPort::clear_trajectoryreset_nu() {
  trajectoryreset_nu_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool LoDMCCtrlRequestPort::_internal_trajectoryreset_nu() const {
  return trajectoryreset_nu_;
}
inline bool LoDMCCtrlRequestPort::trajectoryreset_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.trajectoryReset_nu)
  return _internal_trajectoryreset_nu();
}
inline void LoDMCCtrlRequestPort::_internal_set_trajectoryreset_nu(bool value) {
  _has_bits_[0] |= 0x00001000u;
  trajectoryreset_nu_ = value;
}
inline void LoDMCCtrlRequestPort::set_trajectoryreset_nu(bool value) {
  _internal_set_trajectoryreset_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort.trajectoryReset_nu)
}

// -------------------------------------------------------------------

// LoDMCCtrlRequestPort_array_port

// repeated .pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort data = 2432;
inline int LoDMCCtrlRequestPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int LoDMCCtrlRequestPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void LoDMCCtrlRequestPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort* LoDMCCtrlRequestPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort >*
LoDMCCtrlRequestPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort_array_port.data)
  return &data_;
}
inline const ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort& LoDMCCtrlRequestPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort& LoDMCCtrlRequestPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort* LoDMCCtrlRequestPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort* LoDMCCtrlRequestPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_trjctl::lo_dmcctrl_request_port::LoDMCCtrlRequestPort >&
LoDMCCtrlRequestPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_trjctl.lo_dmcctrl_request_port.LoDMCCtrlRequestPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace lo_dmcctrl_request_port
}  // namespace ap_trjctl
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5ftrjctl_2flo_5fdmcctrl_5frequest_5fport_2eproto
