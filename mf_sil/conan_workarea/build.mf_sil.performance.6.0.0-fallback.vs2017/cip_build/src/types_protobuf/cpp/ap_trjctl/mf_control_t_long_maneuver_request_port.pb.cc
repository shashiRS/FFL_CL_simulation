// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_trjctl/mf_control_t_long_maneuver_request_port.proto

#include "ap_trjctl/mf_control_t_long_maneuver_request_port.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fctrl_5freq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MF_CONTROL_t_LongCtrlReq_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fctrl_5freq_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_MF_CONTROL_t_LongManeuverRequestPort_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ap_5ftrjctl_2fmoco_5ft_5flong_5flims_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MOCO_t_LongLims_ap_5ftrjctl_2fmoco_5ft_5flong_5flims_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsignal_5fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto;
namespace pb {
namespace ap_trjctl {
namespace mf_control_t_long_maneuver_request_port {
class MF_CONTROL_t_LongManeuverRequestPortDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MF_CONTROL_t_LongManeuverRequestPort> _instance;
} _MF_CONTROL_t_LongManeuverRequestPort_default_instance_;
class MF_CONTROL_t_LongManeuverRequestPort_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MF_CONTROL_t_LongManeuverRequestPort_array_port> _instance;
} _MF_CONTROL_t_LongManeuverRequestPort_array_port_default_instance_;
}  // namespace mf_control_t_long_maneuver_request_port
}  // namespace ap_trjctl
}  // namespace pb
static void InitDefaultsscc_info_MF_CONTROL_t_LongManeuverRequestPort_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::_MF_CONTROL_t_LongManeuverRequestPort_default_instance_;
    new (ptr) ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_MF_CONTROL_t_LongManeuverRequestPort_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_MF_CONTROL_t_LongManeuverRequestPort_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto}, {
      &scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto.base,
      &scc_info_MF_CONTROL_t_LongCtrlReq_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fctrl_5freq_2eproto.base,
      &scc_info_MOCO_t_LongLims_ap_5ftrjctl_2fmoco_5ft_5flong_5flims_2eproto.base,}};

static void InitDefaultsscc_info_MF_CONTROL_t_LongManeuverRequestPort_array_port_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::_MF_CONTROL_t_LongManeuverRequestPort_array_port_default_instance_;
    new (ptr) ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MF_CONTROL_t_LongManeuverRequestPort_array_port_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MF_CONTROL_t_LongManeuverRequestPort_array_port_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto}, {
      &scc_info_MF_CONTROL_t_LongManeuverRequestPort_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, uiversionnumber_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, ssigheader_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, ctrlreq_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, lims_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, funmode_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, dynmode_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, motreq_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, activatectrl_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, fullbrakingreq_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort, drivingdirreq_),
  7,
  1,
  2,
  0,
  4,
  9,
  3,
  8,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort)},
  { 25, 31, sizeof(::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::_MF_CONTROL_t_LongManeuverRequestPort_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::_MF_CONTROL_t_LongManeuverRequestPort_array_port_default_instance_),
};

const char descriptor_table_protodef_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n7ap_trjctl/mf_control_t_long_maneuver_r"
  "equest_port.proto\0224pb.ap_trjctl.mf_contr"
  "ol_t_long_maneuver_request_port\032\027eco/sig"
  "nal_header.proto\032*ap_trjctl/mf_control_t"
  "_long_ctrl_req.proto\032 ap_trjctl/moco_t_l"
  "ong_lims.proto\032 ap_trjctl/moco_te_fun_mo"
  "de.proto\032 ap_trjctl/moco_te_dyn_mode.pro"
  "to\032\037ap_trjctl/moco_te_mot_req.proto\032\'ap_"
  "trjctl/moco_te_driving_dir_req.proto\"\325\004\n"
  "$MF_CONTROL_t_LongManeuverRequestPort\022\030\n"
  "\017uiVersionNumber\030\314\020 \001(\r\0227\n\nsSigHeader\030\211\010"
  " \001(\0132\".pb.eco.signal_header.SignalHeader"
  "\022S\n\007ctrlReq\030\316\024 \001(\0132A.pb.ap_trjctl.mf_con"
  "trol_t_long_ctrl_req.MF_CONTROL_t_LongCt"
  "rlReq\022=\n\004lims\030\201\005 \001(\0132..pb.ap_trjctl.moco"
  "_t_long_lims.MOCO_t_LongLims\022@\n\007funMode\030"
  "\265\003 \001(\0162..pb.ap_trjctl.moco_te_fun_mode.M"
  "OCO_te_FunMode\022@\n\007dynMode\030\204\024 \001(\0162..pb.ap"
  "_trjctl.moco_te_dyn_mode.MOCO_te_DynMode"
  "\022=\n\006motReq\030\347\024 \001(\0162,.pb.ap_trjctl.moco_te"
  "_mot_req.MOCO_te_MotReq\022\025\n\014activateCtrl\030"
  "\364\021 \001(\r\022\027\n\016fullBrakingReq\030\233\005 \001(\r\022S\n\rdrivi"
  "ngDirReq\030\341\005 \001(\0162;.pb.ap_trjctl.moco_te_d"
  "riving_dir_req.MOCO_te_DrivingDirReq\"\234\001\n"
  "/MF_CONTROL_t_LongManeuverRequestPort_ar"
  "ray_port\022i\n\004data\030\235\r \003(\0132Z.pb.ap_trjctl.m"
  "f_control_t_long_maneuver_request_port.M"
  "F_CONTROL_t_LongManeuverRequestPort"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto_deps[7] = {
  &::descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fctrl_5freq_2eproto,
  &::descriptor_table_ap_5ftrjctl_2fmoco_5ft_5flong_5flims_2eproto,
  &::descriptor_table_ap_5ftrjctl_2fmoco_5fte_5fdriving_5fdir_5freq_2eproto,
  &::descriptor_table_ap_5ftrjctl_2fmoco_5fte_5fdyn_5fmode_2eproto,
  &::descriptor_table_ap_5ftrjctl_2fmoco_5fte_5ffun_5fmode_2eproto,
  &::descriptor_table_ap_5ftrjctl_2fmoco_5fte_5fmot_5freq_2eproto,
  &::descriptor_table_eco_2fsignal_5fheader_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto_sccs[2] = {
  &scc_info_MF_CONTROL_t_LongManeuverRequestPort_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto.base,
  &scc_info_MF_CONTROL_t_LongManeuverRequestPort_array_port_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto_once;
static bool descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto = {
  &descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto_initialized, descriptor_table_protodef_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto, "ap_trjctl/mf_control_t_long_maneuver_request_port.proto", 1115,
  &descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto_once, descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto_sccs, descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto_deps, 2, 7,
  schemas, file_default_instances, TableStruct_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto::offsets,
  file_level_metadata_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto, 2, file_level_enum_descriptors_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto, file_level_service_descriptors_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto), true);
namespace pb {
namespace ap_trjctl {
namespace mf_control_t_long_maneuver_request_port {

// ===================================================================

void MF_CONTROL_t_LongManeuverRequestPort::InitAsDefaultInstance() {
  ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::_MF_CONTROL_t_LongManeuverRequestPort_default_instance_._instance.get_mutable()->ssigheader_ = const_cast< ::pb::eco::signal_header::SignalHeader*>(
      ::pb::eco::signal_header::SignalHeader::internal_default_instance());
  ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::_MF_CONTROL_t_LongManeuverRequestPort_default_instance_._instance.get_mutable()->ctrlreq_ = const_cast< ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq*>(
      ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq::internal_default_instance());
  ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::_MF_CONTROL_t_LongManeuverRequestPort_default_instance_._instance.get_mutable()->lims_ = const_cast< ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims*>(
      ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims::internal_default_instance());
}
class MF_CONTROL_t_LongManeuverRequestPort::_Internal {
 public:
  using HasBits = decltype(std::declval<MF_CONTROL_t_LongManeuverRequestPort>()._has_bits_);
  static void set_has_uiversionnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::pb::eco::signal_header::SignalHeader& ssigheader(const MF_CONTROL_t_LongManeuverRequestPort* msg);
  static void set_has_ssigheader(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq& ctrlreq(const MF_CONTROL_t_LongManeuverRequestPort* msg);
  static void set_has_ctrlreq(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims& lims(const MF_CONTROL_t_LongManeuverRequestPort* msg);
  static void set_has_lims(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_funmode(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_dynmode(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_motreq(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_activatectrl(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_fullbrakingreq(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_drivingdirreq(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::pb::eco::signal_header::SignalHeader&
MF_CONTROL_t_LongManeuverRequestPort::_Internal::ssigheader(const MF_CONTROL_t_LongManeuverRequestPort* msg) {
  return *msg->ssigheader_;
}
const ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq&
MF_CONTROL_t_LongManeuverRequestPort::_Internal::ctrlreq(const MF_CONTROL_t_LongManeuverRequestPort* msg) {
  return *msg->ctrlreq_;
}
const ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims&
MF_CONTROL_t_LongManeuverRequestPort::_Internal::lims(const MF_CONTROL_t_LongManeuverRequestPort* msg) {
  return *msg->lims_;
}
void MF_CONTROL_t_LongManeuverRequestPort::clear_ssigheader() {
  if (ssigheader_ != nullptr) ssigheader_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void MF_CONTROL_t_LongManeuverRequestPort::clear_ctrlreq() {
  if (ctrlreq_ != nullptr) ctrlreq_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void MF_CONTROL_t_LongManeuverRequestPort::clear_lims() {
  if (lims_ != nullptr) lims_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
MF_CONTROL_t_LongManeuverRequestPort::MF_CONTROL_t_LongManeuverRequestPort()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
}
MF_CONTROL_t_LongManeuverRequestPort::MF_CONTROL_t_LongManeuverRequestPort(const MF_CONTROL_t_LongManeuverRequestPort& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_lims()) {
    lims_ = new ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims(*from.lims_);
  } else {
    lims_ = nullptr;
  }
  if (from._internal_has_ssigheader()) {
    ssigheader_ = new ::pb::eco::signal_header::SignalHeader(*from.ssigheader_);
  } else {
    ssigheader_ = nullptr;
  }
  if (from._internal_has_ctrlreq()) {
    ctrlreq_ = new ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq(*from.ctrlreq_);
  } else {
    ctrlreq_ = nullptr;
  }
  ::memcpy(&motreq_, &from.motreq_,
    static_cast<size_t>(reinterpret_cast<char*>(&dynmode_) -
    reinterpret_cast<char*>(&motreq_)) + sizeof(dynmode_));
  // @@protoc_insertion_point(copy_constructor:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
}

void MF_CONTROL_t_LongManeuverRequestPort::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MF_CONTROL_t_LongManeuverRequestPort_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto.base);
  ::memset(&lims_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dynmode_) -
      reinterpret_cast<char*>(&lims_)) + sizeof(dynmode_));
}

MF_CONTROL_t_LongManeuverRequestPort::~MF_CONTROL_t_LongManeuverRequestPort() {
  // @@protoc_insertion_point(destructor:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
  SharedDtor();
}

void MF_CONTROL_t_LongManeuverRequestPort::SharedDtor() {
  if (this != internal_default_instance()) delete lims_;
  if (this != internal_default_instance()) delete ssigheader_;
  if (this != internal_default_instance()) delete ctrlreq_;
}

void MF_CONTROL_t_LongManeuverRequestPort::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MF_CONTROL_t_LongManeuverRequestPort& MF_CONTROL_t_LongManeuverRequestPort::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MF_CONTROL_t_LongManeuverRequestPort_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto.base);
  return *internal_default_instance();
}


void MF_CONTROL_t_LongManeuverRequestPort::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(lims_ != nullptr);
      lims_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ssigheader_ != nullptr);
      ssigheader_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(ctrlreq_ != nullptr);
      ctrlreq_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&motreq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uiversionnumber_) -
        reinterpret_cast<char*>(&motreq_)) + sizeof(uiversionnumber_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&activatectrl_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dynmode_) -
        reinterpret_cast<char*>(&activatectrl_)) + sizeof(dynmode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MF_CONTROL_t_LongManeuverRequestPort::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.ap_trjctl.moco_te_fun_mode.MOCO_te_FunMode funMode = 437;
      case 437:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode_IsValid(val))) {
            _internal_set_funmode(static_cast<::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(437, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_trjctl.moco_t_long_lims.MOCO_t_LongLims lims = 641;
      case 641:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_lims(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 fullBrakingReq = 667;
      case 667:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          _Internal::set_has_fullbrakingreq(&has_bits);
          fullbrakingreq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_trjctl.moco_te_driving_dir_req.MOCO_te_DrivingDirReq drivingDirReq = 737;
      case 737:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq_IsValid(val))) {
            _internal_set_drivingdirreq(static_cast<::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(737, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_ssigheader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 uiVersionNumber = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_uiversionnumber(&has_bits);
          uiversionnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 activateCtrl = 2292;
      case 2292:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_activatectrl(&has_bits);
          activatectrl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_trjctl.moco_te_dyn_mode.MOCO_te_DynMode dynMode = 2564;
      case 2564:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode_IsValid(val))) {
            _internal_set_dynmode(static_cast<::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2564, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_trjctl.mf_control_t_long_ctrl_req.MF_CONTROL_t_LongCtrlReq ctrlReq = 2638;
      case 2638:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_ctrlreq(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_trjctl.moco_te_mot_req.MOCO_te_MotReq motReq = 2663;
      case 2663:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq_IsValid(val))) {
            _internal_set_motreq(static_cast<::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2663, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MF_CONTROL_t_LongManeuverRequestPort::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.ap_trjctl.moco_te_fun_mode.MOCO_te_FunMode funMode = 437;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      437, this->_internal_funmode(), target);
  }

  // optional .pb.ap_trjctl.moco_t_long_lims.MOCO_t_LongLims lims = 641;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        641, _Internal::lims(this), target, stream);
  }

  // optional uint32 fullBrakingReq = 667;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(667, this->_internal_fullbrakingreq(), target);
  }

  // optional .pb.ap_trjctl.moco_te_driving_dir_req.MOCO_te_DrivingDirReq drivingDirReq = 737;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      737, this->_internal_drivingdirreq(), target);
  }

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::ssigheader(this), target, stream);
  }

  // optional uint32 uiVersionNumber = 2124;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2124, this->_internal_uiversionnumber(), target);
  }

  // optional uint32 activateCtrl = 2292;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2292, this->_internal_activatectrl(), target);
  }

  // optional .pb.ap_trjctl.moco_te_dyn_mode.MOCO_te_DynMode dynMode = 2564;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2564, this->_internal_dynmode(), target);
  }

  // optional .pb.ap_trjctl.mf_control_t_long_ctrl_req.MF_CONTROL_t_LongCtrlReq ctrlReq = 2638;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2638, _Internal::ctrlreq(this), target, stream);
  }

  // optional .pb.ap_trjctl.moco_te_mot_req.MOCO_te_MotReq motReq = 2663;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2663, this->_internal_motreq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
  return target;
}

size_t MF_CONTROL_t_LongManeuverRequestPort::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .pb.ap_trjctl.moco_t_long_lims.MOCO_t_LongLims lims = 641;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *lims_);
    }

    // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ssigheader_);
    }

    // optional .pb.ap_trjctl.mf_control_t_long_ctrl_req.MF_CONTROL_t_LongCtrlReq ctrlReq = 2638;
    if (cached_has_bits & 0x00000004u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ctrlreq_);
    }

    // optional .pb.ap_trjctl.moco_te_mot_req.MOCO_te_MotReq motReq = 2663;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_motreq());
    }

    // optional .pb.ap_trjctl.moco_te_fun_mode.MOCO_te_FunMode funMode = 437;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_funmode());
    }

    // optional uint32 fullBrakingReq = 667;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_fullbrakingreq());
    }

    // optional .pb.ap_trjctl.moco_te_driving_dir_req.MOCO_te_DrivingDirReq drivingDirReq = 737;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_drivingdirreq());
    }

    // optional uint32 uiVersionNumber = 2124;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uiversionnumber());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional uint32 activateCtrl = 2292;
    if (cached_has_bits & 0x00000100u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_activatectrl());
    }

    // optional .pb.ap_trjctl.moco_te_dyn_mode.MOCO_te_DynMode dynMode = 2564;
    if (cached_has_bits & 0x00000200u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_dynmode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MF_CONTROL_t_LongManeuverRequestPort::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
  GOOGLE_DCHECK_NE(&from, this);
  const MF_CONTROL_t_LongManeuverRequestPort* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MF_CONTROL_t_LongManeuverRequestPort>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
    MergeFrom(*source);
  }
}

void MF_CONTROL_t_LongManeuverRequestPort::MergeFrom(const MF_CONTROL_t_LongManeuverRequestPort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_lims()->::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims::MergeFrom(from._internal_lims());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_ssigheader()->::pb::eco::signal_header::SignalHeader::MergeFrom(from._internal_ssigheader());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_ctrlreq()->::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq::MergeFrom(from._internal_ctrlreq());
    }
    if (cached_has_bits & 0x00000008u) {
      motreq_ = from.motreq_;
    }
    if (cached_has_bits & 0x00000010u) {
      funmode_ = from.funmode_;
    }
    if (cached_has_bits & 0x00000020u) {
      fullbrakingreq_ = from.fullbrakingreq_;
    }
    if (cached_has_bits & 0x00000040u) {
      drivingdirreq_ = from.drivingdirreq_;
    }
    if (cached_has_bits & 0x00000080u) {
      uiversionnumber_ = from.uiversionnumber_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      activatectrl_ = from.activatectrl_;
    }
    if (cached_has_bits & 0x00000200u) {
      dynmode_ = from.dynmode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MF_CONTROL_t_LongManeuverRequestPort::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MF_CONTROL_t_LongManeuverRequestPort::CopyFrom(const MF_CONTROL_t_LongManeuverRequestPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MF_CONTROL_t_LongManeuverRequestPort::IsInitialized() const {
  return true;
}

void MF_CONTROL_t_LongManeuverRequestPort::InternalSwap(MF_CONTROL_t_LongManeuverRequestPort* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(lims_, other->lims_);
  swap(ssigheader_, other->ssigheader_);
  swap(ctrlreq_, other->ctrlreq_);
  swap(motreq_, other->motreq_);
  swap(funmode_, other->funmode_);
  swap(fullbrakingreq_, other->fullbrakingreq_);
  swap(drivingdirreq_, other->drivingdirreq_);
  swap(uiversionnumber_, other->uiversionnumber_);
  swap(activatectrl_, other->activatectrl_);
  swap(dynmode_, other->dynmode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MF_CONTROL_t_LongManeuverRequestPort::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MF_CONTROL_t_LongManeuverRequestPort_array_port::InitAsDefaultInstance() {
}
class MF_CONTROL_t_LongManeuverRequestPort_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<MF_CONTROL_t_LongManeuverRequestPort_array_port>()._has_bits_);
};

MF_CONTROL_t_LongManeuverRequestPort_array_port::MF_CONTROL_t_LongManeuverRequestPort_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
}
MF_CONTROL_t_LongManeuverRequestPort_array_port::MF_CONTROL_t_LongManeuverRequestPort_array_port(const MF_CONTROL_t_LongManeuverRequestPort_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
}

void MF_CONTROL_t_LongManeuverRequestPort_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MF_CONTROL_t_LongManeuverRequestPort_array_port_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto.base);
}

MF_CONTROL_t_LongManeuverRequestPort_array_port::~MF_CONTROL_t_LongManeuverRequestPort_array_port() {
  // @@protoc_insertion_point(destructor:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
  SharedDtor();
}

void MF_CONTROL_t_LongManeuverRequestPort_array_port::SharedDtor() {
}

void MF_CONTROL_t_LongManeuverRequestPort_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MF_CONTROL_t_LongManeuverRequestPort_array_port& MF_CONTROL_t_LongManeuverRequestPort_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MF_CONTROL_t_LongManeuverRequestPort_array_port_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto.base);
  return *internal_default_instance();
}


void MF_CONTROL_t_LongManeuverRequestPort_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MF_CONTROL_t_LongManeuverRequestPort_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort data = 1693;
      case 1693:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<13546>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MF_CONTROL_t_LongManeuverRequestPort_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort data = 1693;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1693, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
  return target;
}

size_t MF_CONTROL_t_LongManeuverRequestPort_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort data = 1693;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MF_CONTROL_t_LongManeuverRequestPort_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const MF_CONTROL_t_LongManeuverRequestPort_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MF_CONTROL_t_LongManeuverRequestPort_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
    MergeFrom(*source);
  }
}

void MF_CONTROL_t_LongManeuverRequestPort_array_port::MergeFrom(const MF_CONTROL_t_LongManeuverRequestPort_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void MF_CONTROL_t_LongManeuverRequestPort_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MF_CONTROL_t_LongManeuverRequestPort_array_port::CopyFrom(const MF_CONTROL_t_LongManeuverRequestPort_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MF_CONTROL_t_LongManeuverRequestPort_array_port::IsInitialized() const {
  return true;
}

void MF_CONTROL_t_LongManeuverRequestPort_array_port::InternalSwap(MF_CONTROL_t_LongManeuverRequestPort_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MF_CONTROL_t_LongManeuverRequestPort_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mf_control_t_long_maneuver_request_port
}  // namespace ap_trjctl
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort* Arena::CreateMaybeMessage< ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port* Arena::CreateMaybeMessage< ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
