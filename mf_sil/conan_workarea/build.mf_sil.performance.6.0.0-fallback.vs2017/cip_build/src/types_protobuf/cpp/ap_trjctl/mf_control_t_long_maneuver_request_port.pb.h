// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_trjctl/mf_control_t_long_maneuver_request_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "ap_trjctl/mf_control_t_long_ctrl_req.pb.h"
#include "ap_trjctl/moco_t_long_lims.pb.h"
#include "ap_trjctl/moco_te_fun_mode.pb.h"
#include "ap_trjctl/moco_te_dyn_mode.pb.h"
#include "ap_trjctl/moco_te_mot_req.pb.h"
#include "ap_trjctl/moco_te_driving_dir_req.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto;
namespace pb {
namespace ap_trjctl {
namespace mf_control_t_long_maneuver_request_port {
class MF_CONTROL_t_LongManeuverRequestPort;
class MF_CONTROL_t_LongManeuverRequestPortDefaultTypeInternal;
extern MF_CONTROL_t_LongManeuverRequestPortDefaultTypeInternal _MF_CONTROL_t_LongManeuverRequestPort_default_instance_;
class MF_CONTROL_t_LongManeuverRequestPort_array_port;
class MF_CONTROL_t_LongManeuverRequestPort_array_portDefaultTypeInternal;
extern MF_CONTROL_t_LongManeuverRequestPort_array_portDefaultTypeInternal _MF_CONTROL_t_LongManeuverRequestPort_array_port_default_instance_;
}  // namespace mf_control_t_long_maneuver_request_port
}  // namespace ap_trjctl
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort* Arena::CreateMaybeMessage<::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort>(Arena*);
template<> ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port* Arena::CreateMaybeMessage<::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_trjctl {
namespace mf_control_t_long_maneuver_request_port {

// ===================================================================

class MF_CONTROL_t_LongManeuverRequestPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort) */ {
 public:
  MF_CONTROL_t_LongManeuverRequestPort();
  virtual ~MF_CONTROL_t_LongManeuverRequestPort();

  MF_CONTROL_t_LongManeuverRequestPort(const MF_CONTROL_t_LongManeuverRequestPort& from);
  MF_CONTROL_t_LongManeuverRequestPort(MF_CONTROL_t_LongManeuverRequestPort&& from) noexcept
    : MF_CONTROL_t_LongManeuverRequestPort() {
    *this = ::std::move(from);
  }

  inline MF_CONTROL_t_LongManeuverRequestPort& operator=(const MF_CONTROL_t_LongManeuverRequestPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline MF_CONTROL_t_LongManeuverRequestPort& operator=(MF_CONTROL_t_LongManeuverRequestPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MF_CONTROL_t_LongManeuverRequestPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MF_CONTROL_t_LongManeuverRequestPort* internal_default_instance() {
    return reinterpret_cast<const MF_CONTROL_t_LongManeuverRequestPort*>(
               &_MF_CONTROL_t_LongManeuverRequestPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MF_CONTROL_t_LongManeuverRequestPort& a, MF_CONTROL_t_LongManeuverRequestPort& b) {
    a.Swap(&b);
  }
  inline void Swap(MF_CONTROL_t_LongManeuverRequestPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MF_CONTROL_t_LongManeuverRequestPort* New() const final {
    return CreateMaybeMessage<MF_CONTROL_t_LongManeuverRequestPort>(nullptr);
  }

  MF_CONTROL_t_LongManeuverRequestPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MF_CONTROL_t_LongManeuverRequestPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MF_CONTROL_t_LongManeuverRequestPort& from);
  void MergeFrom(const MF_CONTROL_t_LongManeuverRequestPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MF_CONTROL_t_LongManeuverRequestPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto);
    return ::descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLimsFieldNumber = 641,
    kSSigHeaderFieldNumber = 1033,
    kCtrlReqFieldNumber = 2638,
    kMotReqFieldNumber = 2663,
    kFunModeFieldNumber = 437,
    kFullBrakingReqFieldNumber = 667,
    kDrivingDirReqFieldNumber = 737,
    kUiVersionNumberFieldNumber = 2124,
    kActivateCtrlFieldNumber = 2292,
    kDynModeFieldNumber = 2564,
  };
  // optional .pb.ap_trjctl.moco_t_long_lims.MOCO_t_LongLims lims = 641;
  bool has_lims() const;
  private:
  bool _internal_has_lims() const;
  public:
  void clear_lims();
  const ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims& lims() const;
  ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* release_lims();
  ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* mutable_lims();
  void set_allocated_lims(::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* lims);
  private:
  const ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims& _internal_lims() const;
  ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* _internal_mutable_lims();
  public:

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional .pb.ap_trjctl.mf_control_t_long_ctrl_req.MF_CONTROL_t_LongCtrlReq ctrlReq = 2638;
  bool has_ctrlreq() const;
  private:
  bool _internal_has_ctrlreq() const;
  public:
  void clear_ctrlreq();
  const ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq& ctrlreq() const;
  ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* release_ctrlreq();
  ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* mutable_ctrlreq();
  void set_allocated_ctrlreq(::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* ctrlreq);
  private:
  const ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq& _internal_ctrlreq() const;
  ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* _internal_mutable_ctrlreq();
  public:

  // optional .pb.ap_trjctl.moco_te_mot_req.MOCO_te_MotReq motReq = 2663;
  bool has_motreq() const;
  private:
  bool _internal_has_motreq() const;
  public:
  void clear_motreq();
  ::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq motreq() const;
  void set_motreq(::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq value);
  private:
  ::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq _internal_motreq() const;
  void _internal_set_motreq(::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq value);
  public:

  // optional .pb.ap_trjctl.moco_te_fun_mode.MOCO_te_FunMode funMode = 437;
  bool has_funmode() const;
  private:
  bool _internal_has_funmode() const;
  public:
  void clear_funmode();
  ::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode funmode() const;
  void set_funmode(::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode value);
  private:
  ::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode _internal_funmode() const;
  void _internal_set_funmode(::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode value);
  public:

  // optional uint32 fullBrakingReq = 667;
  bool has_fullbrakingreq() const;
  private:
  bool _internal_has_fullbrakingreq() const;
  public:
  void clear_fullbrakingreq();
  ::PROTOBUF_NAMESPACE_ID::uint32 fullbrakingreq() const;
  void set_fullbrakingreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fullbrakingreq() const;
  void _internal_set_fullbrakingreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.ap_trjctl.moco_te_driving_dir_req.MOCO_te_DrivingDirReq drivingDirReq = 737;
  bool has_drivingdirreq() const;
  private:
  bool _internal_has_drivingdirreq() const;
  public:
  void clear_drivingdirreq();
  ::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq drivingdirreq() const;
  void set_drivingdirreq(::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq value);
  private:
  ::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq _internal_drivingdirreq() const;
  void _internal_set_drivingdirreq(::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 activateCtrl = 2292;
  bool has_activatectrl() const;
  private:
  bool _internal_has_activatectrl() const;
  public:
  void clear_activatectrl();
  ::PROTOBUF_NAMESPACE_ID::uint32 activatectrl() const;
  void set_activatectrl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_activatectrl() const;
  void _internal_set_activatectrl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.ap_trjctl.moco_te_dyn_mode.MOCO_te_DynMode dynMode = 2564;
  bool has_dynmode() const;
  private:
  bool _internal_has_dynmode() const;
  public:
  void clear_dynmode();
  ::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode dynmode() const;
  void set_dynmode(::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode value);
  private:
  ::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode _internal_dynmode() const;
  void _internal_set_dynmode(::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* lims_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* ctrlreq_;
  int motreq_;
  int funmode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fullbrakingreq_;
  int drivingdirreq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  ::PROTOBUF_NAMESPACE_ID::uint32 activatectrl_;
  int dynmode_;
  friend struct ::TableStruct_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto;
};
// -------------------------------------------------------------------

class MF_CONTROL_t_LongManeuverRequestPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port) */ {
 public:
  MF_CONTROL_t_LongManeuverRequestPort_array_port();
  virtual ~MF_CONTROL_t_LongManeuverRequestPort_array_port();

  MF_CONTROL_t_LongManeuverRequestPort_array_port(const MF_CONTROL_t_LongManeuverRequestPort_array_port& from);
  MF_CONTROL_t_LongManeuverRequestPort_array_port(MF_CONTROL_t_LongManeuverRequestPort_array_port&& from) noexcept
    : MF_CONTROL_t_LongManeuverRequestPort_array_port() {
    *this = ::std::move(from);
  }

  inline MF_CONTROL_t_LongManeuverRequestPort_array_port& operator=(const MF_CONTROL_t_LongManeuverRequestPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline MF_CONTROL_t_LongManeuverRequestPort_array_port& operator=(MF_CONTROL_t_LongManeuverRequestPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MF_CONTROL_t_LongManeuverRequestPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MF_CONTROL_t_LongManeuverRequestPort_array_port* internal_default_instance() {
    return reinterpret_cast<const MF_CONTROL_t_LongManeuverRequestPort_array_port*>(
               &_MF_CONTROL_t_LongManeuverRequestPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MF_CONTROL_t_LongManeuverRequestPort_array_port& a, MF_CONTROL_t_LongManeuverRequestPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(MF_CONTROL_t_LongManeuverRequestPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MF_CONTROL_t_LongManeuverRequestPort_array_port* New() const final {
    return CreateMaybeMessage<MF_CONTROL_t_LongManeuverRequestPort_array_port>(nullptr);
  }

  MF_CONTROL_t_LongManeuverRequestPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MF_CONTROL_t_LongManeuverRequestPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MF_CONTROL_t_LongManeuverRequestPort_array_port& from);
  void MergeFrom(const MF_CONTROL_t_LongManeuverRequestPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MF_CONTROL_t_LongManeuverRequestPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto);
    return ::descriptor_table_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1693,
  };
  // repeated .pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort data = 1693;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort >*
      mutable_data();
  private:
  const ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort& _internal_data(int index) const;
  ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort* _internal_add_data();
  public:
  const ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort& data(int index) const;
  ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort > data_;
  friend struct ::TableStruct_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MF_CONTROL_t_LongManeuverRequestPort

// optional uint32 uiVersionNumber = 2124;
inline bool MF_CONTROL_t_LongManeuverRequestPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MF_CONTROL_t_LongManeuverRequestPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MF_CONTROL_t_LongManeuverRequestPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MF_CONTROL_t_LongManeuverRequestPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  uiversionnumber_ = value;
}
inline void MF_CONTROL_t_LongManeuverRequestPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool MF_CONTROL_t_LongManeuverRequestPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool MF_CONTROL_t_LongManeuverRequestPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& MF_CONTROL_t_LongManeuverRequestPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& MF_CONTROL_t_LongManeuverRequestPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* MF_CONTROL_t_LongManeuverRequestPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.sSigHeader)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* MF_CONTROL_t_LongManeuverRequestPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000002u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* MF_CONTROL_t_LongManeuverRequestPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.sSigHeader)
}

// optional .pb.ap_trjctl.mf_control_t_long_ctrl_req.MF_CONTROL_t_LongCtrlReq ctrlReq = 2638;
inline bool MF_CONTROL_t_LongManeuverRequestPort::_internal_has_ctrlreq() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || ctrlreq_ != nullptr);
  return value;
}
inline bool MF_CONTROL_t_LongManeuverRequestPort::has_ctrlreq() const {
  return _internal_has_ctrlreq();
}
inline const ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq& MF_CONTROL_t_LongManeuverRequestPort::_internal_ctrlreq() const {
  const ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* p = ctrlreq_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq*>(
      &::pb::ap_trjctl::mf_control_t_long_ctrl_req::_MF_CONTROL_t_LongCtrlReq_default_instance_);
}
inline const ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq& MF_CONTROL_t_LongManeuverRequestPort::ctrlreq() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.ctrlReq)
  return _internal_ctrlreq();
}
inline ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* MF_CONTROL_t_LongManeuverRequestPort::release_ctrlreq() {
  // @@protoc_insertion_point(field_release:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.ctrlReq)
  _has_bits_[0] &= ~0x00000004u;
  ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* temp = ctrlreq_;
  ctrlreq_ = nullptr;
  return temp;
}
inline ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* MF_CONTROL_t_LongManeuverRequestPort::_internal_mutable_ctrlreq() {
  _has_bits_[0] |= 0x00000004u;
  if (ctrlreq_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq>(GetArenaNoVirtual());
    ctrlreq_ = p;
  }
  return ctrlreq_;
}
inline ::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* MF_CONTROL_t_LongManeuverRequestPort::mutable_ctrlreq() {
  // @@protoc_insertion_point(field_mutable:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.ctrlReq)
  return _internal_mutable_ctrlreq();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::set_allocated_ctrlreq(::pb::ap_trjctl::mf_control_t_long_ctrl_req::MF_CONTROL_t_LongCtrlReq* ctrlreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ctrlreq_);
  }
  if (ctrlreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ctrlreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ctrlreq, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  ctrlreq_ = ctrlreq;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.ctrlReq)
}

// optional .pb.ap_trjctl.moco_t_long_lims.MOCO_t_LongLims lims = 641;
inline bool MF_CONTROL_t_LongManeuverRequestPort::_internal_has_lims() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || lims_ != nullptr);
  return value;
}
inline bool MF_CONTROL_t_LongManeuverRequestPort::has_lims() const {
  return _internal_has_lims();
}
inline const ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims& MF_CONTROL_t_LongManeuverRequestPort::_internal_lims() const {
  const ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* p = lims_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims*>(
      &::pb::ap_trjctl::moco_t_long_lims::_MOCO_t_LongLims_default_instance_);
}
inline const ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims& MF_CONTROL_t_LongManeuverRequestPort::lims() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.lims)
  return _internal_lims();
}
inline ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* MF_CONTROL_t_LongManeuverRequestPort::release_lims() {
  // @@protoc_insertion_point(field_release:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.lims)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* temp = lims_;
  lims_ = nullptr;
  return temp;
}
inline ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* MF_CONTROL_t_LongManeuverRequestPort::_internal_mutable_lims() {
  _has_bits_[0] |= 0x00000001u;
  if (lims_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims>(GetArenaNoVirtual());
    lims_ = p;
  }
  return lims_;
}
inline ::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* MF_CONTROL_t_LongManeuverRequestPort::mutable_lims() {
  // @@protoc_insertion_point(field_mutable:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.lims)
  return _internal_mutable_lims();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::set_allocated_lims(::pb::ap_trjctl::moco_t_long_lims::MOCO_t_LongLims* lims) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(lims_);
  }
  if (lims) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      lims = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lims, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  lims_ = lims;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.lims)
}

// optional .pb.ap_trjctl.moco_te_fun_mode.MOCO_te_FunMode funMode = 437;
inline bool MF_CONTROL_t_LongManeuverRequestPort::_internal_has_funmode() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MF_CONTROL_t_LongManeuverRequestPort::has_funmode() const {
  return _internal_has_funmode();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::clear_funmode() {
  funmode_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode MF_CONTROL_t_LongManeuverRequestPort::_internal_funmode() const {
  return static_cast< ::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode >(funmode_);
}
inline ::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode MF_CONTROL_t_LongManeuverRequestPort::funmode() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.funMode)
  return _internal_funmode();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::_internal_set_funmode(::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode value) {
  assert(::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  funmode_ = value;
}
inline void MF_CONTROL_t_LongManeuverRequestPort::set_funmode(::pb::ap_trjctl::moco_te_fun_mode::MOCO_te_FunMode value) {
  _internal_set_funmode(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.funMode)
}

// optional .pb.ap_trjctl.moco_te_dyn_mode.MOCO_te_DynMode dynMode = 2564;
inline bool MF_CONTROL_t_LongManeuverRequestPort::_internal_has_dynmode() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool MF_CONTROL_t_LongManeuverRequestPort::has_dynmode() const {
  return _internal_has_dynmode();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::clear_dynmode() {
  dynmode_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode MF_CONTROL_t_LongManeuverRequestPort::_internal_dynmode() const {
  return static_cast< ::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode >(dynmode_);
}
inline ::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode MF_CONTROL_t_LongManeuverRequestPort::dynmode() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.dynMode)
  return _internal_dynmode();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::_internal_set_dynmode(::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode value) {
  assert(::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode_IsValid(value));
  _has_bits_[0] |= 0x00000200u;
  dynmode_ = value;
}
inline void MF_CONTROL_t_LongManeuverRequestPort::set_dynmode(::pb::ap_trjctl::moco_te_dyn_mode::MOCO_te_DynMode value) {
  _internal_set_dynmode(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.dynMode)
}

// optional .pb.ap_trjctl.moco_te_mot_req.MOCO_te_MotReq motReq = 2663;
inline bool MF_CONTROL_t_LongManeuverRequestPort::_internal_has_motreq() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MF_CONTROL_t_LongManeuverRequestPort::has_motreq() const {
  return _internal_has_motreq();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::clear_motreq() {
  motreq_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq MF_CONTROL_t_LongManeuverRequestPort::_internal_motreq() const {
  return static_cast< ::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq >(motreq_);
}
inline ::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq MF_CONTROL_t_LongManeuverRequestPort::motreq() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.motReq)
  return _internal_motreq();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::_internal_set_motreq(::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq value) {
  assert(::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  motreq_ = value;
}
inline void MF_CONTROL_t_LongManeuverRequestPort::set_motreq(::pb::ap_trjctl::moco_te_mot_req::MOCO_te_MotReq value) {
  _internal_set_motreq(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.motReq)
}

// optional uint32 activateCtrl = 2292;
inline bool MF_CONTROL_t_LongManeuverRequestPort::_internal_has_activatectrl() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool MF_CONTROL_t_LongManeuverRequestPort::has_activatectrl() const {
  return _internal_has_activatectrl();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::clear_activatectrl() {
  activatectrl_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MF_CONTROL_t_LongManeuverRequestPort::_internal_activatectrl() const {
  return activatectrl_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MF_CONTROL_t_LongManeuverRequestPort::activatectrl() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.activateCtrl)
  return _internal_activatectrl();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::_internal_set_activatectrl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  activatectrl_ = value;
}
inline void MF_CONTROL_t_LongManeuverRequestPort::set_activatectrl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_activatectrl(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.activateCtrl)
}

// optional uint32 fullBrakingReq = 667;
inline bool MF_CONTROL_t_LongManeuverRequestPort::_internal_has_fullbrakingreq() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MF_CONTROL_t_LongManeuverRequestPort::has_fullbrakingreq() const {
  return _internal_has_fullbrakingreq();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::clear_fullbrakingreq() {
  fullbrakingreq_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MF_CONTROL_t_LongManeuverRequestPort::_internal_fullbrakingreq() const {
  return fullbrakingreq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MF_CONTROL_t_LongManeuverRequestPort::fullbrakingreq() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.fullBrakingReq)
  return _internal_fullbrakingreq();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::_internal_set_fullbrakingreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  fullbrakingreq_ = value;
}
inline void MF_CONTROL_t_LongManeuverRequestPort::set_fullbrakingreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fullbrakingreq(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.fullBrakingReq)
}

// optional .pb.ap_trjctl.moco_te_driving_dir_req.MOCO_te_DrivingDirReq drivingDirReq = 737;
inline bool MF_CONTROL_t_LongManeuverRequestPort::_internal_has_drivingdirreq() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MF_CONTROL_t_LongManeuverRequestPort::has_drivingdirreq() const {
  return _internal_has_drivingdirreq();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::clear_drivingdirreq() {
  drivingdirreq_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq MF_CONTROL_t_LongManeuverRequestPort::_internal_drivingdirreq() const {
  return static_cast< ::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq >(drivingdirreq_);
}
inline ::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq MF_CONTROL_t_LongManeuverRequestPort::drivingdirreq() const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.drivingDirReq)
  return _internal_drivingdirreq();
}
inline void MF_CONTROL_t_LongManeuverRequestPort::_internal_set_drivingdirreq(::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq value) {
  assert(::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  drivingdirreq_ = value;
}
inline void MF_CONTROL_t_LongManeuverRequestPort::set_drivingdirreq(::pb::ap_trjctl::moco_te_driving_dir_req::MOCO_te_DrivingDirReq value) {
  _internal_set_drivingdirreq(value);
  // @@protoc_insertion_point(field_set:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort.drivingDirReq)
}

// -------------------------------------------------------------------

// MF_CONTROL_t_LongManeuverRequestPort_array_port

// repeated .pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort data = 1693;
inline int MF_CONTROL_t_LongManeuverRequestPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int MF_CONTROL_t_LongManeuverRequestPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void MF_CONTROL_t_LongManeuverRequestPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort* MF_CONTROL_t_LongManeuverRequestPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort >*
MF_CONTROL_t_LongManeuverRequestPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port.data)
  return &data_;
}
inline const ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort& MF_CONTROL_t_LongManeuverRequestPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort& MF_CONTROL_t_LongManeuverRequestPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort* MF_CONTROL_t_LongManeuverRequestPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort* MF_CONTROL_t_LongManeuverRequestPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_trjctl::mf_control_t_long_maneuver_request_port::MF_CONTROL_t_LongManeuverRequestPort >&
MF_CONTROL_t_LongManeuverRequestPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_trjctl.mf_control_t_long_maneuver_request_port.MF_CONTROL_t_LongManeuverRequestPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mf_control_t_long_maneuver_request_port
}  // namespace ap_trjctl
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5ftrjctl_2fmf_5fcontrol_5ft_5flong_5fmaneuver_5frequest_5fport_2eproto
