// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/parking_situation_sides.proto

#include "mf_hmih/parking_situation_sides.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParkingSituationSides_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto;
namespace pb {
namespace mf_hmih {
namespace parking_situation_sides {
class ParkingSituationSidesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParkingSituationSides> _instance;
} _ParkingSituationSides_default_instance_;
class ParkingSituationSides_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParkingSituationSides_array_port> _instance;
} _ParkingSituationSides_array_port_default_instance_;
}  // namespace parking_situation_sides
}  // namespace mf_hmih
}  // namespace pb
static void InitDefaultsscc_info_ParkingSituationSides_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::parking_situation_sides::_ParkingSituationSides_default_instance_;
    new (ptr) ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParkingSituationSides_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParkingSituationSides_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto}, {}};

static void InitDefaultsscc_info_ParkingSituationSides_array_port_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::parking_situation_sides::_ParkingSituationSides_array_port_default_instance_;
    new (ptr) ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ParkingSituationSides_array_port_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ParkingSituationSides_array_port_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto}, {
      &scc_info_ParkingSituationSides_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, egorelativepos_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, perpendicularparkingspaces_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, parallelparkingspaces_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, angledstandardspaces_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, angledreversespaces_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, street_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, uncertainsituation_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, parallelparkingout_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, notavailable_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides, placeholder_nu_),
  0,
  5,
  6,
  7,
  8,
  1,
  2,
  3,
  4,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides)},
  { 25, 31, sizeof(::pb::mf_hmih::parking_situation_sides::ParkingSituationSides_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::parking_situation_sides::_ParkingSituationSides_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::parking_situation_sides::_ParkingSituationSides_array_port_default_instance_),
};

const char descriptor_table_protodef_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%mf_hmih/parking_situation_sides.proto\022"
  "\"pb.mf_hmih.parking_situation_sides\"\310\002\n\025"
  "ParkingSituationSides\022\032\n\021egoRelativePos_"
  "nu\030\211\027 \001(\r\022&\n\035perpendicularParkingSpaces_"
  "nu\030\246\007 \001(\010\022!\n\030parallelParkingSpaces_nu\030\344\034"
  " \001(\010\022 \n\027angledStandardSpaces_nu\030\357\026 \001(\010\022\037"
  "\n\026angledReverseSpaces_nu\030\246\030 \001(\010\022\022\n\tstree"
  "t_nu\030\217\023 \001(\010\022\036\n\025uncertainSituation_nu\030\211\033 "
  "\001(\010\022\036\n\025parallelParkingOut_nu\030\370\010 \001(\010\022\030\n\017n"
  "otAvailable_nu\030\236\t \001(\010\022\027\n\016placeholder_nu\030"
  "\227\034 \003(\010\"l\n ParkingSituationSides_array_po"
  "rt\022H\n\004data\030\376\035 \003(\01329.pb.mf_hmih.parking_s"
  "ituation_sides.ParkingSituationSides"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto_sccs[2] = {
  &scc_info_ParkingSituationSides_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto.base,
  &scc_info_ParkingSituationSides_array_port_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto_once;
static bool descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto = {
  &descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto_initialized, descriptor_table_protodef_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto, "mf_hmih/parking_situation_sides.proto", 516,
  &descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto_once, descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto_sccs, descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto::offsets,
  file_level_metadata_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto, 2, file_level_enum_descriptors_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto, file_level_service_descriptors_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto), true);
namespace pb {
namespace mf_hmih {
namespace parking_situation_sides {

// ===================================================================

void ParkingSituationSides::InitAsDefaultInstance() {
}
class ParkingSituationSides::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingSituationSides>()._has_bits_);
  static void set_has_egorelativepos_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_perpendicularparkingspaces_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_parallelparkingspaces_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_angledstandardspaces_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_angledreversespaces_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_street_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uncertainsituation_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_parallelparkingout_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_notavailable_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

ParkingSituationSides::ParkingSituationSides()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
}
ParkingSituationSides::ParkingSituationSides(const ParkingSituationSides& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      placeholder_nu_(from.placeholder_nu_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&egorelativepos_nu_, &from.egorelativepos_nu_,
    static_cast<size_t>(reinterpret_cast<char*>(&angledreversespaces_nu_) -
    reinterpret_cast<char*>(&egorelativepos_nu_)) + sizeof(angledreversespaces_nu_));
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
}

void ParkingSituationSides::SharedCtor() {
  ::memset(&egorelativepos_nu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angledreversespaces_nu_) -
      reinterpret_cast<char*>(&egorelativepos_nu_)) + sizeof(angledreversespaces_nu_));
}

ParkingSituationSides::~ParkingSituationSides() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
  SharedDtor();
}

void ParkingSituationSides::SharedDtor() {
}

void ParkingSituationSides::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParkingSituationSides& ParkingSituationSides::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParkingSituationSides_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto.base);
  return *internal_default_instance();
}


void ParkingSituationSides::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  placeholder_nu_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&egorelativepos_nu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&angledstandardspaces_nu_) -
        reinterpret_cast<char*>(&egorelativepos_nu_)) + sizeof(angledstandardspaces_nu_));
  }
  angledreversespaces_nu_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ParkingSituationSides::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool perpendicularParkingSpaces_nu = 934;
      case 934:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_perpendicularparkingspaces_nu(&has_bits);
          perpendicularparkingspaces_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool parallelParkingOut_nu = 1144;
      case 1144:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_parallelparkingout_nu(&has_bits);
          parallelparkingout_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool notAvailable_nu = 1182;
      case 1182:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_notavailable_nu(&has_bits);
          notavailable_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool street_nu = 2447;
      case 2447:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_street_nu(&has_bits);
          street_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool angledStandardSpaces_nu = 2927;
      case 2927:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_angledstandardspaces_nu(&has_bits);
          angledstandardspaces_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 egoRelativePos_nu = 2953;
      case 2953:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_egorelativepos_nu(&has_bits);
          egorelativepos_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool angledReverseSpaces_nu = 3110;
      case 3110:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_angledreversespaces_nu(&has_bits);
          angledreversespaces_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool uncertainSituation_nu = 3465;
      case 3465:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_uncertainsituation_nu(&has_bits);
          uncertainsituation_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bool placeholder_nu = 3607;
      case 3607:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _internal_add_placeholder_nu(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_placeholder_nu(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool parallelParkingSpaces_nu = 3684;
      case 3684:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_parallelparkingspaces_nu(&has_bits);
          parallelparkingspaces_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParkingSituationSides::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool perpendicularParkingSpaces_nu = 934;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(934, this->_internal_perpendicularparkingspaces_nu(), target);
  }

  // optional bool parallelParkingOut_nu = 1144;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1144, this->_internal_parallelparkingout_nu(), target);
  }

  // optional bool notAvailable_nu = 1182;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1182, this->_internal_notavailable_nu(), target);
  }

  // optional bool street_nu = 2447;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2447, this->_internal_street_nu(), target);
  }

  // optional bool angledStandardSpaces_nu = 2927;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2927, this->_internal_angledstandardspaces_nu(), target);
  }

  // optional uint32 egoRelativePos_nu = 2953;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2953, this->_internal_egorelativepos_nu(), target);
  }

  // optional bool angledReverseSpaces_nu = 3110;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3110, this->_internal_angledreversespaces_nu(), target);
  }

  // optional bool uncertainSituation_nu = 3465;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3465, this->_internal_uncertainsituation_nu(), target);
  }

  // repeated bool placeholder_nu = 3607;
  for (int i = 0, n = this->_internal_placeholder_nu_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3607, this->_internal_placeholder_nu(i), target);
  }

  // optional bool parallelParkingSpaces_nu = 3684;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3684, this->_internal_parallelparkingspaces_nu(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
  return target;
}

size_t ParkingSituationSides::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool placeholder_nu = 3607;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_placeholder_nu_size());
    size_t data_size = 1UL * count;
    total_size += 3 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_placeholder_nu_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint32 egoRelativePos_nu = 2953;
    if (cached_has_bits & 0x00000001u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_egorelativepos_nu());
    }

    // optional bool street_nu = 2447;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 + 1;
    }

    // optional bool uncertainSituation_nu = 3465;
    if (cached_has_bits & 0x00000004u) {
      total_size += 3 + 1;
    }

    // optional bool parallelParkingOut_nu = 1144;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool notAvailable_nu = 1182;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool perpendicularParkingSpaces_nu = 934;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool parallelParkingSpaces_nu = 3684;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3 + 1;
    }

    // optional bool angledStandardSpaces_nu = 2927;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 + 1;
    }

  }
  // optional bool angledReverseSpaces_nu = 3110;
  if (cached_has_bits & 0x00000100u) {
    total_size += 3 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParkingSituationSides::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
  GOOGLE_DCHECK_NE(&from, this);
  const ParkingSituationSides* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParkingSituationSides>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
    MergeFrom(*source);
  }
}

void ParkingSituationSides::MergeFrom(const ParkingSituationSides& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  placeholder_nu_.MergeFrom(from.placeholder_nu_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      egorelativepos_nu_ = from.egorelativepos_nu_;
    }
    if (cached_has_bits & 0x00000002u) {
      street_nu_ = from.street_nu_;
    }
    if (cached_has_bits & 0x00000004u) {
      uncertainsituation_nu_ = from.uncertainsituation_nu_;
    }
    if (cached_has_bits & 0x00000008u) {
      parallelparkingout_nu_ = from.parallelparkingout_nu_;
    }
    if (cached_has_bits & 0x00000010u) {
      notavailable_nu_ = from.notavailable_nu_;
    }
    if (cached_has_bits & 0x00000020u) {
      perpendicularparkingspaces_nu_ = from.perpendicularparkingspaces_nu_;
    }
    if (cached_has_bits & 0x00000040u) {
      parallelparkingspaces_nu_ = from.parallelparkingspaces_nu_;
    }
    if (cached_has_bits & 0x00000080u) {
      angledstandardspaces_nu_ = from.angledstandardspaces_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_angledreversespaces_nu(from._internal_angledreversespaces_nu());
  }
}

void ParkingSituationSides::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParkingSituationSides::CopyFrom(const ParkingSituationSides& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParkingSituationSides::IsInitialized() const {
  return true;
}

void ParkingSituationSides::InternalSwap(ParkingSituationSides* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  placeholder_nu_.InternalSwap(&other->placeholder_nu_);
  swap(egorelativepos_nu_, other->egorelativepos_nu_);
  swap(street_nu_, other->street_nu_);
  swap(uncertainsituation_nu_, other->uncertainsituation_nu_);
  swap(parallelparkingout_nu_, other->parallelparkingout_nu_);
  swap(notavailable_nu_, other->notavailable_nu_);
  swap(perpendicularparkingspaces_nu_, other->perpendicularparkingspaces_nu_);
  swap(parallelparkingspaces_nu_, other->parallelparkingspaces_nu_);
  swap(angledstandardspaces_nu_, other->angledstandardspaces_nu_);
  swap(angledreversespaces_nu_, other->angledreversespaces_nu_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParkingSituationSides::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParkingSituationSides_array_port::InitAsDefaultInstance() {
}
class ParkingSituationSides_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingSituationSides_array_port>()._has_bits_);
};

ParkingSituationSides_array_port::ParkingSituationSides_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
}
ParkingSituationSides_array_port::ParkingSituationSides_array_port(const ParkingSituationSides_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
}

void ParkingSituationSides_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParkingSituationSides_array_port_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto.base);
}

ParkingSituationSides_array_port::~ParkingSituationSides_array_port() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
  SharedDtor();
}

void ParkingSituationSides_array_port::SharedDtor() {
}

void ParkingSituationSides_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParkingSituationSides_array_port& ParkingSituationSides_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParkingSituationSides_array_port_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto.base);
  return *internal_default_instance();
}


void ParkingSituationSides_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ParkingSituationSides_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.mf_hmih.parking_situation_sides.ParkingSituationSides data = 3838;
      case 3838:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParkingSituationSides_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.parking_situation_sides.ParkingSituationSides data = 3838;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3838, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
  return target;
}

size_t ParkingSituationSides_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.parking_situation_sides.ParkingSituationSides data = 3838;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParkingSituationSides_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const ParkingSituationSides_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParkingSituationSides_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
    MergeFrom(*source);
  }
}

void ParkingSituationSides_array_port::MergeFrom(const ParkingSituationSides_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void ParkingSituationSides_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParkingSituationSides_array_port::CopyFrom(const ParkingSituationSides_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.parking_situation_sides.ParkingSituationSides_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParkingSituationSides_array_port::IsInitialized() const {
  return true;
}

void ParkingSituationSides_array_port::InternalSwap(ParkingSituationSides_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParkingSituationSides_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace parking_situation_sides
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides* Arena::CreateMaybeMessage< ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides_array_port* Arena::CreateMaybeMessage< ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
