// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/parking_space.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fparking_5fspace_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fparking_5fspace_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mf_hmih/poss_orientation.pb.h"
#include "mf_hmih/selected_orientation.pb.h"
#include "mf_hmih/possible_direction.pb.h"
#include "mf_hmih/selected_direction.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fparking_5fspace_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mf_5fhmih_2fparking_5fspace_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto;
namespace pb {
namespace mf_hmih {
namespace parking_space {
class ParkingSpace;
class ParkingSpaceDefaultTypeInternal;
extern ParkingSpaceDefaultTypeInternal _ParkingSpace_default_instance_;
class ParkingSpace_array_port;
class ParkingSpace_array_portDefaultTypeInternal;
extern ParkingSpace_array_portDefaultTypeInternal _ParkingSpace_array_port_default_instance_;
}  // namespace parking_space
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::mf_hmih::parking_space::ParkingSpace* Arena::CreateMaybeMessage<::pb::mf_hmih::parking_space::ParkingSpace>(Arena*);
template<> ::pb::mf_hmih::parking_space::ParkingSpace_array_port* Arena::CreateMaybeMessage<::pb::mf_hmih::parking_space::ParkingSpace_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace mf_hmih {
namespace parking_space {

// ===================================================================

class ParkingSpace :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.parking_space.ParkingSpace) */ {
 public:
  ParkingSpace();
  virtual ~ParkingSpace();

  ParkingSpace(const ParkingSpace& from);
  ParkingSpace(ParkingSpace&& from) noexcept
    : ParkingSpace() {
    *this = ::std::move(from);
  }

  inline ParkingSpace& operator=(const ParkingSpace& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParkingSpace& operator=(ParkingSpace&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParkingSpace& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParkingSpace* internal_default_instance() {
    return reinterpret_cast<const ParkingSpace*>(
               &_ParkingSpace_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ParkingSpace& a, ParkingSpace& b) {
    a.Swap(&b);
  }
  inline void Swap(ParkingSpace* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParkingSpace* New() const final {
    return CreateMaybeMessage<ParkingSpace>(nullptr);
  }

  ParkingSpace* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParkingSpace>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParkingSpace& from);
  void MergeFrom(const ParkingSpace& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParkingSpace* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.parking_space.ParkingSpace";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto);
    return ::descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoseIDNuFieldNumber = 444,
    kScannedNuFieldNumber = 599,
    kPossOrientationNuFieldNumber = 733,
    kSelectedDirectionNuFieldNumber = 970,
    kFreeNuFieldNumber = 1649,
    kPossDirectionNuFieldNumber = 2578,
    kSelectedOrientationNuFieldNumber = 4007,
    kSelectedNuFieldNumber = 4072,
    kMemorizedPoseYawRadFieldNumber = 1904,
  };
  // repeated uint32 poseID_nu = 444;
  int poseid_nu_size() const;
  private:
  int _internal_poseid_nu_size() const;
  public:
  void clear_poseid_nu();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_poseid_nu(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_poseid_nu() const;
  void _internal_add_poseid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_poseid_nu();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 poseid_nu(int index) const;
  void set_poseid_nu(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_poseid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      poseid_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_poseid_nu();

  // repeated bool scanned_nu = 599;
  int scanned_nu_size() const;
  private:
  int _internal_scanned_nu_size() const;
  public:
  void clear_scanned_nu();
  private:
  bool _internal_scanned_nu(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_scanned_nu() const;
  void _internal_add_scanned_nu(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_scanned_nu();
  public:
  bool scanned_nu(int index) const;
  void set_scanned_nu(int index, bool value);
  void add_scanned_nu(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      scanned_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_scanned_nu();

  // repeated .pb.mf_hmih.poss_orientation.PossOrientation possOrientation_nu = 733;
  int possorientation_nu_size() const;
  private:
  int _internal_possorientation_nu_size() const;
  public:
  void clear_possorientation_nu();
  private:
  ::pb::mf_hmih::poss_orientation::PossOrientation _internal_possorientation_nu(int index) const;
  void _internal_add_possorientation_nu(::pb::mf_hmih::poss_orientation::PossOrientation value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_possorientation_nu();
  public:
  ::pb::mf_hmih::poss_orientation::PossOrientation possorientation_nu(int index) const;
  void set_possorientation_nu(int index, ::pb::mf_hmih::poss_orientation::PossOrientation value);
  void add_possorientation_nu(::pb::mf_hmih::poss_orientation::PossOrientation value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& possorientation_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_possorientation_nu();

  // repeated .pb.mf_hmih.selected_direction.SelectedDirection selectedDirection_nu = 970;
  int selecteddirection_nu_size() const;
  private:
  int _internal_selecteddirection_nu_size() const;
  public:
  void clear_selecteddirection_nu();
  private:
  ::pb::mf_hmih::selected_direction::SelectedDirection _internal_selecteddirection_nu(int index) const;
  void _internal_add_selecteddirection_nu(::pb::mf_hmih::selected_direction::SelectedDirection value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_selecteddirection_nu();
  public:
  ::pb::mf_hmih::selected_direction::SelectedDirection selecteddirection_nu(int index) const;
  void set_selecteddirection_nu(int index, ::pb::mf_hmih::selected_direction::SelectedDirection value);
  void add_selecteddirection_nu(::pb::mf_hmih::selected_direction::SelectedDirection value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& selecteddirection_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_selecteddirection_nu();

  // repeated bool free_nu = 1649;
  int free_nu_size() const;
  private:
  int _internal_free_nu_size() const;
  public:
  void clear_free_nu();
  private:
  bool _internal_free_nu(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_free_nu() const;
  void _internal_add_free_nu(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_free_nu();
  public:
  bool free_nu(int index) const;
  void set_free_nu(int index, bool value);
  void add_free_nu(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      free_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_free_nu();

  // repeated .pb.mf_hmih.possible_direction.PossibleDirection possDirection_nu = 2578;
  int possdirection_nu_size() const;
  private:
  int _internal_possdirection_nu_size() const;
  public:
  void clear_possdirection_nu();
  private:
  ::pb::mf_hmih::possible_direction::PossibleDirection _internal_possdirection_nu(int index) const;
  void _internal_add_possdirection_nu(::pb::mf_hmih::possible_direction::PossibleDirection value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_possdirection_nu();
  public:
  ::pb::mf_hmih::possible_direction::PossibleDirection possdirection_nu(int index) const;
  void set_possdirection_nu(int index, ::pb::mf_hmih::possible_direction::PossibleDirection value);
  void add_possdirection_nu(::pb::mf_hmih::possible_direction::PossibleDirection value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& possdirection_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_possdirection_nu();

  // repeated .pb.mf_hmih.selected_orientation.SelectedOrientation selectedOrientation_nu = 4007;
  int selectedorientation_nu_size() const;
  private:
  int _internal_selectedorientation_nu_size() const;
  public:
  void clear_selectedorientation_nu();
  private:
  ::pb::mf_hmih::selected_orientation::SelectedOrientation _internal_selectedorientation_nu(int index) const;
  void _internal_add_selectedorientation_nu(::pb::mf_hmih::selected_orientation::SelectedOrientation value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_selectedorientation_nu();
  public:
  ::pb::mf_hmih::selected_orientation::SelectedOrientation selectedorientation_nu(int index) const;
  void set_selectedorientation_nu(int index, ::pb::mf_hmih::selected_orientation::SelectedOrientation value);
  void add_selectedorientation_nu(::pb::mf_hmih::selected_orientation::SelectedOrientation value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& selectedorientation_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_selectedorientation_nu();

  // repeated bool selected_nu = 4072;
  int selected_nu_size() const;
  private:
  int _internal_selected_nu_size() const;
  public:
  void clear_selected_nu();
  private:
  bool _internal_selected_nu(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_selected_nu() const;
  void _internal_add_selected_nu(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_selected_nu();
  public:
  bool selected_nu(int index) const;
  void set_selected_nu(int index, bool value);
  void add_selected_nu(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      selected_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_selected_nu();

  // optional float memorizedPoseYaw_rad = 1904;
  bool has_memorizedposeyaw_rad() const;
  private:
  bool _internal_has_memorizedposeyaw_rad() const;
  public:
  void clear_memorizedposeyaw_rad();
  float memorizedposeyaw_rad() const;
  void set_memorizedposeyaw_rad(float value);
  private:
  float _internal_memorizedposeyaw_rad() const;
  void _internal_set_memorizedposeyaw_rad(float value);
  public:

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.parking_space.ParkingSpace)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > poseid_nu_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > scanned_nu_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> possorientation_nu_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> selecteddirection_nu_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > free_nu_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> possdirection_nu_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> selectedorientation_nu_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > selected_nu_;
  float memorizedposeyaw_rad_;
  friend struct ::TableStruct_mf_5fhmih_2fparking_5fspace_2eproto;
};
// -------------------------------------------------------------------

class ParkingSpace_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.parking_space.ParkingSpace_array_port) */ {
 public:
  ParkingSpace_array_port();
  virtual ~ParkingSpace_array_port();

  ParkingSpace_array_port(const ParkingSpace_array_port& from);
  ParkingSpace_array_port(ParkingSpace_array_port&& from) noexcept
    : ParkingSpace_array_port() {
    *this = ::std::move(from);
  }

  inline ParkingSpace_array_port& operator=(const ParkingSpace_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParkingSpace_array_port& operator=(ParkingSpace_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParkingSpace_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParkingSpace_array_port* internal_default_instance() {
    return reinterpret_cast<const ParkingSpace_array_port*>(
               &_ParkingSpace_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ParkingSpace_array_port& a, ParkingSpace_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(ParkingSpace_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParkingSpace_array_port* New() const final {
    return CreateMaybeMessage<ParkingSpace_array_port>(nullptr);
  }

  ParkingSpace_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParkingSpace_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParkingSpace_array_port& from);
  void MergeFrom(const ParkingSpace_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParkingSpace_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.parking_space.ParkingSpace_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto);
    return ::descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2672,
  };
  // repeated .pb.mf_hmih.parking_space.ParkingSpace data = 2672;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::mf_hmih::parking_space::ParkingSpace* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::parking_space::ParkingSpace >*
      mutable_data();
  private:
  const ::pb::mf_hmih::parking_space::ParkingSpace& _internal_data(int index) const;
  ::pb::mf_hmih::parking_space::ParkingSpace* _internal_add_data();
  public:
  const ::pb::mf_hmih::parking_space::ParkingSpace& data(int index) const;
  ::pb::mf_hmih::parking_space::ParkingSpace* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::parking_space::ParkingSpace >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.parking_space.ParkingSpace_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::parking_space::ParkingSpace > data_;
  friend struct ::TableStruct_mf_5fhmih_2fparking_5fspace_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParkingSpace

// repeated bool scanned_nu = 599;
inline int ParkingSpace::_internal_scanned_nu_size() const {
  return scanned_nu_.size();
}
inline int ParkingSpace::scanned_nu_size() const {
  return _internal_scanned_nu_size();
}
inline void ParkingSpace::clear_scanned_nu() {
  scanned_nu_.Clear();
}
inline bool ParkingSpace::_internal_scanned_nu(int index) const {
  return scanned_nu_.Get(index);
}
inline bool ParkingSpace::scanned_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_space.ParkingSpace.scanned_nu)
  return _internal_scanned_nu(index);
}
inline void ParkingSpace::set_scanned_nu(int index, bool value) {
  scanned_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.parking_space.ParkingSpace.scanned_nu)
}
inline void ParkingSpace::_internal_add_scanned_nu(bool value) {
  scanned_nu_.Add(value);
}
inline void ParkingSpace::add_scanned_nu(bool value) {
  _internal_add_scanned_nu(value);
  // @@protoc_insertion_point(field_add:pb.mf_hmih.parking_space.ParkingSpace.scanned_nu)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
ParkingSpace::_internal_scanned_nu() const {
  return scanned_nu_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
ParkingSpace::scanned_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.parking_space.ParkingSpace.scanned_nu)
  return _internal_scanned_nu();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
ParkingSpace::_internal_mutable_scanned_nu() {
  return &scanned_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
ParkingSpace::mutable_scanned_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.parking_space.ParkingSpace.scanned_nu)
  return _internal_mutable_scanned_nu();
}

// repeated bool free_nu = 1649;
inline int ParkingSpace::_internal_free_nu_size() const {
  return free_nu_.size();
}
inline int ParkingSpace::free_nu_size() const {
  return _internal_free_nu_size();
}
inline void ParkingSpace::clear_free_nu() {
  free_nu_.Clear();
}
inline bool ParkingSpace::_internal_free_nu(int index) const {
  return free_nu_.Get(index);
}
inline bool ParkingSpace::free_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_space.ParkingSpace.free_nu)
  return _internal_free_nu(index);
}
inline void ParkingSpace::set_free_nu(int index, bool value) {
  free_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.parking_space.ParkingSpace.free_nu)
}
inline void ParkingSpace::_internal_add_free_nu(bool value) {
  free_nu_.Add(value);
}
inline void ParkingSpace::add_free_nu(bool value) {
  _internal_add_free_nu(value);
  // @@protoc_insertion_point(field_add:pb.mf_hmih.parking_space.ParkingSpace.free_nu)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
ParkingSpace::_internal_free_nu() const {
  return free_nu_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
ParkingSpace::free_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.parking_space.ParkingSpace.free_nu)
  return _internal_free_nu();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
ParkingSpace::_internal_mutable_free_nu() {
  return &free_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
ParkingSpace::mutable_free_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.parking_space.ParkingSpace.free_nu)
  return _internal_mutable_free_nu();
}

// repeated bool selected_nu = 4072;
inline int ParkingSpace::_internal_selected_nu_size() const {
  return selected_nu_.size();
}
inline int ParkingSpace::selected_nu_size() const {
  return _internal_selected_nu_size();
}
inline void ParkingSpace::clear_selected_nu() {
  selected_nu_.Clear();
}
inline bool ParkingSpace::_internal_selected_nu(int index) const {
  return selected_nu_.Get(index);
}
inline bool ParkingSpace::selected_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_space.ParkingSpace.selected_nu)
  return _internal_selected_nu(index);
}
inline void ParkingSpace::set_selected_nu(int index, bool value) {
  selected_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.parking_space.ParkingSpace.selected_nu)
}
inline void ParkingSpace::_internal_add_selected_nu(bool value) {
  selected_nu_.Add(value);
}
inline void ParkingSpace::add_selected_nu(bool value) {
  _internal_add_selected_nu(value);
  // @@protoc_insertion_point(field_add:pb.mf_hmih.parking_space.ParkingSpace.selected_nu)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
ParkingSpace::_internal_selected_nu() const {
  return selected_nu_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
ParkingSpace::selected_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.parking_space.ParkingSpace.selected_nu)
  return _internal_selected_nu();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
ParkingSpace::_internal_mutable_selected_nu() {
  return &selected_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
ParkingSpace::mutable_selected_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.parking_space.ParkingSpace.selected_nu)
  return _internal_mutable_selected_nu();
}

// repeated .pb.mf_hmih.poss_orientation.PossOrientation possOrientation_nu = 733;
inline int ParkingSpace::_internal_possorientation_nu_size() const {
  return possorientation_nu_.size();
}
inline int ParkingSpace::possorientation_nu_size() const {
  return _internal_possorientation_nu_size();
}
inline void ParkingSpace::clear_possorientation_nu() {
  possorientation_nu_.Clear();
}
inline ::pb::mf_hmih::poss_orientation::PossOrientation ParkingSpace::_internal_possorientation_nu(int index) const {
  return static_cast< ::pb::mf_hmih::poss_orientation::PossOrientation >(possorientation_nu_.Get(index));
}
inline ::pb::mf_hmih::poss_orientation::PossOrientation ParkingSpace::possorientation_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_space.ParkingSpace.possOrientation_nu)
  return _internal_possorientation_nu(index);
}
inline void ParkingSpace::set_possorientation_nu(int index, ::pb::mf_hmih::poss_orientation::PossOrientation value) {
  assert(::pb::mf_hmih::poss_orientation::PossOrientation_IsValid(value));
  possorientation_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.parking_space.ParkingSpace.possOrientation_nu)
}
inline void ParkingSpace::_internal_add_possorientation_nu(::pb::mf_hmih::poss_orientation::PossOrientation value) {
  assert(::pb::mf_hmih::poss_orientation::PossOrientation_IsValid(value));
  possorientation_nu_.Add(value);
}
inline void ParkingSpace::add_possorientation_nu(::pb::mf_hmih::poss_orientation::PossOrientation value) {
  // @@protoc_insertion_point(field_add:pb.mf_hmih.parking_space.ParkingSpace.possOrientation_nu)
  _internal_add_possorientation_nu(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
ParkingSpace::possorientation_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.parking_space.ParkingSpace.possOrientation_nu)
  return possorientation_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ParkingSpace::_internal_mutable_possorientation_nu() {
  return &possorientation_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ParkingSpace::mutable_possorientation_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.parking_space.ParkingSpace.possOrientation_nu)
  return _internal_mutable_possorientation_nu();
}

// repeated .pb.mf_hmih.selected_orientation.SelectedOrientation selectedOrientation_nu = 4007;
inline int ParkingSpace::_internal_selectedorientation_nu_size() const {
  return selectedorientation_nu_.size();
}
inline int ParkingSpace::selectedorientation_nu_size() const {
  return _internal_selectedorientation_nu_size();
}
inline void ParkingSpace::clear_selectedorientation_nu() {
  selectedorientation_nu_.Clear();
}
inline ::pb::mf_hmih::selected_orientation::SelectedOrientation ParkingSpace::_internal_selectedorientation_nu(int index) const {
  return static_cast< ::pb::mf_hmih::selected_orientation::SelectedOrientation >(selectedorientation_nu_.Get(index));
}
inline ::pb::mf_hmih::selected_orientation::SelectedOrientation ParkingSpace::selectedorientation_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_space.ParkingSpace.selectedOrientation_nu)
  return _internal_selectedorientation_nu(index);
}
inline void ParkingSpace::set_selectedorientation_nu(int index, ::pb::mf_hmih::selected_orientation::SelectedOrientation value) {
  assert(::pb::mf_hmih::selected_orientation::SelectedOrientation_IsValid(value));
  selectedorientation_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.parking_space.ParkingSpace.selectedOrientation_nu)
}
inline void ParkingSpace::_internal_add_selectedorientation_nu(::pb::mf_hmih::selected_orientation::SelectedOrientation value) {
  assert(::pb::mf_hmih::selected_orientation::SelectedOrientation_IsValid(value));
  selectedorientation_nu_.Add(value);
}
inline void ParkingSpace::add_selectedorientation_nu(::pb::mf_hmih::selected_orientation::SelectedOrientation value) {
  // @@protoc_insertion_point(field_add:pb.mf_hmih.parking_space.ParkingSpace.selectedOrientation_nu)
  _internal_add_selectedorientation_nu(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
ParkingSpace::selectedorientation_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.parking_space.ParkingSpace.selectedOrientation_nu)
  return selectedorientation_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ParkingSpace::_internal_mutable_selectedorientation_nu() {
  return &selectedorientation_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ParkingSpace::mutable_selectedorientation_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.parking_space.ParkingSpace.selectedOrientation_nu)
  return _internal_mutable_selectedorientation_nu();
}

// repeated .pb.mf_hmih.possible_direction.PossibleDirection possDirection_nu = 2578;
inline int ParkingSpace::_internal_possdirection_nu_size() const {
  return possdirection_nu_.size();
}
inline int ParkingSpace::possdirection_nu_size() const {
  return _internal_possdirection_nu_size();
}
inline void ParkingSpace::clear_possdirection_nu() {
  possdirection_nu_.Clear();
}
inline ::pb::mf_hmih::possible_direction::PossibleDirection ParkingSpace::_internal_possdirection_nu(int index) const {
  return static_cast< ::pb::mf_hmih::possible_direction::PossibleDirection >(possdirection_nu_.Get(index));
}
inline ::pb::mf_hmih::possible_direction::PossibleDirection ParkingSpace::possdirection_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_space.ParkingSpace.possDirection_nu)
  return _internal_possdirection_nu(index);
}
inline void ParkingSpace::set_possdirection_nu(int index, ::pb::mf_hmih::possible_direction::PossibleDirection value) {
  assert(::pb::mf_hmih::possible_direction::PossibleDirection_IsValid(value));
  possdirection_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.parking_space.ParkingSpace.possDirection_nu)
}
inline void ParkingSpace::_internal_add_possdirection_nu(::pb::mf_hmih::possible_direction::PossibleDirection value) {
  assert(::pb::mf_hmih::possible_direction::PossibleDirection_IsValid(value));
  possdirection_nu_.Add(value);
}
inline void ParkingSpace::add_possdirection_nu(::pb::mf_hmih::possible_direction::PossibleDirection value) {
  // @@protoc_insertion_point(field_add:pb.mf_hmih.parking_space.ParkingSpace.possDirection_nu)
  _internal_add_possdirection_nu(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
ParkingSpace::possdirection_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.parking_space.ParkingSpace.possDirection_nu)
  return possdirection_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ParkingSpace::_internal_mutable_possdirection_nu() {
  return &possdirection_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ParkingSpace::mutable_possdirection_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.parking_space.ParkingSpace.possDirection_nu)
  return _internal_mutable_possdirection_nu();
}

// repeated .pb.mf_hmih.selected_direction.SelectedDirection selectedDirection_nu = 970;
inline int ParkingSpace::_internal_selecteddirection_nu_size() const {
  return selecteddirection_nu_.size();
}
inline int ParkingSpace::selecteddirection_nu_size() const {
  return _internal_selecteddirection_nu_size();
}
inline void ParkingSpace::clear_selecteddirection_nu() {
  selecteddirection_nu_.Clear();
}
inline ::pb::mf_hmih::selected_direction::SelectedDirection ParkingSpace::_internal_selecteddirection_nu(int index) const {
  return static_cast< ::pb::mf_hmih::selected_direction::SelectedDirection >(selecteddirection_nu_.Get(index));
}
inline ::pb::mf_hmih::selected_direction::SelectedDirection ParkingSpace::selecteddirection_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_space.ParkingSpace.selectedDirection_nu)
  return _internal_selecteddirection_nu(index);
}
inline void ParkingSpace::set_selecteddirection_nu(int index, ::pb::mf_hmih::selected_direction::SelectedDirection value) {
  assert(::pb::mf_hmih::selected_direction::SelectedDirection_IsValid(value));
  selecteddirection_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.parking_space.ParkingSpace.selectedDirection_nu)
}
inline void ParkingSpace::_internal_add_selecteddirection_nu(::pb::mf_hmih::selected_direction::SelectedDirection value) {
  assert(::pb::mf_hmih::selected_direction::SelectedDirection_IsValid(value));
  selecteddirection_nu_.Add(value);
}
inline void ParkingSpace::add_selecteddirection_nu(::pb::mf_hmih::selected_direction::SelectedDirection value) {
  // @@protoc_insertion_point(field_add:pb.mf_hmih.parking_space.ParkingSpace.selectedDirection_nu)
  _internal_add_selecteddirection_nu(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
ParkingSpace::selecteddirection_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.parking_space.ParkingSpace.selectedDirection_nu)
  return selecteddirection_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ParkingSpace::_internal_mutable_selecteddirection_nu() {
  return &selecteddirection_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ParkingSpace::mutable_selecteddirection_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.parking_space.ParkingSpace.selectedDirection_nu)
  return _internal_mutable_selecteddirection_nu();
}

// repeated uint32 poseID_nu = 444;
inline int ParkingSpace::_internal_poseid_nu_size() const {
  return poseid_nu_.size();
}
inline int ParkingSpace::poseid_nu_size() const {
  return _internal_poseid_nu_size();
}
inline void ParkingSpace::clear_poseid_nu() {
  poseid_nu_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParkingSpace::_internal_poseid_nu(int index) const {
  return poseid_nu_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParkingSpace::poseid_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_space.ParkingSpace.poseID_nu)
  return _internal_poseid_nu(index);
}
inline void ParkingSpace::set_poseid_nu(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  poseid_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.parking_space.ParkingSpace.poseID_nu)
}
inline void ParkingSpace::_internal_add_poseid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  poseid_nu_.Add(value);
}
inline void ParkingSpace::add_poseid_nu(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_poseid_nu(value);
  // @@protoc_insertion_point(field_add:pb.mf_hmih.parking_space.ParkingSpace.poseID_nu)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ParkingSpace::_internal_poseid_nu() const {
  return poseid_nu_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ParkingSpace::poseid_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.parking_space.ParkingSpace.poseID_nu)
  return _internal_poseid_nu();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ParkingSpace::_internal_mutable_poseid_nu() {
  return &poseid_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ParkingSpace::mutable_poseid_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.parking_space.ParkingSpace.poseID_nu)
  return _internal_mutable_poseid_nu();
}

// optional float memorizedPoseYaw_rad = 1904;
inline bool ParkingSpace::_internal_has_memorizedposeyaw_rad() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParkingSpace::has_memorizedposeyaw_rad() const {
  return _internal_has_memorizedposeyaw_rad();
}
inline void ParkingSpace::clear_memorizedposeyaw_rad() {
  memorizedposeyaw_rad_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float ParkingSpace::_internal_memorizedposeyaw_rad() const {
  return memorizedposeyaw_rad_;
}
inline float ParkingSpace::memorizedposeyaw_rad() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_space.ParkingSpace.memorizedPoseYaw_rad)
  return _internal_memorizedposeyaw_rad();
}
inline void ParkingSpace::_internal_set_memorizedposeyaw_rad(float value) {
  _has_bits_[0] |= 0x00000001u;
  memorizedposeyaw_rad_ = value;
}
inline void ParkingSpace::set_memorizedposeyaw_rad(float value) {
  _internal_set_memorizedposeyaw_rad(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.parking_space.ParkingSpace.memorizedPoseYaw_rad)
}

// -------------------------------------------------------------------

// ParkingSpace_array_port

// repeated .pb.mf_hmih.parking_space.ParkingSpace data = 2672;
inline int ParkingSpace_array_port::_internal_data_size() const {
  return data_.size();
}
inline int ParkingSpace_array_port::data_size() const {
  return _internal_data_size();
}
inline void ParkingSpace_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::mf_hmih::parking_space::ParkingSpace* ParkingSpace_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.parking_space.ParkingSpace_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::parking_space::ParkingSpace >*
ParkingSpace_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.parking_space.ParkingSpace_array_port.data)
  return &data_;
}
inline const ::pb::mf_hmih::parking_space::ParkingSpace& ParkingSpace_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::mf_hmih::parking_space::ParkingSpace& ParkingSpace_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.parking_space.ParkingSpace_array_port.data)
  return _internal_data(index);
}
inline ::pb::mf_hmih::parking_space::ParkingSpace* ParkingSpace_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::mf_hmih::parking_space::ParkingSpace* ParkingSpace_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.mf_hmih.parking_space.ParkingSpace_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::parking_space::ParkingSpace >&
ParkingSpace_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.parking_space.ParkingSpace_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace parking_space
}  // namespace mf_hmih
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fparking_5fspace_2eproto
