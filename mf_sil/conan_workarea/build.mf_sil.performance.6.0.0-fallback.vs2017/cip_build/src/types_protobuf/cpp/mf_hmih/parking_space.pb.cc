// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/parking_space.proto

#include "mf_hmih/parking_space.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fparking_5fspace_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParkingSpace_mf_5fhmih_2fparking_5fspace_2eproto;
namespace pb {
namespace mf_hmih {
namespace parking_space {
class ParkingSpaceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParkingSpace> _instance;
} _ParkingSpace_default_instance_;
class ParkingSpace_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParkingSpace_array_port> _instance;
} _ParkingSpace_array_port_default_instance_;
}  // namespace parking_space
}  // namespace mf_hmih
}  // namespace pb
static void InitDefaultsscc_info_ParkingSpace_mf_5fhmih_2fparking_5fspace_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::parking_space::_ParkingSpace_default_instance_;
    new (ptr) ::pb::mf_hmih::parking_space::ParkingSpace();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::parking_space::ParkingSpace::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParkingSpace_mf_5fhmih_2fparking_5fspace_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParkingSpace_mf_5fhmih_2fparking_5fspace_2eproto}, {}};

static void InitDefaultsscc_info_ParkingSpace_array_port_mf_5fhmih_2fparking_5fspace_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::parking_space::_ParkingSpace_array_port_default_instance_;
    new (ptr) ::pb::mf_hmih::parking_space::ParkingSpace_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::parking_space::ParkingSpace_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ParkingSpace_array_port_mf_5fhmih_2fparking_5fspace_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ParkingSpace_array_port_mf_5fhmih_2fparking_5fspace_2eproto}, {
      &scc_info_ParkingSpace_mf_5fhmih_2fparking_5fspace_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mf_5fhmih_2fparking_5fspace_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mf_5fhmih_2fparking_5fspace_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mf_5fhmih_2fparking_5fspace_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mf_5fhmih_2fparking_5fspace_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, scanned_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, free_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, selected_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, possorientation_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, selectedorientation_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, possdirection_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, selecteddirection_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, poseid_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace, memorizedposeyaw_rad_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_space::ParkingSpace_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::pb::mf_hmih::parking_space::ParkingSpace)},
  { 23, 29, sizeof(::pb::mf_hmih::parking_space::ParkingSpace_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::parking_space::_ParkingSpace_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::parking_space::_ParkingSpace_array_port_default_instance_),
};

const char descriptor_table_protodef_mf_5fhmih_2fparking_5fspace_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033mf_hmih/parking_space.proto\022\030pb.mf_hmi"
  "h.parking_space\032\036mf_hmih/poss_orientatio"
  "n.proto\032\"mf_hmih/selected_orientation.pr"
  "oto\032 mf_hmih/possible_direction.proto\032 m"
  "f_hmih/selected_direction.proto\"\276\003\n\014Park"
  "ingSpace\022\023\n\nscanned_nu\030\327\004 \003(\010\022\020\n\007free_nu"
  "\030\361\014 \003(\010\022\024\n\013selected_nu\030\350\037 \003(\010\022I\n\022possOri"
  "entation_nu\030\335\005 \003(\0162,.pb.mf_hmih.poss_ori"
  "entation.PossOrientation\022U\n\026selectedOrie"
  "ntation_nu\030\247\037 \003(\01624.pb.mf_hmih.selected_"
  "orientation.SelectedOrientation\022K\n\020possD"
  "irection_nu\030\222\024 \003(\01620.pb.mf_hmih.possible"
  "_direction.PossibleDirection\022O\n\024selected"
  "Direction_nu\030\312\007 \003(\01620.pb.mf_hmih.selecte"
  "d_direction.SelectedDirection\022\022\n\tposeID_"
  "nu\030\274\003 \003(\r\022\035\n\024memorizedPoseYaw_rad\030\360\016 \001(\002"
  "\"P\n\027ParkingSpace_array_port\0225\n\004data\030\360\024 \003"
  "(\0132&.pb.mf_hmih.parking_space.ParkingSpa"
  "ce"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto_deps[4] = {
  &::descriptor_table_mf_5fhmih_2fposs_5forientation_2eproto,
  &::descriptor_table_mf_5fhmih_2fpossible_5fdirection_2eproto,
  &::descriptor_table_mf_5fhmih_2fselected_5fdirection_2eproto,
  &::descriptor_table_mf_5fhmih_2fselected_5forientation_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto_sccs[2] = {
  &scc_info_ParkingSpace_mf_5fhmih_2fparking_5fspace_2eproto.base,
  &scc_info_ParkingSpace_array_port_mf_5fhmih_2fparking_5fspace_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto_once;
static bool descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto = {
  &descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto_initialized, descriptor_table_protodef_mf_5fhmih_2fparking_5fspace_2eproto, "mf_hmih/parking_space.proto", 722,
  &descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto_once, descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto_sccs, descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto_deps, 2, 4,
  schemas, file_default_instances, TableStruct_mf_5fhmih_2fparking_5fspace_2eproto::offsets,
  file_level_metadata_mf_5fhmih_2fparking_5fspace_2eproto, 2, file_level_enum_descriptors_mf_5fhmih_2fparking_5fspace_2eproto, file_level_service_descriptors_mf_5fhmih_2fparking_5fspace_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mf_5fhmih_2fparking_5fspace_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mf_5fhmih_2fparking_5fspace_2eproto), true);
namespace pb {
namespace mf_hmih {
namespace parking_space {

// ===================================================================

void ParkingSpace::InitAsDefaultInstance() {
}
class ParkingSpace::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingSpace>()._has_bits_);
  static void set_has_memorizedposeyaw_rad(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ParkingSpace::ParkingSpace()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.parking_space.ParkingSpace)
}
ParkingSpace::ParkingSpace(const ParkingSpace& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      poseid_nu_(from.poseid_nu_),
      scanned_nu_(from.scanned_nu_),
      possorientation_nu_(from.possorientation_nu_),
      selecteddirection_nu_(from.selecteddirection_nu_),
      free_nu_(from.free_nu_),
      possdirection_nu_(from.possdirection_nu_),
      selectedorientation_nu_(from.selectedorientation_nu_),
      selected_nu_(from.selected_nu_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  memorizedposeyaw_rad_ = from.memorizedposeyaw_rad_;
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.parking_space.ParkingSpace)
}

void ParkingSpace::SharedCtor() {
  memorizedposeyaw_rad_ = 0;
}

ParkingSpace::~ParkingSpace() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.parking_space.ParkingSpace)
  SharedDtor();
}

void ParkingSpace::SharedDtor() {
}

void ParkingSpace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParkingSpace& ParkingSpace::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParkingSpace_mf_5fhmih_2fparking_5fspace_2eproto.base);
  return *internal_default_instance();
}


void ParkingSpace::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.parking_space.ParkingSpace)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  poseid_nu_.Clear();
  scanned_nu_.Clear();
  possorientation_nu_.Clear();
  selecteddirection_nu_.Clear();
  free_nu_.Clear();
  possdirection_nu_.Clear();
  selectedorientation_nu_.Clear();
  selected_nu_.Clear();
  memorizedposeyaw_rad_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ParkingSpace::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 poseID_nu = 444;
      case 444:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_poseid_nu(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<3552>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_poseid_nu(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bool scanned_nu = 599;
      case 599:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_scanned_nu(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<4792>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_scanned_nu(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.mf_hmih.poss_orientation.PossOrientation possOrientation_nu = 733;
      case 733:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          ptr -= 2;
          do {
            ptr += 2;
            ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::poss_orientation::PossOrientation_IsValid(val))) {
              _internal_add_possorientation_nu(static_cast<::pb::mf_hmih::poss_orientation::PossOrientation>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(733, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<5864>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_possorientation_nu(), ptr, ctx, ::pb::mf_hmih::poss_orientation::PossOrientation_IsValid, &_internal_metadata_, 733);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.mf_hmih.selected_direction.SelectedDirection selectedDirection_nu = 970;
      case 970:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ptr -= 2;
          do {
            ptr += 2;
            ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::selected_direction::SelectedDirection_IsValid(val))) {
              _internal_add_selecteddirection_nu(static_cast<::pb::mf_hmih::selected_direction::SelectedDirection>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(970, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<7760>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_selecteddirection_nu(), ptr, ctx, ::pb::mf_hmih::selected_direction::SelectedDirection_IsValid, &_internal_metadata_, 970);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bool free_nu = 1649;
      case 1649:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_free_nu(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<13192>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_free_nu(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float memorizedPoseYaw_rad = 1904;
      case 1904:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 133)) {
          _Internal::set_has_memorizedposeyaw_rad(&has_bits);
          memorizedposeyaw_rad_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated .pb.mf_hmih.possible_direction.PossibleDirection possDirection_nu = 2578;
      case 2578:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::possible_direction::PossibleDirection_IsValid(val))) {
            _internal_add_possdirection_nu(static_cast<::pb::mf_hmih::possible_direction::PossibleDirection>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2578, val, mutable_unknown_fields());
          }
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_possdirection_nu(), ptr, ctx, ::pb::mf_hmih::possible_direction::PossibleDirection_IsValid, &_internal_metadata_, 2578);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.mf_hmih.selected_orientation.SelectedOrientation selectedOrientation_nu = 4007;
      case 4007:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::mf_hmih::selected_orientation::SelectedOrientation_IsValid(val))) {
            _internal_add_selectedorientation_nu(static_cast<::pb::mf_hmih::selected_orientation::SelectedOrientation>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4007, val, mutable_unknown_fields());
          }
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_selectedorientation_nu(), ptr, ctx, ::pb::mf_hmih::selected_orientation::SelectedOrientation_IsValid, &_internal_metadata_, 4007);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bool selected_nu = 4072;
      case 4072:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _internal_add_selected_nu(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_selected_nu(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParkingSpace::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.parking_space.ParkingSpace)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 poseID_nu = 444;
  for (int i = 0, n = this->_internal_poseid_nu_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(444, this->_internal_poseid_nu(i), target);
  }

  // repeated bool scanned_nu = 599;
  for (int i = 0, n = this->_internal_scanned_nu_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(599, this->_internal_scanned_nu(i), target);
  }

  // repeated .pb.mf_hmih.poss_orientation.PossOrientation possOrientation_nu = 733;
  for (int i = 0, n = this->_internal_possorientation_nu_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
        733, this->_internal_possorientation_nu(i), target);
  }

  // repeated .pb.mf_hmih.selected_direction.SelectedDirection selectedDirection_nu = 970;
  for (int i = 0, n = this->_internal_selecteddirection_nu_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
        970, this->_internal_selecteddirection_nu(i), target);
  }

  // repeated bool free_nu = 1649;
  for (int i = 0, n = this->_internal_free_nu_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1649, this->_internal_free_nu(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional float memorizedPoseYaw_rad = 1904;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1904, this->_internal_memorizedposeyaw_rad(), target);
  }

  // repeated .pb.mf_hmih.possible_direction.PossibleDirection possDirection_nu = 2578;
  for (int i = 0, n = this->_internal_possdirection_nu_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
        2578, this->_internal_possdirection_nu(i), target);
  }

  // repeated .pb.mf_hmih.selected_orientation.SelectedOrientation selectedOrientation_nu = 4007;
  for (int i = 0, n = this->_internal_selectedorientation_nu_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
        4007, this->_internal_selectedorientation_nu(i), target);
  }

  // repeated bool selected_nu = 4072;
  for (int i = 0, n = this->_internal_selected_nu_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4072, this->_internal_selected_nu(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.parking_space.ParkingSpace)
  return target;
}

size_t ParkingSpace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.parking_space.ParkingSpace)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 poseID_nu = 444;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->poseid_nu_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_poseid_nu_size());
    total_size += data_size;
  }

  // repeated bool scanned_nu = 599;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_scanned_nu_size());
    size_t data_size = 1UL * count;
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_scanned_nu_size());
    total_size += data_size;
  }

  // repeated .pb.mf_hmih.poss_orientation.PossOrientation possOrientation_nu = 733;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_possorientation_nu_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_possorientation_nu(static_cast<int>(i)));
    }
    total_size += (2UL * count) + data_size;
  }

  // repeated .pb.mf_hmih.selected_direction.SelectedDirection selectedDirection_nu = 970;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_selecteddirection_nu_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_selecteddirection_nu(static_cast<int>(i)));
    }
    total_size += (2UL * count) + data_size;
  }

  // repeated bool free_nu = 1649;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_free_nu_size());
    size_t data_size = 1UL * count;
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_free_nu_size());
    total_size += data_size;
  }

  // repeated .pb.mf_hmih.possible_direction.PossibleDirection possDirection_nu = 2578;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_possdirection_nu_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_possdirection_nu(static_cast<int>(i)));
    }
    total_size += (3UL * count) + data_size;
  }

  // repeated .pb.mf_hmih.selected_orientation.SelectedOrientation selectedOrientation_nu = 4007;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_selectedorientation_nu_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_selectedorientation_nu(static_cast<int>(i)));
    }
    total_size += (3UL * count) + data_size;
  }

  // repeated bool selected_nu = 4072;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_selected_nu_size());
    size_t data_size = 1UL * count;
    total_size += 3 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_selected_nu_size());
    total_size += data_size;
  }

  // optional float memorizedPoseYaw_rad = 1904;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParkingSpace::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.parking_space.ParkingSpace)
  GOOGLE_DCHECK_NE(&from, this);
  const ParkingSpace* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParkingSpace>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.parking_space.ParkingSpace)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.parking_space.ParkingSpace)
    MergeFrom(*source);
  }
}

void ParkingSpace::MergeFrom(const ParkingSpace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.parking_space.ParkingSpace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  poseid_nu_.MergeFrom(from.poseid_nu_);
  scanned_nu_.MergeFrom(from.scanned_nu_);
  possorientation_nu_.MergeFrom(from.possorientation_nu_);
  selecteddirection_nu_.MergeFrom(from.selecteddirection_nu_);
  free_nu_.MergeFrom(from.free_nu_);
  possdirection_nu_.MergeFrom(from.possdirection_nu_);
  selectedorientation_nu_.MergeFrom(from.selectedorientation_nu_);
  selected_nu_.MergeFrom(from.selected_nu_);
  if (from._internal_has_memorizedposeyaw_rad()) {
    _internal_set_memorizedposeyaw_rad(from._internal_memorizedposeyaw_rad());
  }
}

void ParkingSpace::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.parking_space.ParkingSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParkingSpace::CopyFrom(const ParkingSpace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.parking_space.ParkingSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParkingSpace::IsInitialized() const {
  return true;
}

void ParkingSpace::InternalSwap(ParkingSpace* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  poseid_nu_.InternalSwap(&other->poseid_nu_);
  scanned_nu_.InternalSwap(&other->scanned_nu_);
  possorientation_nu_.InternalSwap(&other->possorientation_nu_);
  selecteddirection_nu_.InternalSwap(&other->selecteddirection_nu_);
  free_nu_.InternalSwap(&other->free_nu_);
  possdirection_nu_.InternalSwap(&other->possdirection_nu_);
  selectedorientation_nu_.InternalSwap(&other->selectedorientation_nu_);
  selected_nu_.InternalSwap(&other->selected_nu_);
  swap(memorizedposeyaw_rad_, other->memorizedposeyaw_rad_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParkingSpace::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParkingSpace_array_port::InitAsDefaultInstance() {
}
class ParkingSpace_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingSpace_array_port>()._has_bits_);
};

ParkingSpace_array_port::ParkingSpace_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.parking_space.ParkingSpace_array_port)
}
ParkingSpace_array_port::ParkingSpace_array_port(const ParkingSpace_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.parking_space.ParkingSpace_array_port)
}

void ParkingSpace_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParkingSpace_array_port_mf_5fhmih_2fparking_5fspace_2eproto.base);
}

ParkingSpace_array_port::~ParkingSpace_array_port() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.parking_space.ParkingSpace_array_port)
  SharedDtor();
}

void ParkingSpace_array_port::SharedDtor() {
}

void ParkingSpace_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParkingSpace_array_port& ParkingSpace_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParkingSpace_array_port_mf_5fhmih_2fparking_5fspace_2eproto.base);
  return *internal_default_instance();
}


void ParkingSpace_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.parking_space.ParkingSpace_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ParkingSpace_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.mf_hmih.parking_space.ParkingSpace data = 2672;
      case 2672:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParkingSpace_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.parking_space.ParkingSpace_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.parking_space.ParkingSpace data = 2672;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2672, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.parking_space.ParkingSpace_array_port)
  return target;
}

size_t ParkingSpace_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.parking_space.ParkingSpace_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.parking_space.ParkingSpace data = 2672;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParkingSpace_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.parking_space.ParkingSpace_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const ParkingSpace_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParkingSpace_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.parking_space.ParkingSpace_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.parking_space.ParkingSpace_array_port)
    MergeFrom(*source);
  }
}

void ParkingSpace_array_port::MergeFrom(const ParkingSpace_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.parking_space.ParkingSpace_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void ParkingSpace_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.parking_space.ParkingSpace_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParkingSpace_array_port::CopyFrom(const ParkingSpace_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.parking_space.ParkingSpace_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParkingSpace_array_port::IsInitialized() const {
  return true;
}

void ParkingSpace_array_port::InternalSwap(ParkingSpace_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParkingSpace_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace parking_space
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::parking_space::ParkingSpace* Arena::CreateMaybeMessage< ::pb::mf_hmih::parking_space::ParkingSpace >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::parking_space::ParkingSpace >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::parking_space::ParkingSpace_array_port* Arena::CreateMaybeMessage< ::pb::mf_hmih::parking_space::ParkingSpace_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::parking_space::ParkingSpace_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
