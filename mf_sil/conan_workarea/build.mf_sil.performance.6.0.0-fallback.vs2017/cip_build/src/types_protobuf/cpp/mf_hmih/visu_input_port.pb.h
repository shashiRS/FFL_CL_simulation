// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/visu_input_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fvisu_5finput_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fvisu_5finput_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "mf_hmih/visu_hmidata.pb.h"
#include "ap_hmitoap/screen_types.pb.h"
#include "ap_tp/traj_plan_visu_port.pb.h"
#include "mf_hmih/parking_target_poses.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fvisu_5finput_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mf_5fhmih_2fvisu_5finput_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto;
namespace pb {
namespace mf_hmih {
namespace visu_input_port {
class VisuInputPort;
class VisuInputPortDefaultTypeInternal;
extern VisuInputPortDefaultTypeInternal _VisuInputPort_default_instance_;
class VisuInputPort_array_port;
class VisuInputPort_array_portDefaultTypeInternal;
extern VisuInputPort_array_portDefaultTypeInternal _VisuInputPort_array_port_default_instance_;
}  // namespace visu_input_port
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::mf_hmih::visu_input_port::VisuInputPort* Arena::CreateMaybeMessage<::pb::mf_hmih::visu_input_port::VisuInputPort>(Arena*);
template<> ::pb::mf_hmih::visu_input_port::VisuInputPort_array_port* Arena::CreateMaybeMessage<::pb::mf_hmih::visu_input_port::VisuInputPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace mf_hmih {
namespace visu_input_port {

// ===================================================================

class VisuInputPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.visu_input_port.VisuInputPort) */ {
 public:
  VisuInputPort();
  virtual ~VisuInputPort();

  VisuInputPort(const VisuInputPort& from);
  VisuInputPort(VisuInputPort&& from) noexcept
    : VisuInputPort() {
    *this = ::std::move(from);
  }

  inline VisuInputPort& operator=(const VisuInputPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline VisuInputPort& operator=(VisuInputPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VisuInputPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VisuInputPort* internal_default_instance() {
    return reinterpret_cast<const VisuInputPort*>(
               &_VisuInputPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VisuInputPort& a, VisuInputPort& b) {
    a.Swap(&b);
  }
  inline void Swap(VisuInputPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VisuInputPort* New() const final {
    return CreateMaybeMessage<VisuInputPort>(nullptr);
  }

  VisuInputPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VisuInputPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VisuInputPort& from);
  void MergeFrom(const VisuInputPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VisuInputPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.visu_input_port.VisuInputPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto);
    return ::descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrajPlanVisuPortNuFieldNumber = 189,
    kSSigHeaderFieldNumber = 1033,
    kVisuHMIDataFieldNumber = 1305,
    kParkingPosesVisuFieldNumber = 2704,
    kHmiOutUserActScreenReqU8FieldNumber = 626,
    kDriverSelectionNuFieldNumber = 1140,
    kUiVersionNumberFieldNumber = 2124,
    kDistanceToStopReqMFieldNumber = 3322,
  };
  // optional .pb.ap_tp.traj_plan_visu_port.TrajPlanVisuPort trajPlanVisuPort_nu = 189;
  bool has_trajplanvisuport_nu() const;
  private:
  bool _internal_has_trajplanvisuport_nu() const;
  public:
  void clear_trajplanvisuport_nu();
  const ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort& trajplanvisuport_nu() const;
  ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* release_trajplanvisuport_nu();
  ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* mutable_trajplanvisuport_nu();
  void set_allocated_trajplanvisuport_nu(::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* trajplanvisuport_nu);
  private:
  const ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort& _internal_trajplanvisuport_nu() const;
  ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* _internal_mutable_trajplanvisuport_nu();
  public:

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional .pb.mf_hmih.visu_hmidata.VisuHMIData visuHMIData = 1305;
  bool has_visuhmidata() const;
  private:
  bool _internal_has_visuhmidata() const;
  public:
  void clear_visuhmidata();
  const ::pb::mf_hmih::visu_hmidata::VisuHMIData& visuhmidata() const;
  ::pb::mf_hmih::visu_hmidata::VisuHMIData* release_visuhmidata();
  ::pb::mf_hmih::visu_hmidata::VisuHMIData* mutable_visuhmidata();
  void set_allocated_visuhmidata(::pb::mf_hmih::visu_hmidata::VisuHMIData* visuhmidata);
  private:
  const ::pb::mf_hmih::visu_hmidata::VisuHMIData& _internal_visuhmidata() const;
  ::pb::mf_hmih::visu_hmidata::VisuHMIData* _internal_mutable_visuhmidata();
  public:

  // optional .pb.mf_hmih.parking_target_poses.ParkingTargetPoses parkingPosesVisu = 2704;
  bool has_parkingposesvisu() const;
  private:
  bool _internal_has_parkingposesvisu() const;
  public:
  void clear_parkingposesvisu();
  const ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses& parkingposesvisu() const;
  ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* release_parkingposesvisu();
  ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* mutable_parkingposesvisu();
  void set_allocated_parkingposesvisu(::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* parkingposesvisu);
  private:
  const ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses& _internal_parkingposesvisu() const;
  ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* _internal_mutable_parkingposesvisu();
  public:

  // optional .pb.ap_hmitoap.screen_types.ScreenTypes HmiOutUserActScreenReq_u8 = 626;
  bool has_hmioutuseractscreenreq_u8() const;
  private:
  bool _internal_has_hmioutuseractscreenreq_u8() const;
  public:
  void clear_hmioutuseractscreenreq_u8();
  ::pb::ap_hmitoap::screen_types::ScreenTypes hmioutuseractscreenreq_u8() const;
  void set_hmioutuseractscreenreq_u8(::pb::ap_hmitoap::screen_types::ScreenTypes value);
  private:
  ::pb::ap_hmitoap::screen_types::ScreenTypes _internal_hmioutuseractscreenreq_u8() const;
  void _internal_set_hmioutuseractscreenreq_u8(::pb::ap_hmitoap::screen_types::ScreenTypes value);
  public:

  // optional bool driverSelection_nu = 1140;
  bool has_driverselection_nu() const;
  private:
  bool _internal_has_driverselection_nu() const;
  public:
  void clear_driverselection_nu();
  bool driverselection_nu() const;
  void set_driverselection_nu(bool value);
  private:
  bool _internal_driverselection_nu() const;
  void _internal_set_driverselection_nu(bool value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float distanceToStopReq_m = 3322;
  bool has_distancetostopreq_m() const;
  private:
  bool _internal_has_distancetostopreq_m() const;
  public:
  void clear_distancetostopreq_m();
  float distancetostopreq_m() const;
  void set_distancetostopreq_m(float value);
  private:
  float _internal_distancetostopreq_m() const;
  void _internal_set_distancetostopreq_m(float value);
  public:

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.visu_input_port.VisuInputPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* trajplanvisuport_nu_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  ::pb::mf_hmih::visu_hmidata::VisuHMIData* visuhmidata_;
  ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* parkingposesvisu_;
  int hmioutuseractscreenreq_u8_;
  bool driverselection_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  float distancetostopreq_m_;
  friend struct ::TableStruct_mf_5fhmih_2fvisu_5finput_5fport_2eproto;
};
// -------------------------------------------------------------------

class VisuInputPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_hmih.visu_input_port.VisuInputPort_array_port) */ {
 public:
  VisuInputPort_array_port();
  virtual ~VisuInputPort_array_port();

  VisuInputPort_array_port(const VisuInputPort_array_port& from);
  VisuInputPort_array_port(VisuInputPort_array_port&& from) noexcept
    : VisuInputPort_array_port() {
    *this = ::std::move(from);
  }

  inline VisuInputPort_array_port& operator=(const VisuInputPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline VisuInputPort_array_port& operator=(VisuInputPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VisuInputPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VisuInputPort_array_port* internal_default_instance() {
    return reinterpret_cast<const VisuInputPort_array_port*>(
               &_VisuInputPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(VisuInputPort_array_port& a, VisuInputPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(VisuInputPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VisuInputPort_array_port* New() const final {
    return CreateMaybeMessage<VisuInputPort_array_port>(nullptr);
  }

  VisuInputPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VisuInputPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VisuInputPort_array_port& from);
  void MergeFrom(const VisuInputPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VisuInputPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_hmih.visu_input_port.VisuInputPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto);
    return ::descriptor_table_mf_5fhmih_2fvisu_5finput_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1761,
  };
  // repeated .pb.mf_hmih.visu_input_port.VisuInputPort data = 1761;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::mf_hmih::visu_input_port::VisuInputPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::visu_input_port::VisuInputPort >*
      mutable_data();
  private:
  const ::pb::mf_hmih::visu_input_port::VisuInputPort& _internal_data(int index) const;
  ::pb::mf_hmih::visu_input_port::VisuInputPort* _internal_add_data();
  public:
  const ::pb::mf_hmih::visu_input_port::VisuInputPort& data(int index) const;
  ::pb::mf_hmih::visu_input_port::VisuInputPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::visu_input_port::VisuInputPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.mf_hmih.visu_input_port.VisuInputPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::visu_input_port::VisuInputPort > data_;
  friend struct ::TableStruct_mf_5fhmih_2fvisu_5finput_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VisuInputPort

// optional uint32 uiVersionNumber = 2124;
inline bool VisuInputPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool VisuInputPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void VisuInputPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuInputPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VisuInputPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_input_port.VisuInputPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void VisuInputPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  uiversionnumber_ = value;
}
inline void VisuInputPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_input_port.VisuInputPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool VisuInputPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool VisuInputPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& VisuInputPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& VisuInputPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_input_port.VisuInputPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* VisuInputPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.mf_hmih.visu_input_port.VisuInputPort.sSigHeader)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* VisuInputPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000002u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* VisuInputPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.visu_input_port.VisuInputPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void VisuInputPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_hmih.visu_input_port.VisuInputPort.sSigHeader)
}

// optional float distanceToStopReq_m = 3322;
inline bool VisuInputPort::_internal_has_distancetostopreq_m() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool VisuInputPort::has_distancetostopreq_m() const {
  return _internal_has_distancetostopreq_m();
}
inline void VisuInputPort::clear_distancetostopreq_m() {
  distancetostopreq_m_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float VisuInputPort::_internal_distancetostopreq_m() const {
  return distancetostopreq_m_;
}
inline float VisuInputPort::distancetostopreq_m() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_input_port.VisuInputPort.distanceToStopReq_m)
  return _internal_distancetostopreq_m();
}
inline void VisuInputPort::_internal_set_distancetostopreq_m(float value) {
  _has_bits_[0] |= 0x00000080u;
  distancetostopreq_m_ = value;
}
inline void VisuInputPort::set_distancetostopreq_m(float value) {
  _internal_set_distancetostopreq_m(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_input_port.VisuInputPort.distanceToStopReq_m)
}

// optional .pb.mf_hmih.visu_hmidata.VisuHMIData visuHMIData = 1305;
inline bool VisuInputPort::_internal_has_visuhmidata() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || visuhmidata_ != nullptr);
  return value;
}
inline bool VisuInputPort::has_visuhmidata() const {
  return _internal_has_visuhmidata();
}
inline const ::pb::mf_hmih::visu_hmidata::VisuHMIData& VisuInputPort::_internal_visuhmidata() const {
  const ::pb::mf_hmih::visu_hmidata::VisuHMIData* p = visuhmidata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_hmih::visu_hmidata::VisuHMIData*>(
      &::pb::mf_hmih::visu_hmidata::_VisuHMIData_default_instance_);
}
inline const ::pb::mf_hmih::visu_hmidata::VisuHMIData& VisuInputPort::visuhmidata() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_input_port.VisuInputPort.visuHMIData)
  return _internal_visuhmidata();
}
inline ::pb::mf_hmih::visu_hmidata::VisuHMIData* VisuInputPort::release_visuhmidata() {
  // @@protoc_insertion_point(field_release:pb.mf_hmih.visu_input_port.VisuInputPort.visuHMIData)
  _has_bits_[0] &= ~0x00000004u;
  ::pb::mf_hmih::visu_hmidata::VisuHMIData* temp = visuhmidata_;
  visuhmidata_ = nullptr;
  return temp;
}
inline ::pb::mf_hmih::visu_hmidata::VisuHMIData* VisuInputPort::_internal_mutable_visuhmidata() {
  _has_bits_[0] |= 0x00000004u;
  if (visuhmidata_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_hmih::visu_hmidata::VisuHMIData>(GetArenaNoVirtual());
    visuhmidata_ = p;
  }
  return visuhmidata_;
}
inline ::pb::mf_hmih::visu_hmidata::VisuHMIData* VisuInputPort::mutable_visuhmidata() {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.visu_input_port.VisuInputPort.visuHMIData)
  return _internal_mutable_visuhmidata();
}
inline void VisuInputPort::set_allocated_visuhmidata(::pb::mf_hmih::visu_hmidata::VisuHMIData* visuhmidata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(visuhmidata_);
  }
  if (visuhmidata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      visuhmidata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, visuhmidata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  visuhmidata_ = visuhmidata;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_hmih.visu_input_port.VisuInputPort.visuHMIData)
}

// optional .pb.ap_hmitoap.screen_types.ScreenTypes HmiOutUserActScreenReq_u8 = 626;
inline bool VisuInputPort::_internal_has_hmioutuseractscreenreq_u8() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool VisuInputPort::has_hmioutuseractscreenreq_u8() const {
  return _internal_has_hmioutuseractscreenreq_u8();
}
inline void VisuInputPort::clear_hmioutuseractscreenreq_u8() {
  hmioutuseractscreenreq_u8_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::pb::ap_hmitoap::screen_types::ScreenTypes VisuInputPort::_internal_hmioutuseractscreenreq_u8() const {
  return static_cast< ::pb::ap_hmitoap::screen_types::ScreenTypes >(hmioutuseractscreenreq_u8_);
}
inline ::pb::ap_hmitoap::screen_types::ScreenTypes VisuInputPort::hmioutuseractscreenreq_u8() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_input_port.VisuInputPort.HmiOutUserActScreenReq_u8)
  return _internal_hmioutuseractscreenreq_u8();
}
inline void VisuInputPort::_internal_set_hmioutuseractscreenreq_u8(::pb::ap_hmitoap::screen_types::ScreenTypes value) {
  assert(::pb::ap_hmitoap::screen_types::ScreenTypes_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  hmioutuseractscreenreq_u8_ = value;
}
inline void VisuInputPort::set_hmioutuseractscreenreq_u8(::pb::ap_hmitoap::screen_types::ScreenTypes value) {
  _internal_set_hmioutuseractscreenreq_u8(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_input_port.VisuInputPort.HmiOutUserActScreenReq_u8)
}

// optional .pb.ap_tp.traj_plan_visu_port.TrajPlanVisuPort trajPlanVisuPort_nu = 189;
inline bool VisuInputPort::_internal_has_trajplanvisuport_nu() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || trajplanvisuport_nu_ != nullptr);
  return value;
}
inline bool VisuInputPort::has_trajplanvisuport_nu() const {
  return _internal_has_trajplanvisuport_nu();
}
inline const ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort& VisuInputPort::_internal_trajplanvisuport_nu() const {
  const ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* p = trajplanvisuport_nu_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort*>(
      &::pb::ap_tp::traj_plan_visu_port::_TrajPlanVisuPort_default_instance_);
}
inline const ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort& VisuInputPort::trajplanvisuport_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_input_port.VisuInputPort.trajPlanVisuPort_nu)
  return _internal_trajplanvisuport_nu();
}
inline ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* VisuInputPort::release_trajplanvisuport_nu() {
  // @@protoc_insertion_point(field_release:pb.mf_hmih.visu_input_port.VisuInputPort.trajPlanVisuPort_nu)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* temp = trajplanvisuport_nu_;
  trajplanvisuport_nu_ = nullptr;
  return temp;
}
inline ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* VisuInputPort::_internal_mutable_trajplanvisuport_nu() {
  _has_bits_[0] |= 0x00000001u;
  if (trajplanvisuport_nu_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort>(GetArenaNoVirtual());
    trajplanvisuport_nu_ = p;
  }
  return trajplanvisuport_nu_;
}
inline ::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* VisuInputPort::mutable_trajplanvisuport_nu() {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.visu_input_port.VisuInputPort.trajPlanVisuPort_nu)
  return _internal_mutable_trajplanvisuport_nu();
}
inline void VisuInputPort::set_allocated_trajplanvisuport_nu(::pb::ap_tp::traj_plan_visu_port::TrajPlanVisuPort* trajplanvisuport_nu) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(trajplanvisuport_nu_);
  }
  if (trajplanvisuport_nu) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      trajplanvisuport_nu = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, trajplanvisuport_nu, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  trajplanvisuport_nu_ = trajplanvisuport_nu;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_hmih.visu_input_port.VisuInputPort.trajPlanVisuPort_nu)
}

// optional .pb.mf_hmih.parking_target_poses.ParkingTargetPoses parkingPosesVisu = 2704;
inline bool VisuInputPort::_internal_has_parkingposesvisu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || parkingposesvisu_ != nullptr);
  return value;
}
inline bool VisuInputPort::has_parkingposesvisu() const {
  return _internal_has_parkingposesvisu();
}
inline const ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses& VisuInputPort::_internal_parkingposesvisu() const {
  const ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* p = parkingposesvisu_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses*>(
      &::pb::mf_hmih::parking_target_poses::_ParkingTargetPoses_default_instance_);
}
inline const ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses& VisuInputPort::parkingposesvisu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_input_port.VisuInputPort.parkingPosesVisu)
  return _internal_parkingposesvisu();
}
inline ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* VisuInputPort::release_parkingposesvisu() {
  // @@protoc_insertion_point(field_release:pb.mf_hmih.visu_input_port.VisuInputPort.parkingPosesVisu)
  _has_bits_[0] &= ~0x00000008u;
  ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* temp = parkingposesvisu_;
  parkingposesvisu_ = nullptr;
  return temp;
}
inline ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* VisuInputPort::_internal_mutable_parkingposesvisu() {
  _has_bits_[0] |= 0x00000008u;
  if (parkingposesvisu_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::mf_hmih::parking_target_poses::ParkingTargetPoses>(GetArenaNoVirtual());
    parkingposesvisu_ = p;
  }
  return parkingposesvisu_;
}
inline ::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* VisuInputPort::mutable_parkingposesvisu() {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.visu_input_port.VisuInputPort.parkingPosesVisu)
  return _internal_mutable_parkingposesvisu();
}
inline void VisuInputPort::set_allocated_parkingposesvisu(::pb::mf_hmih::parking_target_poses::ParkingTargetPoses* parkingposesvisu) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(parkingposesvisu_);
  }
  if (parkingposesvisu) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      parkingposesvisu = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parkingposesvisu, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  parkingposesvisu_ = parkingposesvisu;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_hmih.visu_input_port.VisuInputPort.parkingPosesVisu)
}

// optional bool driverSelection_nu = 1140;
inline bool VisuInputPort::_internal_has_driverselection_nu() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool VisuInputPort::has_driverselection_nu() const {
  return _internal_has_driverselection_nu();
}
inline void VisuInputPort::clear_driverselection_nu() {
  driverselection_nu_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool VisuInputPort::_internal_driverselection_nu() const {
  return driverselection_nu_;
}
inline bool VisuInputPort::driverselection_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_input_port.VisuInputPort.driverSelection_nu)
  return _internal_driverselection_nu();
}
inline void VisuInputPort::_internal_set_driverselection_nu(bool value) {
  _has_bits_[0] |= 0x00000020u;
  driverselection_nu_ = value;
}
inline void VisuInputPort::set_driverselection_nu(bool value) {
  _internal_set_driverselection_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_hmih.visu_input_port.VisuInputPort.driverSelection_nu)
}

// -------------------------------------------------------------------

// VisuInputPort_array_port

// repeated .pb.mf_hmih.visu_input_port.VisuInputPort data = 1761;
inline int VisuInputPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int VisuInputPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void VisuInputPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::mf_hmih::visu_input_port::VisuInputPort* VisuInputPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.mf_hmih.visu_input_port.VisuInputPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::visu_input_port::VisuInputPort >*
VisuInputPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_hmih.visu_input_port.VisuInputPort_array_port.data)
  return &data_;
}
inline const ::pb::mf_hmih::visu_input_port::VisuInputPort& VisuInputPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::mf_hmih::visu_input_port::VisuInputPort& VisuInputPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_hmih.visu_input_port.VisuInputPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::mf_hmih::visu_input_port::VisuInputPort* VisuInputPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::mf_hmih::visu_input_port::VisuInputPort* VisuInputPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.mf_hmih.visu_input_port.VisuInputPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_hmih::visu_input_port::VisuInputPort >&
VisuInputPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.mf_hmih.visu_input_port.VisuInputPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace visu_input_port
}  // namespace mf_hmih
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mf_5fhmih_2fvisu_5finput_5fport_2eproto
