// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_hmih/parking_situation.proto

#include "mf_hmih/parking_situation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fparking_5fsituation_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ParkingSituation_mf_5fhmih_2fparking_5fsituation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fparking_5fsituation_5ffront_5frear_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParkingSituationFrontRear_mf_5fhmih_2fparking_5fsituation_5ffront_5frear_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParkingSituationSides_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto;
namespace pb {
namespace mf_hmih {
namespace parking_situation {
class ParkingSituationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParkingSituation> _instance;
} _ParkingSituation_default_instance_;
class ParkingSituation_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParkingSituation_array_port> _instance;
} _ParkingSituation_array_port_default_instance_;
}  // namespace parking_situation
}  // namespace mf_hmih
}  // namespace pb
static void InitDefaultsscc_info_ParkingSituation_mf_5fhmih_2fparking_5fsituation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::parking_situation::_ParkingSituation_default_instance_;
    new (ptr) ::pb::mf_hmih::parking_situation::ParkingSituation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::parking_situation::ParkingSituation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ParkingSituation_mf_5fhmih_2fparking_5fsituation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ParkingSituation_mf_5fhmih_2fparking_5fsituation_2eproto}, {
      &scc_info_ParkingSituationSides_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto.base,
      &scc_info_ParkingSituationFrontRear_mf_5fhmih_2fparking_5fsituation_5ffront_5frear_2eproto.base,}};

static void InitDefaultsscc_info_ParkingSituation_array_port_mf_5fhmih_2fparking_5fsituation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::mf_hmih::parking_situation::_ParkingSituation_array_port_default_instance_;
    new (ptr) ::pb::mf_hmih::parking_situation::ParkingSituation_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::mf_hmih::parking_situation::ParkingSituation_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ParkingSituation_array_port_mf_5fhmih_2fparking_5fsituation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ParkingSituation_array_port_mf_5fhmih_2fparking_5fsituation_2eproto}, {
      &scc_info_ParkingSituation_mf_5fhmih_2fparking_5fsituation_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mf_5fhmih_2fparking_5fsituation_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mf_5fhmih_2fparking_5fsituation_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mf_5fhmih_2fparking_5fsituation_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mf_5fhmih_2fparking_5fsituation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation::ParkingSituation, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation::ParkingSituation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation::ParkingSituation, left_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation::ParkingSituation, right_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation::ParkingSituation, front_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation::ParkingSituation, rear_),
  0,
  3,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation::ParkingSituation_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation::ParkingSituation_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::mf_hmih::parking_situation::ParkingSituation_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::pb::mf_hmih::parking_situation::ParkingSituation)},
  { 13, 19, sizeof(::pb::mf_hmih::parking_situation::ParkingSituation_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::parking_situation::_ParkingSituation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::mf_hmih::parking_situation::_ParkingSituation_array_port_default_instance_),
};

const char descriptor_table_protodef_mf_5fhmih_2fparking_5fsituation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037mf_hmih/parking_situation.proto\022\034pb.mf"
  "_hmih.parking_situation\032%mf_hmih/parking"
  "_situation_sides.proto\032*mf_hmih/parking_"
  "situation_front_rear.proto\"\316\002\n\020ParkingSi"
  "tuation\022H\n\004left\030\335\006 \001(\01329.pb.mf_hmih.park"
  "ing_situation_sides.ParkingSituationSide"
  "s\022I\n\005right\030\343\033 \001(\01329.pb.mf_hmih.parking_s"
  "ituation_sides.ParkingSituationSides\022R\n\005"
  "front\030\326\007 \001(\0132B.pb.mf_hmih.parking_situat"
  "ion_front_rear.ParkingSituationFrontRear"
  "\022Q\n\004rear\030\226\t \001(\0132B.pb.mf_hmih.parking_sit"
  "uation_front_rear.ParkingSituationFrontR"
  "ear\"\\\n\033ParkingSituation_array_port\022=\n\004da"
  "ta\030\371\033 \003(\0132..pb.mf_hmih.parking_situation"
  ".ParkingSituation"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto_deps[2] = {
  &::descriptor_table_mf_5fhmih_2fparking_5fsituation_5ffront_5frear_2eproto,
  &::descriptor_table_mf_5fhmih_2fparking_5fsituation_5fsides_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto_sccs[2] = {
  &scc_info_ParkingSituation_mf_5fhmih_2fparking_5fsituation_2eproto.base,
  &scc_info_ParkingSituation_array_port_mf_5fhmih_2fparking_5fsituation_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto_once;
static bool descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto = {
  &descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto_initialized, descriptor_table_protodef_mf_5fhmih_2fparking_5fsituation_2eproto, "mf_hmih/parking_situation.proto", 577,
  &descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto_once, descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto_sccs, descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_mf_5fhmih_2fparking_5fsituation_2eproto::offsets,
  file_level_metadata_mf_5fhmih_2fparking_5fsituation_2eproto, 2, file_level_enum_descriptors_mf_5fhmih_2fparking_5fsituation_2eproto, file_level_service_descriptors_mf_5fhmih_2fparking_5fsituation_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mf_5fhmih_2fparking_5fsituation_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mf_5fhmih_2fparking_5fsituation_2eproto), true);
namespace pb {
namespace mf_hmih {
namespace parking_situation {

// ===================================================================

void ParkingSituation::InitAsDefaultInstance() {
  ::pb::mf_hmih::parking_situation::_ParkingSituation_default_instance_._instance.get_mutable()->left_ = const_cast< ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides*>(
      ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides::internal_default_instance());
  ::pb::mf_hmih::parking_situation::_ParkingSituation_default_instance_._instance.get_mutable()->right_ = const_cast< ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides*>(
      ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides::internal_default_instance());
  ::pb::mf_hmih::parking_situation::_ParkingSituation_default_instance_._instance.get_mutable()->front_ = const_cast< ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear*>(
      ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear::internal_default_instance());
  ::pb::mf_hmih::parking_situation::_ParkingSituation_default_instance_._instance.get_mutable()->rear_ = const_cast< ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear*>(
      ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear::internal_default_instance());
}
class ParkingSituation::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingSituation>()._has_bits_);
  static const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides& left(const ParkingSituation* msg);
  static void set_has_left(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides& right(const ParkingSituation* msg);
  static void set_has_right(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear& front(const ParkingSituation* msg);
  static void set_has_front(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear& rear(const ParkingSituation* msg);
  static void set_has_rear(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides&
ParkingSituation::_Internal::left(const ParkingSituation* msg) {
  return *msg->left_;
}
const ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides&
ParkingSituation::_Internal::right(const ParkingSituation* msg) {
  return *msg->right_;
}
const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear&
ParkingSituation::_Internal::front(const ParkingSituation* msg) {
  return *msg->front_;
}
const ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear&
ParkingSituation::_Internal::rear(const ParkingSituation* msg) {
  return *msg->rear_;
}
void ParkingSituation::clear_left() {
  if (left_ != nullptr) left_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ParkingSituation::clear_right() {
  if (right_ != nullptr) right_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void ParkingSituation::clear_front() {
  if (front_ != nullptr) front_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ParkingSituation::clear_rear() {
  if (rear_ != nullptr) rear_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
ParkingSituation::ParkingSituation()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.parking_situation.ParkingSituation)
}
ParkingSituation::ParkingSituation(const ParkingSituation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_left()) {
    left_ = new ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides(*from.left_);
  } else {
    left_ = nullptr;
  }
  if (from._internal_has_front()) {
    front_ = new ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear(*from.front_);
  } else {
    front_ = nullptr;
  }
  if (from._internal_has_rear()) {
    rear_ = new ::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear(*from.rear_);
  } else {
    rear_ = nullptr;
  }
  if (from._internal_has_right()) {
    right_ = new ::pb::mf_hmih::parking_situation_sides::ParkingSituationSides(*from.right_);
  } else {
    right_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.parking_situation.ParkingSituation)
}

void ParkingSituation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParkingSituation_mf_5fhmih_2fparking_5fsituation_2eproto.base);
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_) -
      reinterpret_cast<char*>(&left_)) + sizeof(right_));
}

ParkingSituation::~ParkingSituation() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.parking_situation.ParkingSituation)
  SharedDtor();
}

void ParkingSituation::SharedDtor() {
  if (this != internal_default_instance()) delete left_;
  if (this != internal_default_instance()) delete front_;
  if (this != internal_default_instance()) delete rear_;
  if (this != internal_default_instance()) delete right_;
}

void ParkingSituation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParkingSituation& ParkingSituation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParkingSituation_mf_5fhmih_2fparking_5fsituation_2eproto.base);
  return *internal_default_instance();
}


void ParkingSituation::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.parking_situation.ParkingSituation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(left_ != nullptr);
      left_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(front_ != nullptr);
      front_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(rear_ != nullptr);
      rear_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(right_ != nullptr);
      right_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ParkingSituation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.mf_hmih.parking_situation_sides.ParkingSituationSides left = 861;
      case 861:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_left(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.parking_situation_front_rear.ParkingSituationFrontRear front = 982;
      case 982:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_front(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.parking_situation_front_rear.ParkingSituationFrontRear rear = 1174;
      case 1174:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_rear(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.mf_hmih.parking_situation_sides.ParkingSituationSides right = 3555;
      case 3555:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_right(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParkingSituation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.parking_situation.ParkingSituation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.mf_hmih.parking_situation_sides.ParkingSituationSides left = 861;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        861, _Internal::left(this), target, stream);
  }

  // optional .pb.mf_hmih.parking_situation_front_rear.ParkingSituationFrontRear front = 982;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        982, _Internal::front(this), target, stream);
  }

  // optional .pb.mf_hmih.parking_situation_front_rear.ParkingSituationFrontRear rear = 1174;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1174, _Internal::rear(this), target, stream);
  }

  // optional .pb.mf_hmih.parking_situation_sides.ParkingSituationSides right = 3555;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3555, _Internal::right(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.parking_situation.ParkingSituation)
  return target;
}

size_t ParkingSituation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.parking_situation.ParkingSituation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .pb.mf_hmih.parking_situation_sides.ParkingSituationSides left = 861;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *left_);
    }

    // optional .pb.mf_hmih.parking_situation_front_rear.ParkingSituationFrontRear front = 982;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *front_);
    }

    // optional .pb.mf_hmih.parking_situation_front_rear.ParkingSituationFrontRear rear = 1174;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *rear_);
    }

    // optional .pb.mf_hmih.parking_situation_sides.ParkingSituationSides right = 3555;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *right_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParkingSituation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.parking_situation.ParkingSituation)
  GOOGLE_DCHECK_NE(&from, this);
  const ParkingSituation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParkingSituation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.parking_situation.ParkingSituation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.parking_situation.ParkingSituation)
    MergeFrom(*source);
  }
}

void ParkingSituation::MergeFrom(const ParkingSituation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.parking_situation.ParkingSituation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_left()->::pb::mf_hmih::parking_situation_sides::ParkingSituationSides::MergeFrom(from._internal_left());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_front()->::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear::MergeFrom(from._internal_front());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_rear()->::pb::mf_hmih::parking_situation_front_rear::ParkingSituationFrontRear::MergeFrom(from._internal_rear());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_right()->::pb::mf_hmih::parking_situation_sides::ParkingSituationSides::MergeFrom(from._internal_right());
    }
  }
}

void ParkingSituation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.parking_situation.ParkingSituation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParkingSituation::CopyFrom(const ParkingSituation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.parking_situation.ParkingSituation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParkingSituation::IsInitialized() const {
  return true;
}

void ParkingSituation::InternalSwap(ParkingSituation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(left_, other->left_);
  swap(front_, other->front_);
  swap(rear_, other->rear_);
  swap(right_, other->right_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParkingSituation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParkingSituation_array_port::InitAsDefaultInstance() {
}
class ParkingSituation_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingSituation_array_port>()._has_bits_);
};

ParkingSituation_array_port::ParkingSituation_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
}
ParkingSituation_array_port::ParkingSituation_array_port(const ParkingSituation_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
}

void ParkingSituation_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParkingSituation_array_port_mf_5fhmih_2fparking_5fsituation_2eproto.base);
}

ParkingSituation_array_port::~ParkingSituation_array_port() {
  // @@protoc_insertion_point(destructor:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
  SharedDtor();
}

void ParkingSituation_array_port::SharedDtor() {
}

void ParkingSituation_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParkingSituation_array_port& ParkingSituation_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParkingSituation_array_port_mf_5fhmih_2fparking_5fsituation_2eproto.base);
  return *internal_default_instance();
}


void ParkingSituation_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ParkingSituation_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.mf_hmih.parking_situation.ParkingSituation data = 3577;
      case 3577:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParkingSituation_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.parking_situation.ParkingSituation data = 3577;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3577, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
  return target;
}

size_t ParkingSituation_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.mf_hmih.parking_situation.ParkingSituation data = 3577;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParkingSituation_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const ParkingSituation_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParkingSituation_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
    MergeFrom(*source);
  }
}

void ParkingSituation_array_port::MergeFrom(const ParkingSituation_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void ParkingSituation_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParkingSituation_array_port::CopyFrom(const ParkingSituation_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.mf_hmih.parking_situation.ParkingSituation_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParkingSituation_array_port::IsInitialized() const {
  return true;
}

void ParkingSituation_array_port::InternalSwap(ParkingSituation_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParkingSituation_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace parking_situation
}  // namespace mf_hmih
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::parking_situation::ParkingSituation* Arena::CreateMaybeMessage< ::pb::mf_hmih::parking_situation::ParkingSituation >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::parking_situation::ParkingSituation >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::mf_hmih::parking_situation::ParkingSituation_array_port* Arena::CreateMaybeMessage< ::pb::mf_hmih::parking_situation::ParkingSituation_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::mf_hmih::parking_situation::ParkingSituation_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
