// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ecu_ctrl/ecu_health_status_port.proto

#include "ecu_ctrl/ecu_health_status_port.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EcuHealthStatusPort_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto;
namespace pb {
namespace ecu_ctrl {
namespace ecu_health_status_port {
class EcuHealthStatusPortDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EcuHealthStatusPort> _instance;
} _EcuHealthStatusPort_default_instance_;
class EcuHealthStatusPort_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EcuHealthStatusPort_array_port> _instance;
} _EcuHealthStatusPort_array_port_default_instance_;
}  // namespace ecu_health_status_port
}  // namespace ecu_ctrl
}  // namespace pb
static void InitDefaultsscc_info_EcuHealthStatusPort_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ecu_ctrl::ecu_health_status_port::_EcuHealthStatusPort_default_instance_;
    new (ptr) ::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EcuHealthStatusPort_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EcuHealthStatusPort_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto}, {}};

static void InitDefaultsscc_info_EcuHealthStatusPort_array_port_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ecu_ctrl::ecu_health_status_port::_EcuHealthStatusPort_array_port_default_instance_;
    new (ptr) ::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EcuHealthStatusPort_array_port_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EcuHealthStatusPort_array_port_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto}, {
      &scc_info_EcuHealthStatusPort_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort, timestamp_us_u64_),
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort, ecuvoltagevalue_v_),
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort, globalstate_e_),
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort, ecuvoltagestate_e_),
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort, commstate_e_),
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort, temperaturestate_e_),
  5,
  4,
  0,
  3,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort)},
  { 17, 23, sizeof(::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ecu_ctrl::ecu_health_status_port::_EcuHealthStatusPort_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ecu_ctrl::ecu_health_status_port::_EcuHealthStatusPort_array_port_default_instance_),
};

const char descriptor_table_protodef_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%ecu_ctrl/ecu_health_status_port.proto\022"
  "\"pb.ecu_ctrl.ecu_health_status_port\032\030ecu"
  "_ctrl/ecu_state.proto\032\034ecu_ctrl/voltage_"
  "state.proto\032\031ecu_ctrl/comm_state.proto\032\031"
  "ecu_ctrl/temp_state.proto\"\303\002\n\023EcuHealthS"
  "tatusPort\022\031\n\020timestamp_us_u64\030\302\034 \001(\004\022\032\n\021"
  "ecuVoltageValue_V\030\210\034 \001(\002\0227\n\rglobalState_"
  "e\030\214\034 \001(\0162\037.pb.ecu_ctrl.ecu_state.EcuStat"
  "e\022C\n\021ecuVoltageState_e\030\302\025 \001(\0162\'.pb.ecu_c"
  "trl.voltage_state.VoltageState\0227\n\013commSt"
  "ate_e\030\323\013 \001(\0162!.pb.ecu_ctrl.comm_state.Co"
  "mmState\022>\n\022temperatureState_e\030\222\021 \001(\0162!.p"
  "b.ecu_ctrl.temp_state.TempState\"h\n\036EcuHe"
  "althStatusPort_array_port\022F\n\004data\030\211\n \003(\013"
  "27.pb.ecu_ctrl.ecu_health_status_port.Ec"
  "uHealthStatusPort"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto_deps[4] = {
  &::descriptor_table_ecu_5fctrl_2fcomm_5fstate_2eproto,
  &::descriptor_table_ecu_5fctrl_2fecu_5fstate_2eproto,
  &::descriptor_table_ecu_5fctrl_2ftemp_5fstate_2eproto,
  &::descriptor_table_ecu_5fctrl_2fvoltage_5fstate_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto_sccs[2] = {
  &scc_info_EcuHealthStatusPort_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto.base,
  &scc_info_EcuHealthStatusPort_array_port_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto_once;
static bool descriptor_table_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto = {
  &descriptor_table_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto_initialized, descriptor_table_protodef_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto, "ecu_ctrl/ecu_health_status_port.proto", 617,
  &descriptor_table_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto_once, descriptor_table_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto_sccs, descriptor_table_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto_deps, 2, 4,
  schemas, file_default_instances, TableStruct_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto::offsets,
  file_level_metadata_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto, 2, file_level_enum_descriptors_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto, file_level_service_descriptors_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto), true);
namespace pb {
namespace ecu_ctrl {
namespace ecu_health_status_port {

// ===================================================================

void EcuHealthStatusPort::InitAsDefaultInstance() {
}
class EcuHealthStatusPort::_Internal {
 public:
  using HasBits = decltype(std::declval<EcuHealthStatusPort>()._has_bits_);
  static void set_has_timestamp_us_u64(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_ecuvoltagevalue_v(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_globalstate_e(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ecuvoltagestate_e(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_commstate_e(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_temperaturestate_e(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

EcuHealthStatusPort::EcuHealthStatusPort()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
}
EcuHealthStatusPort::EcuHealthStatusPort(const EcuHealthStatusPort& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&globalstate_e_, &from.globalstate_e_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_us_u64_) -
    reinterpret_cast<char*>(&globalstate_e_)) + sizeof(timestamp_us_u64_));
  // @@protoc_insertion_point(copy_constructor:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
}

void EcuHealthStatusPort::SharedCtor() {
  ::memset(&globalstate_e_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_us_u64_) -
      reinterpret_cast<char*>(&globalstate_e_)) + sizeof(timestamp_us_u64_));
}

EcuHealthStatusPort::~EcuHealthStatusPort() {
  // @@protoc_insertion_point(destructor:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
  SharedDtor();
}

void EcuHealthStatusPort::SharedDtor() {
}

void EcuHealthStatusPort::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EcuHealthStatusPort& EcuHealthStatusPort::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EcuHealthStatusPort_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto.base);
  return *internal_default_instance();
}


void EcuHealthStatusPort::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&globalstate_e_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_us_u64_) -
        reinterpret_cast<char*>(&globalstate_e_)) + sizeof(timestamp_us_u64_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* EcuHealthStatusPort::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.ecu_ctrl.comm_state.CommState commState_e = 1491;
      case 1491:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ecu_ctrl::comm_state::CommState_IsValid(val))) {
            _internal_set_commstate_e(static_cast<::pb::ecu_ctrl::comm_state::CommState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1491, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ecu_ctrl.temp_state.TempState temperatureState_e = 2194;
      case 2194:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ecu_ctrl::temp_state::TempState_IsValid(val))) {
            _internal_set_temperaturestate_e(static_cast<::pb::ecu_ctrl::temp_state::TempState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2194, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.ecu_ctrl.voltage_state.VoltageState ecuVoltageState_e = 2754;
      case 2754:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ecu_ctrl::voltage_state::VoltageState_IsValid(val))) {
            _internal_set_ecuvoltagestate_e(static_cast<::pb::ecu_ctrl::voltage_state::VoltageState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2754, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional float ecuVoltageValue_V = 3592;
      case 3592:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          _Internal::set_has_ecuvoltagevalue_v(&has_bits);
          ecuvoltagevalue_v_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional .pb.ecu_ctrl.ecu_state.EcuState globalState_e = 3596;
      case 3596:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ecu_ctrl::ecu_state::EcuState_IsValid(val))) {
            _internal_set_globalstate_e(static_cast<::pb::ecu_ctrl::ecu_state::EcuState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3596, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint64 timestamp_us_u64 = 3650;
      case 3650:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_timestamp_us_u64(&has_bits);
          timestamp_us_u64_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EcuHealthStatusPort::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.ecu_ctrl.comm_state.CommState commState_e = 1491;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1491, this->_internal_commstate_e(), target);
  }

  // optional .pb.ecu_ctrl.temp_state.TempState temperatureState_e = 2194;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2194, this->_internal_temperaturestate_e(), target);
  }

  // optional .pb.ecu_ctrl.voltage_state.VoltageState ecuVoltageState_e = 2754;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2754, this->_internal_ecuvoltagestate_e(), target);
  }

  // optional float ecuVoltageValue_V = 3592;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3592, this->_internal_ecuvoltagevalue_v(), target);
  }

  // optional .pb.ecu_ctrl.ecu_state.EcuState globalState_e = 3596;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3596, this->_internal_globalstate_e(), target);
  }

  // optional uint64 timestamp_us_u64 = 3650;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3650, this->_internal_timestamp_us_u64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
  return target;
}

size_t EcuHealthStatusPort::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .pb.ecu_ctrl.ecu_state.EcuState globalState_e = 3596;
    if (cached_has_bits & 0x00000001u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_globalstate_e());
    }

    // optional .pb.ecu_ctrl.comm_state.CommState commState_e = 1491;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_commstate_e());
    }

    // optional .pb.ecu_ctrl.temp_state.TempState temperatureState_e = 2194;
    if (cached_has_bits & 0x00000004u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_temperaturestate_e());
    }

    // optional .pb.ecu_ctrl.voltage_state.VoltageState ecuVoltageState_e = 2754;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ecuvoltagestate_e());
    }

    // optional float ecuVoltageValue_V = 3592;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 + 4;
    }

    // optional uint64 timestamp_us_u64 = 3650;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_timestamp_us_u64());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EcuHealthStatusPort::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
  GOOGLE_DCHECK_NE(&from, this);
  const EcuHealthStatusPort* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EcuHealthStatusPort>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
    MergeFrom(*source);
  }
}

void EcuHealthStatusPort::MergeFrom(const EcuHealthStatusPort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      globalstate_e_ = from.globalstate_e_;
    }
    if (cached_has_bits & 0x00000002u) {
      commstate_e_ = from.commstate_e_;
    }
    if (cached_has_bits & 0x00000004u) {
      temperaturestate_e_ = from.temperaturestate_e_;
    }
    if (cached_has_bits & 0x00000008u) {
      ecuvoltagestate_e_ = from.ecuvoltagestate_e_;
    }
    if (cached_has_bits & 0x00000010u) {
      ecuvoltagevalue_v_ = from.ecuvoltagevalue_v_;
    }
    if (cached_has_bits & 0x00000020u) {
      timestamp_us_u64_ = from.timestamp_us_u64_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EcuHealthStatusPort::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EcuHealthStatusPort::CopyFrom(const EcuHealthStatusPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EcuHealthStatusPort::IsInitialized() const {
  return true;
}

void EcuHealthStatusPort::InternalSwap(EcuHealthStatusPort* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(globalstate_e_, other->globalstate_e_);
  swap(commstate_e_, other->commstate_e_);
  swap(temperaturestate_e_, other->temperaturestate_e_);
  swap(ecuvoltagestate_e_, other->ecuvoltagestate_e_);
  swap(ecuvoltagevalue_v_, other->ecuvoltagevalue_v_);
  swap(timestamp_us_u64_, other->timestamp_us_u64_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EcuHealthStatusPort::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EcuHealthStatusPort_array_port::InitAsDefaultInstance() {
}
class EcuHealthStatusPort_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<EcuHealthStatusPort_array_port>()._has_bits_);
};

EcuHealthStatusPort_array_port::EcuHealthStatusPort_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
}
EcuHealthStatusPort_array_port::EcuHealthStatusPort_array_port(const EcuHealthStatusPort_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
}

void EcuHealthStatusPort_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EcuHealthStatusPort_array_port_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto.base);
}

EcuHealthStatusPort_array_port::~EcuHealthStatusPort_array_port() {
  // @@protoc_insertion_point(destructor:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
  SharedDtor();
}

void EcuHealthStatusPort_array_port::SharedDtor() {
}

void EcuHealthStatusPort_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EcuHealthStatusPort_array_port& EcuHealthStatusPort_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EcuHealthStatusPort_array_port_ecu_5fctrl_2fecu_5fhealth_5fstatus_5fport_2eproto.base);
  return *internal_default_instance();
}


void EcuHealthStatusPort_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* EcuHealthStatusPort_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort data = 1289;
      case 1289:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10314>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EcuHealthStatusPort_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort data = 1289;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1289, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
  return target;
}

size_t EcuHealthStatusPort_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort data = 1289;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EcuHealthStatusPort_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const EcuHealthStatusPort_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EcuHealthStatusPort_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
    MergeFrom(*source);
  }
}

void EcuHealthStatusPort_array_port::MergeFrom(const EcuHealthStatusPort_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void EcuHealthStatusPort_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EcuHealthStatusPort_array_port::CopyFrom(const EcuHealthStatusPort_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ecu_ctrl.ecu_health_status_port.EcuHealthStatusPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EcuHealthStatusPort_array_port::IsInitialized() const {
  return true;
}

void EcuHealthStatusPort_array_port::InternalSwap(EcuHealthStatusPort_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EcuHealthStatusPort_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ecu_health_status_port
}  // namespace ecu_ctrl
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort* Arena::CreateMaybeMessage< ::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort_array_port* Arena::CreateMaybeMessage< ::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ecu_ctrl::ecu_health_status_port::EcuHealthStatusPort_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
