// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_hmitoap/user_action_head_unit.proto

#include "ap_hmitoap/user_action_head_unit.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace pb {
namespace ap_hmitoap {
namespace user_action_head_unit {
}  // namespace user_action_head_unit
}  // namespace ap_hmitoap
}  // namespace pb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&ap_hmitoap/user_action_head_unit.proto"
  "\022#pb.ap_hmitoap.user_action_head_unit*\323\020"
  "\n\022UserActionHeadUnit\022\022\n\016NO_USER_ACTION\020\000"
  "\022\037\n\033TAP_ON_PARKING_SPACE_LEFT_1\020\001\022\037\n\033TAP"
  "_ON_PARKING_SPACE_LEFT_2\020\002\022\037\n\033TAP_ON_PAR"
  "KING_SPACE_LEFT_3\020\003\022\037\n\033TAP_ON_PARKING_SP"
  "ACE_LEFT_4\020\004\022 \n\034TAP_ON_PARKING_SPACE_RIG"
  "HT_1\020\005\022 \n\034TAP_ON_PARKING_SPACE_RIGHT_2\020\006"
  "\022 \n\034TAP_ON_PARKING_SPACE_RIGHT_3\020\007\022 \n\034TA"
  "P_ON_PARKING_SPACE_RIGHT_4\020\010\022 \n\034TAP_ON_P"
  "ARKING_SPACE_FRONT_1\020\t\022 \n\034TAP_ON_PARKING"
  "_SPACE_FRONT_2\020\n\022 \n\034TAP_ON_PARKING_SPACE"
  "_FRONT_3\020\013\022 \n\034TAP_ON_PARKING_SPACE_FRONT"
  "_4\020\014\022\037\n\033TAP_ON_PARKING_SPACE_REAR_1\020\r\022\037\n"
  "\033TAP_ON_PARKING_SPACE_REAR_2\020\016\022\037\n\033TAP_ON"
  "_PARKING_SPACE_REAR_3\020\017\022\037\n\033TAP_ON_PARKIN"
  "G_SPACE_REAR_4\020\020\022\032\n\026TAP_ON_START_SELECTI"
  "ON\020\021\022\030\n\024TAP_ON_START_PARKING\020\022\022\024\n\020TAP_ON"
  "_INTERRUPT\020\023\022\023\n\017TAP_ON_CONTINUE\020\024\022\017\n\013TAP"
  "_ON_UNDO\020\025\022\021\n\rTAP_ON_CANCEL\020\026\022\017\n\013TAP_ON_"
  "REDO\020\027\022\037\n\033TAP_ON_START_REMOTE_PARKING\020\030\022"
  "\033\n\027TAP_ON_SWITCH_DIRECTION\020\031\022\035\n\031TAP_ON_S"
  "WITCH_ORIENTATION\020\032\022\032\n\026TAP_ON_PREVIOUS_S"
  "CREEN\020\033\022\024\n\020TOGGLE_AP_ACTIVE\020\034\022\035\n\031TAP_ON_"
  "LSCA_RELEASE_BRAKE\020\035\022\"\n\036TAP_ON_FULLY_AUT"
  "OMATED_PARKING\020\036\022!\n\035TAP_ON_SEMI_AUTOMATE"
  "D_PARKING\020\037\022\034\n\030TAP_ON_START_KEY_PARKING\020"
  " \022\r\n\tTAP_ON_GP\020!\022\r\n\tTAP_ON_RM\020\"\022\016\n\nTAP_O"
  "N_PDC\020#\022\035\n\031TAP_ON_AP_PDC_TOGGLE_VIEW\020$\022\037"
  "\n\033TAP_ON_SWITCH_TO_REMOTE_KEY\020%\022\037\n\033TAP_O"
  "N_SWITCH_TO_REMOTE_APP\020&\022\016\n\nTAP_ON_WHP\020\'"
  "\022\035\n\031TAP_ON_USER_SLOT_LEFT_PAR\020(\022\"\n\036TAP_O"
  "N_USER_SLOT_LEFT_PERP_BWD\020)\022\"\n\036TAP_ON_US"
  "ER_SLOT_LEFT_PERP_FWD\020*\022\036\n\032TAP_ON_USER_S"
  "LOT_RIGHT_PAR\020+\022#\n\037TAP_ON_USER_SLOT_RIGH"
  "T_PERP_BWD\020,\022#\n\037TAP_ON_USER_SLOT_RIGHT_P"
  "ERP_FWD\020-\022\034\n\030TAP_ON_USER_SLOT_MOVE_UP\020.\022"
  "\036\n\032TAP_ON_USER_SLOT_MOVE_DOWN\020/\022\036\n\032TAP_O"
  "N_USER_SLOT_MOVE_LEFT\0200\022\037\n\033TAP_ON_USER_S"
  "LOT_MOVE_RIGHT\0201\022 \n\034TAP_ON_USER_SLOT_ROT"
  "_CLKWISE\0202\022#\n\037TAP_ON_USER_SLOT_ROT_CTRCL"
  "KWISE\0203\022\032\n\026TAP_ON_USER_SLOT_RESET\0204\022\031\n\025T"
  "AP_ON_USER_SLOT_SAVE\0205\022\034\n\030TAP_ON_EXPLICI"
  "T_SCANNING\0206\022\031\n\025TAP_ON_REVERSE_ASSIST\0207\022"
  "\017\n\013TAP_ON_MUTE\0208\022\031\n\025TAP_ON_MEMORY_PARKIN"
  "G\0209\022\030\n\024TAP_ON_MEMORY_SLOT_1\020:\022\030\n\024TAP_ON_"
  "MEMORY_SLOT_2\020;\022\030\n\024TAP_ON_MEMORY_SLOT_3\020"
  "<\022\033\n\027TAP_ON_USER_SLOT_REFINE\020=\022\032\n\026TAP_ON"
  "_USER_SLOT_CLOSE\020>\022\033\n\027TAP_ON_USER_SLOT_D"
  "EFINE\020\?\022\017\n\013TAP_ON_LVMD\020@\022\017\n\013TAP_ON_LSCA\020"
  "A\022\033\n\027TAP_ON_USER_SLOT_DELETE\020B\022\032\n\026TAP_ON"
  "_LVMD_MUTE_AUDIO\020C\022\025\n\021TAP_ON_SVS_ACTIVE\020"
  "D\022\021\n\rTAP_ON_SVS_2D\020E\022\021\n\rTAP_ON_SVS_3D\020F\022"
  "\036\n\032TAP_ON_SVS_KERB_VIEW_FRONT\020G\022\035\n\031TAP_O"
  "N_SVS_KERB_VIEW_REAR\020H\022\033\n\027TAP_ON_SVS_CRO"
  "SS_BUTTON\020I"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto_once;
static bool descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto = {
  &descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto_initialized, descriptor_table_protodef_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto, "ap_hmitoap/user_action_head_unit.proto", 2211,
  &descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto_once, descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto_sccs, descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto::offsets,
  file_level_metadata_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto, 0, file_level_enum_descriptors_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto, file_level_service_descriptors_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto), true);
namespace pb {
namespace ap_hmitoap {
namespace user_action_head_unit {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UserActionHeadUnit_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto);
  return file_level_enum_descriptors_ap_5fhmitoap_2fuser_5faction_5fhead_5funit_2eproto[0];
}
bool UserActionHeadUnit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace user_action_head_unit
}  // namespace ap_hmitoap
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
