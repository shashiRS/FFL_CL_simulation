// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_vehstatesigprovider/trailer_status_port.proto

#include "ap_vehstatesigprovider/trailer_status_port.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TrailerStatusPort_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eco_2fsignal_5fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto;
namespace pb {
namespace ap_vehstatesigprovider {
namespace trailer_status_port {
class TrailerStatusPortDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TrailerStatusPort> _instance;
} _TrailerStatusPort_default_instance_;
class TrailerStatusPort_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TrailerStatusPort_array_port> _instance;
} _TrailerStatusPort_array_port_default_instance_;
}  // namespace trailer_status_port
}  // namespace ap_vehstatesigprovider
}  // namespace pb
static void InitDefaultsscc_info_TrailerStatusPort_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_vehstatesigprovider::trailer_status_port::_TrailerStatusPort_default_instance_;
    new (ptr) ::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TrailerStatusPort_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TrailerStatusPort_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto}, {
      &scc_info_SignalHeader_eco_2fsignal_5fheader_2eproto.base,}};

static void InitDefaultsscc_info_TrailerStatusPort_array_port_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::ap_vehstatesigprovider::trailer_status_port::_TrailerStatusPort_array_port_default_instance_;
    new (ptr) ::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TrailerStatusPort_array_port_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TrailerStatusPort_array_port_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto}, {
      &scc_info_TrailerStatusPort_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort, uiversionnumber_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort, ssigheader_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort, trailerattached_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort, trailerhitchstatus_nu_),
  1,
  0,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort)},
  { 13, 19, sizeof(::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_vehstatesigprovider::trailer_status_port::_TrailerStatusPort_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::ap_vehstatesigprovider::trailer_status_port::_TrailerStatusPort_array_port_default_instance_),
};

const char descriptor_table_protodef_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n0ap_vehstatesigprovider/trailer_status_"
  "port.proto\022-pb.ap_vehstatesigprovider.tr"
  "ailer_status_port\032\027eco/signal_header.pro"
  "to\0321ap_vehstatesigprovider/trailer_hitch"
  "_status.proto\"\345\001\n\021TrailerStatusPort\022\030\n\017u"
  "iVersionNumber\030\314\020 \001(\r\0227\n\nsSigHeader\030\211\010 \001"
  "(\0132\".pb.eco.signal_header.SignalHeader\022\032"
  "\n\022trailerAttached_nu\0304 \001(\010\022a\n\025trailerHit"
  "chStatus_nu\030| \001(\0162B.pb.ap_vehstatesigpro"
  "vider.trailer_hitch_status.TrailerHitchS"
  "tatus\"o\n\034TrailerStatusPort_array_port\022O\n"
  "\004data\030\253\014 \003(\0132@.pb.ap_vehstatesigprovider"
  ".trailer_status_port.TrailerStatusPort"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto_deps[2] = {
  &::descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fhitch_5fstatus_2eproto,
  &::descriptor_table_eco_2fsignal_5fheader_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto_sccs[2] = {
  &scc_info_TrailerStatusPort_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto.base,
  &scc_info_TrailerStatusPort_array_port_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto_once;
static bool descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto = {
  &descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto_initialized, descriptor_table_protodef_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto, "ap_vehstatesigprovider/trailer_status_port.proto", 518,
  &descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto_once, descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto_sccs, descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto::offsets,
  file_level_metadata_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto, 2, file_level_enum_descriptors_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto, file_level_service_descriptors_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto), true);
namespace pb {
namespace ap_vehstatesigprovider {
namespace trailer_status_port {

// ===================================================================

void TrailerStatusPort::InitAsDefaultInstance() {
  ::pb::ap_vehstatesigprovider::trailer_status_port::_TrailerStatusPort_default_instance_._instance.get_mutable()->ssigheader_ = const_cast< ::pb::eco::signal_header::SignalHeader*>(
      ::pb::eco::signal_header::SignalHeader::internal_default_instance());
}
class TrailerStatusPort::_Internal {
 public:
  using HasBits = decltype(std::declval<TrailerStatusPort>()._has_bits_);
  static void set_has_uiversionnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::pb::eco::signal_header::SignalHeader& ssigheader(const TrailerStatusPort* msg);
  static void set_has_ssigheader(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_trailerattached_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_trailerhitchstatus_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::pb::eco::signal_header::SignalHeader&
TrailerStatusPort::_Internal::ssigheader(const TrailerStatusPort* msg) {
  return *msg->ssigheader_;
}
void TrailerStatusPort::clear_ssigheader() {
  if (ssigheader_ != nullptr) ssigheader_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
TrailerStatusPort::TrailerStatusPort()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
}
TrailerStatusPort::TrailerStatusPort(const TrailerStatusPort& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_ssigheader()) {
    ssigheader_ = new ::pb::eco::signal_header::SignalHeader(*from.ssigheader_);
  } else {
    ssigheader_ = nullptr;
  }
  ::memcpy(&uiversionnumber_, &from.uiversionnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&trailerhitchstatus_nu_) -
    reinterpret_cast<char*>(&uiversionnumber_)) + sizeof(trailerhitchstatus_nu_));
  // @@protoc_insertion_point(copy_constructor:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
}

void TrailerStatusPort::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TrailerStatusPort_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto.base);
  ::memset(&ssigheader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trailerhitchstatus_nu_) -
      reinterpret_cast<char*>(&ssigheader_)) + sizeof(trailerhitchstatus_nu_));
}

TrailerStatusPort::~TrailerStatusPort() {
  // @@protoc_insertion_point(destructor:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
  SharedDtor();
}

void TrailerStatusPort::SharedDtor() {
  if (this != internal_default_instance()) delete ssigheader_;
}

void TrailerStatusPort::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrailerStatusPort& TrailerStatusPort::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TrailerStatusPort_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto.base);
  return *internal_default_instance();
}


void TrailerStatusPort::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(ssigheader_ != nullptr);
    ssigheader_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&uiversionnumber_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trailerhitchstatus_nu_) -
        reinterpret_cast<char*>(&uiversionnumber_)) + sizeof(trailerhitchstatus_nu_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TrailerStatusPort::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool trailerAttached_nu = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_trailerattached_nu(&has_bits);
          trailerattached_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.ap_vehstatesigprovider.trailer_hitch_status.TrailerHitchStatus trailerHitchStatus_nu = 124;
      case 124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::ap_vehstatesigprovider::trailer_hitch_status::TrailerHitchStatus_IsValid(val))) {
            _internal_set_trailerhitchstatus_nu(static_cast<::pb::ap_vehstatesigprovider::trailer_hitch_status::TrailerHitchStatus>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(124, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_ssigheader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 uiVersionNumber = 2124;
      case 2124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_uiversionnumber(&has_bits);
          uiversionnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TrailerStatusPort::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool trailerAttached_nu = 52;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(52, this->_internal_trailerattached_nu(), target);
  }

  // optional .pb.ap_vehstatesigprovider.trailer_hitch_status.TrailerHitchStatus trailerHitchStatus_nu = 124;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      124, this->_internal_trailerhitchstatus_nu(), target);
  }

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::ssigheader(this), target, stream);
  }

  // optional uint32 uiVersionNumber = 2124;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2124, this->_internal_uiversionnumber(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
  return target;
}

size_t TrailerStatusPort::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ssigheader_);
    }

    // optional uint32 uiVersionNumber = 2124;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uiversionnumber());
    }

    // optional bool trailerAttached_nu = 52;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional .pb.ap_vehstatesigprovider.trailer_hitch_status.TrailerHitchStatus trailerHitchStatus_nu = 124;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_trailerhitchstatus_nu());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrailerStatusPort::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
  GOOGLE_DCHECK_NE(&from, this);
  const TrailerStatusPort* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TrailerStatusPort>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
    MergeFrom(*source);
  }
}

void TrailerStatusPort::MergeFrom(const TrailerStatusPort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_ssigheader()->::pb::eco::signal_header::SignalHeader::MergeFrom(from._internal_ssigheader());
    }
    if (cached_has_bits & 0x00000002u) {
      uiversionnumber_ = from.uiversionnumber_;
    }
    if (cached_has_bits & 0x00000004u) {
      trailerattached_nu_ = from.trailerattached_nu_;
    }
    if (cached_has_bits & 0x00000008u) {
      trailerhitchstatus_nu_ = from.trailerhitchstatus_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TrailerStatusPort::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrailerStatusPort::CopyFrom(const TrailerStatusPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrailerStatusPort::IsInitialized() const {
  return true;
}

void TrailerStatusPort::InternalSwap(TrailerStatusPort* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ssigheader_, other->ssigheader_);
  swap(uiversionnumber_, other->uiversionnumber_);
  swap(trailerattached_nu_, other->trailerattached_nu_);
  swap(trailerhitchstatus_nu_, other->trailerhitchstatus_nu_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TrailerStatusPort::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TrailerStatusPort_array_port::InitAsDefaultInstance() {
}
class TrailerStatusPort_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<TrailerStatusPort_array_port>()._has_bits_);
};

TrailerStatusPort_array_port::TrailerStatusPort_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
}
TrailerStatusPort_array_port::TrailerStatusPort_array_port(const TrailerStatusPort_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
}

void TrailerStatusPort_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TrailerStatusPort_array_port_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto.base);
}

TrailerStatusPort_array_port::~TrailerStatusPort_array_port() {
  // @@protoc_insertion_point(destructor:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
  SharedDtor();
}

void TrailerStatusPort_array_port::SharedDtor() {
}

void TrailerStatusPort_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrailerStatusPort_array_port& TrailerStatusPort_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TrailerStatusPort_array_port_ap_5fvehstatesigprovider_2ftrailer_5fstatus_5fport_2eproto.base);
  return *internal_default_instance();
}


void TrailerStatusPort_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TrailerStatusPort_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort data = 1579;
      case 1579:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<12634>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TrailerStatusPort_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort data = 1579;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1579, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
  return target;
}

size_t TrailerStatusPort_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort data = 1579;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrailerStatusPort_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const TrailerStatusPort_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TrailerStatusPort_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
    MergeFrom(*source);
  }
}

void TrailerStatusPort_array_port::MergeFrom(const TrailerStatusPort_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void TrailerStatusPort_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrailerStatusPort_array_port::CopyFrom(const TrailerStatusPort_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ap_vehstatesigprovider.trailer_status_port.TrailerStatusPort_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrailerStatusPort_array_port::IsInitialized() const {
  return true;
}

void TrailerStatusPort_array_port::InternalSwap(TrailerStatusPort_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TrailerStatusPort_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace trailer_status_port
}  // namespace ap_vehstatesigprovider
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort* Arena::CreateMaybeMessage< ::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort_array_port* Arena::CreateMaybeMessage< ::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ap_vehstatesigprovider::trailer_status_port::TrailerStatusPort_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
