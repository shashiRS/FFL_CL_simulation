// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: si/high_plot_data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_si_2fhigh_5fplot_5fdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_si_2fhigh_5fplot_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "si/delimiter_zones_serializable.pb.h"
#include "si/slot_surrounding_lines_serializable.pb.h"
#include "si/virtual_line_info_serializable.pb.h"
#include "si/triangle_expansion_serializable.pb.h"
#include "si/quadrilateral_expansion_serializable.pb.h"
#include "si/quadrilateral_serializable_array.pb.h"
#include "si/high_cluster_zone_serializable.pb.h"
#include "si/cnn_based_parking_slot_serializable.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_si_2fhigh_5fplot_5fdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_si_2fhigh_5fplot_5fdata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_si_2fhigh_5fplot_5fdata_2eproto;
namespace pb {
namespace si {
namespace high_plot_data {
class HighPlotData;
class HighPlotDataDefaultTypeInternal;
extern HighPlotDataDefaultTypeInternal _HighPlotData_default_instance_;
class HighPlotData_array_port;
class HighPlotData_array_portDefaultTypeInternal;
extern HighPlotData_array_portDefaultTypeInternal _HighPlotData_array_port_default_instance_;
}  // namespace high_plot_data
}  // namespace si
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::si::high_plot_data::HighPlotData* Arena::CreateMaybeMessage<::pb::si::high_plot_data::HighPlotData>(Arena*);
template<> ::pb::si::high_plot_data::HighPlotData_array_port* Arena::CreateMaybeMessage<::pb::si::high_plot_data::HighPlotData_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace si {
namespace high_plot_data {

// ===================================================================

class HighPlotData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.si.high_plot_data.HighPlotData) */ {
 public:
  HighPlotData();
  virtual ~HighPlotData();

  HighPlotData(const HighPlotData& from);
  HighPlotData(HighPlotData&& from) noexcept
    : HighPlotData() {
    *this = ::std::move(from);
  }

  inline HighPlotData& operator=(const HighPlotData& from) {
    CopyFrom(from);
    return *this;
  }
  inline HighPlotData& operator=(HighPlotData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HighPlotData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HighPlotData* internal_default_instance() {
    return reinterpret_cast<const HighPlotData*>(
               &_HighPlotData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(HighPlotData& a, HighPlotData& b) {
    a.Swap(&b);
  }
  inline void Swap(HighPlotData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HighPlotData* New() const final {
    return CreateMaybeMessage<HighPlotData>(nullptr);
  }

  HighPlotData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HighPlotData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HighPlotData& from);
  void MergeFrom(const HighPlotData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HighPlotData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.si.high_plot_data.HighPlotData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_si_2fhigh_5fplot_5fdata_2eproto);
    return ::descriptor_table_si_2fhigh_5fplot_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDelimiterZonesFieldNumber = 492,
    kCnnBasedParkingSlotsFieldNumber = 1800,
    kSurroundingLinesPerSlotFieldNumber = 1976,
    kTriangleExpansionRoisFieldNumber = 2071,
    kCnnBlowUpLimitsFieldNumber = 2237,
    kSlotBlowUpLimitsFieldNumber = 2802,
    kVirtualLinesInfoFieldNumber = 2811,
    kClusterZonesFieldNumber = 2941,
    kRectSlotsFieldNumber = 3579,
    kSideExpansionRoisFieldNumber = 3933,
  };
  // optional .pb.si.delimiter_zones_serializable.DelimiterZonesSerializable delimiterZones = 492;
  bool has_delimiterzones() const;
  private:
  bool _internal_has_delimiterzones() const;
  public:
  void clear_delimiterzones();
  const ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable& delimiterzones() const;
  ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* release_delimiterzones();
  ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* mutable_delimiterzones();
  void set_allocated_delimiterzones(::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* delimiterzones);
  private:
  const ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable& _internal_delimiterzones() const;
  ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* _internal_mutable_delimiterzones();
  public:

  // optional .pb.si.cnn_based_parking_slot_serializable.CnnBasedParkingSlotSerializable cnnBasedParkingSlots = 1800;
  bool has_cnnbasedparkingslots() const;
  private:
  bool _internal_has_cnnbasedparkingslots() const;
  public:
  void clear_cnnbasedparkingslots();
  const ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable& cnnbasedparkingslots() const;
  ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* release_cnnbasedparkingslots();
  ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* mutable_cnnbasedparkingslots();
  void set_allocated_cnnbasedparkingslots(::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* cnnbasedparkingslots);
  private:
  const ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable& _internal_cnnbasedparkingslots() const;
  ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* _internal_mutable_cnnbasedparkingslots();
  public:

  // optional .pb.si.slot_surrounding_lines_serializable.SlotSurroundingLinesSerializable surroundingLinesPerSlot = 1976;
  bool has_surroundinglinesperslot() const;
  private:
  bool _internal_has_surroundinglinesperslot() const;
  public:
  void clear_surroundinglinesperslot();
  const ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable& surroundinglinesperslot() const;
  ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* release_surroundinglinesperslot();
  ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* mutable_surroundinglinesperslot();
  void set_allocated_surroundinglinesperslot(::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* surroundinglinesperslot);
  private:
  const ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable& _internal_surroundinglinesperslot() const;
  ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* _internal_mutable_surroundinglinesperslot();
  public:

  // optional .pb.si.triangle_expansion_serializable.TriangleExpansionSerializable triangleExpansionRois = 2071;
  bool has_triangleexpansionrois() const;
  private:
  bool _internal_has_triangleexpansionrois() const;
  public:
  void clear_triangleexpansionrois();
  const ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable& triangleexpansionrois() const;
  ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* release_triangleexpansionrois();
  ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* mutable_triangleexpansionrois();
  void set_allocated_triangleexpansionrois(::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* triangleexpansionrois);
  private:
  const ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable& _internal_triangleexpansionrois() const;
  ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* _internal_mutable_triangleexpansionrois();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray cnnBlowUpLimits = 2237;
  bool has_cnnblowuplimits() const;
  private:
  bool _internal_has_cnnblowuplimits() const;
  public:
  void clear_cnnblowuplimits();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& cnnblowuplimits() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_cnnblowuplimits();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_cnnblowuplimits();
  void set_allocated_cnnblowuplimits(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* cnnblowuplimits);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_cnnblowuplimits() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_cnnblowuplimits();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray slotBlowUpLimits = 2802;
  bool has_slotblowuplimits() const;
  private:
  bool _internal_has_slotblowuplimits() const;
  public:
  void clear_slotblowuplimits();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& slotblowuplimits() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_slotblowuplimits();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_slotblowuplimits();
  void set_allocated_slotblowuplimits(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* slotblowuplimits);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_slotblowuplimits() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_slotblowuplimits();
  public:

  // optional .pb.si.virtual_line_info_serializable.VirtualLineInfoSerializable virtualLinesInfo = 2811;
  bool has_virtuallinesinfo() const;
  private:
  bool _internal_has_virtuallinesinfo() const;
  public:
  void clear_virtuallinesinfo();
  const ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable& virtuallinesinfo() const;
  ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* release_virtuallinesinfo();
  ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* mutable_virtuallinesinfo();
  void set_allocated_virtuallinesinfo(::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* virtuallinesinfo);
  private:
  const ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable& _internal_virtuallinesinfo() const;
  ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* _internal_mutable_virtuallinesinfo();
  public:

  // optional .pb.si.high_cluster_zone_serializable.HighClusterZoneSerializable clusterZones = 2941;
  bool has_clusterzones() const;
  private:
  bool _internal_has_clusterzones() const;
  public:
  void clear_clusterzones();
  const ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable& clusterzones() const;
  ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* release_clusterzones();
  ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* mutable_clusterzones();
  void set_allocated_clusterzones(::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* clusterzones);
  private:
  const ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable& _internal_clusterzones() const;
  ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* _internal_mutable_clusterzones();
  public:

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray rectSlots = 3579;
  bool has_rectslots() const;
  private:
  bool _internal_has_rectslots() const;
  public:
  void clear_rectslots();
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& rectslots() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* release_rectslots();
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* mutable_rectslots();
  void set_allocated_rectslots(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* rectslots);
  private:
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& _internal_rectslots() const;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* _internal_mutable_rectslots();
  public:

  // optional .pb.si.quadrilateral_expansion_serializable.QuadrilateralExpansionSerializable sideExpansionRois = 3933;
  bool has_sideexpansionrois() const;
  private:
  bool _internal_has_sideexpansionrois() const;
  public:
  void clear_sideexpansionrois();
  const ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable& sideexpansionrois() const;
  ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* release_sideexpansionrois();
  ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* mutable_sideexpansionrois();
  void set_allocated_sideexpansionrois(::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* sideexpansionrois);
  private:
  const ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable& _internal_sideexpansionrois() const;
  ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* _internal_mutable_sideexpansionrois();
  public:

  // @@protoc_insertion_point(class_scope:pb.si.high_plot_data.HighPlotData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* delimiterzones_;
  ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* cnnbasedparkingslots_;
  ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* surroundinglinesperslot_;
  ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* triangleexpansionrois_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* cnnblowuplimits_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* slotblowuplimits_;
  ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* virtuallinesinfo_;
  ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* clusterzones_;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* rectslots_;
  ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* sideexpansionrois_;
  friend struct ::TableStruct_si_2fhigh_5fplot_5fdata_2eproto;
};
// -------------------------------------------------------------------

class HighPlotData_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.si.high_plot_data.HighPlotData_array_port) */ {
 public:
  HighPlotData_array_port();
  virtual ~HighPlotData_array_port();

  HighPlotData_array_port(const HighPlotData_array_port& from);
  HighPlotData_array_port(HighPlotData_array_port&& from) noexcept
    : HighPlotData_array_port() {
    *this = ::std::move(from);
  }

  inline HighPlotData_array_port& operator=(const HighPlotData_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline HighPlotData_array_port& operator=(HighPlotData_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HighPlotData_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HighPlotData_array_port* internal_default_instance() {
    return reinterpret_cast<const HighPlotData_array_port*>(
               &_HighPlotData_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(HighPlotData_array_port& a, HighPlotData_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(HighPlotData_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HighPlotData_array_port* New() const final {
    return CreateMaybeMessage<HighPlotData_array_port>(nullptr);
  }

  HighPlotData_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HighPlotData_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HighPlotData_array_port& from);
  void MergeFrom(const HighPlotData_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HighPlotData_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.si.high_plot_data.HighPlotData_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_si_2fhigh_5fplot_5fdata_2eproto);
    return ::descriptor_table_si_2fhigh_5fplot_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3914,
  };
  // repeated .pb.si.high_plot_data.HighPlotData data = 3914;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::si::high_plot_data::HighPlotData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::high_plot_data::HighPlotData >*
      mutable_data();
  private:
  const ::pb::si::high_plot_data::HighPlotData& _internal_data(int index) const;
  ::pb::si::high_plot_data::HighPlotData* _internal_add_data();
  public:
  const ::pb::si::high_plot_data::HighPlotData& data(int index) const;
  ::pb::si::high_plot_data::HighPlotData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::high_plot_data::HighPlotData >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.si.high_plot_data.HighPlotData_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::high_plot_data::HighPlotData > data_;
  friend struct ::TableStruct_si_2fhigh_5fplot_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HighPlotData

// optional .pb.si.delimiter_zones_serializable.DelimiterZonesSerializable delimiterZones = 492;
inline bool HighPlotData::_internal_has_delimiterzones() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || delimiterzones_ != nullptr);
  return value;
}
inline bool HighPlotData::has_delimiterzones() const {
  return _internal_has_delimiterzones();
}
inline const ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable& HighPlotData::_internal_delimiterzones() const {
  const ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* p = delimiterzones_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable*>(
      &::pb::si::delimiter_zones_serializable::_DelimiterZonesSerializable_default_instance_);
}
inline const ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable& HighPlotData::delimiterzones() const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData.delimiterZones)
  return _internal_delimiterzones();
}
inline ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* HighPlotData::release_delimiterzones() {
  // @@protoc_insertion_point(field_release:pb.si.high_plot_data.HighPlotData.delimiterZones)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* temp = delimiterzones_;
  delimiterzones_ = nullptr;
  return temp;
}
inline ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* HighPlotData::_internal_mutable_delimiterzones() {
  _has_bits_[0] |= 0x00000001u;
  if (delimiterzones_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable>(GetArenaNoVirtual());
    delimiterzones_ = p;
  }
  return delimiterzones_;
}
inline ::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* HighPlotData::mutable_delimiterzones() {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData.delimiterZones)
  return _internal_mutable_delimiterzones();
}
inline void HighPlotData::set_allocated_delimiterzones(::pb::si::delimiter_zones_serializable::DelimiterZonesSerializable* delimiterzones) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(delimiterzones_);
  }
  if (delimiterzones) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      delimiterzones = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delimiterzones, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  delimiterzones_ = delimiterzones;
  // @@protoc_insertion_point(field_set_allocated:pb.si.high_plot_data.HighPlotData.delimiterZones)
}

// optional .pb.si.slot_surrounding_lines_serializable.SlotSurroundingLinesSerializable surroundingLinesPerSlot = 1976;
inline bool HighPlotData::_internal_has_surroundinglinesperslot() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || surroundinglinesperslot_ != nullptr);
  return value;
}
inline bool HighPlotData::has_surroundinglinesperslot() const {
  return _internal_has_surroundinglinesperslot();
}
inline const ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable& HighPlotData::_internal_surroundinglinesperslot() const {
  const ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* p = surroundinglinesperslot_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable*>(
      &::pb::si::slot_surrounding_lines_serializable::_SlotSurroundingLinesSerializable_default_instance_);
}
inline const ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable& HighPlotData::surroundinglinesperslot() const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData.surroundingLinesPerSlot)
  return _internal_surroundinglinesperslot();
}
inline ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* HighPlotData::release_surroundinglinesperslot() {
  // @@protoc_insertion_point(field_release:pb.si.high_plot_data.HighPlotData.surroundingLinesPerSlot)
  _has_bits_[0] &= ~0x00000004u;
  ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* temp = surroundinglinesperslot_;
  surroundinglinesperslot_ = nullptr;
  return temp;
}
inline ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* HighPlotData::_internal_mutable_surroundinglinesperslot() {
  _has_bits_[0] |= 0x00000004u;
  if (surroundinglinesperslot_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable>(GetArenaNoVirtual());
    surroundinglinesperslot_ = p;
  }
  return surroundinglinesperslot_;
}
inline ::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* HighPlotData::mutable_surroundinglinesperslot() {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData.surroundingLinesPerSlot)
  return _internal_mutable_surroundinglinesperslot();
}
inline void HighPlotData::set_allocated_surroundinglinesperslot(::pb::si::slot_surrounding_lines_serializable::SlotSurroundingLinesSerializable* surroundinglinesperslot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(surroundinglinesperslot_);
  }
  if (surroundinglinesperslot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      surroundinglinesperslot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, surroundinglinesperslot, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  surroundinglinesperslot_ = surroundinglinesperslot;
  // @@protoc_insertion_point(field_set_allocated:pb.si.high_plot_data.HighPlotData.surroundingLinesPerSlot)
}

// optional .pb.si.virtual_line_info_serializable.VirtualLineInfoSerializable virtualLinesInfo = 2811;
inline bool HighPlotData::_internal_has_virtuallinesinfo() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || virtuallinesinfo_ != nullptr);
  return value;
}
inline bool HighPlotData::has_virtuallinesinfo() const {
  return _internal_has_virtuallinesinfo();
}
inline const ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable& HighPlotData::_internal_virtuallinesinfo() const {
  const ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* p = virtuallinesinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable*>(
      &::pb::si::virtual_line_info_serializable::_VirtualLineInfoSerializable_default_instance_);
}
inline const ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable& HighPlotData::virtuallinesinfo() const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData.virtualLinesInfo)
  return _internal_virtuallinesinfo();
}
inline ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* HighPlotData::release_virtuallinesinfo() {
  // @@protoc_insertion_point(field_release:pb.si.high_plot_data.HighPlotData.virtualLinesInfo)
  _has_bits_[0] &= ~0x00000040u;
  ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* temp = virtuallinesinfo_;
  virtuallinesinfo_ = nullptr;
  return temp;
}
inline ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* HighPlotData::_internal_mutable_virtuallinesinfo() {
  _has_bits_[0] |= 0x00000040u;
  if (virtuallinesinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable>(GetArenaNoVirtual());
    virtuallinesinfo_ = p;
  }
  return virtuallinesinfo_;
}
inline ::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* HighPlotData::mutable_virtuallinesinfo() {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData.virtualLinesInfo)
  return _internal_mutable_virtuallinesinfo();
}
inline void HighPlotData::set_allocated_virtuallinesinfo(::pb::si::virtual_line_info_serializable::VirtualLineInfoSerializable* virtuallinesinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(virtuallinesinfo_);
  }
  if (virtuallinesinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      virtuallinesinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, virtuallinesinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  virtuallinesinfo_ = virtuallinesinfo;
  // @@protoc_insertion_point(field_set_allocated:pb.si.high_plot_data.HighPlotData.virtualLinesInfo)
}

// optional .pb.si.triangle_expansion_serializable.TriangleExpansionSerializable triangleExpansionRois = 2071;
inline bool HighPlotData::_internal_has_triangleexpansionrois() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || triangleexpansionrois_ != nullptr);
  return value;
}
inline bool HighPlotData::has_triangleexpansionrois() const {
  return _internal_has_triangleexpansionrois();
}
inline const ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable& HighPlotData::_internal_triangleexpansionrois() const {
  const ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* p = triangleexpansionrois_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable*>(
      &::pb::si::triangle_expansion_serializable::_TriangleExpansionSerializable_default_instance_);
}
inline const ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable& HighPlotData::triangleexpansionrois() const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData.triangleExpansionRois)
  return _internal_triangleexpansionrois();
}
inline ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* HighPlotData::release_triangleexpansionrois() {
  // @@protoc_insertion_point(field_release:pb.si.high_plot_data.HighPlotData.triangleExpansionRois)
  _has_bits_[0] &= ~0x00000008u;
  ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* temp = triangleexpansionrois_;
  triangleexpansionrois_ = nullptr;
  return temp;
}
inline ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* HighPlotData::_internal_mutable_triangleexpansionrois() {
  _has_bits_[0] |= 0x00000008u;
  if (triangleexpansionrois_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable>(GetArenaNoVirtual());
    triangleexpansionrois_ = p;
  }
  return triangleexpansionrois_;
}
inline ::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* HighPlotData::mutable_triangleexpansionrois() {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData.triangleExpansionRois)
  return _internal_mutable_triangleexpansionrois();
}
inline void HighPlotData::set_allocated_triangleexpansionrois(::pb::si::triangle_expansion_serializable::TriangleExpansionSerializable* triangleexpansionrois) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(triangleexpansionrois_);
  }
  if (triangleexpansionrois) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      triangleexpansionrois = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, triangleexpansionrois, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  triangleexpansionrois_ = triangleexpansionrois;
  // @@protoc_insertion_point(field_set_allocated:pb.si.high_plot_data.HighPlotData.triangleExpansionRois)
}

// optional .pb.si.quadrilateral_expansion_serializable.QuadrilateralExpansionSerializable sideExpansionRois = 3933;
inline bool HighPlotData::_internal_has_sideexpansionrois() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || sideexpansionrois_ != nullptr);
  return value;
}
inline bool HighPlotData::has_sideexpansionrois() const {
  return _internal_has_sideexpansionrois();
}
inline const ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable& HighPlotData::_internal_sideexpansionrois() const {
  const ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* p = sideexpansionrois_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable*>(
      &::pb::si::quadrilateral_expansion_serializable::_QuadrilateralExpansionSerializable_default_instance_);
}
inline const ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable& HighPlotData::sideexpansionrois() const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData.sideExpansionRois)
  return _internal_sideexpansionrois();
}
inline ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* HighPlotData::release_sideexpansionrois() {
  // @@protoc_insertion_point(field_release:pb.si.high_plot_data.HighPlotData.sideExpansionRois)
  _has_bits_[0] &= ~0x00000200u;
  ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* temp = sideexpansionrois_;
  sideexpansionrois_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* HighPlotData::_internal_mutable_sideexpansionrois() {
  _has_bits_[0] |= 0x00000200u;
  if (sideexpansionrois_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable>(GetArenaNoVirtual());
    sideexpansionrois_ = p;
  }
  return sideexpansionrois_;
}
inline ::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* HighPlotData::mutable_sideexpansionrois() {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData.sideExpansionRois)
  return _internal_mutable_sideexpansionrois();
}
inline void HighPlotData::set_allocated_sideexpansionrois(::pb::si::quadrilateral_expansion_serializable::QuadrilateralExpansionSerializable* sideexpansionrois) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sideexpansionrois_);
  }
  if (sideexpansionrois) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sideexpansionrois = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sideexpansionrois, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  sideexpansionrois_ = sideexpansionrois;
  // @@protoc_insertion_point(field_set_allocated:pb.si.high_plot_data.HighPlotData.sideExpansionRois)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray cnnBlowUpLimits = 2237;
inline bool HighPlotData::_internal_has_cnnblowuplimits() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || cnnblowuplimits_ != nullptr);
  return value;
}
inline bool HighPlotData::has_cnnblowuplimits() const {
  return _internal_has_cnnblowuplimits();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& HighPlotData::_internal_cnnblowuplimits() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = cnnblowuplimits_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& HighPlotData::cnnblowuplimits() const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData.cnnBlowUpLimits)
  return _internal_cnnblowuplimits();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* HighPlotData::release_cnnblowuplimits() {
  // @@protoc_insertion_point(field_release:pb.si.high_plot_data.HighPlotData.cnnBlowUpLimits)
  _has_bits_[0] &= ~0x00000010u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = cnnblowuplimits_;
  cnnblowuplimits_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* HighPlotData::_internal_mutable_cnnblowuplimits() {
  _has_bits_[0] |= 0x00000010u;
  if (cnnblowuplimits_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    cnnblowuplimits_ = p;
  }
  return cnnblowuplimits_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* HighPlotData::mutable_cnnblowuplimits() {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData.cnnBlowUpLimits)
  return _internal_mutable_cnnblowuplimits();
}
inline void HighPlotData::set_allocated_cnnblowuplimits(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* cnnblowuplimits) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cnnblowuplimits_);
  }
  if (cnnblowuplimits) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cnnblowuplimits = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cnnblowuplimits, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  cnnblowuplimits_ = cnnblowuplimits;
  // @@protoc_insertion_point(field_set_allocated:pb.si.high_plot_data.HighPlotData.cnnBlowUpLimits)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray slotBlowUpLimits = 2802;
inline bool HighPlotData::_internal_has_slotblowuplimits() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || slotblowuplimits_ != nullptr);
  return value;
}
inline bool HighPlotData::has_slotblowuplimits() const {
  return _internal_has_slotblowuplimits();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& HighPlotData::_internal_slotblowuplimits() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = slotblowuplimits_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& HighPlotData::slotblowuplimits() const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData.slotBlowUpLimits)
  return _internal_slotblowuplimits();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* HighPlotData::release_slotblowuplimits() {
  // @@protoc_insertion_point(field_release:pb.si.high_plot_data.HighPlotData.slotBlowUpLimits)
  _has_bits_[0] &= ~0x00000020u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = slotblowuplimits_;
  slotblowuplimits_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* HighPlotData::_internal_mutable_slotblowuplimits() {
  _has_bits_[0] |= 0x00000020u;
  if (slotblowuplimits_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    slotblowuplimits_ = p;
  }
  return slotblowuplimits_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* HighPlotData::mutable_slotblowuplimits() {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData.slotBlowUpLimits)
  return _internal_mutable_slotblowuplimits();
}
inline void HighPlotData::set_allocated_slotblowuplimits(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* slotblowuplimits) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(slotblowuplimits_);
  }
  if (slotblowuplimits) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      slotblowuplimits = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, slotblowuplimits, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  slotblowuplimits_ = slotblowuplimits;
  // @@protoc_insertion_point(field_set_allocated:pb.si.high_plot_data.HighPlotData.slotBlowUpLimits)
}

// optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray rectSlots = 3579;
inline bool HighPlotData::_internal_has_rectslots() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || rectslots_ != nullptr);
  return value;
}
inline bool HighPlotData::has_rectslots() const {
  return _internal_has_rectslots();
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& HighPlotData::_internal_rectslots() const {
  const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* p = rectslots_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      &::pb::si::quadrilateral_serializable_array::_QuadrilateralSerializableArray_default_instance_);
}
inline const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& HighPlotData::rectslots() const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData.rectSlots)
  return _internal_rectslots();
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* HighPlotData::release_rectslots() {
  // @@protoc_insertion_point(field_release:pb.si.high_plot_data.HighPlotData.rectSlots)
  _has_bits_[0] &= ~0x00000100u;
  ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* temp = rectslots_;
  rectslots_ = nullptr;
  return temp;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* HighPlotData::_internal_mutable_rectslots() {
  _has_bits_[0] |= 0x00000100u;
  if (rectslots_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray>(GetArenaNoVirtual());
    rectslots_ = p;
  }
  return rectslots_;
}
inline ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* HighPlotData::mutable_rectslots() {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData.rectSlots)
  return _internal_mutable_rectslots();
}
inline void HighPlotData::set_allocated_rectslots(::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray* rectslots) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rectslots_);
  }
  if (rectslots) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rectslots = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rectslots, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  rectslots_ = rectslots;
  // @@protoc_insertion_point(field_set_allocated:pb.si.high_plot_data.HighPlotData.rectSlots)
}

// optional .pb.si.high_cluster_zone_serializable.HighClusterZoneSerializable clusterZones = 2941;
inline bool HighPlotData::_internal_has_clusterzones() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || clusterzones_ != nullptr);
  return value;
}
inline bool HighPlotData::has_clusterzones() const {
  return _internal_has_clusterzones();
}
inline const ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable& HighPlotData::_internal_clusterzones() const {
  const ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* p = clusterzones_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable*>(
      &::pb::si::high_cluster_zone_serializable::_HighClusterZoneSerializable_default_instance_);
}
inline const ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable& HighPlotData::clusterzones() const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData.clusterZones)
  return _internal_clusterzones();
}
inline ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* HighPlotData::release_clusterzones() {
  // @@protoc_insertion_point(field_release:pb.si.high_plot_data.HighPlotData.clusterZones)
  _has_bits_[0] &= ~0x00000080u;
  ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* temp = clusterzones_;
  clusterzones_ = nullptr;
  return temp;
}
inline ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* HighPlotData::_internal_mutable_clusterzones() {
  _has_bits_[0] |= 0x00000080u;
  if (clusterzones_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable>(GetArenaNoVirtual());
    clusterzones_ = p;
  }
  return clusterzones_;
}
inline ::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* HighPlotData::mutable_clusterzones() {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData.clusterZones)
  return _internal_mutable_clusterzones();
}
inline void HighPlotData::set_allocated_clusterzones(::pb::si::high_cluster_zone_serializable::HighClusterZoneSerializable* clusterzones) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(clusterzones_);
  }
  if (clusterzones) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      clusterzones = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, clusterzones, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  clusterzones_ = clusterzones;
  // @@protoc_insertion_point(field_set_allocated:pb.si.high_plot_data.HighPlotData.clusterZones)
}

// optional .pb.si.cnn_based_parking_slot_serializable.CnnBasedParkingSlotSerializable cnnBasedParkingSlots = 1800;
inline bool HighPlotData::_internal_has_cnnbasedparkingslots() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || cnnbasedparkingslots_ != nullptr);
  return value;
}
inline bool HighPlotData::has_cnnbasedparkingslots() const {
  return _internal_has_cnnbasedparkingslots();
}
inline const ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable& HighPlotData::_internal_cnnbasedparkingslots() const {
  const ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* p = cnnbasedparkingslots_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable*>(
      &::pb::si::cnn_based_parking_slot_serializable::_CnnBasedParkingSlotSerializable_default_instance_);
}
inline const ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable& HighPlotData::cnnbasedparkingslots() const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData.cnnBasedParkingSlots)
  return _internal_cnnbasedparkingslots();
}
inline ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* HighPlotData::release_cnnbasedparkingslots() {
  // @@protoc_insertion_point(field_release:pb.si.high_plot_data.HighPlotData.cnnBasedParkingSlots)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* temp = cnnbasedparkingslots_;
  cnnbasedparkingslots_ = nullptr;
  return temp;
}
inline ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* HighPlotData::_internal_mutable_cnnbasedparkingslots() {
  _has_bits_[0] |= 0x00000002u;
  if (cnnbasedparkingslots_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable>(GetArenaNoVirtual());
    cnnbasedparkingslots_ = p;
  }
  return cnnbasedparkingslots_;
}
inline ::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* HighPlotData::mutable_cnnbasedparkingslots() {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData.cnnBasedParkingSlots)
  return _internal_mutable_cnnbasedparkingslots();
}
inline void HighPlotData::set_allocated_cnnbasedparkingslots(::pb::si::cnn_based_parking_slot_serializable::CnnBasedParkingSlotSerializable* cnnbasedparkingslots) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cnnbasedparkingslots_);
  }
  if (cnnbasedparkingslots) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cnnbasedparkingslots = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cnnbasedparkingslots, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  cnnbasedparkingslots_ = cnnbasedparkingslots;
  // @@protoc_insertion_point(field_set_allocated:pb.si.high_plot_data.HighPlotData.cnnBasedParkingSlots)
}

// -------------------------------------------------------------------

// HighPlotData_array_port

// repeated .pb.si.high_plot_data.HighPlotData data = 3914;
inline int HighPlotData_array_port::_internal_data_size() const {
  return data_.size();
}
inline int HighPlotData_array_port::data_size() const {
  return _internal_data_size();
}
inline void HighPlotData_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::si::high_plot_data::HighPlotData* HighPlotData_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.si.high_plot_data.HighPlotData_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::high_plot_data::HighPlotData >*
HighPlotData_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.si.high_plot_data.HighPlotData_array_port.data)
  return &data_;
}
inline const ::pb::si::high_plot_data::HighPlotData& HighPlotData_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::si::high_plot_data::HighPlotData& HighPlotData_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.si.high_plot_data.HighPlotData_array_port.data)
  return _internal_data(index);
}
inline ::pb::si::high_plot_data::HighPlotData* HighPlotData_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::si::high_plot_data::HighPlotData* HighPlotData_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.si.high_plot_data.HighPlotData_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::high_plot_data::HighPlotData >&
HighPlotData_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.si.high_plot_data.HighPlotData_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace high_plot_data
}  // namespace si
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_si_2fhigh_5fplot_5fdata_2eproto
