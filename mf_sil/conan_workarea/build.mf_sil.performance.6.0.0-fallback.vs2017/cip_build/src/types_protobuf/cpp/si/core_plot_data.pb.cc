// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: si/core_plot_data.proto

#include "si/core_plot_data.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_si_2fcore_5fplot_5fdata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<10> scc_info_CorePlotData_si_2fcore_5fplot_5fdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fcore_5fslot_5fprototype_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CoreSlotPrototype_si_2fcore_5fslot_5fprototype_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fline_5fsegment_5fserializable_5farray_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LineSegmentSerializableArray_si_2fline_5fsegment_5fserializable_5farray_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fnew_5fdetected_5fslot_5fcandidate_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NewDetectedSlotCandidateSerializable_si_2fnew_5fdetected_5fslot_5fcandidate_5fserializable_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2foptimization_5fresult_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OptimizationResultSerializable_si_2foptimization_5fresult_5fserializable_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fpull_5fcorner_5fpoly_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PullCornerPolySerializable_si_2fpull_5fcorner_5fpoly_5fserializable_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fpull_5fcorner_5frect_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PullCornerRectSerializable_si_2fpull_5fcorner_5frect_5fserializable_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fquadrilateral_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_QuadrilateralSerializable_si_2fquadrilateral_5fserializable_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fquadrilateral_5fserializable_5farray_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_QuadrilateralSerializableArray_si_2fquadrilateral_5fserializable_5farray_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fsint32_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Sint32Serializable_si_2fsint32_5fserializable_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fuint16_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Uint16Serializable_si_2fuint16_5fserializable_2eproto;
namespace pb {
namespace si {
namespace core_plot_data {
class CorePlotDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CorePlotData> _instance;
} _CorePlotData_default_instance_;
class CorePlotData_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CorePlotData_array_port> _instance;
} _CorePlotData_array_port_default_instance_;
}  // namespace core_plot_data
}  // namespace si
}  // namespace pb
static void InitDefaultsscc_info_CorePlotData_si_2fcore_5fplot_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::si::core_plot_data::_CorePlotData_default_instance_;
    new (ptr) ::pb::si::core_plot_data::CorePlotData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::si::core_plot_data::CorePlotData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<10> scc_info_CorePlotData_si_2fcore_5fplot_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 10, 0, InitDefaultsscc_info_CorePlotData_si_2fcore_5fplot_5fdata_2eproto}, {
      &scc_info_PullCornerRectSerializable_si_2fpull_5fcorner_5frect_5fserializable_2eproto.base,
      &scc_info_PullCornerPolySerializable_si_2fpull_5fcorner_5fpoly_5fserializable_2eproto.base,
      &scc_info_QuadrilateralSerializable_si_2fquadrilateral_5fserializable_2eproto.base,
      &scc_info_CoreSlotPrototype_si_2fcore_5fslot_5fprototype_2eproto.base,
      &scc_info_QuadrilateralSerializableArray_si_2fquadrilateral_5fserializable_5farray_2eproto.base,
      &scc_info_OptimizationResultSerializable_si_2foptimization_5fresult_5fserializable_2eproto.base,
      &scc_info_LineSegmentSerializableArray_si_2fline_5fsegment_5fserializable_5farray_2eproto.base,
      &scc_info_NewDetectedSlotCandidateSerializable_si_2fnew_5fdetected_5fslot_5fcandidate_5fserializable_2eproto.base,
      &scc_info_Uint16Serializable_si_2fuint16_5fserializable_2eproto.base,
      &scc_info_Sint32Serializable_si_2fsint32_5fserializable_2eproto.base,}};

static void InitDefaultsscc_info_CorePlotData_array_port_si_2fcore_5fplot_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::si::core_plot_data::_CorePlotData_array_port_default_instance_;
    new (ptr) ::pb::si::core_plot_data::CorePlotData_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::si::core_plot_data::CorePlotData_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CorePlotData_array_port_si_2fcore_5fplot_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CorePlotData_array_port_si_2fcore_5fplot_5fdata_2eproto}, {
      &scc_info_CorePlotData_si_2fcore_5fplot_5fdata_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_si_2fcore_5fplot_5fdata_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_si_2fcore_5fplot_5fdata_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_si_2fcore_5fplot_5fdata_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_si_2fcore_5fplot_5fdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, pullrects_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, pullpolys_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, parkingslotupdateroi_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, parkingslottrackingroi_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, perpendicular_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, parallel_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, garage_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, rawgpparkingslots_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, diagonalactual_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, positionmanagerinitialslots_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, positionmanagerrois_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, positionmanageradjustedrois_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, blowupmanagerroileft_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, blowupmanageradjustedroileft_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, blowupmanagerroiright_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, blowupmanageradjustedroiright_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, blowupmanagerroicurb_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, blowupmanageradjustedroicurb_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, collisionmanagerresult_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, slotopeningbeforeextension_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, selectedslot_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, sensingarea_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, roileft_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, roiright_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, roifront_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, roileftcore_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, roirightcore_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, newdetectedslotcandidate_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, lastestimatedscenario_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, lastestimatedscenarioside_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, irrelevantobjid_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData, scores_),
  12,
  27,
  24,
  8,
  11,
  1,
  15,
  6,
  7,
  16,
  25,
  5,
  2,
  21,
  4,
  17,
  19,
  9,
  14,
  22,
  31,
  28,
  13,
  0,
  18,
  26,
  3,
  10,
  30,
  29,
  23,
  20,
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::si::core_plot_data::CorePlotData_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 37, sizeof(::pb::si::core_plot_data::CorePlotData)},
  { 69, 75, sizeof(::pb::si::core_plot_data::CorePlotData_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::si::core_plot_data::_CorePlotData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::si::core_plot_data::_CorePlotData_array_port_default_instance_),
};

const char descriptor_table_protodef_si_2fcore_5fplot_5fdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027si/core_plot_data.proto\022\024pb.si.core_pl"
  "ot_data\032&si/pull_corner_rect_serializabl"
  "e.proto\032&si/pull_corner_poly_serializabl"
  "e.proto\032#si/quadrilateral_serializable.p"
  "roto\032\034si/core_slot_prototype.proto\032)si/q"
  "uadrilateral_serializable_array.proto\032)s"
  "i/optimization_result_serializable.proto"
  "\032(si/line_segment_serializable_array.pro"
  "to\0321si/new_detected_slot_candidate_seria"
  "lizable.proto\032\037si/parking_scenario_types"
  ".proto\032$si/parking_scenario_side_types.p"
  "roto\032\034si/uint16_serializable.proto\032\034si/s"
  "int32_serializable.proto\"\325\026\n\014CorePlotDat"
  "a\022S\n\tpullRects\030\247\017 \001(\0132\?.pb.si.pull_corne"
  "r_rect_serializable.PullCornerRectSerial"
  "izable\022S\n\tpullPolys\030\222\036 \001(\0132\?.pb.si.pull_"
  "corner_poly_serializable.PullCornerPolyS"
  "erializable\022Z\n\024parkingSlotUpdateRoi\030\250\033 \001"
  "(\0132;.pb.si.quadrilateral_serializable.Qu"
  "adrilateralSerializable\022\\\n\026parkingSlotTr"
  "ackingRoi\030\343\014 \001(\0132;.pb.si.quadrilateral_s"
  "erializable.QuadrilateralSerializable\022D\n"
  "\rperpendicular\030\217\017 \001(\0132,.pb.si.core_slot_"
  "prototype.CoreSlotPrototype\022\?\n\010parallel\030"
  "\263\002 \001(\0132,.pb.si.core_slot_prototype.CoreS"
  "lotPrototype\022=\n\006garage\030\213\025 \001(\0132,.pb.si.co"
  "re_slot_prototype.CoreSlotPrototype\022b\n\021r"
  "awGpParkingSlots\030\333\010 \001(\0132F.pb.si.quadrila"
  "teral_serializable_array.QuadrilateralSe"
  "rializableArray\022_\n\016diagonalActual\030\242\n \001(\013"
  "2F.pb.si.quadrilateral_serializable_arra"
  "y.QuadrilateralSerializableArray\022l\n\033posi"
  "tionManagerInitialSlots\030\223\025 \001(\0132F.pb.si.q"
  "uadrilateral_serializable_array.Quadrila"
  "teralSerializableArray\022d\n\023positionManage"
  "rRois\030\216\034 \001(\0132F.pb.si.quadrilateral_seria"
  "lizable_array.QuadrilateralSerializableA"
  "rray\022l\n\033positionManagerAdjustedRois\030\272\007 \001"
  "(\0132F.pb.si.quadrilateral_serializable_ar"
  "ray.QuadrilateralSerializableArray\022e\n\024bl"
  "owUpManagerRoiLeft\030\377\002 \001(\0132F.pb.si.quadri"
  "lateral_serializable_array.Quadrilateral"
  "SerializableArray\022m\n\034blowUpManagerAdjust"
  "edRoiLeft\030\321\030 \001(\0132F.pb.si.quadrilateral_s"
  "erializable_array.QuadrilateralSerializa"
  "bleArray\022f\n\025blowUpManagerRoiRight\030\207\006 \001(\013"
  "2F.pb.si.quadrilateral_serializable_arra"
  "y.QuadrilateralSerializableArray\022n\n\035blow"
  "UpManagerAdjustedRoiRight\030\361\026 \001(\0132F.pb.si"
  ".quadrilateral_serializable_array.Quadri"
  "lateralSerializableArray\022e\n\024blowUpManage"
  "rRoiCurb\030\262\027 \001(\0132F.pb.si.quadrilateral_se"
  "rializable_array.QuadrilateralSerializab"
  "leArray\022m\n\034blowUpManagerAdjustedRoiCurb\030"
  "\234\r \001(\0132F.pb.si.quadrilateral_serializabl"
  "e_array.QuadrilateralSerializableArray\022g"
  "\n\026collisionManagerResult\030\237\022 \001(\0132F.pb.si."
  "optimization_result_serializable.Optimiz"
  "ationResultSerializable\022h\n\032slotOpeningBe"
  "foreExtension\030\335\032 \001(\0132C.pb.si.line_segmen"
  "t_serializable_array.LineSegmentSerializ"
  "ableArray\022\030\n\017selectedSlot_nu\030\232\031 \001(\r\022Q\n\013s"
  "ensingArea\030\371\036 \001(\0132;.pb.si.quadrilateral_"
  "serializable.QuadrilateralSerializable\022M"
  "\n\007roiLeft\030\313\021 \001(\0132;.pb.si.quadrilateral_s"
  "erializable.QuadrilateralSerializable\022M\n"
  "\010roiRight\030} \001(\0132;.pb.si.quadrilateral_se"
  "rializable.QuadrilateralSerializable\022N\n\010"
  "roiFront\030\236\027 \001(\0132;.pb.si.quadrilateral_se"
  "rializable.QuadrilateralSerializable\022Q\n\013"
  "roiLeftCore\030\337\035 \001(\0132;.pb.si.quadrilateral"
  "_serializable.QuadrilateralSerializable\022"
  "R\n\014roiRightCore\030\334\003 \001(\0132;.pb.si.quadrilat"
  "eral_serializable.QuadrilateralSerializa"
  "ble\022w\n\030newDetectedSlotCandidate\030\324\r \001(\0132T"
  ".pb.si.new_detected_slot_candidate_seria"
  "lizable.NewDetectedSlotCandidateSerializ"
  "able\022U\n\030lastEstimatedScenario_nu\030\200\n \001(\0162"
  "2.pb.si.parking_scenario_types.ParkingSc"
  "enarioTypes\022b\n\034lastEstimatedScenarioSide"
  "_nu\030\256\034 \001(\0162;.pb.si.parking_scenario_side"
  "_types.ParkingScenarioSideTypes\022G\n\017irrel"
  "evantObjId\030\204\033 \001(\0132-.pb.si.uint16_seriali"
  "zable.Uint16Serializable\022>\n\006scores\030\341\027 \001("
  "\0132-.pb.si.sint32_serializable.Sint32Seri"
  "alizable\"L\n\027CorePlotData_array_port\0221\n\004d"
  "ata\030\330\005 \003(\0132\".pb.si.core_plot_data.CorePl"
  "otData"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_si_2fcore_5fplot_5fdata_2eproto_deps[12] = {
  &::descriptor_table_si_2fcore_5fslot_5fprototype_2eproto,
  &::descriptor_table_si_2fline_5fsegment_5fserializable_5farray_2eproto,
  &::descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_5fserializable_2eproto,
  &::descriptor_table_si_2foptimization_5fresult_5fserializable_2eproto,
  &::descriptor_table_si_2fparking_5fscenario_5fside_5ftypes_2eproto,
  &::descriptor_table_si_2fparking_5fscenario_5ftypes_2eproto,
  &::descriptor_table_si_2fpull_5fcorner_5fpoly_5fserializable_2eproto,
  &::descriptor_table_si_2fpull_5fcorner_5frect_5fserializable_2eproto,
  &::descriptor_table_si_2fquadrilateral_5fserializable_2eproto,
  &::descriptor_table_si_2fquadrilateral_5fserializable_5farray_2eproto,
  &::descriptor_table_si_2fsint32_5fserializable_2eproto,
  &::descriptor_table_si_2fuint16_5fserializable_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_si_2fcore_5fplot_5fdata_2eproto_sccs[2] = {
  &scc_info_CorePlotData_si_2fcore_5fplot_5fdata_2eproto.base,
  &scc_info_CorePlotData_array_port_si_2fcore_5fplot_5fdata_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_si_2fcore_5fplot_5fdata_2eproto_once;
static bool descriptor_table_si_2fcore_5fplot_5fdata_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_si_2fcore_5fplot_5fdata_2eproto = {
  &descriptor_table_si_2fcore_5fplot_5fdata_2eproto_initialized, descriptor_table_protodef_si_2fcore_5fplot_5fdata_2eproto, "si/core_plot_data.proto", 3486,
  &descriptor_table_si_2fcore_5fplot_5fdata_2eproto_once, descriptor_table_si_2fcore_5fplot_5fdata_2eproto_sccs, descriptor_table_si_2fcore_5fplot_5fdata_2eproto_deps, 2, 12,
  schemas, file_default_instances, TableStruct_si_2fcore_5fplot_5fdata_2eproto::offsets,
  file_level_metadata_si_2fcore_5fplot_5fdata_2eproto, 2, file_level_enum_descriptors_si_2fcore_5fplot_5fdata_2eproto, file_level_service_descriptors_si_2fcore_5fplot_5fdata_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_si_2fcore_5fplot_5fdata_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_si_2fcore_5fplot_5fdata_2eproto), true);
namespace pb {
namespace si {
namespace core_plot_data {

// ===================================================================

void CorePlotData::InitAsDefaultInstance() {
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->pullrects_ = const_cast< ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable*>(
      ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->pullpolys_ = const_cast< ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable*>(
      ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->parkingslotupdateroi_ = const_cast< ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      ::pb::si::quadrilateral_serializable::QuadrilateralSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->parkingslottrackingroi_ = const_cast< ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      ::pb::si::quadrilateral_serializable::QuadrilateralSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->perpendicular_ = const_cast< ::pb::si::core_slot_prototype::CoreSlotPrototype*>(
      ::pb::si::core_slot_prototype::CoreSlotPrototype::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->parallel_ = const_cast< ::pb::si::core_slot_prototype::CoreSlotPrototype*>(
      ::pb::si::core_slot_prototype::CoreSlotPrototype::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->garage_ = const_cast< ::pb::si::core_slot_prototype::CoreSlotPrototype*>(
      ::pb::si::core_slot_prototype::CoreSlotPrototype::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->rawgpparkingslots_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->diagonalactual_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->positionmanagerinitialslots_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->positionmanagerrois_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->positionmanageradjustedrois_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->blowupmanagerroileft_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->blowupmanageradjustedroileft_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->blowupmanagerroiright_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->blowupmanageradjustedroiright_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->blowupmanagerroicurb_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->blowupmanageradjustedroicurb_ = const_cast< ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray*>(
      ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->collisionmanagerresult_ = const_cast< ::pb::si::optimization_result_serializable::OptimizationResultSerializable*>(
      ::pb::si::optimization_result_serializable::OptimizationResultSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->slotopeningbeforeextension_ = const_cast< ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray*>(
      ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->sensingarea_ = const_cast< ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      ::pb::si::quadrilateral_serializable::QuadrilateralSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->roileft_ = const_cast< ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      ::pb::si::quadrilateral_serializable::QuadrilateralSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->roiright_ = const_cast< ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      ::pb::si::quadrilateral_serializable::QuadrilateralSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->roifront_ = const_cast< ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      ::pb::si::quadrilateral_serializable::QuadrilateralSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->roileftcore_ = const_cast< ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      ::pb::si::quadrilateral_serializable::QuadrilateralSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->roirightcore_ = const_cast< ::pb::si::quadrilateral_serializable::QuadrilateralSerializable*>(
      ::pb::si::quadrilateral_serializable::QuadrilateralSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->newdetectedslotcandidate_ = const_cast< ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable*>(
      ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->irrelevantobjid_ = const_cast< ::pb::si::uint16_serializable::Uint16Serializable*>(
      ::pb::si::uint16_serializable::Uint16Serializable::internal_default_instance());
  ::pb::si::core_plot_data::_CorePlotData_default_instance_._instance.get_mutable()->scores_ = const_cast< ::pb::si::sint32_serializable::Sint32Serializable*>(
      ::pb::si::sint32_serializable::Sint32Serializable::internal_default_instance());
}
class CorePlotData::_Internal {
 public:
  using HasBits = decltype(std::declval<CorePlotData>()._has_bits_);
  static const ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable& pullrects(const CorePlotData* msg);
  static void set_has_pullrects(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable& pullpolys(const CorePlotData* msg);
  static void set_has_pullpolys(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& parkingslotupdateroi(const CorePlotData* msg);
  static void set_has_parkingslotupdateroi(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& parkingslottrackingroi(const CorePlotData* msg);
  static void set_has_parkingslottrackingroi(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::pb::si::core_slot_prototype::CoreSlotPrototype& perpendicular(const CorePlotData* msg);
  static void set_has_perpendicular(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::pb::si::core_slot_prototype::CoreSlotPrototype& parallel(const CorePlotData* msg);
  static void set_has_parallel(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::pb::si::core_slot_prototype::CoreSlotPrototype& garage(const CorePlotData* msg);
  static void set_has_garage(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& rawgpparkingslots(const CorePlotData* msg);
  static void set_has_rawgpparkingslots(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& diagonalactual(const CorePlotData* msg);
  static void set_has_diagonalactual(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& positionmanagerinitialslots(const CorePlotData* msg);
  static void set_has_positionmanagerinitialslots(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& positionmanagerrois(const CorePlotData* msg);
  static void set_has_positionmanagerrois(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& positionmanageradjustedrois(const CorePlotData* msg);
  static void set_has_positionmanageradjustedrois(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanagerroileft(const CorePlotData* msg);
  static void set_has_blowupmanagerroileft(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanageradjustedroileft(const CorePlotData* msg);
  static void set_has_blowupmanageradjustedroileft(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanagerroiright(const CorePlotData* msg);
  static void set_has_blowupmanagerroiright(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanageradjustedroiright(const CorePlotData* msg);
  static void set_has_blowupmanageradjustedroiright(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanagerroicurb(const CorePlotData* msg);
  static void set_has_blowupmanagerroicurb(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray& blowupmanageradjustedroicurb(const CorePlotData* msg);
  static void set_has_blowupmanageradjustedroicurb(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::pb::si::optimization_result_serializable::OptimizationResultSerializable& collisionmanagerresult(const CorePlotData* msg);
  static void set_has_collisionmanagerresult(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray& slotopeningbeforeextension(const CorePlotData* msg);
  static void set_has_slotopeningbeforeextension(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_selectedslot_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& sensingarea(const CorePlotData* msg);
  static void set_has_sensingarea(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& roileft(const CorePlotData* msg);
  static void set_has_roileft(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& roiright(const CorePlotData* msg);
  static void set_has_roiright(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& roifront(const CorePlotData* msg);
  static void set_has_roifront(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& roileftcore(const CorePlotData* msg);
  static void set_has_roileftcore(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable& roirightcore(const CorePlotData* msg);
  static void set_has_roirightcore(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable& newdetectedslotcandidate(const CorePlotData* msg);
  static void set_has_newdetectedslotcandidate(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_lastestimatedscenario_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_lastestimatedscenarioside_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::pb::si::uint16_serializable::Uint16Serializable& irrelevantobjid(const CorePlotData* msg);
  static void set_has_irrelevantobjid(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::pb::si::sint32_serializable::Sint32Serializable& scores(const CorePlotData* msg);
  static void set_has_scores(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
};

const ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable&
CorePlotData::_Internal::pullrects(const CorePlotData* msg) {
  return *msg->pullrects_;
}
const ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable&
CorePlotData::_Internal::pullpolys(const CorePlotData* msg) {
  return *msg->pullpolys_;
}
const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable&
CorePlotData::_Internal::parkingslotupdateroi(const CorePlotData* msg) {
  return *msg->parkingslotupdateroi_;
}
const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable&
CorePlotData::_Internal::parkingslottrackingroi(const CorePlotData* msg) {
  return *msg->parkingslottrackingroi_;
}
const ::pb::si::core_slot_prototype::CoreSlotPrototype&
CorePlotData::_Internal::perpendicular(const CorePlotData* msg) {
  return *msg->perpendicular_;
}
const ::pb::si::core_slot_prototype::CoreSlotPrototype&
CorePlotData::_Internal::parallel(const CorePlotData* msg) {
  return *msg->parallel_;
}
const ::pb::si::core_slot_prototype::CoreSlotPrototype&
CorePlotData::_Internal::garage(const CorePlotData* msg) {
  return *msg->garage_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::rawgpparkingslots(const CorePlotData* msg) {
  return *msg->rawgpparkingslots_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::diagonalactual(const CorePlotData* msg) {
  return *msg->diagonalactual_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::positionmanagerinitialslots(const CorePlotData* msg) {
  return *msg->positionmanagerinitialslots_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::positionmanagerrois(const CorePlotData* msg) {
  return *msg->positionmanagerrois_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::positionmanageradjustedrois(const CorePlotData* msg) {
  return *msg->positionmanageradjustedrois_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::blowupmanagerroileft(const CorePlotData* msg) {
  return *msg->blowupmanagerroileft_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::blowupmanageradjustedroileft(const CorePlotData* msg) {
  return *msg->blowupmanageradjustedroileft_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::blowupmanagerroiright(const CorePlotData* msg) {
  return *msg->blowupmanagerroiright_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::blowupmanageradjustedroiright(const CorePlotData* msg) {
  return *msg->blowupmanageradjustedroiright_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::blowupmanagerroicurb(const CorePlotData* msg) {
  return *msg->blowupmanagerroicurb_;
}
const ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray&
CorePlotData::_Internal::blowupmanageradjustedroicurb(const CorePlotData* msg) {
  return *msg->blowupmanageradjustedroicurb_;
}
const ::pb::si::optimization_result_serializable::OptimizationResultSerializable&
CorePlotData::_Internal::collisionmanagerresult(const CorePlotData* msg) {
  return *msg->collisionmanagerresult_;
}
const ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray&
CorePlotData::_Internal::slotopeningbeforeextension(const CorePlotData* msg) {
  return *msg->slotopeningbeforeextension_;
}
const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable&
CorePlotData::_Internal::sensingarea(const CorePlotData* msg) {
  return *msg->sensingarea_;
}
const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable&
CorePlotData::_Internal::roileft(const CorePlotData* msg) {
  return *msg->roileft_;
}
const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable&
CorePlotData::_Internal::roiright(const CorePlotData* msg) {
  return *msg->roiright_;
}
const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable&
CorePlotData::_Internal::roifront(const CorePlotData* msg) {
  return *msg->roifront_;
}
const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable&
CorePlotData::_Internal::roileftcore(const CorePlotData* msg) {
  return *msg->roileftcore_;
}
const ::pb::si::quadrilateral_serializable::QuadrilateralSerializable&
CorePlotData::_Internal::roirightcore(const CorePlotData* msg) {
  return *msg->roirightcore_;
}
const ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable&
CorePlotData::_Internal::newdetectedslotcandidate(const CorePlotData* msg) {
  return *msg->newdetectedslotcandidate_;
}
const ::pb::si::uint16_serializable::Uint16Serializable&
CorePlotData::_Internal::irrelevantobjid(const CorePlotData* msg) {
  return *msg->irrelevantobjid_;
}
const ::pb::si::sint32_serializable::Sint32Serializable&
CorePlotData::_Internal::scores(const CorePlotData* msg) {
  return *msg->scores_;
}
void CorePlotData::clear_pullrects() {
  if (pullrects_ != nullptr) pullrects_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void CorePlotData::clear_pullpolys() {
  if (pullpolys_ != nullptr) pullpolys_->Clear();
  _has_bits_[0] &= ~0x08000000u;
}
void CorePlotData::clear_parkingslotupdateroi() {
  if (parkingslotupdateroi_ != nullptr) parkingslotupdateroi_->Clear();
  _has_bits_[0] &= ~0x01000000u;
}
void CorePlotData::clear_parkingslottrackingroi() {
  if (parkingslottrackingroi_ != nullptr) parkingslottrackingroi_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void CorePlotData::clear_perpendicular() {
  if (perpendicular_ != nullptr) perpendicular_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void CorePlotData::clear_parallel() {
  if (parallel_ != nullptr) parallel_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void CorePlotData::clear_garage() {
  if (garage_ != nullptr) garage_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
void CorePlotData::clear_rawgpparkingslots() {
  if (rawgpparkingslots_ != nullptr) rawgpparkingslots_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
void CorePlotData::clear_diagonalactual() {
  if (diagonalactual_ != nullptr) diagonalactual_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void CorePlotData::clear_positionmanagerinitialslots() {
  if (positionmanagerinitialslots_ != nullptr) positionmanagerinitialslots_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
void CorePlotData::clear_positionmanagerrois() {
  if (positionmanagerrois_ != nullptr) positionmanagerrois_->Clear();
  _has_bits_[0] &= ~0x02000000u;
}
void CorePlotData::clear_positionmanageradjustedrois() {
  if (positionmanageradjustedrois_ != nullptr) positionmanageradjustedrois_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void CorePlotData::clear_blowupmanagerroileft() {
  if (blowupmanagerroileft_ != nullptr) blowupmanagerroileft_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void CorePlotData::clear_blowupmanageradjustedroileft() {
  if (blowupmanageradjustedroileft_ != nullptr) blowupmanageradjustedroileft_->Clear();
  _has_bits_[0] &= ~0x00200000u;
}
void CorePlotData::clear_blowupmanagerroiright() {
  if (blowupmanagerroiright_ != nullptr) blowupmanagerroiright_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void CorePlotData::clear_blowupmanageradjustedroiright() {
  if (blowupmanageradjustedroiright_ != nullptr) blowupmanageradjustedroiright_->Clear();
  _has_bits_[0] &= ~0x00020000u;
}
void CorePlotData::clear_blowupmanagerroicurb() {
  if (blowupmanagerroicurb_ != nullptr) blowupmanagerroicurb_->Clear();
  _has_bits_[0] &= ~0x00080000u;
}
void CorePlotData::clear_blowupmanageradjustedroicurb() {
  if (blowupmanageradjustedroicurb_ != nullptr) blowupmanageradjustedroicurb_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void CorePlotData::clear_collisionmanagerresult() {
  if (collisionmanagerresult_ != nullptr) collisionmanagerresult_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void CorePlotData::clear_slotopeningbeforeextension() {
  if (slotopeningbeforeextension_ != nullptr) slotopeningbeforeextension_->Clear();
  _has_bits_[0] &= ~0x00400000u;
}
void CorePlotData::clear_sensingarea() {
  if (sensingarea_ != nullptr) sensingarea_->Clear();
  _has_bits_[0] &= ~0x10000000u;
}
void CorePlotData::clear_roileft() {
  if (roileft_ != nullptr) roileft_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void CorePlotData::clear_roiright() {
  if (roiright_ != nullptr) roiright_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void CorePlotData::clear_roifront() {
  if (roifront_ != nullptr) roifront_->Clear();
  _has_bits_[0] &= ~0x00040000u;
}
void CorePlotData::clear_roileftcore() {
  if (roileftcore_ != nullptr) roileftcore_->Clear();
  _has_bits_[0] &= ~0x04000000u;
}
void CorePlotData::clear_roirightcore() {
  if (roirightcore_ != nullptr) roirightcore_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void CorePlotData::clear_newdetectedslotcandidate() {
  if (newdetectedslotcandidate_ != nullptr) newdetectedslotcandidate_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
void CorePlotData::clear_irrelevantobjid() {
  if (irrelevantobjid_ != nullptr) irrelevantobjid_->Clear();
  _has_bits_[0] &= ~0x00800000u;
}
void CorePlotData::clear_scores() {
  if (scores_ != nullptr) scores_->Clear();
  _has_bits_[0] &= ~0x00100000u;
}
CorePlotData::CorePlotData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.si.core_plot_data.CorePlotData)
}
CorePlotData::CorePlotData(const CorePlotData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_roiright()) {
    roiright_ = new ::pb::si::quadrilateral_serializable::QuadrilateralSerializable(*from.roiright_);
  } else {
    roiright_ = nullptr;
  }
  if (from._internal_has_parallel()) {
    parallel_ = new ::pb::si::core_slot_prototype::CoreSlotPrototype(*from.parallel_);
  } else {
    parallel_ = nullptr;
  }
  if (from._internal_has_blowupmanagerroileft()) {
    blowupmanagerroileft_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.blowupmanagerroileft_);
  } else {
    blowupmanagerroileft_ = nullptr;
  }
  if (from._internal_has_roirightcore()) {
    roirightcore_ = new ::pb::si::quadrilateral_serializable::QuadrilateralSerializable(*from.roirightcore_);
  } else {
    roirightcore_ = nullptr;
  }
  if (from._internal_has_blowupmanagerroiright()) {
    blowupmanagerroiright_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.blowupmanagerroiright_);
  } else {
    blowupmanagerroiright_ = nullptr;
  }
  if (from._internal_has_positionmanageradjustedrois()) {
    positionmanageradjustedrois_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.positionmanageradjustedrois_);
  } else {
    positionmanageradjustedrois_ = nullptr;
  }
  if (from._internal_has_rawgpparkingslots()) {
    rawgpparkingslots_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.rawgpparkingslots_);
  } else {
    rawgpparkingslots_ = nullptr;
  }
  if (from._internal_has_diagonalactual()) {
    diagonalactual_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.diagonalactual_);
  } else {
    diagonalactual_ = nullptr;
  }
  if (from._internal_has_parkingslottrackingroi()) {
    parkingslottrackingroi_ = new ::pb::si::quadrilateral_serializable::QuadrilateralSerializable(*from.parkingslottrackingroi_);
  } else {
    parkingslottrackingroi_ = nullptr;
  }
  if (from._internal_has_blowupmanageradjustedroicurb()) {
    blowupmanageradjustedroicurb_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.blowupmanageradjustedroicurb_);
  } else {
    blowupmanageradjustedroicurb_ = nullptr;
  }
  if (from._internal_has_newdetectedslotcandidate()) {
    newdetectedslotcandidate_ = new ::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable(*from.newdetectedslotcandidate_);
  } else {
    newdetectedslotcandidate_ = nullptr;
  }
  if (from._internal_has_perpendicular()) {
    perpendicular_ = new ::pb::si::core_slot_prototype::CoreSlotPrototype(*from.perpendicular_);
  } else {
    perpendicular_ = nullptr;
  }
  if (from._internal_has_pullrects()) {
    pullrects_ = new ::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable(*from.pullrects_);
  } else {
    pullrects_ = nullptr;
  }
  if (from._internal_has_roileft()) {
    roileft_ = new ::pb::si::quadrilateral_serializable::QuadrilateralSerializable(*from.roileft_);
  } else {
    roileft_ = nullptr;
  }
  if (from._internal_has_collisionmanagerresult()) {
    collisionmanagerresult_ = new ::pb::si::optimization_result_serializable::OptimizationResultSerializable(*from.collisionmanagerresult_);
  } else {
    collisionmanagerresult_ = nullptr;
  }
  if (from._internal_has_garage()) {
    garage_ = new ::pb::si::core_slot_prototype::CoreSlotPrototype(*from.garage_);
  } else {
    garage_ = nullptr;
  }
  if (from._internal_has_positionmanagerinitialslots()) {
    positionmanagerinitialslots_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.positionmanagerinitialslots_);
  } else {
    positionmanagerinitialslots_ = nullptr;
  }
  if (from._internal_has_blowupmanageradjustedroiright()) {
    blowupmanageradjustedroiright_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.blowupmanageradjustedroiright_);
  } else {
    blowupmanageradjustedroiright_ = nullptr;
  }
  if (from._internal_has_roifront()) {
    roifront_ = new ::pb::si::quadrilateral_serializable::QuadrilateralSerializable(*from.roifront_);
  } else {
    roifront_ = nullptr;
  }
  if (from._internal_has_blowupmanagerroicurb()) {
    blowupmanagerroicurb_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.blowupmanagerroicurb_);
  } else {
    blowupmanagerroicurb_ = nullptr;
  }
  if (from._internal_has_scores()) {
    scores_ = new ::pb::si::sint32_serializable::Sint32Serializable(*from.scores_);
  } else {
    scores_ = nullptr;
  }
  if (from._internal_has_blowupmanageradjustedroileft()) {
    blowupmanageradjustedroileft_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.blowupmanageradjustedroileft_);
  } else {
    blowupmanageradjustedroileft_ = nullptr;
  }
  if (from._internal_has_slotopeningbeforeextension()) {
    slotopeningbeforeextension_ = new ::pb::si::line_segment_serializable_array::LineSegmentSerializableArray(*from.slotopeningbeforeextension_);
  } else {
    slotopeningbeforeextension_ = nullptr;
  }
  if (from._internal_has_irrelevantobjid()) {
    irrelevantobjid_ = new ::pb::si::uint16_serializable::Uint16Serializable(*from.irrelevantobjid_);
  } else {
    irrelevantobjid_ = nullptr;
  }
  if (from._internal_has_parkingslotupdateroi()) {
    parkingslotupdateroi_ = new ::pb::si::quadrilateral_serializable::QuadrilateralSerializable(*from.parkingslotupdateroi_);
  } else {
    parkingslotupdateroi_ = nullptr;
  }
  if (from._internal_has_positionmanagerrois()) {
    positionmanagerrois_ = new ::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray(*from.positionmanagerrois_);
  } else {
    positionmanagerrois_ = nullptr;
  }
  if (from._internal_has_roileftcore()) {
    roileftcore_ = new ::pb::si::quadrilateral_serializable::QuadrilateralSerializable(*from.roileftcore_);
  } else {
    roileftcore_ = nullptr;
  }
  if (from._internal_has_pullpolys()) {
    pullpolys_ = new ::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable(*from.pullpolys_);
  } else {
    pullpolys_ = nullptr;
  }
  if (from._internal_has_sensingarea()) {
    sensingarea_ = new ::pb::si::quadrilateral_serializable::QuadrilateralSerializable(*from.sensingarea_);
  } else {
    sensingarea_ = nullptr;
  }
  ::memcpy(&lastestimatedscenarioside_nu_, &from.lastestimatedscenarioside_nu_,
    static_cast<size_t>(reinterpret_cast<char*>(&selectedslot_nu_) -
    reinterpret_cast<char*>(&lastestimatedscenarioside_nu_)) + sizeof(selectedslot_nu_));
  // @@protoc_insertion_point(copy_constructor:pb.si.core_plot_data.CorePlotData)
}

void CorePlotData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CorePlotData_si_2fcore_5fplot_5fdata_2eproto.base);
  ::memset(&roiright_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&selectedslot_nu_) -
      reinterpret_cast<char*>(&roiright_)) + sizeof(selectedslot_nu_));
}

CorePlotData::~CorePlotData() {
  // @@protoc_insertion_point(destructor:pb.si.core_plot_data.CorePlotData)
  SharedDtor();
}

void CorePlotData::SharedDtor() {
  if (this != internal_default_instance()) delete roiright_;
  if (this != internal_default_instance()) delete parallel_;
  if (this != internal_default_instance()) delete blowupmanagerroileft_;
  if (this != internal_default_instance()) delete roirightcore_;
  if (this != internal_default_instance()) delete blowupmanagerroiright_;
  if (this != internal_default_instance()) delete positionmanageradjustedrois_;
  if (this != internal_default_instance()) delete rawgpparkingslots_;
  if (this != internal_default_instance()) delete diagonalactual_;
  if (this != internal_default_instance()) delete parkingslottrackingroi_;
  if (this != internal_default_instance()) delete blowupmanageradjustedroicurb_;
  if (this != internal_default_instance()) delete newdetectedslotcandidate_;
  if (this != internal_default_instance()) delete perpendicular_;
  if (this != internal_default_instance()) delete pullrects_;
  if (this != internal_default_instance()) delete roileft_;
  if (this != internal_default_instance()) delete collisionmanagerresult_;
  if (this != internal_default_instance()) delete garage_;
  if (this != internal_default_instance()) delete positionmanagerinitialslots_;
  if (this != internal_default_instance()) delete blowupmanageradjustedroiright_;
  if (this != internal_default_instance()) delete roifront_;
  if (this != internal_default_instance()) delete blowupmanagerroicurb_;
  if (this != internal_default_instance()) delete scores_;
  if (this != internal_default_instance()) delete blowupmanageradjustedroileft_;
  if (this != internal_default_instance()) delete slotopeningbeforeextension_;
  if (this != internal_default_instance()) delete irrelevantobjid_;
  if (this != internal_default_instance()) delete parkingslotupdateroi_;
  if (this != internal_default_instance()) delete positionmanagerrois_;
  if (this != internal_default_instance()) delete roileftcore_;
  if (this != internal_default_instance()) delete pullpolys_;
  if (this != internal_default_instance()) delete sensingarea_;
}

void CorePlotData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CorePlotData& CorePlotData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CorePlotData_si_2fcore_5fplot_5fdata_2eproto.base);
  return *internal_default_instance();
}


void CorePlotData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.si.core_plot_data.CorePlotData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(roiright_ != nullptr);
      roiright_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(parallel_ != nullptr);
      parallel_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(blowupmanagerroileft_ != nullptr);
      blowupmanagerroileft_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(roirightcore_ != nullptr);
      roirightcore_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(blowupmanagerroiright_ != nullptr);
      blowupmanagerroiright_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(positionmanageradjustedrois_ != nullptr);
      positionmanageradjustedrois_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(rawgpparkingslots_ != nullptr);
      rawgpparkingslots_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(diagonalactual_ != nullptr);
      diagonalactual_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(parkingslottrackingroi_ != nullptr);
      parkingslottrackingroi_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(blowupmanageradjustedroicurb_ != nullptr);
      blowupmanageradjustedroicurb_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(newdetectedslotcandidate_ != nullptr);
      newdetectedslotcandidate_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(perpendicular_ != nullptr);
      perpendicular_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(pullrects_ != nullptr);
      pullrects_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(roileft_ != nullptr);
      roileft_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(collisionmanagerresult_ != nullptr);
      collisionmanagerresult_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(garage_ != nullptr);
      garage_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(positionmanagerinitialslots_ != nullptr);
      positionmanagerinitialslots_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(blowupmanageradjustedroiright_ != nullptr);
      blowupmanageradjustedroiright_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(roifront_ != nullptr);
      roifront_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(blowupmanagerroicurb_ != nullptr);
      blowupmanagerroicurb_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(scores_ != nullptr);
      scores_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(blowupmanageradjustedroileft_ != nullptr);
      blowupmanageradjustedroileft_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(slotopeningbeforeextension_ != nullptr);
      slotopeningbeforeextension_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(irrelevantobjid_ != nullptr);
      irrelevantobjid_->Clear();
    }
  }
  if (cached_has_bits & 0x1f000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(parkingslotupdateroi_ != nullptr);
      parkingslotupdateroi_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(positionmanagerrois_ != nullptr);
      positionmanagerrois_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(roileftcore_ != nullptr);
      roileftcore_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(pullpolys_ != nullptr);
      pullpolys_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(sensingarea_ != nullptr);
      sensingarea_->Clear();
    }
  }
  if (cached_has_bits & 0xe0000000u) {
    ::memset(&lastestimatedscenarioside_nu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&selectedslot_nu_) -
        reinterpret_cast<char*>(&lastestimatedscenarioside_nu_)) + sizeof(selectedslot_nu_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* CorePlotData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiRight = 125;
      case 125:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_roiright(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.core_slot_prototype.CoreSlotPrototype parallel = 307;
      case 307:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_parallel(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiLeft = 383;
      case 383:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_blowupmanagerroileft(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiRightCore = 476;
      case 476:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_roirightcore(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiRight = 775;
      case 775:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_blowupmanagerroiright(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerAdjustedRois = 954;
      case 954:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_positionmanageradjustedrois(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray rawGpParkingSlots = 1115;
      case 1115:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_rawgpparkingslots(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.parking_scenario_types.ParkingScenarioTypes lastEstimatedScenario_nu = 1280;
      case 1280:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::si::parking_scenario_types::ParkingScenarioTypes_IsValid(val))) {
            _internal_set_lastestimatedscenario_nu(static_cast<::pb::si::parking_scenario_types::ParkingScenarioTypes>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1280, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray diagonalActual = 1314;
      case 1314:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_diagonalactual(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable parkingSlotTrackingRoi = 1635;
      case 1635:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_parkingslottrackingroi(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiCurb = 1692;
      case 1692:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_blowupmanageradjustedroicurb(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.new_detected_slot_candidate_serializable.NewDetectedSlotCandidateSerializable newDetectedSlotCandidate = 1748;
      case 1748:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_newdetectedslotcandidate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.core_slot_prototype.CoreSlotPrototype perpendicular = 1935;
      case 1935:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_perpendicular(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.pull_corner_rect_serializable.PullCornerRectSerializable pullRects = 1959;
      case 1959:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_pullrects(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiLeft = 2251;
      case 2251:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_roileft(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.optimization_result_serializable.OptimizationResultSerializable collisionManagerResult = 2335;
      case 2335:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_collisionmanagerresult(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.core_slot_prototype.CoreSlotPrototype garage = 2699;
      case 2699:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_garage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerInitialSlots = 2707;
      case 2707:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_positionmanagerinitialslots(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiRight = 2929;
      case 2929:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_blowupmanageradjustedroiright(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiFront = 2974;
      case 2974:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_roifront(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiCurb = 2994;
      case 2994:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_blowupmanagerroicurb(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.sint32_serializable.Sint32Serializable scores = 3041;
      case 3041:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scores(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiLeft = 3153;
      case 3153:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_blowupmanageradjustedroileft(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 selectedSlot_nu = 3226;
      case 3226:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_selectedslot_nu(&has_bits);
          selectedslot_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.line_segment_serializable_array.LineSegmentSerializableArray slotOpeningBeforeExtension = 3421;
      case 3421:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_slotopeningbeforeextension(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.uint16_serializable.Uint16Serializable irrelevantObjId = 3460;
      case 3460:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_irrelevantobjid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable parkingSlotUpdateRoi = 3496;
      case 3496:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_parkingslotupdateroi(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerRois = 3598;
      case 3598:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_positionmanagerrois(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.parking_scenario_side_types.ParkingScenarioSideTypes lastEstimatedScenarioSide_nu = 3630;
      case 3630:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes_IsValid(val))) {
            _internal_set_lastestimatedscenarioside_nu(static_cast<::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3630, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiLeftCore = 3807;
      case 3807:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_roileftcore(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.pull_corner_poly_serializable.PullCornerPolySerializable pullPolys = 3858;
      case 3858:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_pullpolys(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable sensingArea = 3961;
      case 3961:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_sensingarea(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CorePlotData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.si.core_plot_data.CorePlotData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiRight = 125;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        125, _Internal::roiright(this), target, stream);
  }

  // optional .pb.si.core_slot_prototype.CoreSlotPrototype parallel = 307;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        307, _Internal::parallel(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiLeft = 383;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        383, _Internal::blowupmanagerroileft(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiRightCore = 476;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        476, _Internal::roirightcore(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiRight = 775;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        775, _Internal::blowupmanagerroiright(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerAdjustedRois = 954;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        954, _Internal::positionmanageradjustedrois(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray rawGpParkingSlots = 1115;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1115, _Internal::rawgpparkingslots(this), target, stream);
  }

  // optional .pb.si.parking_scenario_types.ParkingScenarioTypes lastEstimatedScenario_nu = 1280;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1280, this->_internal_lastestimatedscenario_nu(), target);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray diagonalActual = 1314;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1314, _Internal::diagonalactual(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable parkingSlotTrackingRoi = 1635;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1635, _Internal::parkingslottrackingroi(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiCurb = 1692;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1692, _Internal::blowupmanageradjustedroicurb(this), target, stream);
  }

  // optional .pb.si.new_detected_slot_candidate_serializable.NewDetectedSlotCandidateSerializable newDetectedSlotCandidate = 1748;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1748, _Internal::newdetectedslotcandidate(this), target, stream);
  }

  // optional .pb.si.core_slot_prototype.CoreSlotPrototype perpendicular = 1935;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1935, _Internal::perpendicular(this), target, stream);
  }

  // optional .pb.si.pull_corner_rect_serializable.PullCornerRectSerializable pullRects = 1959;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1959, _Internal::pullrects(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiLeft = 2251;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2251, _Internal::roileft(this), target, stream);
  }

  // optional .pb.si.optimization_result_serializable.OptimizationResultSerializable collisionManagerResult = 2335;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2335, _Internal::collisionmanagerresult(this), target, stream);
  }

  // optional .pb.si.core_slot_prototype.CoreSlotPrototype garage = 2699;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2699, _Internal::garage(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerInitialSlots = 2707;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2707, _Internal::positionmanagerinitialslots(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiRight = 2929;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2929, _Internal::blowupmanageradjustedroiright(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiFront = 2974;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2974, _Internal::roifront(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiCurb = 2994;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2994, _Internal::blowupmanagerroicurb(this), target, stream);
  }

  // optional .pb.si.sint32_serializable.Sint32Serializable scores = 3041;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3041, _Internal::scores(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiLeft = 3153;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3153, _Internal::blowupmanageradjustedroileft(this), target, stream);
  }

  // optional uint32 selectedSlot_nu = 3226;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3226, this->_internal_selectedslot_nu(), target);
  }

  // optional .pb.si.line_segment_serializable_array.LineSegmentSerializableArray slotOpeningBeforeExtension = 3421;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3421, _Internal::slotopeningbeforeextension(this), target, stream);
  }

  // optional .pb.si.uint16_serializable.Uint16Serializable irrelevantObjId = 3460;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3460, _Internal::irrelevantobjid(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable parkingSlotUpdateRoi = 3496;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3496, _Internal::parkingslotupdateroi(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerRois = 3598;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3598, _Internal::positionmanagerrois(this), target, stream);
  }

  // optional .pb.si.parking_scenario_side_types.ParkingScenarioSideTypes lastEstimatedScenarioSide_nu = 3630;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3630, this->_internal_lastestimatedscenarioside_nu(), target);
  }

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiLeftCore = 3807;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3807, _Internal::roileftcore(this), target, stream);
  }

  // optional .pb.si.pull_corner_poly_serializable.PullCornerPolySerializable pullPolys = 3858;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3858, _Internal::pullpolys(this), target, stream);
  }

  // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable sensingArea = 3961;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3961, _Internal::sensingarea(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.si.core_plot_data.CorePlotData)
  return target;
}

size_t CorePlotData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.si.core_plot_data.CorePlotData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiRight = 125;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *roiright_);
    }

    // optional .pb.si.core_slot_prototype.CoreSlotPrototype parallel = 307;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *parallel_);
    }

    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiLeft = 383;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *blowupmanagerroileft_);
    }

    // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiRightCore = 476;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *roirightcore_);
    }

    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiRight = 775;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *blowupmanagerroiright_);
    }

    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerAdjustedRois = 954;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *positionmanageradjustedrois_);
    }

    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray rawGpParkingSlots = 1115;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *rawgpparkingslots_);
    }

    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray diagonalActual = 1314;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *diagonalactual_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable parkingSlotTrackingRoi = 1635;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *parkingslottrackingroi_);
    }

    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiCurb = 1692;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *blowupmanageradjustedroicurb_);
    }

    // optional .pb.si.new_detected_slot_candidate_serializable.NewDetectedSlotCandidateSerializable newDetectedSlotCandidate = 1748;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *newdetectedslotcandidate_);
    }

    // optional .pb.si.core_slot_prototype.CoreSlotPrototype perpendicular = 1935;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *perpendicular_);
    }

    // optional .pb.si.pull_corner_rect_serializable.PullCornerRectSerializable pullRects = 1959;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pullrects_);
    }

    // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiLeft = 2251;
    if (cached_has_bits & 0x00002000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *roileft_);
    }

    // optional .pb.si.optimization_result_serializable.OptimizationResultSerializable collisionManagerResult = 2335;
    if (cached_has_bits & 0x00004000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *collisionmanagerresult_);
    }

    // optional .pb.si.core_slot_prototype.CoreSlotPrototype garage = 2699;
    if (cached_has_bits & 0x00008000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *garage_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerInitialSlots = 2707;
    if (cached_has_bits & 0x00010000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *positionmanagerinitialslots_);
    }

    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiRight = 2929;
    if (cached_has_bits & 0x00020000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *blowupmanageradjustedroiright_);
    }

    // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiFront = 2974;
    if (cached_has_bits & 0x00040000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *roifront_);
    }

    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerRoiCurb = 2994;
    if (cached_has_bits & 0x00080000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *blowupmanagerroicurb_);
    }

    // optional .pb.si.sint32_serializable.Sint32Serializable scores = 3041;
    if (cached_has_bits & 0x00100000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scores_);
    }

    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray blowUpManagerAdjustedRoiLeft = 3153;
    if (cached_has_bits & 0x00200000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *blowupmanageradjustedroileft_);
    }

    // optional .pb.si.line_segment_serializable_array.LineSegmentSerializableArray slotOpeningBeforeExtension = 3421;
    if (cached_has_bits & 0x00400000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *slotopeningbeforeextension_);
    }

    // optional .pb.si.uint16_serializable.Uint16Serializable irrelevantObjId = 3460;
    if (cached_has_bits & 0x00800000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *irrelevantobjid_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable parkingSlotUpdateRoi = 3496;
    if (cached_has_bits & 0x01000000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *parkingslotupdateroi_);
    }

    // optional .pb.si.quadrilateral_serializable_array.QuadrilateralSerializableArray positionManagerRois = 3598;
    if (cached_has_bits & 0x02000000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *positionmanagerrois_);
    }

    // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable roiLeftCore = 3807;
    if (cached_has_bits & 0x04000000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *roileftcore_);
    }

    // optional .pb.si.pull_corner_poly_serializable.PullCornerPolySerializable pullPolys = 3858;
    if (cached_has_bits & 0x08000000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pullpolys_);
    }

    // optional .pb.si.quadrilateral_serializable.QuadrilateralSerializable sensingArea = 3961;
    if (cached_has_bits & 0x10000000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sensingarea_);
    }

    // optional .pb.si.parking_scenario_side_types.ParkingScenarioSideTypes lastEstimatedScenarioSide_nu = 3630;
    if (cached_has_bits & 0x20000000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lastestimatedscenarioside_nu());
    }

    // optional .pb.si.parking_scenario_types.ParkingScenarioTypes lastEstimatedScenario_nu = 1280;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lastestimatedscenario_nu());
    }

    // optional uint32 selectedSlot_nu = 3226;
    if (cached_has_bits & 0x80000000u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_selectedslot_nu());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CorePlotData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.si.core_plot_data.CorePlotData)
  GOOGLE_DCHECK_NE(&from, this);
  const CorePlotData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CorePlotData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.si.core_plot_data.CorePlotData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.si.core_plot_data.CorePlotData)
    MergeFrom(*source);
  }
}

void CorePlotData::MergeFrom(const CorePlotData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.si.core_plot_data.CorePlotData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_roiright()->::pb::si::quadrilateral_serializable::QuadrilateralSerializable::MergeFrom(from._internal_roiright());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_parallel()->::pb::si::core_slot_prototype::CoreSlotPrototype::MergeFrom(from._internal_parallel());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_blowupmanagerroileft()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_blowupmanagerroileft());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_roirightcore()->::pb::si::quadrilateral_serializable::QuadrilateralSerializable::MergeFrom(from._internal_roirightcore());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_blowupmanagerroiright()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_blowupmanagerroiright());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_positionmanageradjustedrois()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_positionmanageradjustedrois());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_rawgpparkingslots()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_rawgpparkingslots());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_diagonalactual()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_diagonalactual());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_parkingslottrackingroi()->::pb::si::quadrilateral_serializable::QuadrilateralSerializable::MergeFrom(from._internal_parkingslottrackingroi());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_blowupmanageradjustedroicurb()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_blowupmanageradjustedroicurb());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_newdetectedslotcandidate()->::pb::si::new_detected_slot_candidate_serializable::NewDetectedSlotCandidateSerializable::MergeFrom(from._internal_newdetectedslotcandidate());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_perpendicular()->::pb::si::core_slot_prototype::CoreSlotPrototype::MergeFrom(from._internal_perpendicular());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_pullrects()->::pb::si::pull_corner_rect_serializable::PullCornerRectSerializable::MergeFrom(from._internal_pullrects());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_roileft()->::pb::si::quadrilateral_serializable::QuadrilateralSerializable::MergeFrom(from._internal_roileft());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_collisionmanagerresult()->::pb::si::optimization_result_serializable::OptimizationResultSerializable::MergeFrom(from._internal_collisionmanagerresult());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_garage()->::pb::si::core_slot_prototype::CoreSlotPrototype::MergeFrom(from._internal_garage());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_positionmanagerinitialslots()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_positionmanagerinitialslots());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_blowupmanageradjustedroiright()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_blowupmanageradjustedroiright());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_roifront()->::pb::si::quadrilateral_serializable::QuadrilateralSerializable::MergeFrom(from._internal_roifront());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_blowupmanagerroicurb()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_blowupmanagerroicurb());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_scores()->::pb::si::sint32_serializable::Sint32Serializable::MergeFrom(from._internal_scores());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_blowupmanageradjustedroileft()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_blowupmanageradjustedroileft());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_slotopeningbeforeextension()->::pb::si::line_segment_serializable_array::LineSegmentSerializableArray::MergeFrom(from._internal_slotopeningbeforeextension());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_irrelevantobjid()->::pb::si::uint16_serializable::Uint16Serializable::MergeFrom(from._internal_irrelevantobjid());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_parkingslotupdateroi()->::pb::si::quadrilateral_serializable::QuadrilateralSerializable::MergeFrom(from._internal_parkingslotupdateroi());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_positionmanagerrois()->::pb::si::quadrilateral_serializable_array::QuadrilateralSerializableArray::MergeFrom(from._internal_positionmanagerrois());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_roileftcore()->::pb::si::quadrilateral_serializable::QuadrilateralSerializable::MergeFrom(from._internal_roileftcore());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_pullpolys()->::pb::si::pull_corner_poly_serializable::PullCornerPolySerializable::MergeFrom(from._internal_pullpolys());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_sensingarea()->::pb::si::quadrilateral_serializable::QuadrilateralSerializable::MergeFrom(from._internal_sensingarea());
    }
    if (cached_has_bits & 0x20000000u) {
      lastestimatedscenarioside_nu_ = from.lastestimatedscenarioside_nu_;
    }
    if (cached_has_bits & 0x40000000u) {
      lastestimatedscenario_nu_ = from.lastestimatedscenario_nu_;
    }
    if (cached_has_bits & 0x80000000u) {
      selectedslot_nu_ = from.selectedslot_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CorePlotData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.si.core_plot_data.CorePlotData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CorePlotData::CopyFrom(const CorePlotData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.si.core_plot_data.CorePlotData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CorePlotData::IsInitialized() const {
  return true;
}

void CorePlotData::InternalSwap(CorePlotData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(roiright_, other->roiright_);
  swap(parallel_, other->parallel_);
  swap(blowupmanagerroileft_, other->blowupmanagerroileft_);
  swap(roirightcore_, other->roirightcore_);
  swap(blowupmanagerroiright_, other->blowupmanagerroiright_);
  swap(positionmanageradjustedrois_, other->positionmanageradjustedrois_);
  swap(rawgpparkingslots_, other->rawgpparkingslots_);
  swap(diagonalactual_, other->diagonalactual_);
  swap(parkingslottrackingroi_, other->parkingslottrackingroi_);
  swap(blowupmanageradjustedroicurb_, other->blowupmanageradjustedroicurb_);
  swap(newdetectedslotcandidate_, other->newdetectedslotcandidate_);
  swap(perpendicular_, other->perpendicular_);
  swap(pullrects_, other->pullrects_);
  swap(roileft_, other->roileft_);
  swap(collisionmanagerresult_, other->collisionmanagerresult_);
  swap(garage_, other->garage_);
  swap(positionmanagerinitialslots_, other->positionmanagerinitialslots_);
  swap(blowupmanageradjustedroiright_, other->blowupmanageradjustedroiright_);
  swap(roifront_, other->roifront_);
  swap(blowupmanagerroicurb_, other->blowupmanagerroicurb_);
  swap(scores_, other->scores_);
  swap(blowupmanageradjustedroileft_, other->blowupmanageradjustedroileft_);
  swap(slotopeningbeforeextension_, other->slotopeningbeforeextension_);
  swap(irrelevantobjid_, other->irrelevantobjid_);
  swap(parkingslotupdateroi_, other->parkingslotupdateroi_);
  swap(positionmanagerrois_, other->positionmanagerrois_);
  swap(roileftcore_, other->roileftcore_);
  swap(pullpolys_, other->pullpolys_);
  swap(sensingarea_, other->sensingarea_);
  swap(lastestimatedscenarioside_nu_, other->lastestimatedscenarioside_nu_);
  swap(lastestimatedscenario_nu_, other->lastestimatedscenario_nu_);
  swap(selectedslot_nu_, other->selectedslot_nu_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CorePlotData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CorePlotData_array_port::InitAsDefaultInstance() {
}
class CorePlotData_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<CorePlotData_array_port>()._has_bits_);
};

CorePlotData_array_port::CorePlotData_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.si.core_plot_data.CorePlotData_array_port)
}
CorePlotData_array_port::CorePlotData_array_port(const CorePlotData_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.si.core_plot_data.CorePlotData_array_port)
}

void CorePlotData_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CorePlotData_array_port_si_2fcore_5fplot_5fdata_2eproto.base);
}

CorePlotData_array_port::~CorePlotData_array_port() {
  // @@protoc_insertion_point(destructor:pb.si.core_plot_data.CorePlotData_array_port)
  SharedDtor();
}

void CorePlotData_array_port::SharedDtor() {
}

void CorePlotData_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CorePlotData_array_port& CorePlotData_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CorePlotData_array_port_si_2fcore_5fplot_5fdata_2eproto.base);
  return *internal_default_instance();
}


void CorePlotData_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.si.core_plot_data.CorePlotData_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* CorePlotData_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.si.core_plot_data.CorePlotData data = 728;
      case 728:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<5826>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CorePlotData_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.si.core_plot_data.CorePlotData_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.si.core_plot_data.CorePlotData data = 728;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(728, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.si.core_plot_data.CorePlotData_array_port)
  return target;
}

size_t CorePlotData_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.si.core_plot_data.CorePlotData_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.si.core_plot_data.CorePlotData data = 728;
  total_size += 2UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CorePlotData_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.si.core_plot_data.CorePlotData_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const CorePlotData_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CorePlotData_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.si.core_plot_data.CorePlotData_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.si.core_plot_data.CorePlotData_array_port)
    MergeFrom(*source);
  }
}

void CorePlotData_array_port::MergeFrom(const CorePlotData_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.si.core_plot_data.CorePlotData_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void CorePlotData_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.si.core_plot_data.CorePlotData_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CorePlotData_array_port::CopyFrom(const CorePlotData_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.si.core_plot_data.CorePlotData_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CorePlotData_array_port::IsInitialized() const {
  return true;
}

void CorePlotData_array_port::InternalSwap(CorePlotData_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CorePlotData_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core_plot_data
}  // namespace si
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::si::core_plot_data::CorePlotData* Arena::CreateMaybeMessage< ::pb::si::core_plot_data::CorePlotData >(Arena* arena) {
  return Arena::CreateInternal< ::pb::si::core_plot_data::CorePlotData >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::si::core_plot_data::CorePlotData_array_port* Arena::CreateMaybeMessage< ::pb::si::core_plot_data::CorePlotData_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::si::core_plot_data::CorePlotData_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
