// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: si/parking_box_serializable.proto

#include "si/parking_box_serializable.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_cml_2fvec2_5fdf_5fpod_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec2Df_POD_cml_2fvec2_5fdf_5fpod_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fparking_5fbox_5fdelimiter_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParkingBoxDelimiter_si_2fparking_5fbox_5fdelimiter_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fparking_5fbox_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ParkingBoxSerializable_si_2fparking_5fbox_5fserializable_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fslot_5fcoordinates_5fm_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SlotCoordinates_mSerializable_si_2fslot_5fcoordinates_5fm_5fserializable_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_si_2fvirtual_5fline_5fserializable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VirtualLineSerializable_si_2fvirtual_5fline_5fserializable_2eproto;
namespace pb {
namespace si {
namespace parking_box_serializable {
class ParkingBoxSerializableDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParkingBoxSerializable> _instance;
} _ParkingBoxSerializable_default_instance_;
class ParkingBoxSerializable_array_portDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParkingBoxSerializable_array_port> _instance;
} _ParkingBoxSerializable_array_port_default_instance_;
}  // namespace parking_box_serializable
}  // namespace si
}  // namespace pb
static void InitDefaultsscc_info_ParkingBoxSerializable_si_2fparking_5fbox_5fserializable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::si::parking_box_serializable::_ParkingBoxSerializable_default_instance_;
    new (ptr) ::pb::si::parking_box_serializable::ParkingBoxSerializable();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::si::parking_box_serializable::ParkingBoxSerializable::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ParkingBoxSerializable_si_2fparking_5fbox_5fserializable_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_ParkingBoxSerializable_si_2fparking_5fbox_5fserializable_2eproto}, {
      &scc_info_SlotCoordinates_mSerializable_si_2fslot_5fcoordinates_5fm_5fserializable_2eproto.base,
      &scc_info_ParkingBoxDelimiter_si_2fparking_5fbox_5fdelimiter_2eproto.base,
      &scc_info_VirtualLineSerializable_si_2fvirtual_5fline_5fserializable_2eproto.base,
      &scc_info_Vec2Df_POD_cml_2fvec2_5fdf_5fpod_2eproto.base,}};

static void InitDefaultsscc_info_ParkingBoxSerializable_array_port_si_2fparking_5fbox_5fserializable_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::si::parking_box_serializable::_ParkingBoxSerializable_array_port_default_instance_;
    new (ptr) ::pb::si::parking_box_serializable::ParkingBoxSerializable_array_port();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::si::parking_box_serializable::ParkingBoxSerializable_array_port::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ParkingBoxSerializable_array_port_si_2fparking_5fbox_5fserializable_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ParkingBoxSerializable_array_port_si_2fparking_5fbox_5fserializable_2eproto}, {
      &scc_info_ParkingBoxSerializable_si_2fparking_5fbox_5fserializable_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_si_2fparking_5fbox_5fserializable_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_si_2fparking_5fbox_5fserializable_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_si_2fparking_5fbox_5fserializable_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_si_2fparking_5fbox_5fserializable_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, parkingboxid_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, slotcoordinates_m_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, existenceprob_perc_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, parkingscenario_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, parkingscenarioside_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, delimiters_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, numvaliddelimiters_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, numvirtuallines_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, virtuallines_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, groupid_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, priority_nu_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, parkingboxroadsideedge_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, hasvalueparkingboxroadsideedge_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, cnnboxroadsideedge_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable, hasvaluecnnboxroadsideedge_),
  3,
  0,
  8,
  1,
  9,
  ~0u,
  2,
  6,
  ~0u,
  10,
  7,
  ~0u,
  4,
  ~0u,
  5,
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable_array_port, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable_array_port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::si::parking_box_serializable::ParkingBoxSerializable_array_port, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 20, sizeof(::pb::si::parking_box_serializable::ParkingBoxSerializable)},
  { 35, 41, sizeof(::pb::si::parking_box_serializable::ParkingBoxSerializable_array_port)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::si::parking_box_serializable::_ParkingBoxSerializable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::si::parking_box_serializable::_ParkingBoxSerializable_array_port_default_instance_),
};

const char descriptor_table_protodef_si_2fparking_5fbox_5fserializable_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!si/parking_box_serializable.proto\022\036pb."
  "si.parking_box_serializable\032(si/slot_coo"
  "rdinates_m_serializable.proto\032\037si/parkin"
  "g_scenario_types.proto\032$si/parking_scena"
  "rio_side_types.proto\032\036si/parking_box_del"
  "imiter.proto\032\"si/virtual_line_serializab"
  "le.proto\032\025cml/vec2_df_pod.proto\"\253\006\n\026Park"
  "ingBoxSerializable\022\030\n\017parkingBoxID_nu\030\274\003"
  " \001(\r\022`\n\021slotCoordinates_m\030\322\002 \001(\0132D.pb.si"
  ".slot_coordinates_m_serializable.SlotCoo"
  "rdinates_mSerializable\022\033\n\022existenceProb_"
  "perc\030\370\022 \001(\r\022O\n\022parkingScenario_nu\030\376\037 \001(\016"
  "22.pb.si.parking_scenario_types.ParkingS"
  "cenarioTypes\022\\\n\026parkingScenarioSide_nu\030\352"
  "\036 \001(\0162;.pb.si.parking_scenario_side_type"
  "s.ParkingScenarioSideTypes\022E\n\ndelimiters"
  "\030\271\016 \003(\01320.pb.si.parking_box_delimiter.Pa"
  "rkingBoxDelimiter\022\036\n\025numValidDelimiters_"
  "nu\030\344\001 \001(\r\022\033\n\022numVirtualLines_nu\030\225\t \001(\r\022N"
  "\n\014virtualLines\030\035 \003(\01328.pb.si.virtual_lin"
  "e_serializable.VirtualLineSerializable\022\023"
  "\n\ngroupID_nu\030\366\036 \001(\r\022\024\n\013priority_nu\030\333\014 \001("
  "\r\022\?\n\026parkingBoxRoadSideEdge\030\262\026 \003(\0132\036.pb."
  "cml.vec2_df_pod.Vec2Df_POD\022\'\n\036hasValuePa"
  "rkingBoxRoadSideEdge\030\303\t \001(\010\022;\n\022cnnBoxRoa"
  "dSideEdge\030\325\007 \003(\0132\036.pb.cml.vec2_df_pod.Ve"
  "c2Df_POD\022#\n\032hasValueCnnBoxRoadSideEdge\030\221"
  "\007 \001(\010\"j\n!ParkingBoxSerializable_array_po"
  "rt\022E\n\004data\030\272\021 \003(\01326.pb.si.parking_box_se"
  "rializable.ParkingBoxSerializable"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_si_2fparking_5fbox_5fserializable_2eproto_deps[6] = {
  &::descriptor_table_cml_2fvec2_5fdf_5fpod_2eproto,
  &::descriptor_table_si_2fparking_5fbox_5fdelimiter_2eproto,
  &::descriptor_table_si_2fparking_5fscenario_5fside_5ftypes_2eproto,
  &::descriptor_table_si_2fparking_5fscenario_5ftypes_2eproto,
  &::descriptor_table_si_2fslot_5fcoordinates_5fm_5fserializable_2eproto,
  &::descriptor_table_si_2fvirtual_5fline_5fserializable_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_si_2fparking_5fbox_5fserializable_2eproto_sccs[2] = {
  &scc_info_ParkingBoxSerializable_si_2fparking_5fbox_5fserializable_2eproto.base,
  &scc_info_ParkingBoxSerializable_array_port_si_2fparking_5fbox_5fserializable_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_si_2fparking_5fbox_5fserializable_2eproto_once;
static bool descriptor_table_si_2fparking_5fbox_5fserializable_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_si_2fparking_5fbox_5fserializable_2eproto = {
  &descriptor_table_si_2fparking_5fbox_5fserializable_2eproto_initialized, descriptor_table_protodef_si_2fparking_5fbox_5fserializable_2eproto, "si/parking_box_serializable.proto", 1193,
  &descriptor_table_si_2fparking_5fbox_5fserializable_2eproto_once, descriptor_table_si_2fparking_5fbox_5fserializable_2eproto_sccs, descriptor_table_si_2fparking_5fbox_5fserializable_2eproto_deps, 2, 6,
  schemas, file_default_instances, TableStruct_si_2fparking_5fbox_5fserializable_2eproto::offsets,
  file_level_metadata_si_2fparking_5fbox_5fserializable_2eproto, 2, file_level_enum_descriptors_si_2fparking_5fbox_5fserializable_2eproto, file_level_service_descriptors_si_2fparking_5fbox_5fserializable_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_si_2fparking_5fbox_5fserializable_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_si_2fparking_5fbox_5fserializable_2eproto), true);
namespace pb {
namespace si {
namespace parking_box_serializable {

// ===================================================================

void ParkingBoxSerializable::InitAsDefaultInstance() {
  ::pb::si::parking_box_serializable::_ParkingBoxSerializable_default_instance_._instance.get_mutable()->slotcoordinates_m_ = const_cast< ::pb::si::slot_coordinates_m_serializable::SlotCoordinates_mSerializable*>(
      ::pb::si::slot_coordinates_m_serializable::SlotCoordinates_mSerializable::internal_default_instance());
}
class ParkingBoxSerializable::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingBoxSerializable>()._has_bits_);
  static void set_has_parkingboxid_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::pb::si::slot_coordinates_m_serializable::SlotCoordinates_mSerializable& slotcoordinates_m(const ParkingBoxSerializable* msg);
  static void set_has_slotcoordinates_m(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_existenceprob_perc(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_parkingscenario_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_parkingscenarioside_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_numvaliddelimiters_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_numvirtuallines_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_groupid_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_priority_nu(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_hasvalueparkingboxroadsideedge(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_hasvaluecnnboxroadsideedge(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::pb::si::slot_coordinates_m_serializable::SlotCoordinates_mSerializable&
ParkingBoxSerializable::_Internal::slotcoordinates_m(const ParkingBoxSerializable* msg) {
  return *msg->slotcoordinates_m_;
}
void ParkingBoxSerializable::clear_slotcoordinates_m() {
  if (slotcoordinates_m_ != nullptr) slotcoordinates_m_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ParkingBoxSerializable::clear_delimiters() {
  delimiters_.Clear();
}
void ParkingBoxSerializable::clear_virtuallines() {
  virtuallines_.Clear();
}
void ParkingBoxSerializable::clear_parkingboxroadsideedge() {
  parkingboxroadsideedge_.Clear();
}
void ParkingBoxSerializable::clear_cnnboxroadsideedge() {
  cnnboxroadsideedge_.Clear();
}
ParkingBoxSerializable::ParkingBoxSerializable()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.si.parking_box_serializable.ParkingBoxSerializable)
}
ParkingBoxSerializable::ParkingBoxSerializable(const ParkingBoxSerializable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      virtuallines_(from.virtuallines_),
      cnnboxroadsideedge_(from.cnnboxroadsideedge_),
      delimiters_(from.delimiters_),
      parkingboxroadsideedge_(from.parkingboxroadsideedge_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_slotcoordinates_m()) {
    slotcoordinates_m_ = new ::pb::si::slot_coordinates_m_serializable::SlotCoordinates_mSerializable(*from.slotcoordinates_m_);
  } else {
    slotcoordinates_m_ = nullptr;
  }
  ::memcpy(&parkingscenario_nu_, &from.parkingscenario_nu_,
    static_cast<size_t>(reinterpret_cast<char*>(&groupid_nu_) -
    reinterpret_cast<char*>(&parkingscenario_nu_)) + sizeof(groupid_nu_));
  // @@protoc_insertion_point(copy_constructor:pb.si.parking_box_serializable.ParkingBoxSerializable)
}

void ParkingBoxSerializable::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParkingBoxSerializable_si_2fparking_5fbox_5fserializable_2eproto.base);
  ::memset(&slotcoordinates_m_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_nu_) -
      reinterpret_cast<char*>(&slotcoordinates_m_)) + sizeof(groupid_nu_));
}

ParkingBoxSerializable::~ParkingBoxSerializable() {
  // @@protoc_insertion_point(destructor:pb.si.parking_box_serializable.ParkingBoxSerializable)
  SharedDtor();
}

void ParkingBoxSerializable::SharedDtor() {
  if (this != internal_default_instance()) delete slotcoordinates_m_;
}

void ParkingBoxSerializable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParkingBoxSerializable& ParkingBoxSerializable::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParkingBoxSerializable_si_2fparking_5fbox_5fserializable_2eproto.base);
  return *internal_default_instance();
}


void ParkingBoxSerializable::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.si.parking_box_serializable.ParkingBoxSerializable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  virtuallines_.Clear();
  cnnboxroadsideedge_.Clear();
  delimiters_.Clear();
  parkingboxroadsideedge_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(slotcoordinates_m_ != nullptr);
    slotcoordinates_m_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&parkingscenario_nu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&priority_nu_) -
        reinterpret_cast<char*>(&parkingscenario_nu_)) + sizeof(priority_nu_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&existenceprob_perc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&groupid_nu_) -
        reinterpret_cast<char*>(&existenceprob_perc_)) + sizeof(groupid_nu_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ParkingBoxSerializable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.si.virtual_line_serializable.VirtualLineSerializable virtualLines = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_virtuallines(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<234>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 numValidDelimiters_nu = 228;
      case 228:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_numvaliddelimiters_nu(&has_bits);
          numvaliddelimiters_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.slot_coordinates_m_serializable.SlotCoordinates_mSerializable slotCoordinates_m = 338;
      case 338:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_slotcoordinates_m(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 parkingBoxID_nu = 444;
      case 444:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_parkingboxid_nu(&has_bits);
          parkingboxid_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool hasValueCnnBoxRoadSideEdge = 913;
      case 913:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_hasvaluecnnboxroadsideedge(&has_bits);
          hasvaluecnnboxroadsideedge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.cml.vec2_df_pod.Vec2Df_POD cnnBoxRoadSideEdge = 981;
      case 981:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_cnnboxroadsideedge(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<7850>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 numVirtualLines_nu = 1173;
      case 1173:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_numvirtuallines_nu(&has_bits);
          numvirtuallines_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool hasValueParkingBoxRoadSideEdge = 1219;
      case 1219:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_hasvalueparkingboxroadsideedge(&has_bits);
          hasvalueparkingboxroadsideedge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 priority_nu = 1627;
      case 1627:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          _Internal::set_has_priority_nu(&has_bits);
          priority_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.si.parking_box_delimiter.ParkingBoxDelimiter delimiters = 1849;
      case 1849:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_delimiters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<14794>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 existenceProb_perc = 2424;
      case 2424:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_existenceprob_perc(&has_bits);
          existenceprob_perc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.cml.vec2_df_pod.Vec2Df_POD parkingBoxRoadSideEdge = 2866;
      case 2866:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_add_parkingboxroadsideedge(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.parking_scenario_side_types.ParkingScenarioSideTypes parkingScenarioSide_nu = 3946;
      case 3946:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes_IsValid(val))) {
            _internal_set_parkingscenarioside_nu(static_cast<::pb::si::parking_scenario_side_types::ParkingScenarioSideTypes>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3946, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 groupID_nu = 3958;
      case 3958:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_groupid_nu(&has_bits);
          groupid_nu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .pb.si.parking_scenario_types.ParkingScenarioTypes parkingScenario_nu = 4094;
      case 4094:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::pb::si::parking_scenario_types::ParkingScenarioTypes_IsValid(val))) {
            _internal_set_parkingscenario_nu(static_cast<::pb::si::parking_scenario_types::ParkingScenarioTypes>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4094, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParkingBoxSerializable::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.si.parking_box_serializable.ParkingBoxSerializable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.si.virtual_line_serializable.VirtualLineSerializable virtualLines = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_virtuallines_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, this->_internal_virtuallines(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 numValidDelimiters_nu = 228;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(228, this->_internal_numvaliddelimiters_nu(), target);
  }

  // optional .pb.si.slot_coordinates_m_serializable.SlotCoordinates_mSerializable slotCoordinates_m = 338;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        338, _Internal::slotcoordinates_m(this), target, stream);
  }

  // optional uint32 parkingBoxID_nu = 444;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(444, this->_internal_parkingboxid_nu(), target);
  }

  // optional bool hasValueCnnBoxRoadSideEdge = 913;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(913, this->_internal_hasvaluecnnboxroadsideedge(), target);
  }

  // repeated .pb.cml.vec2_df_pod.Vec2Df_POD cnnBoxRoadSideEdge = 981;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_cnnboxroadsideedge_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(981, this->_internal_cnnboxroadsideedge(i), target, stream);
  }

  // optional uint32 numVirtualLines_nu = 1173;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1173, this->_internal_numvirtuallines_nu(), target);
  }

  // optional bool hasValueParkingBoxRoadSideEdge = 1219;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1219, this->_internal_hasvalueparkingboxroadsideedge(), target);
  }

  // optional uint32 priority_nu = 1627;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1627, this->_internal_priority_nu(), target);
  }

  // repeated .pb.si.parking_box_delimiter.ParkingBoxDelimiter delimiters = 1849;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_delimiters_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1849, this->_internal_delimiters(i), target, stream);
  }

  // optional uint32 existenceProb_perc = 2424;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2424, this->_internal_existenceprob_perc(), target);
  }

  // repeated .pb.cml.vec2_df_pod.Vec2Df_POD parkingBoxRoadSideEdge = 2866;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_parkingboxroadsideedge_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2866, this->_internal_parkingboxroadsideedge(i), target, stream);
  }

  // optional .pb.si.parking_scenario_side_types.ParkingScenarioSideTypes parkingScenarioSide_nu = 3946;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3946, this->_internal_parkingscenarioside_nu(), target);
  }

  // optional uint32 groupID_nu = 3958;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3958, this->_internal_groupid_nu(), target);
  }

  // optional .pb.si.parking_scenario_types.ParkingScenarioTypes parkingScenario_nu = 4094;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4094, this->_internal_parkingscenario_nu(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.si.parking_box_serializable.ParkingBoxSerializable)
  return target;
}

size_t ParkingBoxSerializable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.si.parking_box_serializable.ParkingBoxSerializable)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.si.virtual_line_serializable.VirtualLineSerializable virtualLines = 29;
  total_size += 2UL * this->_internal_virtuallines_size();
  for (const auto& msg : this->virtuallines_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .pb.cml.vec2_df_pod.Vec2Df_POD cnnBoxRoadSideEdge = 981;
  total_size += 2UL * this->_internal_cnnboxroadsideedge_size();
  for (const auto& msg : this->cnnboxroadsideedge_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .pb.si.parking_box_delimiter.ParkingBoxDelimiter delimiters = 1849;
  total_size += 2UL * this->_internal_delimiters_size();
  for (const auto& msg : this->delimiters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .pb.cml.vec2_df_pod.Vec2Df_POD parkingBoxRoadSideEdge = 2866;
  total_size += 3UL * this->_internal_parkingboxroadsideedge_size();
  for (const auto& msg : this->parkingboxroadsideedge_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .pb.si.slot_coordinates_m_serializable.SlotCoordinates_mSerializable slotCoordinates_m = 338;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *slotcoordinates_m_);
    }

    // optional .pb.si.parking_scenario_types.ParkingScenarioTypes parkingScenario_nu = 4094;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_parkingscenario_nu());
    }

    // optional uint32 numValidDelimiters_nu = 228;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_numvaliddelimiters_nu());
    }

    // optional uint32 parkingBoxID_nu = 444;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_parkingboxid_nu());
    }

    // optional bool hasValueParkingBoxRoadSideEdge = 1219;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool hasValueCnnBoxRoadSideEdge = 913;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional uint32 numVirtualLines_nu = 1173;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_numvirtuallines_nu());
    }

    // optional uint32 priority_nu = 1627;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_priority_nu());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional uint32 existenceProb_perc = 2424;
    if (cached_has_bits & 0x00000100u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_existenceprob_perc());
    }

    // optional .pb.si.parking_scenario_side_types.ParkingScenarioSideTypes parkingScenarioSide_nu = 3946;
    if (cached_has_bits & 0x00000200u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_parkingscenarioside_nu());
    }

    // optional uint32 groupID_nu = 3958;
    if (cached_has_bits & 0x00000400u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_groupid_nu());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParkingBoxSerializable::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.si.parking_box_serializable.ParkingBoxSerializable)
  GOOGLE_DCHECK_NE(&from, this);
  const ParkingBoxSerializable* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParkingBoxSerializable>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.si.parking_box_serializable.ParkingBoxSerializable)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.si.parking_box_serializable.ParkingBoxSerializable)
    MergeFrom(*source);
  }
}

void ParkingBoxSerializable::MergeFrom(const ParkingBoxSerializable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.si.parking_box_serializable.ParkingBoxSerializable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  virtuallines_.MergeFrom(from.virtuallines_);
  cnnboxroadsideedge_.MergeFrom(from.cnnboxroadsideedge_);
  delimiters_.MergeFrom(from.delimiters_);
  parkingboxroadsideedge_.MergeFrom(from.parkingboxroadsideedge_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_slotcoordinates_m()->::pb::si::slot_coordinates_m_serializable::SlotCoordinates_mSerializable::MergeFrom(from._internal_slotcoordinates_m());
    }
    if (cached_has_bits & 0x00000002u) {
      parkingscenario_nu_ = from.parkingscenario_nu_;
    }
    if (cached_has_bits & 0x00000004u) {
      numvaliddelimiters_nu_ = from.numvaliddelimiters_nu_;
    }
    if (cached_has_bits & 0x00000008u) {
      parkingboxid_nu_ = from.parkingboxid_nu_;
    }
    if (cached_has_bits & 0x00000010u) {
      hasvalueparkingboxroadsideedge_ = from.hasvalueparkingboxroadsideedge_;
    }
    if (cached_has_bits & 0x00000020u) {
      hasvaluecnnboxroadsideedge_ = from.hasvaluecnnboxroadsideedge_;
    }
    if (cached_has_bits & 0x00000040u) {
      numvirtuallines_nu_ = from.numvirtuallines_nu_;
    }
    if (cached_has_bits & 0x00000080u) {
      priority_nu_ = from.priority_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      existenceprob_perc_ = from.existenceprob_perc_;
    }
    if (cached_has_bits & 0x00000200u) {
      parkingscenarioside_nu_ = from.parkingscenarioside_nu_;
    }
    if (cached_has_bits & 0x00000400u) {
      groupid_nu_ = from.groupid_nu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ParkingBoxSerializable::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.si.parking_box_serializable.ParkingBoxSerializable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParkingBoxSerializable::CopyFrom(const ParkingBoxSerializable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.si.parking_box_serializable.ParkingBoxSerializable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParkingBoxSerializable::IsInitialized() const {
  return true;
}

void ParkingBoxSerializable::InternalSwap(ParkingBoxSerializable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  virtuallines_.InternalSwap(&other->virtuallines_);
  cnnboxroadsideedge_.InternalSwap(&other->cnnboxroadsideedge_);
  delimiters_.InternalSwap(&other->delimiters_);
  parkingboxroadsideedge_.InternalSwap(&other->parkingboxroadsideedge_);
  swap(slotcoordinates_m_, other->slotcoordinates_m_);
  swap(parkingscenario_nu_, other->parkingscenario_nu_);
  swap(numvaliddelimiters_nu_, other->numvaliddelimiters_nu_);
  swap(parkingboxid_nu_, other->parkingboxid_nu_);
  swap(hasvalueparkingboxroadsideedge_, other->hasvalueparkingboxroadsideedge_);
  swap(hasvaluecnnboxroadsideedge_, other->hasvaluecnnboxroadsideedge_);
  swap(numvirtuallines_nu_, other->numvirtuallines_nu_);
  swap(priority_nu_, other->priority_nu_);
  swap(existenceprob_perc_, other->existenceprob_perc_);
  swap(parkingscenarioside_nu_, other->parkingscenarioside_nu_);
  swap(groupid_nu_, other->groupid_nu_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParkingBoxSerializable::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParkingBoxSerializable_array_port::InitAsDefaultInstance() {
}
class ParkingBoxSerializable_array_port::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingBoxSerializable_array_port>()._has_bits_);
};

ParkingBoxSerializable_array_port::ParkingBoxSerializable_array_port()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
}
ParkingBoxSerializable_array_port::ParkingBoxSerializable_array_port(const ParkingBoxSerializable_array_port& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
}

void ParkingBoxSerializable_array_port::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParkingBoxSerializable_array_port_si_2fparking_5fbox_5fserializable_2eproto.base);
}

ParkingBoxSerializable_array_port::~ParkingBoxSerializable_array_port() {
  // @@protoc_insertion_point(destructor:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
  SharedDtor();
}

void ParkingBoxSerializable_array_port::SharedDtor() {
}

void ParkingBoxSerializable_array_port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParkingBoxSerializable_array_port& ParkingBoxSerializable_array_port::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParkingBoxSerializable_array_port_si_2fparking_5fbox_5fserializable_2eproto.base);
  return *internal_default_instance();
}


void ParkingBoxSerializable_array_port::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ParkingBoxSerializable_array_port::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.si.parking_box_serializable.ParkingBoxSerializable data = 2234;
      case 2234:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_add_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParkingBoxSerializable_array_port::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.si.parking_box_serializable.ParkingBoxSerializable data = 2234;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2234, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
  return target;
}

size_t ParkingBoxSerializable_array_port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.si.parking_box_serializable.ParkingBoxSerializable data = 2234;
  total_size += 3UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParkingBoxSerializable_array_port::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  const ParkingBoxSerializable_array_port* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParkingBoxSerializable_array_port>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
    MergeFrom(*source);
  }
}

void ParkingBoxSerializable_array_port::MergeFrom(const ParkingBoxSerializable_array_port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void ParkingBoxSerializable_array_port::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParkingBoxSerializable_array_port::CopyFrom(const ParkingBoxSerializable_array_port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.si.parking_box_serializable.ParkingBoxSerializable_array_port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParkingBoxSerializable_array_port::IsInitialized() const {
  return true;
}

void ParkingBoxSerializable_array_port::InternalSwap(ParkingBoxSerializable_array_port* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParkingBoxSerializable_array_port::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace parking_box_serializable
}  // namespace si
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::si::parking_box_serializable::ParkingBoxSerializable* Arena::CreateMaybeMessage< ::pb::si::parking_box_serializable::ParkingBoxSerializable >(Arena* arena) {
  return Arena::CreateInternal< ::pb::si::parking_box_serializable::ParkingBoxSerializable >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::si::parking_box_serializable::ParkingBoxSerializable_array_port* Arena::CreateMaybeMessage< ::pb::si::parking_box_serializable::ParkingBoxSerializable_array_port >(Arena* arena) {
  return Arena::CreateInternal< ::pb::si::parking_box_serializable::ParkingBoxSerializable_array_port >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
