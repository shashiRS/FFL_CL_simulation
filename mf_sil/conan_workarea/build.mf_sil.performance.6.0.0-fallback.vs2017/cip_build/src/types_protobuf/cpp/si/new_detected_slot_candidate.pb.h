// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: si/new_detected_slot_candidate.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "cml/vec2_df_pod.pb.h"
#include "si/pb_side.pb.h"
#include "si/slot_status.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto;
namespace pb {
namespace si {
namespace new_detected_slot_candidate {
class NewDetectedSlotCandidate;
class NewDetectedSlotCandidateDefaultTypeInternal;
extern NewDetectedSlotCandidateDefaultTypeInternal _NewDetectedSlotCandidate_default_instance_;
class NewDetectedSlotCandidate_array_port;
class NewDetectedSlotCandidate_array_portDefaultTypeInternal;
extern NewDetectedSlotCandidate_array_portDefaultTypeInternal _NewDetectedSlotCandidate_array_port_default_instance_;
}  // namespace new_detected_slot_candidate
}  // namespace si
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate* Arena::CreateMaybeMessage<::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate>(Arena*);
template<> ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port* Arena::CreateMaybeMessage<::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace si {
namespace new_detected_slot_candidate {

// ===================================================================

class NewDetectedSlotCandidate :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate) */ {
 public:
  NewDetectedSlotCandidate();
  virtual ~NewDetectedSlotCandidate();

  NewDetectedSlotCandidate(const NewDetectedSlotCandidate& from);
  NewDetectedSlotCandidate(NewDetectedSlotCandidate&& from) noexcept
    : NewDetectedSlotCandidate() {
    *this = ::std::move(from);
  }

  inline NewDetectedSlotCandidate& operator=(const NewDetectedSlotCandidate& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewDetectedSlotCandidate& operator=(NewDetectedSlotCandidate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NewDetectedSlotCandidate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NewDetectedSlotCandidate* internal_default_instance() {
    return reinterpret_cast<const NewDetectedSlotCandidate*>(
               &_NewDetectedSlotCandidate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NewDetectedSlotCandidate& a, NewDetectedSlotCandidate& b) {
    a.Swap(&b);
  }
  inline void Swap(NewDetectedSlotCandidate* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NewDetectedSlotCandidate* New() const final {
    return CreateMaybeMessage<NewDetectedSlotCandidate>(nullptr);
  }

  NewDetectedSlotCandidate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NewDetectedSlotCandidate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NewDetectedSlotCandidate& from);
  void MergeFrom(const NewDetectedSlotCandidate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewDetectedSlotCandidate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto);
    return ::descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartFieldNumber = 2139,
    kEndFieldNumber = 3449,
    kStatusFieldNumber = 505,
    kSideFieldNumber = 3978,
  };
  // optional .pb.cml.vec2_df_pod.Vec2Df_POD start = 2139;
  bool has_start() const;
  private:
  bool _internal_has_start() const;
  public:
  void clear_start();
  const ::pb::cml::vec2_df_pod::Vec2Df_POD& start() const;
  ::pb::cml::vec2_df_pod::Vec2Df_POD* release_start();
  ::pb::cml::vec2_df_pod::Vec2Df_POD* mutable_start();
  void set_allocated_start(::pb::cml::vec2_df_pod::Vec2Df_POD* start);
  private:
  const ::pb::cml::vec2_df_pod::Vec2Df_POD& _internal_start() const;
  ::pb::cml::vec2_df_pod::Vec2Df_POD* _internal_mutable_start();
  public:

  // optional .pb.cml.vec2_df_pod.Vec2Df_POD end = 3449;
  bool has_end() const;
  private:
  bool _internal_has_end() const;
  public:
  void clear_end();
  const ::pb::cml::vec2_df_pod::Vec2Df_POD& end() const;
  ::pb::cml::vec2_df_pod::Vec2Df_POD* release_end();
  ::pb::cml::vec2_df_pod::Vec2Df_POD* mutable_end();
  void set_allocated_end(::pb::cml::vec2_df_pod::Vec2Df_POD* end);
  private:
  const ::pb::cml::vec2_df_pod::Vec2Df_POD& _internal_end() const;
  ::pb::cml::vec2_df_pod::Vec2Df_POD* _internal_mutable_end();
  public:

  // optional .pb.si.slot_status.SlotStatus status = 505;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  ::pb::si::slot_status::SlotStatus status() const;
  void set_status(::pb::si::slot_status::SlotStatus value);
  private:
  ::pb::si::slot_status::SlotStatus _internal_status() const;
  void _internal_set_status(::pb::si::slot_status::SlotStatus value);
  public:

  // optional .pb.si.pb_side.PB_Side side = 3978;
  bool has_side() const;
  private:
  bool _internal_has_side() const;
  public:
  void clear_side();
  ::pb::si::pb_side::PB_Side side() const;
  void set_side(::pb::si::pb_side::PB_Side value);
  private:
  ::pb::si::pb_side::PB_Side _internal_side() const;
  void _internal_set_side(::pb::si::pb_side::PB_Side value);
  public:

  // @@protoc_insertion_point(class_scope:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::cml::vec2_df_pod::Vec2Df_POD* start_;
  ::pb::cml::vec2_df_pod::Vec2Df_POD* end_;
  int status_;
  int side_;
  friend struct ::TableStruct_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto;
};
// -------------------------------------------------------------------

class NewDetectedSlotCandidate_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port) */ {
 public:
  NewDetectedSlotCandidate_array_port();
  virtual ~NewDetectedSlotCandidate_array_port();

  NewDetectedSlotCandidate_array_port(const NewDetectedSlotCandidate_array_port& from);
  NewDetectedSlotCandidate_array_port(NewDetectedSlotCandidate_array_port&& from) noexcept
    : NewDetectedSlotCandidate_array_port() {
    *this = ::std::move(from);
  }

  inline NewDetectedSlotCandidate_array_port& operator=(const NewDetectedSlotCandidate_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewDetectedSlotCandidate_array_port& operator=(NewDetectedSlotCandidate_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NewDetectedSlotCandidate_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NewDetectedSlotCandidate_array_port* internal_default_instance() {
    return reinterpret_cast<const NewDetectedSlotCandidate_array_port*>(
               &_NewDetectedSlotCandidate_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NewDetectedSlotCandidate_array_port& a, NewDetectedSlotCandidate_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(NewDetectedSlotCandidate_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NewDetectedSlotCandidate_array_port* New() const final {
    return CreateMaybeMessage<NewDetectedSlotCandidate_array_port>(nullptr);
  }

  NewDetectedSlotCandidate_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NewDetectedSlotCandidate_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NewDetectedSlotCandidate_array_port& from);
  void MergeFrom(const NewDetectedSlotCandidate_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewDetectedSlotCandidate_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto);
    return ::descriptor_table_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3221,
  };
  // repeated .pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate data = 3221;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate >*
      mutable_data();
  private:
  const ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate& _internal_data(int index) const;
  ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate* _internal_add_data();
  public:
  const ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate& data(int index) const;
  ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate > data_;
  friend struct ::TableStruct_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NewDetectedSlotCandidate

// optional .pb.cml.vec2_df_pod.Vec2Df_POD start = 2139;
inline bool NewDetectedSlotCandidate::_internal_has_start() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || start_ != nullptr);
  return value;
}
inline bool NewDetectedSlotCandidate::has_start() const {
  return _internal_has_start();
}
inline const ::pb::cml::vec2_df_pod::Vec2Df_POD& NewDetectedSlotCandidate::_internal_start() const {
  const ::pb::cml::vec2_df_pod::Vec2Df_POD* p = start_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::cml::vec2_df_pod::Vec2Df_POD*>(
      &::pb::cml::vec2_df_pod::_Vec2Df_POD_default_instance_);
}
inline const ::pb::cml::vec2_df_pod::Vec2Df_POD& NewDetectedSlotCandidate::start() const {
  // @@protoc_insertion_point(field_get:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.start)
  return _internal_start();
}
inline ::pb::cml::vec2_df_pod::Vec2Df_POD* NewDetectedSlotCandidate::release_start() {
  // @@protoc_insertion_point(field_release:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.start)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::cml::vec2_df_pod::Vec2Df_POD* temp = start_;
  start_ = nullptr;
  return temp;
}
inline ::pb::cml::vec2_df_pod::Vec2Df_POD* NewDetectedSlotCandidate::_internal_mutable_start() {
  _has_bits_[0] |= 0x00000001u;
  if (start_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::cml::vec2_df_pod::Vec2Df_POD>(GetArenaNoVirtual());
    start_ = p;
  }
  return start_;
}
inline ::pb::cml::vec2_df_pod::Vec2Df_POD* NewDetectedSlotCandidate::mutable_start() {
  // @@protoc_insertion_point(field_mutable:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.start)
  return _internal_mutable_start();
}
inline void NewDetectedSlotCandidate::set_allocated_start(::pb::cml::vec2_df_pod::Vec2Df_POD* start) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_);
  }
  if (start) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      start = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  start_ = start;
  // @@protoc_insertion_point(field_set_allocated:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.start)
}

// optional .pb.cml.vec2_df_pod.Vec2Df_POD end = 3449;
inline bool NewDetectedSlotCandidate::_internal_has_end() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || end_ != nullptr);
  return value;
}
inline bool NewDetectedSlotCandidate::has_end() const {
  return _internal_has_end();
}
inline const ::pb::cml::vec2_df_pod::Vec2Df_POD& NewDetectedSlotCandidate::_internal_end() const {
  const ::pb::cml::vec2_df_pod::Vec2Df_POD* p = end_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::cml::vec2_df_pod::Vec2Df_POD*>(
      &::pb::cml::vec2_df_pod::_Vec2Df_POD_default_instance_);
}
inline const ::pb::cml::vec2_df_pod::Vec2Df_POD& NewDetectedSlotCandidate::end() const {
  // @@protoc_insertion_point(field_get:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.end)
  return _internal_end();
}
inline ::pb::cml::vec2_df_pod::Vec2Df_POD* NewDetectedSlotCandidate::release_end() {
  // @@protoc_insertion_point(field_release:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.end)
  _has_bits_[0] &= ~0x00000002u;
  ::pb::cml::vec2_df_pod::Vec2Df_POD* temp = end_;
  end_ = nullptr;
  return temp;
}
inline ::pb::cml::vec2_df_pod::Vec2Df_POD* NewDetectedSlotCandidate::_internal_mutable_end() {
  _has_bits_[0] |= 0x00000002u;
  if (end_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::cml::vec2_df_pod::Vec2Df_POD>(GetArenaNoVirtual());
    end_ = p;
  }
  return end_;
}
inline ::pb::cml::vec2_df_pod::Vec2Df_POD* NewDetectedSlotCandidate::mutable_end() {
  // @@protoc_insertion_point(field_mutable:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.end)
  return _internal_mutable_end();
}
inline void NewDetectedSlotCandidate::set_allocated_end(::pb::cml::vec2_df_pod::Vec2Df_POD* end) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_);
  }
  if (end) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      end = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, end, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  end_ = end;
  // @@protoc_insertion_point(field_set_allocated:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.end)
}

// optional .pb.si.pb_side.PB_Side side = 3978;
inline bool NewDetectedSlotCandidate::_internal_has_side() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool NewDetectedSlotCandidate::has_side() const {
  return _internal_has_side();
}
inline void NewDetectedSlotCandidate::clear_side() {
  side_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::pb::si::pb_side::PB_Side NewDetectedSlotCandidate::_internal_side() const {
  return static_cast< ::pb::si::pb_side::PB_Side >(side_);
}
inline ::pb::si::pb_side::PB_Side NewDetectedSlotCandidate::side() const {
  // @@protoc_insertion_point(field_get:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.side)
  return _internal_side();
}
inline void NewDetectedSlotCandidate::_internal_set_side(::pb::si::pb_side::PB_Side value) {
  assert(::pb::si::pb_side::PB_Side_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  side_ = value;
}
inline void NewDetectedSlotCandidate::set_side(::pb::si::pb_side::PB_Side value) {
  _internal_set_side(value);
  // @@protoc_insertion_point(field_set:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.side)
}

// optional .pb.si.slot_status.SlotStatus status = 505;
inline bool NewDetectedSlotCandidate::_internal_has_status() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool NewDetectedSlotCandidate::has_status() const {
  return _internal_has_status();
}
inline void NewDetectedSlotCandidate::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::pb::si::slot_status::SlotStatus NewDetectedSlotCandidate::_internal_status() const {
  return static_cast< ::pb::si::slot_status::SlotStatus >(status_);
}
inline ::pb::si::slot_status::SlotStatus NewDetectedSlotCandidate::status() const {
  // @@protoc_insertion_point(field_get:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.status)
  return _internal_status();
}
inline void NewDetectedSlotCandidate::_internal_set_status(::pb::si::slot_status::SlotStatus value) {
  assert(::pb::si::slot_status::SlotStatus_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  status_ = value;
}
inline void NewDetectedSlotCandidate::set_status(::pb::si::slot_status::SlotStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate.status)
}

// -------------------------------------------------------------------

// NewDetectedSlotCandidate_array_port

// repeated .pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate data = 3221;
inline int NewDetectedSlotCandidate_array_port::_internal_data_size() const {
  return data_.size();
}
inline int NewDetectedSlotCandidate_array_port::data_size() const {
  return _internal_data_size();
}
inline void NewDetectedSlotCandidate_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate* NewDetectedSlotCandidate_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate >*
NewDetectedSlotCandidate_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port.data)
  return &data_;
}
inline const ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate& NewDetectedSlotCandidate_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate& NewDetectedSlotCandidate_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port.data)
  return _internal_data(index);
}
inline ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate* NewDetectedSlotCandidate_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate* NewDetectedSlotCandidate_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::si::new_detected_slot_candidate::NewDetectedSlotCandidate >&
NewDetectedSlotCandidate_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.si.new_detected_slot_candidate.NewDetectedSlotCandidate_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace new_detected_slot_candidate
}  // namespace si
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_si_2fnew_5fdetected_5fslot_5fcandidate_2eproto
