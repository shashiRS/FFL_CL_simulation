// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_lodmc/lo_dmcstatus_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "ap_lodmc/slope_accuracy.pb.h"
#include "ap_lodmc/lo_dmcsystem_state.pb.h"
#include "ap_lodmc/maneuvering_finished.pb.h"
#include "ap_lodmc/longitudinal_control_active_status.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto;
namespace pb {
namespace ap_lodmc {
namespace lo_dmcstatus_port {
class LoDMCStatusPort;
class LoDMCStatusPortDefaultTypeInternal;
extern LoDMCStatusPortDefaultTypeInternal _LoDMCStatusPort_default_instance_;
class LoDMCStatusPort_array_port;
class LoDMCStatusPort_array_portDefaultTypeInternal;
extern LoDMCStatusPort_array_portDefaultTypeInternal _LoDMCStatusPort_array_port_default_instance_;
}  // namespace lo_dmcstatus_port
}  // namespace ap_lodmc
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort* Arena::CreateMaybeMessage<::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort>(Arena*);
template<> ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port* Arena::CreateMaybeMessage<::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace ap_lodmc {
namespace lo_dmcstatus_port {

// ===================================================================

class LoDMCStatusPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort) */ {
 public:
  LoDMCStatusPort();
  virtual ~LoDMCStatusPort();

  LoDMCStatusPort(const LoDMCStatusPort& from);
  LoDMCStatusPort(LoDMCStatusPort&& from) noexcept
    : LoDMCStatusPort() {
    *this = ::std::move(from);
  }

  inline LoDMCStatusPort& operator=(const LoDMCStatusPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoDMCStatusPort& operator=(LoDMCStatusPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoDMCStatusPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoDMCStatusPort* internal_default_instance() {
    return reinterpret_cast<const LoDMCStatusPort*>(
               &_LoDMCStatusPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LoDMCStatusPort& a, LoDMCStatusPort& b) {
    a.Swap(&b);
  }
  inline void Swap(LoDMCStatusPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoDMCStatusPort* New() const final {
    return CreateMaybeMessage<LoDMCStatusPort>(nullptr);
  }

  LoDMCStatusPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoDMCStatusPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoDMCStatusPort& from);
  void MergeFrom(const LoDMCStatusPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoDMCStatusPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto);
    return ::descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSSigHeaderFieldNumber = 1033,
    kLongitudinalControlActiveStatusNuFieldNumber = 3558,
    kDynamicSlopePercFieldNumber = 686,
    kLoDMCSystemStateNuFieldNumber = 1351,
    kUiVersionNumberFieldNumber = 2124,
    kStandstillHoldCurNuFieldNumber = 2401,
    kStandstillSecureCurNuFieldNumber = 3299,
    kManeuveringFinishedNuFieldNumber = 3275,
    kDynamicSlopeAccuracyNuFieldNumber = 3475,
  };
  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional .pb.ap_lodmc.longitudinal_control_active_status.longitudinalControlActiveStatus longitudinalControlActiveStatus_nu = 3558;
  bool has_longitudinalcontrolactivestatus_nu() const;
  private:
  bool _internal_has_longitudinalcontrolactivestatus_nu() const;
  public:
  void clear_longitudinalcontrolactivestatus_nu();
  ::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus longitudinalcontrolactivestatus_nu() const;
  void set_longitudinalcontrolactivestatus_nu(::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus value);
  private:
  ::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus _internal_longitudinalcontrolactivestatus_nu() const;
  void _internal_set_longitudinalcontrolactivestatus_nu(::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus value);
  public:

  // optional float dynamicSlope_perc = 686;
  bool has_dynamicslope_perc() const;
  private:
  bool _internal_has_dynamicslope_perc() const;
  public:
  void clear_dynamicslope_perc();
  float dynamicslope_perc() const;
  void set_dynamicslope_perc(float value);
  private:
  float _internal_dynamicslope_perc() const;
  void _internal_set_dynamicslope_perc(float value);
  public:

  // optional .pb.ap_lodmc.lo_dmcsystem_state.LoDMCSystemState loDMCSystemState_nu = 1351;
  bool has_lodmcsystemstate_nu() const;
  private:
  bool _internal_has_lodmcsystemstate_nu() const;
  public:
  void clear_lodmcsystemstate_nu();
  ::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState lodmcsystemstate_nu() const;
  void set_lodmcsystemstate_nu(::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState value);
  private:
  ::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState _internal_lodmcsystemstate_nu() const;
  void _internal_set_lodmcsystemstate_nu(::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState value);
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool standstillHoldCur_nu = 2401;
  bool has_standstillholdcur_nu() const;
  private:
  bool _internal_has_standstillholdcur_nu() const;
  public:
  void clear_standstillholdcur_nu();
  bool standstillholdcur_nu() const;
  void set_standstillholdcur_nu(bool value);
  private:
  bool _internal_standstillholdcur_nu() const;
  void _internal_set_standstillholdcur_nu(bool value);
  public:

  // optional bool standstillSecureCur_nu = 3299;
  bool has_standstillsecurecur_nu() const;
  private:
  bool _internal_has_standstillsecurecur_nu() const;
  public:
  void clear_standstillsecurecur_nu();
  bool standstillsecurecur_nu() const;
  void set_standstillsecurecur_nu(bool value);
  private:
  bool _internal_standstillsecurecur_nu() const;
  void _internal_set_standstillsecurecur_nu(bool value);
  public:

  // optional .pb.ap_lodmc.maneuvering_finished.maneuveringFinished maneuveringFinished_nu = 3275;
  bool has_maneuveringfinished_nu() const;
  private:
  bool _internal_has_maneuveringfinished_nu() const;
  public:
  void clear_maneuveringfinished_nu();
  ::pb::ap_lodmc::maneuvering_finished::maneuveringFinished maneuveringfinished_nu() const;
  void set_maneuveringfinished_nu(::pb::ap_lodmc::maneuvering_finished::maneuveringFinished value);
  private:
  ::pb::ap_lodmc::maneuvering_finished::maneuveringFinished _internal_maneuveringfinished_nu() const;
  void _internal_set_maneuveringfinished_nu(::pb::ap_lodmc::maneuvering_finished::maneuveringFinished value);
  public:

  // optional .pb.ap_lodmc.slope_accuracy.SlopeAccuracy dynamicSlopeAccuracy_nu = 3475;
  bool has_dynamicslopeaccuracy_nu() const;
  private:
  bool _internal_has_dynamicslopeaccuracy_nu() const;
  public:
  void clear_dynamicslopeaccuracy_nu();
  ::pb::ap_lodmc::slope_accuracy::SlopeAccuracy dynamicslopeaccuracy_nu() const;
  void set_dynamicslopeaccuracy_nu(::pb::ap_lodmc::slope_accuracy::SlopeAccuracy value);
  private:
  ::pb::ap_lodmc::slope_accuracy::SlopeAccuracy _internal_dynamicslopeaccuracy_nu() const;
  void _internal_set_dynamicslopeaccuracy_nu(::pb::ap_lodmc::slope_accuracy::SlopeAccuracy value);
  public:

  // @@protoc_insertion_point(class_scope:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  int longitudinalcontrolactivestatus_nu_;
  float dynamicslope_perc_;
  int lodmcsystemstate_nu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  bool standstillholdcur_nu_;
  bool standstillsecurecur_nu_;
  int maneuveringfinished_nu_;
  int dynamicslopeaccuracy_nu_;
  friend struct ::TableStruct_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto;
};
// -------------------------------------------------------------------

class LoDMCStatusPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port) */ {
 public:
  LoDMCStatusPort_array_port();
  virtual ~LoDMCStatusPort_array_port();

  LoDMCStatusPort_array_port(const LoDMCStatusPort_array_port& from);
  LoDMCStatusPort_array_port(LoDMCStatusPort_array_port&& from) noexcept
    : LoDMCStatusPort_array_port() {
    *this = ::std::move(from);
  }

  inline LoDMCStatusPort_array_port& operator=(const LoDMCStatusPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoDMCStatusPort_array_port& operator=(LoDMCStatusPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoDMCStatusPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoDMCStatusPort_array_port* internal_default_instance() {
    return reinterpret_cast<const LoDMCStatusPort_array_port*>(
               &_LoDMCStatusPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LoDMCStatusPort_array_port& a, LoDMCStatusPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(LoDMCStatusPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoDMCStatusPort_array_port* New() const final {
    return CreateMaybeMessage<LoDMCStatusPort_array_port>(nullptr);
  }

  LoDMCStatusPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoDMCStatusPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoDMCStatusPort_array_port& from);
  void MergeFrom(const LoDMCStatusPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoDMCStatusPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto);
    return ::descriptor_table_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2947,
  };
  // repeated .pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort data = 2947;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort >*
      mutable_data();
  private:
  const ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort& _internal_data(int index) const;
  ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort* _internal_add_data();
  public:
  const ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort& data(int index) const;
  ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort > data_;
  friend struct ::TableStruct_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoDMCStatusPort

// optional uint32 uiVersionNumber = 2124;
inline bool LoDMCStatusPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool LoDMCStatusPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void LoDMCStatusPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LoDMCStatusPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LoDMCStatusPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void LoDMCStatusPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uiversionnumber_ = value;
}
inline void LoDMCStatusPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool LoDMCStatusPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool LoDMCStatusPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& LoDMCStatusPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& LoDMCStatusPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* LoDMCStatusPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* LoDMCStatusPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* LoDMCStatusPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void LoDMCStatusPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.sSigHeader)
}

// optional float dynamicSlope_perc = 686;
inline bool LoDMCStatusPort::_internal_has_dynamicslope_perc() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool LoDMCStatusPort::has_dynamicslope_perc() const {
  return _internal_has_dynamicslope_perc();
}
inline void LoDMCStatusPort::clear_dynamicslope_perc() {
  dynamicslope_perc_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float LoDMCStatusPort::_internal_dynamicslope_perc() const {
  return dynamicslope_perc_;
}
inline float LoDMCStatusPort::dynamicslope_perc() const {
  // @@protoc_insertion_point(field_get:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.dynamicSlope_perc)
  return _internal_dynamicslope_perc();
}
inline void LoDMCStatusPort::_internal_set_dynamicslope_perc(float value) {
  _has_bits_[0] |= 0x00000004u;
  dynamicslope_perc_ = value;
}
inline void LoDMCStatusPort::set_dynamicslope_perc(float value) {
  _internal_set_dynamicslope_perc(value);
  // @@protoc_insertion_point(field_set:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.dynamicSlope_perc)
}

// optional .pb.ap_lodmc.slope_accuracy.SlopeAccuracy dynamicSlopeAccuracy_nu = 3475;
inline bool LoDMCStatusPort::_internal_has_dynamicslopeaccuracy_nu() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool LoDMCStatusPort::has_dynamicslopeaccuracy_nu() const {
  return _internal_has_dynamicslopeaccuracy_nu();
}
inline void LoDMCStatusPort::clear_dynamicslopeaccuracy_nu() {
  dynamicslopeaccuracy_nu_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::pb::ap_lodmc::slope_accuracy::SlopeAccuracy LoDMCStatusPort::_internal_dynamicslopeaccuracy_nu() const {
  return static_cast< ::pb::ap_lodmc::slope_accuracy::SlopeAccuracy >(dynamicslopeaccuracy_nu_);
}
inline ::pb::ap_lodmc::slope_accuracy::SlopeAccuracy LoDMCStatusPort::dynamicslopeaccuracy_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.dynamicSlopeAccuracy_nu)
  return _internal_dynamicslopeaccuracy_nu();
}
inline void LoDMCStatusPort::_internal_set_dynamicslopeaccuracy_nu(::pb::ap_lodmc::slope_accuracy::SlopeAccuracy value) {
  assert(::pb::ap_lodmc::slope_accuracy::SlopeAccuracy_IsValid(value));
  _has_bits_[0] |= 0x00000100u;
  dynamicslopeaccuracy_nu_ = value;
}
inline void LoDMCStatusPort::set_dynamicslopeaccuracy_nu(::pb::ap_lodmc::slope_accuracy::SlopeAccuracy value) {
  _internal_set_dynamicslopeaccuracy_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.dynamicSlopeAccuracy_nu)
}

// optional .pb.ap_lodmc.lo_dmcsystem_state.LoDMCSystemState loDMCSystemState_nu = 1351;
inline bool LoDMCStatusPort::_internal_has_lodmcsystemstate_nu() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool LoDMCStatusPort::has_lodmcsystemstate_nu() const {
  return _internal_has_lodmcsystemstate_nu();
}
inline void LoDMCStatusPort::clear_lodmcsystemstate_nu() {
  lodmcsystemstate_nu_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState LoDMCStatusPort::_internal_lodmcsystemstate_nu() const {
  return static_cast< ::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState >(lodmcsystemstate_nu_);
}
inline ::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState LoDMCStatusPort::lodmcsystemstate_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.loDMCSystemState_nu)
  return _internal_lodmcsystemstate_nu();
}
inline void LoDMCStatusPort::_internal_set_lodmcsystemstate_nu(::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState value) {
  assert(::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  lodmcsystemstate_nu_ = value;
}
inline void LoDMCStatusPort::set_lodmcsystemstate_nu(::pb::ap_lodmc::lo_dmcsystem_state::LoDMCSystemState value) {
  _internal_set_lodmcsystemstate_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.loDMCSystemState_nu)
}

// optional .pb.ap_lodmc.maneuvering_finished.maneuveringFinished maneuveringFinished_nu = 3275;
inline bool LoDMCStatusPort::_internal_has_maneuveringfinished_nu() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool LoDMCStatusPort::has_maneuveringfinished_nu() const {
  return _internal_has_maneuveringfinished_nu();
}
inline void LoDMCStatusPort::clear_maneuveringfinished_nu() {
  maneuveringfinished_nu_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::pb::ap_lodmc::maneuvering_finished::maneuveringFinished LoDMCStatusPort::_internal_maneuveringfinished_nu() const {
  return static_cast< ::pb::ap_lodmc::maneuvering_finished::maneuveringFinished >(maneuveringfinished_nu_);
}
inline ::pb::ap_lodmc::maneuvering_finished::maneuveringFinished LoDMCStatusPort::maneuveringfinished_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.maneuveringFinished_nu)
  return _internal_maneuveringfinished_nu();
}
inline void LoDMCStatusPort::_internal_set_maneuveringfinished_nu(::pb::ap_lodmc::maneuvering_finished::maneuveringFinished value) {
  assert(::pb::ap_lodmc::maneuvering_finished::maneuveringFinished_IsValid(value));
  _has_bits_[0] |= 0x00000080u;
  maneuveringfinished_nu_ = value;
}
inline void LoDMCStatusPort::set_maneuveringfinished_nu(::pb::ap_lodmc::maneuvering_finished::maneuveringFinished value) {
  _internal_set_maneuveringfinished_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.maneuveringFinished_nu)
}

// optional .pb.ap_lodmc.longitudinal_control_active_status.longitudinalControlActiveStatus longitudinalControlActiveStatus_nu = 3558;
inline bool LoDMCStatusPort::_internal_has_longitudinalcontrolactivestatus_nu() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool LoDMCStatusPort::has_longitudinalcontrolactivestatus_nu() const {
  return _internal_has_longitudinalcontrolactivestatus_nu();
}
inline void LoDMCStatusPort::clear_longitudinalcontrolactivestatus_nu() {
  longitudinalcontrolactivestatus_nu_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus LoDMCStatusPort::_internal_longitudinalcontrolactivestatus_nu() const {
  return static_cast< ::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus >(longitudinalcontrolactivestatus_nu_);
}
inline ::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus LoDMCStatusPort::longitudinalcontrolactivestatus_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.longitudinalControlActiveStatus_nu)
  return _internal_longitudinalcontrolactivestatus_nu();
}
inline void LoDMCStatusPort::_internal_set_longitudinalcontrolactivestatus_nu(::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus value) {
  assert(::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  longitudinalcontrolactivestatus_nu_ = value;
}
inline void LoDMCStatusPort::set_longitudinalcontrolactivestatus_nu(::pb::ap_lodmc::longitudinal_control_active_status::longitudinalControlActiveStatus value) {
  _internal_set_longitudinalcontrolactivestatus_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.longitudinalControlActiveStatus_nu)
}

// optional bool standstillHoldCur_nu = 2401;
inline bool LoDMCStatusPort::_internal_has_standstillholdcur_nu() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool LoDMCStatusPort::has_standstillholdcur_nu() const {
  return _internal_has_standstillholdcur_nu();
}
inline void LoDMCStatusPort::clear_standstillholdcur_nu() {
  standstillholdcur_nu_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool LoDMCStatusPort::_internal_standstillholdcur_nu() const {
  return standstillholdcur_nu_;
}
inline bool LoDMCStatusPort::standstillholdcur_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.standstillHoldCur_nu)
  return _internal_standstillholdcur_nu();
}
inline void LoDMCStatusPort::_internal_set_standstillholdcur_nu(bool value) {
  _has_bits_[0] |= 0x00000020u;
  standstillholdcur_nu_ = value;
}
inline void LoDMCStatusPort::set_standstillholdcur_nu(bool value) {
  _internal_set_standstillholdcur_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.standstillHoldCur_nu)
}

// optional bool standstillSecureCur_nu = 3299;
inline bool LoDMCStatusPort::_internal_has_standstillsecurecur_nu() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool LoDMCStatusPort::has_standstillsecurecur_nu() const {
  return _internal_has_standstillsecurecur_nu();
}
inline void LoDMCStatusPort::clear_standstillsecurecur_nu() {
  standstillsecurecur_nu_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool LoDMCStatusPort::_internal_standstillsecurecur_nu() const {
  return standstillsecurecur_nu_;
}
inline bool LoDMCStatusPort::standstillsecurecur_nu() const {
  // @@protoc_insertion_point(field_get:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.standstillSecureCur_nu)
  return _internal_standstillsecurecur_nu();
}
inline void LoDMCStatusPort::_internal_set_standstillsecurecur_nu(bool value) {
  _has_bits_[0] |= 0x00000040u;
  standstillsecurecur_nu_ = value;
}
inline void LoDMCStatusPort::set_standstillsecurecur_nu(bool value) {
  _internal_set_standstillsecurecur_nu(value);
  // @@protoc_insertion_point(field_set:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort.standstillSecureCur_nu)
}

// -------------------------------------------------------------------

// LoDMCStatusPort_array_port

// repeated .pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort data = 2947;
inline int LoDMCStatusPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int LoDMCStatusPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void LoDMCStatusPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort* LoDMCStatusPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort >*
LoDMCStatusPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port.data)
  return &data_;
}
inline const ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort& LoDMCStatusPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort& LoDMCStatusPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort* LoDMCStatusPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort* LoDMCStatusPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::ap_lodmc::lo_dmcstatus_port::LoDMCStatusPort >&
LoDMCStatusPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.ap_lodmc.lo_dmcstatus_port.LoDMCStatusPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace lo_dmcstatus_port
}  // namespace ap_lodmc
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ap_5flodmc_2flo_5fdmcstatus_5fport_2eproto
