// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_drvwarnsm/logic_to_proc_port.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eco/signal_header.pb.h"
#include "mf_drvwarnsm/whl_warning_type.pb.h"
#include "mf_drvwarnsm/drv_tube_display_req.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto;
namespace pb {
namespace mf_drvwarnsm {
namespace logic_to_proc_port {
class LogicToProcPort;
class LogicToProcPortDefaultTypeInternal;
extern LogicToProcPortDefaultTypeInternal _LogicToProcPort_default_instance_;
class LogicToProcPort_array_port;
class LogicToProcPort_array_portDefaultTypeInternal;
extern LogicToProcPort_array_portDefaultTypeInternal _LogicToProcPort_array_port_default_instance_;
}  // namespace logic_to_proc_port
}  // namespace mf_drvwarnsm
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort* Arena::CreateMaybeMessage<::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort>(Arena*);
template<> ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort_array_port* Arena::CreateMaybeMessage<::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort_array_port>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace mf_drvwarnsm {
namespace logic_to_proc_port {

// ===================================================================

class LogicToProcPort :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort) */ {
 public:
  LogicToProcPort();
  virtual ~LogicToProcPort();

  LogicToProcPort(const LogicToProcPort& from);
  LogicToProcPort(LogicToProcPort&& from) noexcept
    : LogicToProcPort() {
    *this = ::std::move(from);
  }

  inline LogicToProcPort& operator=(const LogicToProcPort& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicToProcPort& operator=(LogicToProcPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicToProcPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicToProcPort* internal_default_instance() {
    return reinterpret_cast<const LogicToProcPort*>(
               &_LogicToProcPort_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LogicToProcPort& a, LogicToProcPort& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicToProcPort* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicToProcPort* New() const final {
    return CreateMaybeMessage<LogicToProcPort>(nullptr);
  }

  LogicToProcPort* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicToProcPort>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicToProcPort& from);
  void MergeFrom(const LogicToProcPort& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicToProcPort* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto);
    return ::descriptor_table_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSideResetReqNuFieldNumber = 620,
    kWhlWarningTypeNuFieldNumber = 1322,
    kSSigHeaderFieldNumber = 1033,
    kUiVersionNumberFieldNumber = 2124,
    kDrvTubeDisplayReqNuFieldNumber = 3285,
  };
  // repeated bool sideResetReq_nu = 620;
  int sideresetreq_nu_size() const;
  private:
  int _internal_sideresetreq_nu_size() const;
  public:
  void clear_sideresetreq_nu();
  private:
  bool _internal_sideresetreq_nu(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_sideresetreq_nu() const;
  void _internal_add_sideresetreq_nu(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_sideresetreq_nu();
  public:
  bool sideresetreq_nu(int index) const;
  void set_sideresetreq_nu(int index, bool value);
  void add_sideresetreq_nu(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      sideresetreq_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_sideresetreq_nu();

  // repeated .pb.mf_drvwarnsm.whl_warning_type.WhlWarningType whlWarningType_nu = 1322;
  int whlwarningtype_nu_size() const;
  private:
  int _internal_whlwarningtype_nu_size() const;
  public:
  void clear_whlwarningtype_nu();
  private:
  ::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType _internal_whlwarningtype_nu(int index) const;
  void _internal_add_whlwarningtype_nu(::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_whlwarningtype_nu();
  public:
  ::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType whlwarningtype_nu(int index) const;
  void set_whlwarningtype_nu(int index, ::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType value);
  void add_whlwarningtype_nu(::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& whlwarningtype_nu() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_whlwarningtype_nu();

  // optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
  bool has_ssigheader() const;
  private:
  bool _internal_has_ssigheader() const;
  public:
  void clear_ssigheader();
  const ::pb::eco::signal_header::SignalHeader& ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* release_ssigheader();
  ::pb::eco::signal_header::SignalHeader* mutable_ssigheader();
  void set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader);
  private:
  const ::pb::eco::signal_header::SignalHeader& _internal_ssigheader() const;
  ::pb::eco::signal_header::SignalHeader* _internal_mutable_ssigheader();
  public:

  // optional uint32 uiVersionNumber = 2124;
  bool has_uiversionnumber() const;
  private:
  bool _internal_has_uiversionnumber() const;
  public:
  void clear_uiversionnumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber() const;
  void set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiversionnumber() const;
  void _internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .pb.mf_drvwarnsm.drv_tube_display_req.DrvTubeDisplayReq drvTubeDisplayReq_nu = 3285;
  bool has_drvtubedisplayreq_nu() const;
  private:
  bool _internal_has_drvtubedisplayreq_nu() const;
  public:
  void clear_drvtubedisplayreq_nu();
  ::pb::mf_drvwarnsm::drv_tube_display_req::DrvTubeDisplayReq drvtubedisplayreq_nu() const;
  void set_drvtubedisplayreq_nu(::pb::mf_drvwarnsm::drv_tube_display_req::DrvTubeDisplayReq value);
  private:
  ::pb::mf_drvwarnsm::drv_tube_display_req::DrvTubeDisplayReq _internal_drvtubedisplayreq_nu() const;
  void _internal_set_drvtubedisplayreq_nu(::pb::mf_drvwarnsm::drv_tube_display_req::DrvTubeDisplayReq value);
  public:

  // @@protoc_insertion_point(class_scope:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > sideresetreq_nu_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> whlwarningtype_nu_;
  ::pb::eco::signal_header::SignalHeader* ssigheader_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiversionnumber_;
  int drvtubedisplayreq_nu_;
  friend struct ::TableStruct_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto;
};
// -------------------------------------------------------------------

class LogicToProcPort_array_port :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort_array_port) */ {
 public:
  LogicToProcPort_array_port();
  virtual ~LogicToProcPort_array_port();

  LogicToProcPort_array_port(const LogicToProcPort_array_port& from);
  LogicToProcPort_array_port(LogicToProcPort_array_port&& from) noexcept
    : LogicToProcPort_array_port() {
    *this = ::std::move(from);
  }

  inline LogicToProcPort_array_port& operator=(const LogicToProcPort_array_port& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicToProcPort_array_port& operator=(LogicToProcPort_array_port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicToProcPort_array_port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicToProcPort_array_port* internal_default_instance() {
    return reinterpret_cast<const LogicToProcPort_array_port*>(
               &_LogicToProcPort_array_port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LogicToProcPort_array_port& a, LogicToProcPort_array_port& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicToProcPort_array_port* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicToProcPort_array_port* New() const final {
    return CreateMaybeMessage<LogicToProcPort_array_port>(nullptr);
  }

  LogicToProcPort_array_port* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicToProcPort_array_port>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicToProcPort_array_port& from);
  void MergeFrom(const LogicToProcPort_array_port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicToProcPort_array_port* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort_array_port";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto);
    return ::descriptor_table_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2185,
  };
  // repeated .pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort data = 2185;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort >*
      mutable_data();
  private:
  const ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort& _internal_data(int index) const;
  ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort* _internal_add_data();
  public:
  const ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort& data(int index) const;
  ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort >&
      data() const;

  // @@protoc_insertion_point(class_scope:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort_array_port)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort > data_;
  friend struct ::TableStruct_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LogicToProcPort

// optional uint32 uiVersionNumber = 2124;
inline bool LogicToProcPort::_internal_has_uiversionnumber() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool LogicToProcPort::has_uiversionnumber() const {
  return _internal_has_uiversionnumber();
}
inline void LogicToProcPort::clear_uiversionnumber() {
  uiversionnumber_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogicToProcPort::_internal_uiversionnumber() const {
  return uiversionnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogicToProcPort::uiversionnumber() const {
  // @@protoc_insertion_point(field_get:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.uiVersionNumber)
  return _internal_uiversionnumber();
}
inline void LogicToProcPort::_internal_set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  uiversionnumber_ = value;
}
inline void LogicToProcPort::set_uiversionnumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiversionnumber(value);
  // @@protoc_insertion_point(field_set:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.uiVersionNumber)
}

// optional .pb.eco.signal_header.SignalHeader sSigHeader = 1033;
inline bool LogicToProcPort::_internal_has_ssigheader() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || ssigheader_ != nullptr);
  return value;
}
inline bool LogicToProcPort::has_ssigheader() const {
  return _internal_has_ssigheader();
}
inline const ::pb::eco::signal_header::SignalHeader& LogicToProcPort::_internal_ssigheader() const {
  const ::pb::eco::signal_header::SignalHeader* p = ssigheader_;
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::eco::signal_header::SignalHeader*>(
      &::pb::eco::signal_header::_SignalHeader_default_instance_);
}
inline const ::pb::eco::signal_header::SignalHeader& LogicToProcPort::ssigheader() const {
  // @@protoc_insertion_point(field_get:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.sSigHeader)
  return _internal_ssigheader();
}
inline ::pb::eco::signal_header::SignalHeader* LogicToProcPort::release_ssigheader() {
  // @@protoc_insertion_point(field_release:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.sSigHeader)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::eco::signal_header::SignalHeader* temp = ssigheader_;
  ssigheader_ = nullptr;
  return temp;
}
inline ::pb::eco::signal_header::SignalHeader* LogicToProcPort::_internal_mutable_ssigheader() {
  _has_bits_[0] |= 0x00000001u;
  if (ssigheader_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::eco::signal_header::SignalHeader>(GetArenaNoVirtual());
    ssigheader_ = p;
  }
  return ssigheader_;
}
inline ::pb::eco::signal_header::SignalHeader* LogicToProcPort::mutable_ssigheader() {
  // @@protoc_insertion_point(field_mutable:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.sSigHeader)
  return _internal_mutable_ssigheader();
}
inline void LogicToProcPort::set_allocated_ssigheader(::pb::eco::signal_header::SignalHeader* ssigheader) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ssigheader_);
  }
  if (ssigheader) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssigheader = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssigheader, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ssigheader_ = ssigheader;
  // @@protoc_insertion_point(field_set_allocated:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.sSigHeader)
}

// repeated .pb.mf_drvwarnsm.whl_warning_type.WhlWarningType whlWarningType_nu = 1322;
inline int LogicToProcPort::_internal_whlwarningtype_nu_size() const {
  return whlwarningtype_nu_.size();
}
inline int LogicToProcPort::whlwarningtype_nu_size() const {
  return _internal_whlwarningtype_nu_size();
}
inline void LogicToProcPort::clear_whlwarningtype_nu() {
  whlwarningtype_nu_.Clear();
}
inline ::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType LogicToProcPort::_internal_whlwarningtype_nu(int index) const {
  return static_cast< ::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType >(whlwarningtype_nu_.Get(index));
}
inline ::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType LogicToProcPort::whlwarningtype_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.whlWarningType_nu)
  return _internal_whlwarningtype_nu(index);
}
inline void LogicToProcPort::set_whlwarningtype_nu(int index, ::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType value) {
  assert(::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType_IsValid(value));
  whlwarningtype_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.whlWarningType_nu)
}
inline void LogicToProcPort::_internal_add_whlwarningtype_nu(::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType value) {
  assert(::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType_IsValid(value));
  whlwarningtype_nu_.Add(value);
}
inline void LogicToProcPort::add_whlwarningtype_nu(::pb::mf_drvwarnsm::whl_warning_type::WhlWarningType value) {
  // @@protoc_insertion_point(field_add:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.whlWarningType_nu)
  _internal_add_whlwarningtype_nu(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
LogicToProcPort::whlwarningtype_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.whlWarningType_nu)
  return whlwarningtype_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
LogicToProcPort::_internal_mutable_whlwarningtype_nu() {
  return &whlwarningtype_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
LogicToProcPort::mutable_whlwarningtype_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.whlWarningType_nu)
  return _internal_mutable_whlwarningtype_nu();
}

// repeated bool sideResetReq_nu = 620;
inline int LogicToProcPort::_internal_sideresetreq_nu_size() const {
  return sideresetreq_nu_.size();
}
inline int LogicToProcPort::sideresetreq_nu_size() const {
  return _internal_sideresetreq_nu_size();
}
inline void LogicToProcPort::clear_sideresetreq_nu() {
  sideresetreq_nu_.Clear();
}
inline bool LogicToProcPort::_internal_sideresetreq_nu(int index) const {
  return sideresetreq_nu_.Get(index);
}
inline bool LogicToProcPort::sideresetreq_nu(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.sideResetReq_nu)
  return _internal_sideresetreq_nu(index);
}
inline void LogicToProcPort::set_sideresetreq_nu(int index, bool value) {
  sideresetreq_nu_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.sideResetReq_nu)
}
inline void LogicToProcPort::_internal_add_sideresetreq_nu(bool value) {
  sideresetreq_nu_.Add(value);
}
inline void LogicToProcPort::add_sideresetreq_nu(bool value) {
  _internal_add_sideresetreq_nu(value);
  // @@protoc_insertion_point(field_add:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.sideResetReq_nu)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
LogicToProcPort::_internal_sideresetreq_nu() const {
  return sideresetreq_nu_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
LogicToProcPort::sideresetreq_nu() const {
  // @@protoc_insertion_point(field_list:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.sideResetReq_nu)
  return _internal_sideresetreq_nu();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
LogicToProcPort::_internal_mutable_sideresetreq_nu() {
  return &sideresetreq_nu_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
LogicToProcPort::mutable_sideresetreq_nu() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.sideResetReq_nu)
  return _internal_mutable_sideresetreq_nu();
}

// optional .pb.mf_drvwarnsm.drv_tube_display_req.DrvTubeDisplayReq drvTubeDisplayReq_nu = 3285;
inline bool LogicToProcPort::_internal_has_drvtubedisplayreq_nu() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool LogicToProcPort::has_drvtubedisplayreq_nu() const {
  return _internal_has_drvtubedisplayreq_nu();
}
inline void LogicToProcPort::clear_drvtubedisplayreq_nu() {
  drvtubedisplayreq_nu_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::pb::mf_drvwarnsm::drv_tube_display_req::DrvTubeDisplayReq LogicToProcPort::_internal_drvtubedisplayreq_nu() const {
  return static_cast< ::pb::mf_drvwarnsm::drv_tube_display_req::DrvTubeDisplayReq >(drvtubedisplayreq_nu_);
}
inline ::pb::mf_drvwarnsm::drv_tube_display_req::DrvTubeDisplayReq LogicToProcPort::drvtubedisplayreq_nu() const {
  // @@protoc_insertion_point(field_get:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.drvTubeDisplayReq_nu)
  return _internal_drvtubedisplayreq_nu();
}
inline void LogicToProcPort::_internal_set_drvtubedisplayreq_nu(::pb::mf_drvwarnsm::drv_tube_display_req::DrvTubeDisplayReq value) {
  assert(::pb::mf_drvwarnsm::drv_tube_display_req::DrvTubeDisplayReq_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  drvtubedisplayreq_nu_ = value;
}
inline void LogicToProcPort::set_drvtubedisplayreq_nu(::pb::mf_drvwarnsm::drv_tube_display_req::DrvTubeDisplayReq value) {
  _internal_set_drvtubedisplayreq_nu(value);
  // @@protoc_insertion_point(field_set:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort.drvTubeDisplayReq_nu)
}

// -------------------------------------------------------------------

// LogicToProcPort_array_port

// repeated .pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort data = 2185;
inline int LogicToProcPort_array_port::_internal_data_size() const {
  return data_.size();
}
inline int LogicToProcPort_array_port::data_size() const {
  return _internal_data_size();
}
inline void LogicToProcPort_array_port::clear_data() {
  data_.Clear();
}
inline ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort* LogicToProcPort_array_port::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort_array_port.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort >*
LogicToProcPort_array_port::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort_array_port.data)
  return &data_;
}
inline const ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort& LogicToProcPort_array_port::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort& LogicToProcPort_array_port::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort_array_port.data)
  return _internal_data(index);
}
inline ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort* LogicToProcPort_array_port::_internal_add_data() {
  return data_.Add();
}
inline ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort* LogicToProcPort_array_port::add_data() {
  // @@protoc_insertion_point(field_add:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort_array_port.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::mf_drvwarnsm::logic_to_proc_port::LogicToProcPort >&
LogicToProcPort_array_port::data() const {
  // @@protoc_insertion_point(field_list:pb.mf_drvwarnsm.logic_to_proc_port.LogicToProcPort_array_port.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace logic_to_proc_port
}  // namespace mf_drvwarnsm
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mf_5fdrvwarnsm_2flogic_5fto_5fproc_5fport_2eproto
