// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mf_drvwarnsm/pdwstate.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mf_5fdrvwarnsm_2fpdwstate_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mf_5fdrvwarnsm_2fpdwstate_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mf_5fdrvwarnsm_2fpdwstate_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mf_5fdrvwarnsm_2fpdwstate_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mf_5fdrvwarnsm_2fpdwstate_2eproto;
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace mf_drvwarnsm {
namespace pdwstate {

enum PDWState : int {
  PDW_INT_STATE_INIT = 0,
  PDW_INT_STATE_ACT_BTN = 1,
  PDW_INT_STATE_ACT_R_GEAR = 2,
  PDW_INT_STATE_ACT_AP = 3,
  PDW_INT_STATE_ACT_AUTO = 4,
  PDW_INT_STATE_ACT_ROLLBACK = 5,
  PDW_INT_STATE_ACT_RA = 6,
  PDW_INT_STATE_DEACT_INIT = 7,
  PDW_INT_STATE_DEACT_BTN = 8,
  PDW_INT_STATE_DEACT_SPEED = 9,
  PDW_INT_STATE_DEACT_P_GEAR = 10,
  PDW_INT_STATE_DEACT_EPB = 11,
  PDW_INT_STATE_DEACT_AP_FIN = 12,
  PDW_INT_STATE_FAILURE = 13,
  PDW_INT_NUM_STATES = 14
};
bool PDWState_IsValid(int value);
constexpr PDWState PDWState_MIN = PDW_INT_STATE_INIT;
constexpr PDWState PDWState_MAX = PDW_INT_NUM_STATES;
constexpr int PDWState_ARRAYSIZE = PDWState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PDWState_descriptor();
template<typename T>
inline const std::string& PDWState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PDWState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PDWState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PDWState_descriptor(), enum_t_value);
}
inline bool PDWState_Parse(
    const std::string& name, PDWState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PDWState>(
    PDWState_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace pdwstate
}  // namespace mf_drvwarnsm
}  // namespace pb

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::pb::mf_drvwarnsm::pdwstate::PDWState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::mf_drvwarnsm::pdwstate::PDWState>() {
  return ::pb::mf_drvwarnsm::pdwstate::PDWState_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mf_5fdrvwarnsm_2fpdwstate_2eproto
