// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vc/overlay_tag.proto

#include "vc/overlay_tag.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace pb {
namespace vc {
namespace overlay_tag {
}  // namespace overlay_tag
}  // namespace vc
}  // namespace pb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_vc_2foverlay_5ftag_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_vc_2foverlay_5ftag_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_vc_2foverlay_5ftag_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_vc_2foverlay_5ftag_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_vc_2foverlay_5ftag_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024vc/overlay_tag.proto\022\021pb.vc.overlay_ta"
  "g*\372\t\n\nOverlayTag\022\031\n\025OVERLAY_TAG_UNDEFINE"
  "D\020\000\022!\n\035OVERLAY_TAG_DISTANCE_BAR_LEFT\020\001\022\""
  "\n\036OVERLAY_TAG_DISTANCE_BAR_RIGHT\020\002\022\026\n\022OV"
  "ERLAY_TAG_CARPET\020\003\022 \n\034OVERLAY_TAG_FRONT_"
  "TRAJECTORY\020\004\022\036\n\032OVERLAY_TAG_TRAILER_TARG"
  "ET\020\005\022\037\n\033OVERLAY_TAG_REAR_TRAJECTORY\020\006\022 \n"
  "\034OVERLAY_TAG_HITCH_TRAJECTORY\020\007\022\030\n\024OVERL"
  "AY_TAG_TAILGATE\020\010\022\"\n\036OVERLAY_TAG_DETECTE"
  "D_PARK_SLOT\020\t\022\037\n\033OVERLAY_TAG_GLOW_FRONT_"
  "LEFT\020\n\022 \n\034OVERLAY_TAG_GLOW_FRONT_RIGHT\020\013"
  "\022\036\n\032OVERLAY_TAG_GLOW_REAR_LEFT\020\014\022\037\n\033OVER"
  "LAY_TAG_GLOW_REAR_RIGHT\020\r\022\034\n\030OVERLAY_TAG"
  "_CAM_LEFT_N_A\020\016\022\035\n\031OVERLAY_TAG_CAM_RIGHT"
  "_N_A\020\017\022\035\n\031OVERLAY_TAG_CAM_FRONT_N_A\020\020\022\034\n"
  "\030OVERLAY_TAG_CAM_REAR_N_A\020\021\022\037\n\033OVERLAY_T"
  "AG_CAM_LEFT_DEFECT\020\022\022 \n\034OVERLAY_TAG_CAM_"
  "RIGHT_DEFECT\020\023\022 \n\034OVERLAY_TAG_CAM_FRONT_"
  "DEFECT\020\024\022\037\n\033OVERLAY_TAG_CAM_REAR_DEFECT\020"
  "\025\022\031\n\025OVERLAY_TAG_DOOR_LEFT\020\026\022\032\n\026OVERLAY_"
  "TAG_DOOR_RIGHT\020\027\022\033\n\027OVERLAY_TAG_MIRROR_L"
  "EFT\020\030\022\034\n\030OVERLAY_TAG_MIRROR_RIGHT\020\031\022%\n!O"
  "VERLAY_TAG_PARK_MARKER_DETECTION\020\032\022\025\n\021OV"
  "ERLAY_TAG_TRUNK\020\033\022\034\n\030OVERLAY_TAG_EARLY_B"
  "ITMAP\020\034\022\027\n\023OVERLAY_TAG_POLYGON\020\035\022\"\n\036OVER"
  "LAY_TAG_PLANNED_TRAJECTORY\020\036\022$\n OVERLAY_"
  "TAG_AUP_FRONT_TRAJECTORY\020\037\022#\n\037OVERLAY_TA"
  "G_AUP_REAR_TRAJECTORY\020 \022\035\n\031OVERLAY_TAG_C"
  "LIPPING_MASK\020!\022\023\n\017OVERLAY_TAG_PDW\020\"\022\031\n\025O"
  "VERLAY_TAG_GHOST_CAR\020#\022#\n\037OVERLAY_TAG_RE"
  "VERSE_ASSIST_ICON\020$\022.\n*OVERLAY_TAG_REVER"
  "SE_ASSIST_DISTANCE_MARKER\020%\022\033\n\027OVERLAY_T"
  "AG_RIM_WARNING\020&\022\024\n\020NUM_OVERLAY_TAGS\020\'"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_vc_2foverlay_5ftag_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_vc_2foverlay_5ftag_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_vc_2foverlay_5ftag_2eproto_once;
static bool descriptor_table_vc_2foverlay_5ftag_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_vc_2foverlay_5ftag_2eproto = {
  &descriptor_table_vc_2foverlay_5ftag_2eproto_initialized, descriptor_table_protodef_vc_2foverlay_5ftag_2eproto, "vc/overlay_tag.proto", 1318,
  &descriptor_table_vc_2foverlay_5ftag_2eproto_once, descriptor_table_vc_2foverlay_5ftag_2eproto_sccs, descriptor_table_vc_2foverlay_5ftag_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_vc_2foverlay_5ftag_2eproto::offsets,
  file_level_metadata_vc_2foverlay_5ftag_2eproto, 0, file_level_enum_descriptors_vc_2foverlay_5ftag_2eproto, file_level_service_descriptors_vc_2foverlay_5ftag_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_vc_2foverlay_5ftag_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_vc_2foverlay_5ftag_2eproto), true);
namespace pb {
namespace vc {
namespace overlay_tag {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OverlayTag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_vc_2foverlay_5ftag_2eproto);
  return file_level_enum_descriptors_vc_2foverlay_5ftag_2eproto[0];
}
bool OverlayTag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace overlay_tag
}  // namespace vc
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
