// Attention, this file is generated by Cobolt from template: C:\_repos\mf_sil\dbg\eco\eco.generic\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef ECO_EXECUTION_MODE_H_
#define ECO_EXECUTION_MODE_H_

#include "eco/signal_header.h"
#include "eco/component_execution_mode.h"
#include "eco/memset.h"


namespace eco
{

  /// Execution information needed to execute a component
  struct ExecutionMode
  {

  ///ADAS signal header
    SignalHeader sigHeader;

  ///The component execution mode and sub mode information
    ComponentExecutionMode mode;
  };

  inline ::eco::ExecutionMode createExecutionMode()
  {
    ExecutionMode m;
    (void)::eco::memset(&m, 0U, sizeof(ExecutionMode));
    m.sigHeader = createSignalHeader();
    m.mode = createComponentExecutionMode();
    return m;
  }

} // namespace eco

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::eco::ExecutionMode create_default()
  {
      return ::eco::createExecutionMode();
  }
}


#endif // ECO_EXECUTION_MODE_H_
