// Attention, this file is generated by Cobolt from template: C:\_repos\mf_sil\dbg\eco\eco.generic\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef ECO_SENSOR_MOUNTING_POSITION_DETAILED_H_
#define ECO_SENSOR_MOUNTING_POSITION_DETAILED_H_

#include "Platform_Types.h"
#include "eco/memset.h"


namespace eco
{

  /// Mounting position details of the sensor relative to the environment model
  /// coordinate system
  struct SensorMountingPositionDetailed
  {

  ///@unit{rad}
  ///Rolling angle of the sensor in environment model coordinate system
    float32 roll;

  ///@unit{rad}
  ///Pitch angle of the sensor in environment model coordinate system
    float32 pitch;

  ///@unit{rad}
  ///Yaw angle of the sensorin environment model coordinate system
    float32 yaw;

  ///@unit{meters}
  ///X-coordinate position of the sensor in environment model coordinate system
    float32 x;

  ///@unit{meters}
  ///Y-coordinate position of the sensor in environment model coordinate system
    float32 y;

  ///@unit{meters}
  ///Z-coordinate position of the sensor in environment model coordinate system
    float32 z;
  };

  inline ::eco::SensorMountingPositionDetailed createSensorMountingPositionDetailed()
  {
    SensorMountingPositionDetailed m;
    (void)::eco::memset(&m, 0U, sizeof(SensorMountingPositionDetailed));
    return m;
  }

} // namespace eco

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::eco::SensorMountingPositionDetailed create_default()
  {
      return ::eco::createSensorMountingPositionDetailed();
  }
}


#endif // ECO_SENSOR_MOUNTING_POSITION_DETAILED_H_
