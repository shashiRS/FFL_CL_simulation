// Attention, this file is generated by Cobolt from template: C:\_repos\mf_sil\dbg\eco\eco.generic\codegen\templates\types\struct.h.template!

#ifdef ECO_C_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C and C++ types mixed
  #endif
#endif
#ifdef ECO_CPP14_TYPES_USED
  #ifndef ECO_ALLOW_INTERFACE_MIXING
    #error eco C++ and C++14 types mixed
  #endif
#endif
#define ECO_CPP_TYPES_USED

#ifndef ECO_BASE_CTRL_DATA_H_
#define ECO_BASE_CTRL_DATA_H_

#include "Platform_Types.h"
#include "eco/signal_header.h"
#include "eco/memset.h"


namespace eco
{

  struct BaseCtrlData
  {
    uint32 uiVersionNumber;
    SignalHeader sSigHeader;
    uint16 eOpMode;
    uint8 eSchedulingMode;
    uint8 eSchedulingSubMode;
  };

  inline ::eco::BaseCtrlData createBaseCtrlData()
  {
    BaseCtrlData m;
    (void)::eco::memset(&m, 0U, sizeof(BaseCtrlData));
    m.sSigHeader = createSignalHeader();
    return m;
  }

} // namespace eco

namespace eco
{
  template<class T>
  inline T create_default();

  template<>
  inline ::eco::BaseCtrlData create_default()
  {
      return ::eco::createBaseCtrlData();
  }
}


#endif // ECO_BASE_CTRL_DATA_H_
