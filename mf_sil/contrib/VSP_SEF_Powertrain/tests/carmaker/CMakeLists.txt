cmake_minimum_required(VERSION 3.5)
project(carmaker)
if (UNIX)
	set(CMAKE_FIND_LIBRARY_SUFFIXES .so.4.4.4)
	find_library(LIBUSB REQUIRED
		NAMES
			usb-0.1
	)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)
SET(CARMAKER_BIN_DIR ${CARMAKER_DIR}/bin)
SET(CARMAKER_LIB_DIR ${CARMAKER_DIR}/lib)
SET(CARMAKER_INC_DIR ${CARMAKER_DIR}/include)

IF(WIN32)
	ADD_COMPILE_DEFINITIONS(WIN32 WIN64 _CRT_SECURE_NO_WARNINGS _CRT_NONSTDC_NO_DEPRECATE _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS CM_NUMVER=${CM_NUMVER})
	ADD_COMPILE_OPTIONS(/wd4251)
	ADD_LINK_OPTIONS(-SAFESEH:NO)
ELSEIF(UNIX)
	ADD_COMPILE_DEFINITIONS(LINUX LINUX64 _GNU_SOURCE _FILE_OFFSET_BITS=64 CM_NUMVER=${CM_NUMVER})
	ADD_COMPILE_OPTIONS(-O3 -m64 -fPIC -Wall -march=native)
	ADD_LINK_OPTIONS(-m64 -fPIC)
ENDIF()


SET(CARMAKER_LIB ${CARMAKER_LIB_DIR}/libcarmaker.a)
SET(CAR_LIB ${CARMAKER_LIB_DIR}/libcar.a)
SET(DRIVER_LIB ${CARMAKER_LIB_DIR}/libipgdriver.a)
SET(ROAD_LIB ${CARMAKER_LIB_DIR}/libipgroad.a)
SET(TIRE_LIB ${CARMAKER_LIB_DIR}/libipgtire.a)
SET(Z_LIB ${CARMAKER_LIB_DIR}/libz-${ARCH}.a)

if(WIN32)
	SET(OCTAGONENGINE_LIB ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/OCTAGONEngine.lib)
elseif(UNIX)
	set(OCTAGONENGINE_LIB ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/libOCTAGONEngine.a)
endif()

SET (SEF_OCTAGONENGINE_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/../../src/package/OCTAGONEngine)

# Create executable from CarMaker sources
ADD_EXECUTABLE(${PROJECT_NAME}.${ARCH}
	src/CM_Main.c
	src/CM_Vehicle.c
	src/User.h
	src/User.c
	src/app_tmp.c)
if (WIN32)
add_dependencies(
	TARGET_COMPONENT ${PROJECT_NAME}.${ARCH}
)
elseif (UNIX)
add_dependencies(
    TARGET_COMPONENT ${PROJECT_NAME}.${ARCH}
)
add_dependencies(
    ${PROJECT_NAME}.${ARCH}
	OCTAGONEngine
)
endif()

ADD_CUSTOM_COMMAND(
	OUTPUT src/app_tmp.c
	COMMENT "Creating app_tmp.c"
	COMMAND ${CARMAKER_BIN_DIR}/CreateCarMakerAppInfo =av VSP_OCTAGONEngine =sv ${CARMAKER_VER} =arch ${ARCH} =libs ${CARMAKER_LIB} ${CAR_LIB} ${DRIVER_LIB} ${ROAD_LIB} ${TIRE_LIB} ${MATSUPP_LIB} =o app_tmp.c
	COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/src/app_tmp.c ${CMAKE_CURRENT_BINARY_DIR}/src/app_tmp.c
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src)

ADD_CUSTOM_COMMAND(
	TARGET ${PROJECT_NAME}.${ARCH}
	POST_BUILD
	COMMENT "Deleting app_tmp.c"
	COMMAND ${CMAKE_COMMAND} -E remove ${CMAKE_CURRENT_BINARY_DIR}/src/app_tmp.c)

# Specify path to internal CarMaker interfaces
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME}.${ARCH}
	PUBLIC
		${CARMAKER_INC_DIR}
		${CMAKE_CURRENT_SOURCE_DIR}/include
		${CMAKE_CURRENT_BINARY_DIR}/
		${SEF_OCTAGONENGINE_INCLUDES}/)

# Link CarMaker libraries to executable
TARGET_LINK_LIBRARIES(${PROJECT_NAME}.${ARCH}
	${MATSUPP_LIB}
	${CAR_LIB}
	${CARMAKER_LIB}
	${DRIVER_LIB}
	${ROAD_LIB}
	${TIRE_LIB}
	${MATSUPP_LIB}
	${Z_LIB}
	${URI_LIB}
	${OCTAGONENGINE_LIB}
)

IF(WIN32)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME}.${ARCH} ${CARMAKER_LIB_DIR}/libcompat_${ARCH}.a user32.lib advapi32.lib ws2_32.lib legacy_stdio_definitions.lib winspool.lib ${CARMAKER_LIB_DIR}/liburiparser-${ARCH}.a)
ELSEIF(UNIX)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME}.${ARCH}
		pthread
		dl
		m
		rt
		stdc++
		${LIBUSB}
		${CARMAKER_LIB_DIR}/liburiparser-${ARCH}.a
	)
ENDIF()


install(TARGETS ${PROJECT_NAME}.${ARCH}
  DESTINATION bin/${PROJECT_NAME})
